{
  "res_summary": [
    {
      "name": "About",
      "link": "https://developers.google.com/drive/api/v3/reference/about#resource",
      "api": [
        {
          "method": "get",
          "http_request": "GET /about",
          "description": "Gets information about the user, the user's Drive, and system capabilities. Required query parameters:fields"
        }
      ]
    },
    {
      "name": "Changes",
      "link": "https://developers.google.com/drive/api/v3/reference/changes#resource",
      "api": [
        {
          "method": "getStartPageToken",
          "http_request": "GET /changes/startPageToken",
          "description": "Gets the starting pageToken for listing future changes."
        },
        {
          "method": "list",
          "http_request": "GET /changes",
          "description": "Lists the changes for a user or shared drive. Required query parameters:pageToken"
        },
        {
          "method": "watch",
          "http_request": "POST /changes/watch",
          "description": "Subscribes to changes for a user."
        }
      ]
    },
    {
      "name": "Channels",
      "link": "https://developers.google.com/drive/api/v3/reference/channels#resource",
      "api": [
        {
          "method": "stop",
          "http_request": "POST /channels/stop",
          "description": "Stop watching resources through this channel"
        }
      ]
    },
    {
      "name": "Comments",
      "link": "https://developers.google.com/drive/api/v3/reference/comments#resource",
      "api": [
        {
          "method": "create",
          "http_request": "POST /files/fileId/comments",
          "description": "Creates a new comment on a file. Required query parameters:fields"
        },
        {
          "method": "delete",
          "http_request": "DELETE /files/fileId/comments/commentId",
          "description": "Deletes a comment."
        },
        {
          "method": "get",
          "http_request": "GET /files/fileId/comments/commentId",
          "description": "Gets a comment by ID. Required query parameters:fields"
        },
        {
          "method": "list",
          "http_request": "GET /files/fileId/comments",
          "description": "Lists a file's comments. Required query parameters:fields"
        },
        {
          "method": "update",
          "http_request": "PATCH /files/fileId/comments/commentId",
          "description": "Updates a comment with patch semantics. Required query parameters:fields"
        }
      ]
    },
    {
      "name": "Files",
      "link": "https://developers.google.com/drive/api/v3/reference/files#resource",
      "api": [
        {
          "method": "copy",
          "http_request": "POST /files/fileId/copy",
          "description": "Creates a copy of a file and applies any requested updates with patch semantics. Folders cannot be copied."
        },
        {
          "method": "create",
          "http_request": "POSThttps://www.googleapis.com/upload/drive/v3/files and POST /files",
          "description": "Creates a new file."
        },
        {
          "method": "delete",
          "http_request": "DELETE /files/fileId",
          "description": "Permanently deletes a file owned by the user without moving it to the trash. If the file belongs to a shared drive the user must be an organizer on the parent. If the target is a folder, all descendants owned by the user are also deleted."
        },
        {
          "method": "emptyTrash",
          "http_request": "DELETE /files/trash",
          "description": "Permanently deletes all of the user's trashed files."
        },
        {
          "method": "export",
          "http_request": "GET /files/fileId/export",
          "description": "Exports a Google Doc to the requested MIME type and returns the exported content. Please note that the exported content is limited to 10MB. Required query parameters:mimeType"
        },
        {
          "method": "generateIds",
          "http_request": "GET /files/generateIds",
          "description": "Generates a set of file IDs which can be provided in create or copy requests."
        },
        {
          "method": "get",
          "http_request": "GET /files/fileId",
          "description": "Gets a file's metadata or content by ID."
        },
        {
          "method": "list",
          "http_request": "GET /files",
          "description": "Lists or searches files."
        },
        {
          "method": "update",
          "http_request": "PATCHhttps://www.googleapis.com/upload/drive/v3/files/fileId and PATCH /files/fileId",
          "description": "Updates a file's metadata and/or content. This method supports patch semantics."
        },
        {
          "method": "watch",
          "http_request": "POST /files/fileId/watch",
          "description": "Subscribes to changes to a file"
        }
      ]
    },
    {
      "name": "Permissions",
      "link": "https://developers.google.com/drive/api/v3/reference/permissions#resource",
      "api": [
        {
          "method": "create",
          "http_request": "POST /files/fileId/permissions",
          "description": "Creates a permission for a file or shared drive."
        },
        {
          "method": "delete",
          "http_request": "DELETE /files/fileId/permissions/permissionId",
          "description": "Deletes a permission."
        },
        {
          "method": "get",
          "http_request": "GET /files/fileId/permissions/permissionId",
          "description": "Gets a permission by ID."
        },
        {
          "method": "list",
          "http_request": "GET /files/fileId/permissions",
          "description": "Lists a file's or shared drive's permissions."
        },
        {
          "method": "update",
          "http_request": "PATCH /files/fileId/permissions/permissionId",
          "description": "Updates a permission with patch semantics."
        }
      ]
    },
    {
      "name": "Replies",
      "link": "https://developers.google.com/drive/api/v3/reference/replies#resource",
      "api": [
        {
          "method": "create",
          "http_request": "POST /files/fileId/comments/commentId/replies",
          "description": "Creates a new reply to a comment. Required query parameters:fields"
        },
        {
          "method": "delete",
          "http_request": "DELETE /files/fileId/comments/commentId/replies/replyId",
          "description": "Deletes a reply."
        },
        {
          "method": "get",
          "http_request": "GET /files/fileId/comments/commentId/replies/replyId",
          "description": "Gets a reply by ID. Required query parameters:fields"
        },
        {
          "method": "list",
          "http_request": "GET /files/fileId/comments/commentId/replies",
          "description": "Lists a comment's replies. Required query parameters:fields"
        },
        {
          "method": "update",
          "http_request": "PATCH /files/fileId/comments/commentId/replies/replyId",
          "description": "Updates a reply with patch semantics. Required query parameters:fields"
        }
      ]
    },
    {
      "name": "Revisions",
      "link": "https://developers.google.com/drive/api/v3/reference/revisions#resource",
      "api": [
        {
          "method": "delete",
          "http_request": "DELETE /files/fileId/revisions/revisionId",
          "description": "Permanently deletes a file version. You can only delete revisions for files with binary content in Google Drive, like images or videos. Revisions for other files, like Google Docs or Sheets, and the last remaining file version can't be deleted."
        },
        {
          "method": "get",
          "http_request": "GET /files/fileId/revisions/revisionId",
          "description": "Gets a revision's metadata or content by ID."
        },
        {
          "method": "list",
          "http_request": "GET /files/fileId/revisions",
          "description": "Lists a file's revisions."
        },
        {
          "method": "update",
          "http_request": "PATCH /files/fileId/revisions/revisionId",
          "description": "Updates a revision with patch semantics."
        }
      ]
    },
    {
      "name": "Drives",
      "link": "https://developers.google.com/drive/api/v3/reference/drives#resource",
      "api": [
        {
          "method": "create",
          "http_request": "POST /drives",
          "description": "Creates a new shared drive. Required query parameters:requestId"
        },
        {
          "method": "delete",
          "http_request": "DELETE /drives/driveId",
          "description": "Permanently deletes a shared drive for which the user is an organizer. The shared drive cannot contain any untrashed items."
        },
        {
          "method": "get",
          "http_request": "GET /drives/driveId",
          "description": "Gets a shared drive's metadata by ID."
        },
        {
          "method": "hide",
          "http_request": "POST /drives/driveId/hide",
          "description": "Hides a shared drive from the default view."
        },
        {
          "method": "list",
          "http_request": "GET /drives",
          "description": "Lists the user's shared drives."
        },
        {
          "method": "unhide",
          "http_request": "POST /drives/driveId/unhide",
          "description": "Restores a shared drive to the default view."
        },
        {
          "method": "update",
          "http_request": "PATCH /drives/driveId",
          "description": "Updates the metadate for a shared drive."
        }
      ]
    }
  ],
  "api_base": "https://www.googleapis.com/drive/v3",
  "rs_detail": [
    {
      "type": "overview",
      "properties": [
        {
          "property_name": "kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#about\".",
          "notes": ""
        },
        {
          "property_name": "user",
          "value": "nested object",
          "description": "The authenticated user.",
          "notes": ""
        },
        {
          "property_name": "user.kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#user\".",
          "notes": ""
        },
        {
          "property_name": "user.displayName",
          "value": "string",
          "description": "A plain text displayable name for this user.",
          "notes": ""
        },
        {
          "property_name": "user.photoLink",
          "value": "string",
          "description": "A link to the user's profile photo, if available.",
          "notes": ""
        },
        {
          "property_name": "user.me",
          "value": "boolean",
          "description": "Whether this user is the requesting user.",
          "notes": ""
        },
        {
          "property_name": "user.permissionId",
          "value": "string",
          "description": "The user's ID as visible in Permission resources.",
          "notes": ""
        },
        {
          "property_name": "user.emailAddress",
          "value": "string",
          "description": "The email address of the user. This may not be present in certain contexts if the user has not made their email address visible to the requester.",
          "notes": ""
        },
        {
          "property_name": "storageQuota",
          "value": "object",
          "description": "The user's storage quota limits and usage. All fields are measured in bytes.",
          "notes": ""
        },
        {
          "property_name": "storageQuota.limit",
          "value": "long",
          "description": "The usage limit, if applicable. This will not be present if the user has unlimited storage.",
          "notes": ""
        },
        {
          "property_name": "storageQuota.usage",
          "value": "long",
          "description": "The total usage across all services.",
          "notes": ""
        },
        {
          "property_name": "storageQuota.usageInDrive",
          "value": "long",
          "description": "The usage by all files in Google Drive.",
          "notes": ""
        },
        {
          "property_name": "storageQuota.usageInDriveTrash",
          "value": "long",
          "description": "The usage by trashed files in Google Drive.",
          "notes": ""
        },
        {
          "property_name": "importFormats",
          "value": "object",
          "description": "A map of source MIME type to possible targets for all supported imports.",
          "notes": ""
        },
        {
          "property_name": "importFormats.(key)[]",
          "value": "list",
          "notes": ""
        },
        {
          "property_name": "exportFormats",
          "value": "object",
          "description": "A map of source MIME type to possible targets for all supported exports.",
          "notes": ""
        },
        {
          "property_name": "exportFormats.(key)[]",
          "value": "list",
          "notes": ""
        },
        {
          "property_name": "maxImportSizes",
          "value": "object",
          "description": "A map of maximum import sizes by MIME type, in bytes.",
          "notes": ""
        },
        {
          "property_name": "maxImportSizes.(key)",
          "value": "long",
          "notes": ""
        },
        {
          "property_name": "maxUploadSize",
          "value": "long",
          "description": "The maximum upload size in bytes.",
          "notes": ""
        },
        {
          "property_name": "appInstalled",
          "value": "boolean",
          "description": "Whether the user has installed the requesting app.",
          "notes": ""
        },
        {
          "property_name": "folderColorPalette[]",
          "value": "list",
          "description": "The currently supported folder colors as RGB hex strings.",
          "notes": ""
        },
        {
          "property_name": "teamDriveThemes[]",
          "value": "list",
          "description": "Warning: This item is deprecated.Deprecated - use driveThemes instead.",
          "notes": ""
        },
        {
          "property_name": "teamDriveThemes[].id",
          "value": "string",
          "description": "Warning: This item is deprecated.Deprecated - use driveThemes/id instead.",
          "notes": ""
        },
        {
          "property_name": "teamDriveThemes[].backgroundImageLink",
          "value": "string",
          "description": "Warning: This item is deprecated.Deprecated - use driveThemes/backgroundImageLink instead.",
          "notes": ""
        },
        {
          "property_name": "teamDriveThemes[].colorRgb",
          "value": "string",
          "description": "Warning: This item is deprecated.Deprecated - use driveThemes/colorRgb instead.",
          "notes": ""
        },
        {
          "property_name": "canCreateTeamDrives",
          "value": "boolean",
          "description": "Warning: This item is deprecated.Deprecated - use canCreateDrives instead.",
          "notes": ""
        },
        {
          "property_name": "driveThemes[]",
          "value": "list",
          "description": "A list of themes that are supported for shared drives.",
          "notes": ""
        },
        {
          "property_name": "driveThemes[].id",
          "value": "string",
          "description": "The ID of the theme.",
          "notes": ""
        },
        {
          "property_name": "driveThemes[].backgroundImageLink",
          "value": "string",
          "description": "A link to this theme's background image.",
          "notes": ""
        },
        {
          "property_name": "driveThemes[].colorRgb",
          "value": "string",
          "description": "The color of this theme as an RGB hex string.",
          "notes": ""
        },
        {
          "property_name": "canCreateDrives",
          "value": "boolean",
          "description": "Whether the user can create shared drives.",
          "notes": ""
        }
      ],
      "res_description": "Information about the user, the user's Drive, and system capabilities.",
      "res_example": "{ \"kind\": \"drive#about\", \"user\": { \"kind\": \"drive#user\", \"displayName\": string, \"photoLink\": string, \"me\": boolean, \"permissionId\": string, \"emailAddress\": string }, \"storageQuota\": { \"limit\": long, \"usage\": long, \"usageInDrive\": long, \"usageInDriveTrash\": long }, \"importFormats\": { (key): [ string ] }, \"exportFormats\": { (key): [ string ] }, \"maxImportSizes\": { (key): long }, \"maxUploadSize\": long, \"appInstalled\": boolean, \"folderColorPalette\": [ string ], \"teamDriveThemes\": [ { \"id\": string, \"backgroundImageLink\": string, \"colorRgb\": string } ], \"driveThemes\": [ { \"id\": string, \"backgroundImageLink\": string, \"colorRgb\": string } ], \"canCreateTeamDrives\": boolean, \"canCreateDrives\": boolean}",
      "res_type": "About",
      "source_link": "https://developers.google.com/drive/api/v3/reference/about"
    },
    {
      "endpoint": "GET https://www.googleapis.com/drive/v3/about",
      "param": [
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Required query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file",
        "https://www.googleapis.com/auth/drive.readonly",
        "https://www.googleapis.com/auth/drive.metadata.readonly",
        "https://www.googleapis.com/auth/drive.appdata",
        "https://www.googleapis.com/auth/drive.metadata",
        "https://www.googleapis.com/auth/drive.photos.readonly"
      ],
      "res_type": "About",
      "method": "get",
      "source_link": "https://developers.google.com/drive/api/v3/reference/about/get"
    },
    {
      "type": "overview",
      "properties": [
        {
          "property_name": "kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#change\".",
          "notes": ""
        },
        {
          "property_name": "fileId",
          "value": "string",
          "description": "The ID of the file which has changed.",
          "notes": ""
        },
        {
          "property_name": "removed",
          "value": "boolean",
          "description": "Whether the file or shared drive has been removed from this list of changes, for example by deletion or loss of access.",
          "notes": ""
        },
        {
          "property_name": "time",
          "value": "datetime",
          "description": "The time of this change (RFC 3339 date-time).",
          "notes": ""
        },
        {
          "property_name": "file",
          "value": "nested object",
          "description": "The updated state of the file. Present if the type is file and the file has not been removed from this list of changes.",
          "notes": ""
        },
        {
          "property_name": "type",
          "value": "string",
          "description": "Warning: This item is deprecated.Deprecated - use changeType instead.",
          "notes": ""
        },
        {
          "property_name": "teamDriveId",
          "value": "string",
          "description": "Warning: This item is deprecated.Deprecated - use driveId instead.",
          "notes": ""
        },
        {
          "property_name": "teamDrive",
          "value": "nested object",
          "description": "Warning: This item is deprecated.Deprecated - use drive instead.",
          "notes": ""
        },
        {
          "property_name": "changeType",
          "value": "string",
          "description": "The type of the change. Possible values are file and drive.",
          "notes": ""
        },
        {
          "property_name": "driveId",
          "value": "string",
          "description": "The ID of the shared drive associated with this change.",
          "notes": ""
        },
        {
          "property_name": "drive",
          "value": "nested object",
          "description": "The updated state of the shared drive. Present if the changeType is drive, the user is still a member of the shared drive, and the shared drive has not been deleted.",
          "notes": ""
        }
      ],
      "res_description": "A change to a file or shared drive.",
      "res_example": "{ \"kind\": \"drive#change\", \"type\": string, \"changeType\": string, \"time\": datetime, \"removed\": boolean, \"fileId\": string, \"file\": files Resource, \"teamDriveId\": string, \"driveId\": string, \"teamDrive\": teamdrives Resource, \"drive\": drives Resource}",
      "res_type": "Changes",
      "source_link": "https://developers.google.com/drive/api/v3/reference/changes"
    },
    {
      "prop_res_body": [
        {
          "property_name": "kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#startPageToken\".",
          "notes": ""
        },
        {
          "property_name": "startPageToken",
          "value": "string",
          "description": "The starting page token for listing changes.",
          "notes": ""
        }
      ],
      "endpoint": "GET https://www.googleapis.com/drive/v3/changes/startPageToken",
      "param": [
        {
          "parameter_name": "driveId",
          "value": "string",
          "description": "The ID of the shared drive for which the starting pageToken for listing future changes from that shared drive is returned.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. If not specified, the response includes a default set of fields specific to this method. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsAllDrives",
          "value": "boolean",
          "description": "Whether the requesting application supports both My Drives and shared drives. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsTeamDrives",
          "value": "boolean",
          "description": "Warning: This item is deprecated. Deprecated use supportsAllDrives instead. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "teamDriveId",
          "value": "string",
          "description": "Warning: This item is deprecated. Deprecated use driveId instead.",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file",
        "https://www.googleapis.com/auth/drive.readonly",
        "https://www.googleapis.com/auth/drive.metadata.readonly",
        "https://www.googleapis.com/auth/drive.appdata",
        "https://www.googleapis.com/auth/drive.metadata",
        "https://www.googleapis.com/auth/drive.photos.readonly"
      ],
      "res_type": "Changes",
      "method": "getStartPageToken",
      "source_link": "https://developers.google.com/drive/api/v3/reference/changes/getStartPageToken"
    },
    {
      "prop_res_body": [
        {
          "property_name": "kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#changeList\".",
          "notes": ""
        },
        {
          "property_name": "nextPageToken",
          "value": "string",
          "description": "The page token for the next page of changes. This will be absent if the end of the changes list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "notes": ""
        },
        {
          "property_name": "newStartPageToken",
          "value": "string",
          "description": "The starting page token for future changes. This will be present only if the end of the current changes list has been reached.",
          "notes": ""
        },
        {
          "property_name": "changes[]",
          "value": "list",
          "description": "The list of changes. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "notes": ""
        }
      ],
      "endpoint": "GET https://www.googleapis.com/drive/v3/changes",
      "param": [
        {
          "parameter_name": "pageToken",
          "value": "string",
          "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response or to the response from the getStartPageToken method.",
          "state": "Required query parameters"
        },
        {
          "parameter_name": "driveId",
          "value": "string",
          "description": "The shared drive from which changes are returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. If not specified, the response includes a default set of fields specific to this method. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "includeCorpusRemovals",
          "value": "boolean",
          "description": "Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "includeItemsFromAllDrives",
          "value": "boolean",
          "description": "Whether both My Drive and shared drive items should be included in results. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "includePermissionsForView",
          "value": "string",
          "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "includeRemoved",
          "value": "boolean",
          "description": "Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access. (Default: true)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "includeTeamDriveItems",
          "value": "boolean",
          "description": "Warning: This item is deprecated. Deprecated use includeItemsFromAllDrives instead. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "pageSize",
          "value": "integer",
          "description": "The maximum number of changes to return per page. Acceptable values are 1 to 1000, inclusive. (Default: 100)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "restrictToMyDrive",
          "value": "boolean",
          "description": "Whether to restrict the results to changes inside the My Drive hierarchy. This omits changes to files such as those in the Application Data folder or shared files which have not been added to My Drive. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "spaces",
          "value": "string",
          "description": "A comma-separated list of spaces to query within the user corpus. Supported values are 'drive', 'appDataFolder' and 'photos'.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsAllDrives",
          "value": "boolean",
          "description": "Whether the requesting application supports both My Drives and shared drives. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsTeamDrives",
          "value": "boolean",
          "description": "Warning: This item is deprecated. Deprecated use supportsAllDrives instead. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "teamDriveId",
          "value": "string",
          "description": "Warning: This item is deprecated. Deprecated use driveId instead.",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file",
        "https://www.googleapis.com/auth/drive.readonly",
        "https://www.googleapis.com/auth/drive.metadata.readonly",
        "https://www.googleapis.com/auth/drive.appdata",
        "https://www.googleapis.com/auth/drive.metadata",
        "https://www.googleapis.com/auth/drive.photos.readonly"
      ],
      "res_type": "Changes",
      "method": "list",
      "source_link": "https://developers.google.com/drive/api/v3/reference/changes/list"
    },
    {
      "req_body": "{ \"kind\": \"api#channel\", \"id\": string, \"resourceId\": string, \"resourceUri\": string, \"token\": string, \"expiration\": long, \"type\": string, \"address\": string, \"payload\": boolean, \"params\": { (key): string }}",
      "prop_req_body": [
        {
          "property_name": "kind",
          "value": "string",
          "description": "Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\".",
          "notes": ""
        },
        {
          "property_name": "id",
          "value": "string",
          "description": "A UUID or similar unique string that identifies this channel.",
          "notes": ""
        },
        {
          "property_name": "resourceId",
          "value": "string",
          "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.",
          "notes": ""
        },
        {
          "property_name": "resourceUri",
          "value": "string",
          "description": "A version-specific identifier for the watched resource.",
          "notes": ""
        },
        {
          "property_name": "token",
          "value": "string",
          "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.",
          "notes": ""
        },
        {
          "property_name": "expiration",
          "value": "long",
          "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
          "notes": ""
        },
        {
          "property_name": "type",
          "value": "string",
          "description": "The type of delivery mechanism used for this channel. Valid values are \"web_hook\" (or \"webhook\"). Both values refer to a channel where Http requests are used to deliver messages.",
          "notes": ""
        },
        {
          "property_name": "address",
          "value": "string",
          "description": "The address where notifications are delivered for this channel.",
          "notes": ""
        },
        {
          "property_name": "payload",
          "value": "boolean",
          "description": "A Boolean value to indicate whether payload is wanted. Optional.",
          "notes": ""
        },
        {
          "property_name": "params",
          "value": "object",
          "description": "Additional parameters controlling delivery channel behavior. Optional.",
          "notes": ""
        },
        {
          "property_name": "params.(key)",
          "value": "string",
          "description": "Declares a new parameter by name.",
          "notes": ""
        }
      ],
      "prop_res_body": [
        {
          "property_name": "kind",
          "value": "string",
          "description": "Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\".",
          "notes": ""
        },
        {
          "property_name": "id",
          "value": "string",
          "description": "A UUID or similar unique string that identifies this channel.",
          "notes": ""
        },
        {
          "property_name": "resourceId",
          "value": "string",
          "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.",
          "notes": ""
        },
        {
          "property_name": "resourceUri",
          "value": "string",
          "description": "A version-specific identifier for the watched resource.",
          "notes": ""
        },
        {
          "property_name": "token",
          "value": "string",
          "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.",
          "notes": ""
        },
        {
          "property_name": "expiration",
          "value": "long",
          "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
          "notes": ""
        },
        {
          "property_name": "type",
          "value": "string",
          "description": "The type of delivery mechanism used for this channel. Valid values are \"web_hook\" (or \"webhook\"). Both values refer to a channel where Http requests are used to deliver messages.",
          "notes": ""
        },
        {
          "property_name": "address",
          "value": "string",
          "description": "The address where notifications are delivered for this channel.",
          "notes": ""
        },
        {
          "property_name": "payload",
          "value": "boolean",
          "description": "A Boolean value to indicate whether payload is wanted. Optional.",
          "notes": ""
        },
        {
          "property_name": "params",
          "value": "object",
          "description": "Additional parameters controlling delivery channel behavior. Optional.",
          "notes": ""
        },
        {
          "property_name": "params.(key)",
          "value": "string",
          "description": "Declares a new parameter by name.",
          "notes": ""
        }
      ],
      "endpoint": "POST https://www.googleapis.com/drive/v3/changes/watch",
      "param": [
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. If not specified, the response includes a default set of fields specific to this method. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file",
        "https://www.googleapis.com/auth/drive.readonly",
        "https://www.googleapis.com/auth/drive.metadata.readonly",
        "https://www.googleapis.com/auth/drive.appdata",
        "https://www.googleapis.com/auth/drive.metadata",
        "https://www.googleapis.com/auth/drive.photos.readonly"
      ],
      "res_type": "Changes",
      "method": "watch",
      "source_link": "https://developers.google.com/drive/api/v3/reference/changes/watch"
    },
    {
      "endpoint": "",
      "param": [],
      "scope": [],
      "res_type": "Channels",
      "source_link": "https://developers.google.com/drive/api/v3/reference/channels"
    },
    {
      "req_body": "{ \"kind\": \"api#channel\", \"id\": string, \"resourceId\": string, \"resourceUri\": string, \"token\": string, \"expiration\": long, \"type\": string, \"address\": string, \"payload\": boolean, \"params\": { (key): string }}",
      "prop_req_body": [
        {
          "property_name": "kind",
          "value": "string",
          "description": "Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\".",
          "notes": ""
        },
        {
          "property_name": "id",
          "value": "string",
          "description": "A UUID or similar unique string that identifies this channel.",
          "notes": ""
        },
        {
          "property_name": "resourceId",
          "value": "string",
          "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.",
          "notes": ""
        },
        {
          "property_name": "resourceUri",
          "value": "string",
          "description": "A version-specific identifier for the watched resource.",
          "notes": ""
        },
        {
          "property_name": "token",
          "value": "string",
          "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.",
          "notes": ""
        },
        {
          "property_name": "expiration",
          "value": "long",
          "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
          "notes": ""
        },
        {
          "property_name": "type",
          "value": "string",
          "description": "The type of delivery mechanism used for this channel. Valid values are \"web_hook\" (or \"webhook\"). Both values refer to a channel where Http requests are used to deliver messages.",
          "notes": ""
        },
        {
          "property_name": "address",
          "value": "string",
          "description": "The address where notifications are delivered for this channel.",
          "notes": ""
        },
        {
          "property_name": "payload",
          "value": "boolean",
          "description": "A Boolean value to indicate whether payload is wanted. Optional.",
          "notes": ""
        },
        {
          "property_name": "params",
          "value": "object",
          "description": "Additional parameters controlling delivery channel behavior. Optional.",
          "notes": ""
        },
        {
          "property_name": "params.(key)",
          "value": "string",
          "description": "Declares a new parameter by name.",
          "notes": ""
        }
      ],
      "endpoint": "POST https://www.googleapis.com/drive/v3/channels/stop",
      "param": [],
      "scope": [],
      "res_type": "Channels",
      "method": "stop",
      "source_link": "https://developers.google.com/drive/api/v3/reference/channels/stop"
    },
    {
      "type": "overview",
      "properties": [
        {
          "property_name": "kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#comment\".",
          "notes": ""
        },
        {
          "property_name": "id",
          "value": "string",
          "description": "The ID of the comment.",
          "notes": ""
        },
        {
          "property_name": "createdTime",
          "value": "datetime",
          "description": "The time at which the comment was created (RFC 3339 date-time).",
          "notes": ""
        },
        {
          "property_name": "modifiedTime",
          "value": "datetime",
          "description": "The last time the comment or any of its replies was modified (RFC 3339 date-time).",
          "notes": ""
        },
        {
          "property_name": "author",
          "value": "nested object",
          "description": "The author of the comment. The author's email address and permission ID will not be populated.",
          "notes": ""
        },
        {
          "property_name": "author.kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#user\".",
          "notes": ""
        },
        {
          "property_name": "author.displayName",
          "value": "string",
          "description": "A plain text displayable name for this user.",
          "notes": ""
        },
        {
          "property_name": "author.photoLink",
          "value": "string",
          "description": "A link to the user's profile photo, if available.",
          "notes": ""
        },
        {
          "property_name": "author.me",
          "value": "boolean",
          "description": "Whether this user is the requesting user.",
          "notes": ""
        },
        {
          "property_name": "author.permissionId",
          "value": "string",
          "description": "The user's ID as visible in Permission resources.",
          "notes": ""
        },
        {
          "property_name": "author.emailAddress",
          "value": "string",
          "description": "The email address of the user. This may not be present in certain contexts if the user has not made their email address visible to the requester.",
          "notes": ""
        },
        {
          "property_name": "htmlContent",
          "value": "string",
          "description": "The content of the comment with HTML formatting.",
          "notes": ""
        },
        {
          "property_name": "content",
          "value": "string",
          "description": "The plain text content of the comment. This field is used for setting the content, while htmlContent should be displayed.",
          "notes": "writable"
        },
        {
          "property_name": "deleted",
          "value": "boolean",
          "description": "Whether the comment has been deleted. A deleted comment has no content.",
          "notes": ""
        },
        {
          "property_name": "resolved",
          "value": "boolean",
          "description": "Whether the comment has been resolved by one of its replies.",
          "notes": ""
        },
        {
          "property_name": "quotedFileContent",
          "value": "object",
          "description": "The file content to which the comment refers, typically within the anchor region. For a text file, for example, this would be the text at the location of the comment.",
          "notes": ""
        },
        {
          "property_name": "quotedFileContent.mimeType",
          "value": "string",
          "description": "The MIME type of the quoted content.",
          "notes": ""
        },
        {
          "property_name": "quotedFileContent.value",
          "value": "string",
          "description": "The quoted content itself. This is interpreted as plain text if set through the API.",
          "notes": "writable"
        },
        {
          "property_name": "anchor",
          "value": "string",
          "description": "A region of the document represented as a JSON string. See anchor documentation for details on how to define and interpret anchor properties.",
          "notes": "writable"
        },
        {
          "property_name": "replies[]",
          "value": "list",
          "description": "The full list of replies to the comment in chronological order.",
          "notes": ""
        }
      ],
      "res_description": "A comment on a file.",
      "res_example": "{ \"kind\": \"drive#comment\", \"id\": string, \"createdTime\": datetime, \"modifiedTime\": datetime, \"author\": { \"kind\": \"drive#user\", \"displayName\": string, \"photoLink\": string, \"me\": boolean, \"permissionId\": string, \"emailAddress\": string }, \"htmlContent\": string, \"content\": string, \"deleted\": boolean, \"resolved\": boolean, \"quotedFileContent\": { \"mimeType\": string, \"value\": string }, \"anchor\": string, \"replies\": [ replies Resource ]}",
      "res_type": "Comments",
      "source_link": "https://developers.google.com/drive/api/v3/reference/comments"
    },
    {
      "endpoint": "POST https://www.googleapis.com/drive/v3/files/fileId/comments",
      "param": [
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Required query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file"
      ],
      "res_type": "Comments",
      "method": "create",
      "source_link": "https://developers.google.com/drive/api/v3/reference/comments/create"
    },
    {
      "endpoint": "DELETE https://www.googleapis.com/drive/v3/files/fileId/comments/commentId",
      "param": [
        {
          "parameter_name": "commentId",
          "value": "string",
          "description": "The ID of the comment.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file.",
          "state": "Path parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file"
      ],
      "res_type": "Comments",
      "method": "delete",
      "source_link": "https://developers.google.com/drive/api/v3/reference/comments/delete"
    },
    {
      "endpoint": "GET https://www.googleapis.com/drive/v3/files/fileId/comments/commentId",
      "param": [
        {
          "parameter_name": "commentId",
          "value": "string",
          "description": "The ID of the comment.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Required query parameters"
        },
        {
          "parameter_name": "includeDeleted",
          "value": "boolean",
          "description": "Whether to return deleted comments. Deleted comments will not include their original content. (Default: false)",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.readonly",
        "https://www.googleapis.com/auth/drive.file"
      ],
      "res_type": "Comments",
      "method": "get",
      "source_link": "https://developers.google.com/drive/api/v3/reference/comments/get"
    },
    {
      "prop_res_body": [
        {
          "property_name": "kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#commentList\".",
          "notes": ""
        },
        {
          "property_name": "nextPageToken",
          "value": "string",
          "description": "The page token for the next page of comments. This will be absent if the end of the comments list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "notes": ""
        },
        {
          "property_name": "comments[]",
          "value": "list",
          "description": "The list of comments. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "notes": ""
        }
      ],
      "endpoint": "GET https://www.googleapis.com/drive/v3/files/fileId/comments",
      "param": [
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Required query parameters"
        },
        {
          "parameter_name": "includeDeleted",
          "value": "boolean",
          "description": "Whether to include deleted comments. Deleted comments will not include their original content. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "pageSize",
          "value": "integer",
          "description": "The maximum number of comments to return per page. Acceptable values are 1 to 100, inclusive. (Default: 20)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "pageToken",
          "value": "string",
          "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "startModifiedTime",
          "value": "string",
          "description": "The minimum value of 'modifiedTime' for the result comments (RFC 3339 date-time).",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.readonly",
        "https://www.googleapis.com/auth/drive.file"
      ],
      "res_type": "Comments",
      "method": "list",
      "source_link": "https://developers.google.com/drive/api/v3/reference/comments/list"
    },
    {
      "endpoint": "PATCH https://www.googleapis.com/drive/v3/files/fileId/comments/commentId",
      "param": [
        {
          "parameter_name": "commentId",
          "value": "string",
          "description": "The ID of the comment.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Required query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file"
      ],
      "res_type": "Comments",
      "method": "update",
      "source_link": "https://developers.google.com/drive/api/v3/reference/comments/update"
    },
    {
      "type": "overview",
      "properties": [
        {
          "property_name": "kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#file\".",
          "notes": ""
        },
        {
          "property_name": "id",
          "value": "string",
          "description": "The ID of the file.",
          "notes": "writable"
        },
        {
          "property_name": "name",
          "value": "string",
          "description": "The name of the file. This is not necessarily unique within a folder. Note that for immutable items such as the top level folders of shared drives, My Drive root folder, and Application Data folder the name is constant.",
          "notes": "writable"
        },
        {
          "property_name": "mimeType",
          "value": "string",
          "description": "The MIME type of the file. Google Drive will attempt to automatically detect an appropriate value from uploaded content if no value is provided. The value cannot be changed unless a new revision is uploaded. If a file is created with a Google Doc MIME type, the uploaded content will be imported if possible. The supported import formats are published in the About resource.",
          "notes": "writable"
        },
        {
          "property_name": "description",
          "value": "string",
          "description": "A short description of the file.",
          "notes": "writable"
        },
        {
          "property_name": "starred",
          "value": "boolean",
          "description": "Whether the user has starred the file.",
          "notes": "writable"
        },
        {
          "property_name": "trashed",
          "value": "boolean",
          "description": "Whether the file has been trashed, either explicitly or from a trashed parent folder. Only the owner may trash a file. The trashed item is excluded from all files.list responses returned for any user who does not own the file. However, all users with access to the file can see the trashed item metadata in an API response. All users with access can copy, download, export, and share the file.",
          "notes": "writable"
        },
        {
          "property_name": "explicitlyTrashed",
          "value": "boolean",
          "description": "Whether the file has been explicitly trashed, as opposed to recursively trashed from a parent folder.",
          "notes": ""
        },
        {
          "property_name": "parents[]",
          "value": "list",
          "description": "The IDs of the parent folders which contain the file. If not specified as part of a create request, the file will be placed directly in the user's My Drive folder. If not specified as part of a copy request, the file will inherit any discoverable parents of the source file. Update requests must use the addParents and removeParents parameters to modify the parents list.",
          "notes": "writable"
        },
        {
          "property_name": "properties",
          "value": "object",
          "description": "A collection of arbitrary key-value pairs which are visible to all apps. Entries with null values are cleared in update and copy requests.",
          "notes": "writable"
        },
        {
          "property_name": "properties.(key)",
          "value": "string",
          "notes": ""
        },
        {
          "property_name": "appProperties",
          "value": "object",
          "description": "A collection of arbitrary key-value pairs which are private to the requesting app. Entries with null values are cleared in update and copy requests. These properties can only be retrieved using an authenticated request. An authenticated request uses an access token obtained with a OAuth 2 client ID. You cannot use an API key to retrieve private properties.",
          "notes": "writable"
        },
        {
          "property_name": "appProperties.(key)",
          "value": "string",
          "notes": ""
        },
        {
          "property_name": "spaces[]",
          "value": "list",
          "description": "The list of spaces which contain the file. The currently supported values are 'drive', 'appDataFolder' and 'photos'.",
          "notes": ""
        },
        {
          "property_name": "version",
          "value": "long",
          "description": "A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the user.",
          "notes": ""
        },
        {
          "property_name": "webContentLink",
          "value": "string",
          "description": "A link for downloading the content of the file in a browser. This is only available for files with binary content in Google Drive.",
          "notes": ""
        },
        {
          "property_name": "webViewLink",
          "value": "string",
          "description": "A link for opening the file in a relevant Google editor or viewer in a browser.",
          "notes": ""
        },
        {
          "property_name": "iconLink",
          "value": "string",
          "description": "A static, unauthenticated link to the file's icon.",
          "notes": ""
        },
        {
          "property_name": "thumbnailLink",
          "value": "string",
          "description": "A short-lived link to the file's thumbnail, if available. Typically lasts on the order of hours. Only populated when the requesting app can access the file's content. If the file isn't shared publicly, the URL returned in Files.thumbnailLink must be fetched using a credentialed request.",
          "notes": ""
        },
        {
          "property_name": "viewedByMe",
          "value": "boolean",
          "description": "Whether the file has been viewed by this user.",
          "notes": ""
        },
        {
          "property_name": "viewedByMeTime",
          "value": "datetime",
          "description": "The last time the file was viewed by the user (RFC 3339 date-time).",
          "notes": "writable"
        },
        {
          "property_name": "createdTime",
          "value": "datetime",
          "description": "The time at which the file was created (RFC 3339 date-time).",
          "notes": "writable"
        },
        {
          "property_name": "modifiedTime",
          "value": "datetime",
          "description": "The last time the file was modified by anyone (RFC 3339 date-time). Note that setting modifiedTime will also update modifiedByMeTime for the user.",
          "notes": "writable"
        },
        {
          "property_name": "modifiedByMeTime",
          "value": "datetime",
          "description": "The last time the file was modified by the user (RFC 3339 date-time).",
          "notes": ""
        },
        {
          "property_name": "sharedWithMeTime",
          "value": "datetime",
          "description": "The time at which the file was shared with the user, if applicable (RFC 3339 date-time).",
          "notes": ""
        },
        {
          "property_name": "sharingUser",
          "value": "nested object",
          "description": "The user who shared the file with the requesting user, if applicable.",
          "notes": ""
        },
        {
          "property_name": "sharingUser.kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#user\".",
          "notes": ""
        },
        {
          "property_name": "sharingUser.displayName",
          "value": "string",
          "description": "A plain text displayable name for this user.",
          "notes": ""
        },
        {
          "property_name": "sharingUser.photoLink",
          "value": "string",
          "description": "A link to the user's profile photo, if available.",
          "notes": ""
        },
        {
          "property_name": "sharingUser.me",
          "value": "boolean",
          "description": "Whether this user is the requesting user.",
          "notes": ""
        },
        {
          "property_name": "sharingUser.permissionId",
          "value": "string",
          "description": "The user's ID as visible in Permission resources.",
          "notes": ""
        },
        {
          "property_name": "sharingUser.emailAddress",
          "value": "string",
          "description": "The email address of the user. This may not be present in certain contexts if the user has not made their email address visible to the requester.",
          "notes": ""
        },
        {
          "property_name": "owners[]",
          "value": "list",
          "description": "The owners of the file. Currently, only certain legacy files may have more than one owner. Not populated for items in shared drives.",
          "notes": ""
        },
        {
          "property_name": "owners[].kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#user\".",
          "notes": ""
        },
        {
          "property_name": "owners[].displayName",
          "value": "string",
          "description": "A plain text displayable name for this user.",
          "notes": ""
        },
        {
          "property_name": "owners[].photoLink",
          "value": "string",
          "description": "A link to the user's profile photo, if available.",
          "notes": ""
        },
        {
          "property_name": "owners[].me",
          "value": "boolean",
          "description": "Whether this user is the requesting user.",
          "notes": ""
        },
        {
          "property_name": "owners[].permissionId",
          "value": "string",
          "description": "The user's ID as visible in Permission resources.",
          "notes": ""
        },
        {
          "property_name": "owners[].emailAddress",
          "value": "string",
          "description": "The email address of the user. This may not be present in certain contexts if the user has not made their email address visible to the requester.",
          "notes": ""
        },
        {
          "property_name": "lastModifyingUser",
          "value": "nested object",
          "description": "The last user to modify the file.",
          "notes": ""
        },
        {
          "property_name": "lastModifyingUser.kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#user\".",
          "notes": ""
        },
        {
          "property_name": "lastModifyingUser.displayName",
          "value": "string",
          "description": "A plain text displayable name for this user.",
          "notes": ""
        },
        {
          "property_name": "lastModifyingUser.photoLink",
          "value": "string",
          "description": "A link to the user's profile photo, if available.",
          "notes": ""
        },
        {
          "property_name": "lastModifyingUser.me",
          "value": "boolean",
          "description": "Whether this user is the requesting user.",
          "notes": ""
        },
        {
          "property_name": "lastModifyingUser.permissionId",
          "value": "string",
          "description": "The user's ID as visible in Permission resources.",
          "notes": ""
        },
        {
          "property_name": "lastModifyingUser.emailAddress",
          "value": "string",
          "description": "The email address of the user. This may not be present in certain contexts if the user has not made their email address visible to the requester.",
          "notes": ""
        },
        {
          "property_name": "shared",
          "value": "boolean",
          "description": "Whether the file has been shared. Not populated for items in shared drives.",
          "notes": ""
        },
        {
          "property_name": "ownedByMe",
          "value": "boolean",
          "description": "Whether the user owns the file. Not populated for items in shared drives.",
          "notes": ""
        },
        {
          "property_name": "viewersCanCopyContent",
          "value": "boolean",
          "description": "Warning: This item is deprecated.Deprecated - use copyRequiresWriterPermission instead.",
          "notes": ""
        },
        {
          "property_name": "writersCanShare",
          "value": "boolean",
          "description": "Whether users with only writer permission can modify the file's permissions. Not populated for items in shared drives.",
          "notes": "writable"
        },
        {
          "property_name": "permissions[]",
          "value": "list",
          "description": "The full list of permissions for the file. This is only available if the requesting user can share the file. Not populated for items in shared drives.",
          "notes": ""
        },
        {
          "property_name": "folderColorRgb",
          "value": "string",
          "description": "The color for a folder as an RGB hex string. The supported colors are published in the folderColorPalette field of the About resource. If an unsupported color is specified, the closest color in the palette will be used instead.",
          "notes": "writable"
        },
        {
          "property_name": "originalFilename",
          "value": "string",
          "description": "The original filename of the uploaded content if available, or else the original value of the name field. This is only available for files with binary content in Google Drive.",
          "notes": "writable"
        },
        {
          "property_name": "fullFileExtension",
          "value": "string",
          "description": "The full file extension extracted from the name field. May contain multiple concatenated extensions, such as \"tar.gz\". This is only available for files with binary content in Google Drive. This is automatically updated when the name field changes, however it is not cleared if the new name does not contain a valid extension.",
          "notes": ""
        },
        {
          "property_name": "fileExtension",
          "value": "string",
          "description": "The final component of fullFileExtension. This is only available for files with binary content in Google Drive.",
          "notes": ""
        },
        {
          "property_name": "md5Checksum",
          "value": "string",
          "description": "The MD5 checksum for the content of the file. This is only applicable to files with binary content in Google Drive.",
          "notes": ""
        },
        {
          "property_name": "size",
          "value": "long",
          "description": "The size of the file's content in bytes. This is applicable to binary files in Google Drive and Google Docs files.",
          "notes": ""
        },
        {
          "property_name": "quotaBytesUsed",
          "value": "long",
          "description": "The number of storage quota bytes used by the file. This includes the head revision as well as previous revisions with keepForever enabled.",
          "notes": ""
        },
        {
          "property_name": "headRevisionId",
          "value": "string",
          "description": "The ID of the file's head revision. This is currently only available for files with binary content in Google Drive.",
          "notes": ""
        },
        {
          "property_name": "contentHints",
          "value": "object",
          "description": "Additional information about the content of the file. These fields are never populated in responses.",
          "notes": ""
        },
        {
          "property_name": "contentHints.thumbnail",
          "value": "object",
          "description": "A thumbnail for the file. This will only be used if Google Drive cannot generate a standard thumbnail.",
          "notes": ""
        },
        {
          "property_name": "contentHints.thumbnail.image",
          "value": "bytes",
          "description": "The thumbnail data encoded with URL-safe Base64 (RFC 4648 section 5).",
          "notes": "writable"
        },
        {
          "property_name": "contentHints.thumbnail.mimeType",
          "value": "string",
          "description": "The MIME type of the thumbnail.",
          "notes": "writable"
        },
        {
          "property_name": "contentHints.indexableText",
          "value": "string",
          "description": "Text to be indexed for the file to improve fullText queries. This is limited to 128KB in length and may contain HTML elements.",
          "notes": "writable"
        },
        {
          "property_name": "imageMediaMetadata",
          "value": "object",
          "description": "Additional metadata about image media, if available.",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.width",
          "value": "integer",
          "description": "The width of the image in pixels.",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.height",
          "value": "integer",
          "description": "The height of the image in pixels.",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.rotation",
          "value": "integer",
          "description": "The number of clockwise 90 degree rotations applied from the image's original orientation.",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.location",
          "value": "object",
          "description": "Geographic location information stored in the image.",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.location.latitude",
          "value": "double",
          "description": "The latitude stored in the image.",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.location.longitude",
          "value": "double",
          "description": "The longitude stored in the image.",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.location.altitude",
          "value": "double",
          "description": "The altitude stored in the image.",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.time",
          "value": "string",
          "description": "The date and time the photo was taken (EXIF DateTime).",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.cameraMake",
          "value": "string",
          "description": "The make of the camera used to create the photo.",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.cameraModel",
          "value": "string",
          "description": "The model of the camera used to create the photo.",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.exposureTime",
          "value": "float",
          "description": "The length of the exposure, in seconds.",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.aperture",
          "value": "float",
          "description": "The aperture used to create the photo (f-number).",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.flashUsed",
          "value": "boolean",
          "description": "Whether a flash was used to create the photo.",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.focalLength",
          "value": "float",
          "description": "The focal length used to create the photo, in millimeters.",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.isoSpeed",
          "value": "integer",
          "description": "The ISO speed used to create the photo.",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.meteringMode",
          "value": "string",
          "description": "The metering mode used to create the photo.",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.sensor",
          "value": "string",
          "description": "The type of sensor used to create the photo.",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.exposureMode",
          "value": "string",
          "description": "The exposure mode used to create the photo.",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.colorSpace",
          "value": "string",
          "description": "The color space of the photo.",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.whiteBalance",
          "value": "string",
          "description": "The white balance mode used to create the photo.",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.exposureBias",
          "value": "float",
          "description": "The exposure bias of the photo (APEX value).",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.maxApertureValue",
          "value": "float",
          "description": "The smallest f-number of the lens at the focal length used to create the photo (APEX value).",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.subjectDistance",
          "value": "integer",
          "description": "The distance to the subject of the photo, in meters.",
          "notes": ""
        },
        {
          "property_name": "imageMediaMetadata.lens",
          "value": "string",
          "description": "The lens used to create the photo.",
          "notes": ""
        },
        {
          "property_name": "videoMediaMetadata",
          "value": "object",
          "description": "Additional metadata about video media. This may not be available immediately upon upload.",
          "notes": ""
        },
        {
          "property_name": "videoMediaMetadata.width",
          "value": "integer",
          "description": "The width of the video in pixels.",
          "notes": ""
        },
        {
          "property_name": "videoMediaMetadata.height",
          "value": "integer",
          "description": "The height of the video in pixels.",
          "notes": ""
        },
        {
          "property_name": "videoMediaMetadata.durationMillis",
          "value": "long",
          "description": "The duration of the video in milliseconds.",
          "notes": ""
        },
        {
          "property_name": "capabilities",
          "value": "object",
          "description": "Capabilities the current user has on this file. Each capability corresponds to a fine-grained action that a user may take.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canEdit",
          "value": "boolean",
          "description": "Whether the current user can edit this file. Other factors may limit the type of changes a user can make to a file. For example, see canChangeCopyRequiresWriterPermission or canModifyContent.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canComment",
          "value": "boolean",
          "description": "Whether the current user can comment on this file.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canShare",
          "value": "boolean",
          "description": "Whether the current user can modify the sharing settings for this file.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canCopy",
          "value": "boolean",
          "description": "Whether the current user can copy this file. For an item in a shared drive, whether the current user can copy non-folder descendants of this item, or this item itself if it is not a folder.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canReadRevisions",
          "value": "boolean",
          "description": "Whether the current user can read the revisions resource of this file. For a shared drive item, whether revisions of non-folder descendants of this item, or this item itself if it is not a folder, can be read.",
          "notes": ""
        },
        {
          "property_name": "isAppAuthorized",
          "value": "boolean",
          "description": "Whether the file was created or opened by the requesting app.",
          "notes": ""
        },
        {
          "property_name": "hasThumbnail",
          "value": "boolean",
          "description": "Whether this file has a thumbnail. This does not indicate whether the requesting app has access to the thumbnail. To check access, look for the presence of the thumbnailLink field.",
          "notes": ""
        },
        {
          "property_name": "thumbnailVersion",
          "value": "long",
          "description": "The thumbnail version for use in thumbnail cache invalidation.",
          "notes": ""
        },
        {
          "property_name": "modifiedByMe",
          "value": "boolean",
          "description": "Whether the file has been modified by this user.",
          "notes": ""
        },
        {
          "property_name": "trashingUser",
          "value": "nested object",
          "description": "If the file has been explicitly trashed, the user who trashed it. Only populated for items in shared drives.",
          "notes": ""
        },
        {
          "property_name": "trashingUser.kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#user\".",
          "notes": ""
        },
        {
          "property_name": "trashingUser.displayName",
          "value": "string",
          "description": "A plain text displayable name for this user.",
          "notes": ""
        },
        {
          "property_name": "trashingUser.photoLink",
          "value": "string",
          "description": "A link to the user's profile photo, if available.",
          "notes": ""
        },
        {
          "property_name": "trashingUser.me",
          "value": "boolean",
          "description": "Whether this user is the requesting user.",
          "notes": ""
        },
        {
          "property_name": "trashingUser.permissionId",
          "value": "string",
          "description": "The user's ID as visible in Permission resources.",
          "notes": ""
        },
        {
          "property_name": "trashingUser.emailAddress",
          "value": "string",
          "description": "The email address of the user. This may not be present in certain contexts if the user has not made their email address visible to the requester.",
          "notes": ""
        },
        {
          "property_name": "trashedTime",
          "value": "datetime",
          "description": "The time that the item was trashed (RFC 3339 date-time). Only populated for items in shared drives.",
          "notes": ""
        },
        {
          "property_name": "teamDriveId",
          "value": "string",
          "description": "Warning: This item is deprecated.Deprecated - use driveId instead.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canAddChildren",
          "value": "boolean",
          "description": "Whether the current user can add children to this folder. This is always false when the item is not a folder.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canDelete",
          "value": "boolean",
          "description": "Whether the current user can delete this file.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canDownload",
          "value": "boolean",
          "description": "Whether the current user can download this file.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canListChildren",
          "value": "boolean",
          "description": "Whether the current user can list the children of this folder. This is always false when the item is not a folder.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canMoveTeamDriveItem",
          "value": "boolean",
          "description": "Warning: This item is deprecated.Deprecated - use canMoveItemWithinDrive or canMoveItemOutOfDrive instead.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canMoveItemIntoTeamDrive",
          "value": "boolean",
          "description": "Warning: This item is deprecated.Deprecated - use canMoveItemOutOfDrive instead.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canReadTeamDrive",
          "value": "boolean",
          "description": "Warning: This item is deprecated.Deprecated - use canReadDrive instead.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canRemoveChildren",
          "value": "boolean",
          "description": "Whether the current user can remove children from this folder. This is always false when the item is not a folder. For a folder in a shared drive, use canDeleteChildren or canTrashChildren instead.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canRename",
          "value": "boolean",
          "description": "Whether the current user can rename this file.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canTrash",
          "value": "boolean",
          "description": "Whether the current user can move this file to trash.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canUntrash",
          "value": "boolean",
          "description": "Whether the current user can restore this file from trash.",
          "notes": ""
        },
        {
          "property_name": "hasAugmentedPermissions",
          "value": "boolean",
          "description": "Whether there are permissions directly on this file. This field is only populated for items in shared drives.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canChangeViewersCanCopyContent",
          "value": "boolean",
          "description": "Warning: This item is deprecated.Deprecated",
          "notes": ""
        },
        {
          "property_name": "permissionIds[]",
          "value": "list",
          "description": "List of permission IDs for users with access to this file.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canChangeCopyRequiresWriterPermission",
          "value": "boolean",
          "description": "Whether the current user can change the copyRequiresWriterPermission restriction of this file.",
          "notes": ""
        },
        {
          "property_name": "copyRequiresWriterPermission",
          "value": "boolean",
          "description": "Whether the options to copy, print, or download this file, should be disabled for readers and commenters.",
          "notes": "writable"
        },
        {
          "property_name": "capabilities.canDeleteChildren",
          "value": "boolean",
          "description": "Whether the current user can delete children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canMoveChildrenOutOfTeamDrive",
          "value": "boolean",
          "description": "Warning: This item is deprecated.Deprecated - use canMoveChildrenOutOfDrive instead.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canMoveChildrenWithinTeamDrive",
          "value": "boolean",
          "description": "Warning: This item is deprecated.Deprecated - use canMoveChildrenWithinDrive instead.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canMoveItemOutOfTeamDrive",
          "value": "boolean",
          "description": "Warning: This item is deprecated.Deprecated - use canMoveItemOutOfDrive instead.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canMoveItemWithinTeamDrive",
          "value": "boolean",
          "description": "Warning: This item is deprecated.Deprecated - use canMoveItemWithinDrive instead.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canTrashChildren",
          "value": "boolean",
          "description": "Whether the current user can trash children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.",
          "notes": ""
        },
        {
          "property_name": "exportLinks",
          "value": "object",
          "description": "Links for exporting Docs Editors files to specific formats.",
          "notes": ""
        },
        {
          "property_name": "exportLinks.(key)",
          "value": "string",
          "description": "A mapping from export format to URL",
          "notes": ""
        },
        {
          "property_name": "driveId",
          "value": "string",
          "description": "ID of the shared drive the file resides in. Only populated for items in shared drives.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canMoveChildrenOutOfDrive",
          "value": "boolean",
          "description": "Whether the current user can move children of this folder outside of the shared drive. This is false when the item is not a folder. Only populated for items in shared drives.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canMoveChildrenWithinDrive",
          "value": "boolean",
          "description": "Whether the current user can move children of this folder within this drive. This is false when the item is not a folder. Note that a request to move the child may still fail depending on the current user's access to the child and to the destination folder.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canMoveItemOutOfDrive",
          "value": "boolean",
          "description": "Whether the current user can move this item outside of this drive by changing its parent. Note that a request to change the parent of the item may still fail depending on the new parent that is being added.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canMoveItemWithinDrive",
          "value": "boolean",
          "description": "Whether the current user can move this item within this drive. Note that a request to change the parent of the item may still fail depending on the new parent that is being added and the parent that is being removed.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canReadDrive",
          "value": "boolean",
          "description": "Whether the current user can read the shared drive to which this file belongs. Only populated for items in shared drives.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canModifyContent",
          "value": "boolean",
          "description": "Whether the current user can modify the content of this file.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canAddMyDriveParent",
          "value": "boolean",
          "description": "Whether the current user can add a parent for the item without removing an existing parent in the same request. Not populated for shared drive files.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canRemoveMyDriveParent",
          "value": "boolean",
          "description": "Whether the current user can remove a parent from the item without adding another parent in the same request. Not populated for shared drive files.",
          "notes": ""
        },
        {
          "property_name": "shortcutDetails",
          "value": "object",
          "description": "Shortcut file details. Only populated for shortcut files, which have the mimeType field set to application/vnd.google-apps.shortcut.",
          "notes": ""
        },
        {
          "property_name": "shortcutDetails.targetId",
          "value": "string",
          "description": "The ID of the file that this shortcut points to.",
          "notes": "writable"
        },
        {
          "property_name": "shortcutDetails.targetMimeType",
          "value": "string",
          "description": "The MIME type of the file that this shortcut points to. The value of this field is a snapshot of the target's MIME type, captured when the shortcut is created.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canAddFolderFromAnotherDrive",
          "value": "boolean",
          "description": "Whether the current user can add a folder from another drive (different shared drive or My Drive) to this folder. This is false when the item is not a folder. Only populated for items in shared drives.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canModifyContentRestriction",
          "value": "boolean",
          "description": "Whether the current user can modify restrictions on content of this file.",
          "notes": ""
        },
        {
          "property_name": "contentRestrictions[]",
          "value": "list",
          "description": "Restrictions for accessing the content of the file. Only populated if such a restriction exists.",
          "notes": ""
        },
        {
          "property_name": "contentRestrictions[].readOnly",
          "value": "boolean",
          "description": "Whether the content of the file is read-only. If a file is read-only, a new revision of the file may not be added, comments may not be added or modified, and the title of the file may not be modified.",
          "notes": "writable"
        },
        {
          "property_name": "contentRestrictions[].reason",
          "value": "string",
          "description": "Reason for why the content of the file is restricted. This is only mutable on requests that also set readOnly=true.",
          "notes": "writable"
        },
        {
          "property_name": "contentRestrictions[].restrictingUser",
          "value": "nested object",
          "description": "The user who set the content restriction. Only populated if readOnly is true.",
          "notes": ""
        },
        {
          "property_name": "contentRestrictions[].restrictingUser.kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#user\".",
          "notes": ""
        },
        {
          "property_name": "contentRestrictions[].restrictingUser.displayName",
          "value": "string",
          "description": "A plain text displayable name for this user.",
          "notes": ""
        },
        {
          "property_name": "contentRestrictions[].restrictingUser.photoLink",
          "value": "string",
          "description": "A link to the user's profile photo, if available.",
          "notes": ""
        },
        {
          "property_name": "contentRestrictions[].restrictingUser.me",
          "value": "boolean",
          "description": "Whether this user is the requesting user.",
          "notes": ""
        },
        {
          "property_name": "contentRestrictions[].restrictingUser.permissionId",
          "value": "string",
          "description": "The user's ID as visible in Permission resources.",
          "notes": ""
        },
        {
          "property_name": "contentRestrictions[].restrictingUser.emailAddress",
          "value": "string",
          "description": "The email address of the user. This may not be present in certain contexts if the user has not made their email address visible to the requester.",
          "notes": ""
        },
        {
          "property_name": "contentRestrictions[].restrictionTime",
          "value": "datetime",
          "description": "The time at which the content restriction was set (formatted RFC 3339 timestamp). Only populated if readOnly is true.",
          "notes": ""
        },
        {
          "property_name": "contentRestrictions[].type",
          "value": "string",
          "description": "The type of the content restriction. Currently the only possible value is globalContentRestriction.",
          "notes": ""
        }
      ],
      "res_description": "The metadata for a file.Google Drive will attempt to automatically detect an appropriate value from uploaded content if no value is provided. The value cannot be changed unless a new revision is uploaded.  If a file is created with a Google Doc MIME type, the uploaded content will be imported if possible. The supported import formats are published in the About resource.If not specified as part of a create request, the file will be placed directly in the user's My Drive folder. If not specified as part of a copy request, the file will inherit any discoverable parents of the source file. Update requests must use the addParents and removeParents parameters to modify the parents list.Entries with null values are cleared in update and copy requests.Entries with null values are cleared in update and copy requests.  These properties can only be retrieved using an authenticated request. An authenticated request uses an access token obtained with a OAuth 2 client ID. You cannot use an API key to retrieve private properties.Note that setting modifiedTime will also update modifiedByMeTime for the user.If an unsupported color is specified, the closest color in the palette will be used instead.This is automatically updated when the name field changes, however it is not cleared if the new name does not contain a valid extension.",
      "res_example": "{ \"kind\": \"drive#file\", \"id\": string, \"name\": string, \"mimeType\": string, \"description\": string, \"starred\": boolean, \"trashed\": boolean, \"explicitlyTrashed\": boolean, \"trashingUser\": { \"kind\": \"drive#user\", \"displayName\": string, \"photoLink\": string, \"me\": boolean, \"permissionId\": string, \"emailAddress\": string }, \"trashedTime\": datetime, \"parents\": [ string ], \"properties\": { (key): string }, \"appProperties\": { (key): string }, \"spaces\": [ string ], \"version\": long, \"webContentLink\": string, \"webViewLink\": string, \"iconLink\": string, \"hasThumbnail\": boolean, \"thumbnailLink\": string, \"thumbnailVersion\": long, \"viewedByMe\": boolean, \"viewedByMeTime\": datetime, \"createdTime\": datetime, \"modifiedTime\": datetime, \"modifiedByMeTime\": datetime, \"modifiedByMe\": boolean, \"sharedWithMeTime\": datetime, \"sharingUser\": { \"kind\": \"drive#user\", \"displayName\": string, \"photoLink\": string, \"me\": boolean, \"permissionId\": string, \"emailAddress\": string }, \"owners\": [ { \"kind\": \"drive#user\", \"displayName\": string, \"photoLink\": string, \"me\": boolean, \"permissionId\": string, \"emailAddress\": string } ], \"teamDriveId\": string, \"driveId\": string, \"lastModifyingUser\": { \"kind\": \"drive#user\", \"displayName\": string, \"photoLink\": string, \"me\": boolean, \"permissionId\": string, \"emailAddress\": string }, \"shared\": boolean, \"ownedByMe\": boolean, \"capabilities\": { \"canAddChildren\": boolean, \"canAddFolderFromAnotherDrive\": boolean, \"canAddMyDriveParent\": boolean, \"canChangeCopyRequiresWriterPermission\": boolean, \"canChangeViewersCanCopyContent\": boolean, \"canComment\": boolean, \"canCopy\": boolean, \"canDelete\": boolean, \"canDeleteChildren\": boolean, \"canDownload\": boolean, \"canEdit\": boolean, \"canListChildren\": boolean, \"canModifyContent\": boolean, \"canModifyContentRestriction\": boolean, \"canMoveChildrenOutOfTeamDrive\": boolean, \"canMoveChildrenOutOfDrive\": boolean, \"canMoveChildrenWithinTeamDrive\": boolean, \"canMoveChildrenWithinDrive\": boolean, \"canMoveItemIntoTeamDrive\": boolean, \"canMoveItemOutOfTeamDrive\": boolean, \"canMoveItemOutOfDrive\": boolean, \"canMoveItemWithinTeamDrive\": boolean, \"canMoveItemWithinDrive\": boolean, \"canMoveTeamDriveItem\": boolean, \"canReadRevisions\": boolean, \"canReadTeamDrive\": boolean, \"canReadDrive\": boolean, \"canRemoveChildren\": boolean, \"canRemoveMyDriveParent\": boolean, \"canRename\": boolean, \"canShare\": boolean, \"canTrash\": boolean, \"canTrashChildren\": boolean, \"canUntrash\": boolean }, \"viewersCanCopyContent\": boolean, \"copyRequiresWriterPermission\": boolean, \"writersCanShare\": boolean, \"permissions\": [ permissions Resource ], \"permissionIds\": [ string ], \"hasAugmentedPermissions\": boolean, \"folderColorRgb\": string, \"originalFilename\": string, \"fullFileExtension\": string, \"fileExtension\": string, \"md5Checksum\": string, \"size\": long, \"quotaBytesUsed\": long, \"headRevisionId\": string, \"contentHints\": { \"thumbnail\": { \"image\": bytes, \"mimeType\": string }, \"indexableText\": string }, \"imageMediaMetadata\": { \"width\": integer, \"height\": integer, \"rotation\": integer, \"location\": { \"latitude\": double, \"longitude\": double, \"altitude\": double }, \"time\": string, \"cameraMake\": string, \"cameraModel\": string, \"exposureTime\": float, \"aperture\": float, \"flashUsed\": boolean, \"focalLength\": float, \"isoSpeed\": integer, \"meteringMode\": string, \"sensor\": string, \"exposureMode\": string, \"colorSpace\": string, \"whiteBalance\": string, \"exposureBias\": float, \"maxApertureValue\": float, \"subjectDistance\": integer, \"lens\": string }, \"videoMediaMetadata\": { \"width\": integer, \"height\": integer, \"durationMillis\": long }, \"isAppAuthorized\": boolean, \"exportLinks\": { (key): string }, \"shortcutDetails\": { \"targetId\": string, \"targetMimeType\": string }, \"contentRestrictions\": [ { \"readOnly\": boolean, \"reason\": string, \"restrictingUser\": { \"kind\": \"drive#user\", \"displayName\": string, \"photoLink\": string, \"me\": boolean, \"permissionId\": string, \"emailAddress\": string }, \"restrictionTime\": datetime, \"type\": string } ]}",
      "res_type": "Files",
      "source_link": "https://developers.google.com/drive/api/v3/reference/files"
    },
    {
      "endpoint": "POST https://www.googleapis.com/drive/v3/files/fileId/copy",
      "param": [
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "enforceSingleParent",
          "value": "boolean",
          "description": "Warning: This item is deprecated. Deprecated. Copying files into multiple folders is no longer supported. Use shortcuts instead. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. If not specified, the response includes a default set of fields specific to this method. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "ignoreDefaultVisibility",
          "value": "boolean",
          "description": "Whether to ignore the domain's default visibility settings for the created file. Domain administrators can choose to make all uploaded files visible to the domain by default; this parameter bypasses that behavior for the request. Permissions are still inherited from parent folders. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "includePermissionsForView",
          "value": "string",
          "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "keepRevisionForever",
          "value": "boolean",
          "description": "Whether to set the 'keepForever' field in the new head revision. This is only applicable to files with binary content in Google Drive. Only 200 revisions for the file can be kept forever. If the limit is reached, try deleting pinned revisions. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "ocrLanguage",
          "value": "string",
          "description": "A language hint for OCR processing during image import (ISO 639-1 code).",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsAllDrives",
          "value": "boolean",
          "description": "Whether the requesting application supports both My Drives and shared drives. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsTeamDrives",
          "value": "boolean",
          "description": "Warning: This item is deprecated. Deprecated use supportsAllDrives instead. (Default: false)",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file",
        "https://www.googleapis.com/auth/drive.appdata",
        "https://www.googleapis.com/auth/drive.photos.readonly"
      ],
      "res_type": "Files",
      "method": "copy",
      "source_link": "https://developers.google.com/drive/api/v3/reference/files/copy"
    },
    {
      "endpoint": "This method provides media upload functionality through two separate URIs. For more details, see the document on media upload.",
      "param": [
        {
          "parameter_name": "uploadType",
          "value": "string",
          "description": "The type of upload request to the /upload URI. If you are uploading data (using an /upload URI), this field is required. If you are creating a metadata-only file, this field is not required. Additionally, this field is not shown in the \"Try this API\" widget because the widget doesn't support data uploads. Acceptable values are: media - Simple upload. Upload the media only, without any metadata. multipart - Multipart upload. Upload both the media and its metadata, in a single request. resumable - Resumable upload. Upload the file in a resumable fashion, using a series of at least two requests where the first request includes the metadata.",
          "state": "Required query parameters"
        },
        {
          "parameter_name": "enforceSingleParent",
          "value": "boolean",
          "description": "Warning: This item is deprecated. Deprecated. Creating files in multiple folders is no longer supported. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "ignoreDefaultVisibility",
          "value": "boolean",
          "description": "Whether to ignore the domain's default visibility settings for the created file. Domain administrators can choose to make all uploaded files visible to the domain by default; this parameter bypasses that behavior for the request. Permissions are still inherited from parent folders. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "includePermissionsForView",
          "value": "string",
          "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "keepRevisionForever",
          "value": "boolean",
          "description": "Whether to set the 'keepForever' field in the new head revision. This is only applicable to files with binary content in Google Drive. Only 200 revisions for the file can be kept forever. If the limit is reached, try deleting pinned revisions. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "ocrLanguage",
          "value": "string",
          "description": "A language hint for OCR processing during image import (ISO 639-1 code).",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsAllDrives",
          "value": "boolean",
          "description": "Whether the requesting application supports both My Drives and shared drives. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsTeamDrives",
          "value": "boolean",
          "description": "Warning: This item is deprecated. Deprecated use supportsAllDrives instead. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "useContentAsIndexableText",
          "value": "boolean",
          "description": "Whether to use the uploaded content as indexable text. (Default: false)",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file",
        "https://www.googleapis.com/auth/drive.appdata"
      ],
      "res_type": "Files",
      "method": "create",
      "source_link": "https://developers.google.com/drive/api/v3/reference/files/create"
    },
    {
      "endpoint": "DELETE https://www.googleapis.com/drive/v3/files/fileId",
      "param": [
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "enforceSingleParent",
          "value": "boolean",
          "description": "Warning: This item is deprecated. Deprecated. If an item is not in a shared drive and its last parent is deleted but the item itself is not, the item will be placed under its owner's root. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsAllDrives",
          "value": "boolean",
          "description": "Whether the requesting application supports both My Drives and shared drives. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsTeamDrives",
          "value": "boolean",
          "description": "Warning: This item is deprecated. Deprecated use supportsAllDrives instead. (Default: false)",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file",
        "https://www.googleapis.com/auth/drive.appdata"
      ],
      "res_type": "Files",
      "method": "delete",
      "source_link": "https://developers.google.com/drive/api/v3/reference/files/delete"
    },
    {
      "endpoint": "DELETE https://www.googleapis.com/drive/v3/files/trash",
      "param": [
        {
          "parameter_name": "enforceSingleParent",
          "value": "boolean",
          "description": "Warning: This item is deprecated. Deprecated. If an item is not in a shared drive and its last parent is deleted but the item itself is not, the item will be placed under its owner's root. (Default: false)",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive"
      ],
      "res_type": "Files",
      "method": "emptyTrash",
      "source_link": "https://developers.google.com/drive/api/v3/reference/files/emptyTrash"
    },
    {
      "endpoint": "GET https://www.googleapis.com/drive/v3/files/fileId/export",
      "param": [
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "mimeType",
          "value": "string",
          "description": "The MIME type of the format requested for this export.",
          "state": "Required query parameters"
        },
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. If not specified, the response includes a default set of fields specific to this method. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file",
        "https://www.googleapis.com/auth/drive.readonly"
      ],
      "res_type": "Files",
      "method": "export",
      "source_link": "https://developers.google.com/drive/api/v3/reference/files/export"
    },
    {
      "prop_res_body": [
        {
          "property_name": "kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#generatedIds\".",
          "notes": ""
        },
        {
          "property_name": "space",
          "value": "string",
          "description": "The type of file that can be created with these IDs.",
          "notes": ""
        },
        {
          "property_name": "ids[]",
          "value": "list",
          "description": "The IDs generated for the requesting user in the specified space.",
          "notes": ""
        }
      ],
      "endpoint": "GET https://www.googleapis.com/drive/v3/files/generateIds",
      "param": [
        {
          "parameter_name": "count",
          "value": "integer",
          "description": "The number of IDs to return. Acceptable values are 1 to 1000, inclusive. (Default: 10)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. If not specified, the response includes a default set of fields specific to this method. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "space",
          "value": "string",
          "description": "The space in which the IDs can be used to create new files. Supported values are 'drive' and 'appDataFolder'.",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file",
        "https://www.googleapis.com/auth/drive.appdata"
      ],
      "res_type": "Files",
      "method": "generateIds",
      "source_link": "https://developers.google.com/drive/api/v3/reference/files/generateIds"
    },
    {
      "endpoint": "GET https://www.googleapis.com/drive/v3/files/fileId",
      "param": [
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "acknowledgeAbuse",
          "value": "boolean",
          "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. This is only applicable when alt=media. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. If not specified, the response includes a default set of fields specific to this method. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "includePermissionsForView",
          "value": "string",
          "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsAllDrives",
          "value": "boolean",
          "description": "Whether the requesting application supports both My Drives and shared drives. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsTeamDrives",
          "value": "boolean",
          "description": "Warning: This item is deprecated. Deprecated use supportsAllDrives instead. (Default: false)",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file",
        "https://www.googleapis.com/auth/drive.readonly",
        "https://www.googleapis.com/auth/drive.metadata.readonly",
        "https://www.googleapis.com/auth/drive.appdata",
        "https://www.googleapis.com/auth/drive.metadata",
        "https://www.googleapis.com/auth/drive.photos.readonly"
      ],
      "res_type": "Files",
      "method": "get",
      "source_link": "https://developers.google.com/drive/api/v3/reference/files/get"
    },
    {
      "prop_res_body": [
        {
          "property_name": "kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#fileList\".",
          "notes": ""
        },
        {
          "property_name": "nextPageToken",
          "value": "string",
          "description": "The page token for the next page of files. This will be absent if the end of the files list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "notes": ""
        },
        {
          "property_name": "files[]",
          "value": "list",
          "description": "The list of files. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "notes": ""
        },
        {
          "property_name": "incompleteSearch",
          "value": "boolean",
          "description": "Whether the search process was incomplete. If true, then some search results may be missing, since all documents were not searched. This may occur when searching multiple drives with the \"allDrives\" corpora, but all corpora could not be searched. When this happens, it is suggested that clients narrow their query by choosing a different corpus such as \"user\" or \"drive\".",
          "notes": ""
        }
      ],
      "endpoint": "GET https://www.googleapis.com/drive/v3/files",
      "param": [
        {
          "parameter_name": "corpora",
          "value": "string",
          "description": "Groupings of files to which the query applies. Supported groupings are: 'user' (files created by, opened by, or shared directly with the user), 'drive' (files in the specified shared drive as indicated by the 'driveId'), 'domain' (files shared to the user's domain), and 'allDrives' (A combination of 'user' and 'drive' for all drives where the user is a member). When able, use 'user' or 'drive', instead of 'allDrives', for efficiency.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "corpus",
          "value": "string",
          "description": "Warning: This item is deprecated. The source of files to list. Deprecated: use 'corpora' instead. Acceptable values are: \"domain\": Files shared to the user's domain. \"user\": Files owned by or shared to the user. If a user has permissions on a Shared Drive, the files inside it won't be retrieved unless the user has created, opened, or shared the file.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "driveId",
          "value": "string",
          "description": "ID of the shared drive to search.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. If not specified, the response includes a default set of fields specific to this method. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "includeItemsFromAllDrives",
          "value": "boolean",
          "description": "Whether both My Drive and shared drive items should be included in results. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "includePermissionsForView",
          "value": "string",
          "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "includeTeamDriveItems",
          "value": "boolean",
          "description": "Warning: This item is deprecated. Deprecated use includeItemsFromAllDrives instead. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "orderBy",
          "value": "string",
          "description": "A comma-separated list of sort keys. Valid keys are 'createdTime', 'folder', 'modifiedByMeTime', 'modifiedTime', 'name', 'name_natural', 'quotaBytesUsed', 'recency', 'sharedWithMeTime', 'starred', and 'viewedByMeTime'. Each key sorts ascending by default, but may be reversed with the 'desc' modifier. Example usage: ?orderBy=folder,modifiedTime desc,name. Please note that there is a current limitation for users with approximately one million files in which the requested sort order is ignored.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "pageSize",
          "value": "integer",
          "description": "The maximum number of files to return per page. Partial or empty result pages are possible even before the end of the files list has been reached. Acceptable values are 1 to 1000, inclusive. (Default: 100)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "pageToken",
          "value": "string",
          "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "q",
          "value": "string",
          "description": "A query for filtering the file results. See the \"Search for files\" guide for the supported syntax.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "spaces",
          "value": "string",
          "description": "A comma-separated list of spaces to query within the corpus. Supported values are 'drive', 'appDataFolder' and 'photos'.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsAllDrives",
          "value": "boolean",
          "description": "Whether the requesting application supports both My Drives and shared drives. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsTeamDrives",
          "value": "boolean",
          "description": "Warning: This item is deprecated. Deprecated use supportsAllDrives instead. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "teamDriveId",
          "value": "string",
          "description": "Warning: This item is deprecated. Deprecated use driveId instead.",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file",
        "https://www.googleapis.com/auth/drive.readonly",
        "https://www.googleapis.com/auth/drive.metadata.readonly",
        "https://www.googleapis.com/auth/drive.appdata",
        "https://www.googleapis.com/auth/drive.metadata",
        "https://www.googleapis.com/auth/drive.photos.readonly"
      ],
      "res_type": "Files",
      "method": "list",
      "source_link": "https://developers.google.com/drive/api/v3/reference/files/list"
    },
    {
      "endpoint": "This method provides media upload functionality through two separate URIs. For more details, see the document on media upload.",
      "param": [
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "uploadType",
          "value": "string",
          "description": "The type of upload request to the /upload URI. If you are uploading data (using an /upload URI), this field is required. If you are creating a metadata-only file, this field is not required. Additionally, this field is not shown in the \"Try this API\" widget because the widget doesn't support data uploads. Acceptable values are: media - Simple upload. Upload the media only, without any metadata. multipart - Multipart upload. Upload both the media and its metadata, in a single request. resumable - Resumable upload. Upload the file in a resumable fashion, using a series of at least two requests where the first request includes the metadata.",
          "state": "Required query parameters"
        },
        {
          "parameter_name": "addParents",
          "value": "string",
          "description": "A comma-separated list of parent IDs to add.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "enforceSingleParent",
          "value": "boolean",
          "description": "Warning: This item is deprecated. Deprecated. Adding files to multiple folders is no longer supported. Use shortcuts instead. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "includePermissionsForView",
          "value": "string",
          "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "keepRevisionForever",
          "value": "boolean",
          "description": "Whether to set the 'keepForever' field in the new head revision. This is only applicable to files with binary content in Google Drive. Only 200 revisions for the file can be kept forever. If the limit is reached, try deleting pinned revisions. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "ocrLanguage",
          "value": "string",
          "description": "A language hint for OCR processing during image import (ISO 639-1 code).",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "removeParents",
          "value": "string",
          "description": "A comma-separated list of parent IDs to remove.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsAllDrives",
          "value": "boolean",
          "description": "Whether the requesting application supports both My Drives and shared drives. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsTeamDrives",
          "value": "boolean",
          "description": "Warning: This item is deprecated. Deprecated use supportsAllDrives instead. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "useContentAsIndexableText",
          "value": "boolean",
          "description": "Whether to use the uploaded content as indexable text. (Default: false)",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file",
        "https://www.googleapis.com/auth/drive.appdata",
        "https://www.googleapis.com/auth/drive.scripts",
        "https://www.googleapis.com/auth/drive.metadata"
      ],
      "res_type": "Files",
      "method": "update",
      "source_link": "https://developers.google.com/drive/api/v3/reference/files/update"
    },
    {
      "req_body": "{ \"kind\": \"api#channel\", \"id\": string, \"resourceId\": string, \"resourceUri\": string, \"token\": string, \"expiration\": long, \"type\": string, \"address\": string, \"payload\": boolean, \"params\": { (key): string }}",
      "prop_req_body": [
        {
          "property_name": "kind",
          "value": "string",
          "description": "Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\".",
          "notes": ""
        },
        {
          "property_name": "id",
          "value": "string",
          "description": "A UUID or similar unique string that identifies this channel.",
          "notes": ""
        },
        {
          "property_name": "resourceId",
          "value": "string",
          "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.",
          "notes": ""
        },
        {
          "property_name": "resourceUri",
          "value": "string",
          "description": "A version-specific identifier for the watched resource.",
          "notes": ""
        },
        {
          "property_name": "token",
          "value": "string",
          "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.",
          "notes": ""
        },
        {
          "property_name": "expiration",
          "value": "long",
          "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
          "notes": ""
        },
        {
          "property_name": "type",
          "value": "string",
          "description": "The type of delivery mechanism used for this channel. Valid values are \"web_hook\" (or \"webhook\"). Both values refer to a channel where Http requests are used to deliver messages.",
          "notes": ""
        },
        {
          "property_name": "address",
          "value": "string",
          "description": "The address where notifications are delivered for this channel.",
          "notes": ""
        },
        {
          "property_name": "payload",
          "value": "boolean",
          "description": "A Boolean value to indicate whether payload is wanted. Optional.",
          "notes": ""
        },
        {
          "property_name": "params",
          "value": "object",
          "description": "Additional parameters controlling delivery channel behavior. Optional.",
          "notes": ""
        },
        {
          "property_name": "params.(key)",
          "value": "string",
          "description": "Declares a new parameter by name.",
          "notes": ""
        }
      ],
      "prop_res_body": [
        {
          "property_name": "kind",
          "value": "string",
          "description": "Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\".",
          "notes": ""
        },
        {
          "property_name": "id",
          "value": "string",
          "description": "A UUID or similar unique string that identifies this channel.",
          "notes": ""
        },
        {
          "property_name": "resourceId",
          "value": "string",
          "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.",
          "notes": ""
        },
        {
          "property_name": "resourceUri",
          "value": "string",
          "description": "A version-specific identifier for the watched resource.",
          "notes": ""
        },
        {
          "property_name": "token",
          "value": "string",
          "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.",
          "notes": ""
        },
        {
          "property_name": "expiration",
          "value": "long",
          "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
          "notes": ""
        },
        {
          "property_name": "type",
          "value": "string",
          "description": "The type of delivery mechanism used for this channel. Valid values are \"web_hook\" (or \"webhook\"). Both values refer to a channel where Http requests are used to deliver messages.",
          "notes": ""
        },
        {
          "property_name": "address",
          "value": "string",
          "description": "The address where notifications are delivered for this channel.",
          "notes": ""
        },
        {
          "property_name": "payload",
          "value": "boolean",
          "description": "A Boolean value to indicate whether payload is wanted. Optional.",
          "notes": ""
        },
        {
          "property_name": "params",
          "value": "object",
          "description": "Additional parameters controlling delivery channel behavior. Optional.",
          "notes": ""
        },
        {
          "property_name": "params.(key)",
          "value": "string",
          "description": "Declares a new parameter by name.",
          "notes": ""
        }
      ],
      "endpoint": "POST https://www.googleapis.com/drive/v3/files/fileId/watch",
      "param": [
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "acknowledgeAbuse",
          "value": "boolean",
          "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. This is only applicable when alt=media. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. If not specified, the response includes a default set of fields specific to this method. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsAllDrives",
          "value": "boolean",
          "description": "Whether the requesting application supports both My Drives and shared drives. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsTeamDrives",
          "value": "boolean",
          "description": "Warning: This item is deprecated. Deprecated use supportsAllDrives instead. (Default: false)",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file",
        "https://www.googleapis.com/auth/drive.readonly",
        "https://www.googleapis.com/auth/drive.metadata.readonly",
        "https://www.googleapis.com/auth/drive.appdata",
        "https://www.googleapis.com/auth/drive.metadata",
        "https://www.googleapis.com/auth/drive.photos.readonly"
      ],
      "res_type": "Files",
      "method": "watch",
      "source_link": "https://developers.google.com/drive/api/v3/reference/files/watch"
    },
    {
      "type": "overview",
      "properties": [
        {
          "property_name": "kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#permission\".",
          "notes": ""
        },
        {
          "property_name": "id",
          "value": "string",
          "description": "The ID of this permission. This is a unique identifier for the grantee, and is published in User resources as permissionId. IDs should be treated as opaque values.",
          "notes": ""
        },
        {
          "property_name": "type",
          "value": "string",
          "description": "The type of the grantee. Valid values are: user group domain anyone When creating a permission, if type is user or group, you must provide an emailAddress for the user or group. When type is domain, you must provide a domain. There isn't extra information required for a anyone type.",
          "notes": "writable"
        },
        {
          "property_name": "emailAddress",
          "value": "string",
          "description": "The email address of the user or group to which this permission refers.",
          "notes": "writable"
        },
        {
          "property_name": "domain",
          "value": "string",
          "description": "The domain to which this permission refers.",
          "notes": "writable"
        },
        {
          "property_name": "role",
          "value": "string",
          "description": "The role granted by this permission. While new values may be supported in the future, the following are currently allowed: owner organizer fileOrganizer writer commenter reader",
          "notes": "writable"
        },
        {
          "property_name": "allowFileDiscovery",
          "value": "boolean",
          "description": "Whether the permission allows the file to be discovered through search. This is only applicable for permissions of type domain or anyone.",
          "notes": "writable"
        },
        {
          "property_name": "displayName",
          "value": "string",
          "description": "The \"pretty\" name of the value of the permission. The following is a list of examples for each type of permission: user - User's full name, as defined for their Google account, such as \"Joe Smith.\" group - Name of the Google Group, such as \"The Company Administrators.\" domain - String domain name, such as \"thecompany.com.\" anyone - No displayName is present.",
          "notes": ""
        },
        {
          "property_name": "photoLink",
          "value": "string",
          "description": "A link to the user's profile photo, if available.",
          "notes": ""
        },
        {
          "property_name": "expirationTime",
          "value": "datetime",
          "description": "The time at which this permission will expire (RFC 3339 date-time). Expiration times have the following restrictions: They can only be set on user and group permissions The time must be in the future The time cannot be more than a year in the future",
          "notes": "writable"
        },
        {
          "property_name": "teamDrivePermissionDetails[]",
          "value": "list",
          "description": "Warning: This item is deprecated.Deprecated - use permissionDetails instead.",
          "notes": ""
        },
        {
          "property_name": "teamDrivePermissionDetails[].teamDrivePermissionType",
          "value": "string",
          "description": "Warning: This item is deprecated.Deprecated - use permissionDetails/permissionType instead.",
          "notes": ""
        },
        {
          "property_name": "teamDrivePermissionDetails[].role",
          "value": "string",
          "description": "Warning: This item is deprecated.Deprecated - use permissionDetails/role instead.",
          "notes": ""
        },
        {
          "property_name": "teamDrivePermissionDetails[].inheritedFrom",
          "value": "string",
          "description": "Warning: This item is deprecated.Deprecated - use permissionDetails/inheritedFrom instead.",
          "notes": ""
        },
        {
          "property_name": "teamDrivePermissionDetails[].inherited",
          "value": "boolean",
          "description": "Warning: This item is deprecated.Deprecated - use permissionDetails/inherited instead.",
          "notes": ""
        },
        {
          "property_name": "deleted",
          "value": "boolean",
          "description": "Whether the account associated with this permission has been deleted. This field only pertains to user and group permissions.",
          "notes": ""
        },
        {
          "property_name": "permissionDetails[]",
          "value": "list",
          "description": "Details of whether the permissions on this shared drive item are inherited or directly on this item. This is an output-only field which is present only for shared drive items.",
          "notes": ""
        },
        {
          "property_name": "permissionDetails[].permissionType",
          "value": "string",
          "description": "The permission type for this user. While new values may be added in future, the following are currently possible: file member",
          "notes": ""
        },
        {
          "property_name": "permissionDetails[].role",
          "value": "string",
          "description": "The primary role for this user. While new values may be added in the future, the following are currently possible: organizer fileOrganizer writer commenter reader",
          "notes": ""
        },
        {
          "property_name": "permissionDetails[].inheritedFrom",
          "value": "string",
          "description": "The ID of the item from which this permission is inherited. This is an output-only field.",
          "notes": ""
        },
        {
          "property_name": "permissionDetails[].inherited",
          "value": "boolean",
          "description": "Whether this permission is inherited. This field is always populated. This is an output-only field.",
          "notes": ""
        },
        {
          "property_name": "view",
          "value": "string",
          "description": "Indicates the view for this permission. Only populated for permissions that belong to a view. published is the only supported value.",
          "notes": "writable"
        }
      ],
      "res_description": "A permission for a file. A permission grants a user, group, domain or the world access to a file or a folder hierarchy.",
      "res_example": "{ \"kind\": \"drive#permission\", \"id\": string, \"type\": string, \"emailAddress\": string, \"domain\": string, \"role\": string, \"view\": string, \"allowFileDiscovery\": boolean, \"displayName\": string, \"photoLink\": string, \"expirationTime\": datetime, \"teamDrivePermissionDetails\": [ { \"teamDrivePermissionType\": string, \"role\": string, \"inheritedFrom\": string, \"inherited\": boolean } ], \"permissionDetails\": [ { \"permissionType\": string, \"role\": string, \"inheritedFrom\": string, \"inherited\": boolean } ], \"deleted\": boolean}",
      "res_type": "Permissions",
      "source_link": "https://developers.google.com/drive/api/v3/reference/permissions"
    },
    {
      "endpoint": "POST https://www.googleapis.com/drive/v3/files/fileId/permissions",
      "param": [
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file or shared drive.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "emailMessage",
          "value": "string",
          "description": "A plain text custom message to include in the notification email.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "enforceSingleParent",
          "value": "boolean",
          "description": "Warning: This item is deprecated. Deprecated. See moveToNewOwnersRoot for details. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. If not specified, the response includes a default set of fields specific to this method. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "moveToNewOwnersRoot",
          "value": "boolean",
          "description": "This parameter will only take effect if the item is not in a shared drive and the request is attempting to transfer the ownership of the item. If set to true, the item will be moved to the new owner's My Drive root folder and all prior parents removed. If set to false, parents are not changed. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "sendNotificationEmail",
          "value": "boolean",
          "description": "Whether to send a notification email when sharing to users or groups. This defaults to true for users and groups, and is not allowed for other requests. It must not be disabled for ownership transfers.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsAllDrives",
          "value": "boolean",
          "description": "Whether the requesting application supports both My Drives and shared drives. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsTeamDrives",
          "value": "boolean",
          "description": "Warning: This item is deprecated. Deprecated use supportsAllDrives instead. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "transferOwnership",
          "value": "boolean",
          "description": "Whether to transfer ownership to the specified user and downgrade the current owner to a writer. This parameter is required as an acknowledgement of the side effect. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "useDomainAdminAccess",
          "value": "boolean",
          "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs. (Default: false)",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file"
      ],
      "res_type": "Permissions",
      "method": "create",
      "source_link": "https://developers.google.com/drive/api/v3/reference/permissions/create"
    },
    {
      "endpoint": "DELETE https://www.googleapis.com/drive/v3/files/fileId/permissions/permissionId",
      "param": [
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file or shared drive.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "permissionId",
          "value": "string",
          "description": "The ID of the permission.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "supportsAllDrives",
          "value": "boolean",
          "description": "Whether the requesting application supports both My Drives and shared drives. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsTeamDrives",
          "value": "boolean",
          "description": "Warning: This item is deprecated. Deprecated use supportsAllDrives instead. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "useDomainAdminAccess",
          "value": "boolean",
          "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs. (Default: false)",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file"
      ],
      "res_type": "Permissions",
      "method": "delete",
      "source_link": "https://developers.google.com/drive/api/v3/reference/permissions/delete"
    },
    {
      "endpoint": "GET https://www.googleapis.com/drive/v3/files/fileId/permissions/permissionId",
      "param": [
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "permissionId",
          "value": "string",
          "description": "The ID of the permission.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. If not specified, the response includes a default set of fields specific to this method. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsAllDrives",
          "value": "boolean",
          "description": "Whether the requesting application supports both My Drives and shared drives. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsTeamDrives",
          "value": "boolean",
          "description": "Warning: This item is deprecated. Deprecated use supportsAllDrives instead. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "useDomainAdminAccess",
          "value": "boolean",
          "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs. (Default: false)",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file",
        "https://www.googleapis.com/auth/drive.readonly",
        "https://www.googleapis.com/auth/drive.metadata.readonly",
        "https://www.googleapis.com/auth/drive.metadata",
        "https://www.googleapis.com/auth/drive.photos.readonly"
      ],
      "res_type": "Permissions",
      "method": "get",
      "source_link": "https://developers.google.com/drive/api/v3/reference/permissions/get"
    },
    {
      "prop_res_body": [
        {
          "property_name": "kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#permissionList\".",
          "notes": ""
        },
        {
          "property_name": "permissions[]",
          "value": "list",
          "description": "The list of permissions. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "notes": ""
        },
        {
          "property_name": "nextPageToken",
          "value": "string",
          "description": "The page token for the next page of permissions. This field will be absent if the end of the permissions list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "notes": ""
        }
      ],
      "endpoint": "GET https://www.googleapis.com/drive/v3/files/fileId/permissions",
      "param": [
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file or shared drive.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. If not specified, the response includes a default set of fields specific to this method. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "includePermissionsForView",
          "value": "string",
          "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "pageSize",
          "value": "integer",
          "description": "The maximum number of permissions to return per page. When not set for files in a shared drive, at most 100 results will be returned. When not set for files that are not in a shared drive, the entire list will be returned. Acceptable values are 1 to 100, inclusive.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "pageToken",
          "value": "string",
          "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsAllDrives",
          "value": "boolean",
          "description": "Whether the requesting application supports both My Drives and shared drives. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsTeamDrives",
          "value": "boolean",
          "description": "Warning: This item is deprecated. Deprecated use supportsAllDrives instead. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "useDomainAdminAccess",
          "value": "boolean",
          "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs. (Default: false)",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file",
        "https://www.googleapis.com/auth/drive.readonly",
        "https://www.googleapis.com/auth/drive.metadata.readonly",
        "https://www.googleapis.com/auth/drive.metadata",
        "https://www.googleapis.com/auth/drive.photos.readonly"
      ],
      "res_type": "Permissions",
      "method": "list",
      "source_link": "https://developers.google.com/drive/api/v3/reference/permissions/list"
    },
    {
      "endpoint": "PATCH https://www.googleapis.com/drive/v3/files/fileId/permissions/permissionId",
      "param": [
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file or shared drive.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "permissionId",
          "value": "string",
          "description": "The ID of the permission.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. If not specified, the response includes a default set of fields specific to this method. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "removeExpiration",
          "value": "boolean",
          "description": "Whether to remove the expiration date. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsAllDrives",
          "value": "boolean",
          "description": "Whether the requesting application supports both My Drives and shared drives. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "supportsTeamDrives",
          "value": "boolean",
          "description": "Warning: This item is deprecated. Deprecated use supportsAllDrives instead. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "transferOwnership",
          "value": "boolean",
          "description": "Whether to transfer ownership to the specified user and downgrade the current owner to a writer. This parameter is required as an acknowledgement of the side effect. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "useDomainAdminAccess",
          "value": "boolean",
          "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs. (Default: false)",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file"
      ],
      "res_type": "Permissions",
      "method": "update",
      "source_link": "https://developers.google.com/drive/api/v3/reference/permissions/update"
    },
    {
      "type": "overview",
      "properties": [
        {
          "property_name": "kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#reply\".",
          "notes": ""
        },
        {
          "property_name": "id",
          "value": "string",
          "description": "The ID of the reply.",
          "notes": ""
        },
        {
          "property_name": "createdTime",
          "value": "datetime",
          "description": "The time at which the reply was created (RFC 3339 date-time).",
          "notes": ""
        },
        {
          "property_name": "modifiedTime",
          "value": "datetime",
          "description": "The last time the reply was modified (RFC 3339 date-time).",
          "notes": ""
        },
        {
          "property_name": "author",
          "value": "nested object",
          "description": "The author of the reply. The author's email address and permission ID will not be populated.",
          "notes": ""
        },
        {
          "property_name": "author.kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#user\".",
          "notes": ""
        },
        {
          "property_name": "author.displayName",
          "value": "string",
          "description": "A plain text displayable name for this user.",
          "notes": ""
        },
        {
          "property_name": "author.photoLink",
          "value": "string",
          "description": "A link to the user's profile photo, if available.",
          "notes": ""
        },
        {
          "property_name": "author.me",
          "value": "boolean",
          "description": "Whether this user is the requesting user.",
          "notes": ""
        },
        {
          "property_name": "author.permissionId",
          "value": "string",
          "description": "The user's ID as visible in Permission resources.",
          "notes": ""
        },
        {
          "property_name": "author.emailAddress",
          "value": "string",
          "description": "The email address of the user. This may not be present in certain contexts if the user has not made their email address visible to the requester.",
          "notes": ""
        },
        {
          "property_name": "htmlContent",
          "value": "string",
          "description": "The content of the reply with HTML formatting.",
          "notes": ""
        },
        {
          "property_name": "content",
          "value": "string",
          "description": "The plain text content of the reply. This field is used for setting the content, while htmlContent should be displayed. This is required on creates if no action is specified.",
          "notes": "writable"
        },
        {
          "property_name": "deleted",
          "value": "boolean",
          "description": "Whether the reply has been deleted. A deleted reply has no content.",
          "notes": ""
        },
        {
          "property_name": "action",
          "value": "string",
          "description": "The action the reply performed to the parent comment. Valid values are: resolve reopen",
          "notes": "writable"
        }
      ],
      "res_description": "A reply to a comment on a file.",
      "res_example": "{ \"kind\": \"drive#reply\", \"id\": string, \"createdTime\": datetime, \"modifiedTime\": datetime, \"author\": { \"kind\": \"drive#user\", \"displayName\": string, \"photoLink\": string, \"me\": boolean, \"permissionId\": string, \"emailAddress\": string }, \"htmlContent\": string, \"content\": string, \"deleted\": boolean, \"action\": string}",
      "res_type": "Replies",
      "source_link": "https://developers.google.com/drive/api/v3/reference/replies"
    },
    {
      "endpoint": "POST https://www.googleapis.com/drive/v3/files/fileId/comments/commentId/replies",
      "param": [
        {
          "parameter_name": "commentId",
          "value": "string",
          "description": "The ID of the comment.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Required query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file"
      ],
      "res_type": "Replies",
      "method": "create",
      "source_link": "https://developers.google.com/drive/api/v3/reference/replies/create"
    },
    {
      "endpoint": "DELETE https://www.googleapis.com/drive/v3/files/fileId/comments/commentId/replies/replyId",
      "param": [
        {
          "parameter_name": "commentId",
          "value": "string",
          "description": "The ID of the comment.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "replyId",
          "value": "string",
          "description": "The ID of the reply.",
          "state": "Path parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file"
      ],
      "res_type": "Replies",
      "method": "delete",
      "source_link": "https://developers.google.com/drive/api/v3/reference/replies/delete"
    },
    {
      "endpoint": "GET https://www.googleapis.com/drive/v3/files/fileId/comments/commentId/replies/replyId",
      "param": [
        {
          "parameter_name": "commentId",
          "value": "string",
          "description": "The ID of the comment.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "replyId",
          "value": "string",
          "description": "The ID of the reply.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Required query parameters"
        },
        {
          "parameter_name": "includeDeleted",
          "value": "boolean",
          "description": "Whether to return deleted replies. Deleted replies will not include their original content. (Default: false)",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.readonly",
        "https://www.googleapis.com/auth/drive.file"
      ],
      "res_type": "Replies",
      "method": "get",
      "source_link": "https://developers.google.com/drive/api/v3/reference/replies/get"
    },
    {
      "prop_res_body": [
        {
          "property_name": "kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#replyList\".",
          "notes": ""
        },
        {
          "property_name": "nextPageToken",
          "value": "string",
          "description": "The page token for the next page of replies. This will be absent if the end of the replies list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "notes": ""
        },
        {
          "property_name": "replies[]",
          "value": "list",
          "description": "The list of replies. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "notes": ""
        }
      ],
      "endpoint": "GET https://www.googleapis.com/drive/v3/files/fileId/comments/commentId/replies",
      "param": [
        {
          "parameter_name": "commentId",
          "value": "string",
          "description": "The ID of the comment.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Required query parameters"
        },
        {
          "parameter_name": "includeDeleted",
          "value": "boolean",
          "description": "Whether to include deleted replies. Deleted replies will not include their original content. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "pageSize",
          "value": "integer",
          "description": "The maximum number of replies to return per page. Acceptable values are 1 to 100, inclusive. (Default: 20)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "pageToken",
          "value": "string",
          "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response.",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.readonly",
        "https://www.googleapis.com/auth/drive.file"
      ],
      "res_type": "Replies",
      "method": "list",
      "source_link": "https://developers.google.com/drive/api/v3/reference/replies/list"
    },
    {
      "endpoint": "PATCH https://www.googleapis.com/drive/v3/files/fileId/comments/commentId/replies/replyId",
      "param": [
        {
          "parameter_name": "commentId",
          "value": "string",
          "description": "The ID of the comment.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "replyId",
          "value": "string",
          "description": "The ID of the reply.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Required query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file"
      ],
      "res_type": "Replies",
      "method": "update",
      "source_link": "https://developers.google.com/drive/api/v3/reference/replies/update"
    },
    {
      "type": "overview",
      "properties": [
        {
          "property_name": "kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#revision\".",
          "notes": ""
        },
        {
          "property_name": "id",
          "value": "string",
          "description": "The ID of the revision.",
          "notes": ""
        },
        {
          "property_name": "mimeType",
          "value": "string",
          "description": "The MIME type of the revision.",
          "notes": ""
        },
        {
          "property_name": "modifiedTime",
          "value": "datetime",
          "description": "The last time the revision was modified (RFC 3339 date-time).",
          "notes": ""
        },
        {
          "property_name": "keepForever",
          "value": "boolean",
          "description": "Whether to keep this revision forever, even if it is no longer the head revision. If not set, the revision will be automatically purged 30 days after newer content is uploaded. This can be set on a maximum of 200 revisions for a file. This field is only applicable to files with binary content in Drive.",
          "notes": "writable"
        },
        {
          "property_name": "published",
          "value": "boolean",
          "description": "Whether this revision is published. This is only applicable to Docs Editors files.",
          "notes": "writable"
        },
        {
          "property_name": "publishAuto",
          "value": "boolean",
          "description": "Whether subsequent revisions will be automatically republished. This is only applicable to Docs Editors files.",
          "notes": "writable"
        },
        {
          "property_name": "publishedOutsideDomain",
          "value": "boolean",
          "description": "Whether this revision is published outside the domain. This is only applicable to Docs Editors files.",
          "notes": "writable"
        },
        {
          "property_name": "lastModifyingUser",
          "value": "nested object",
          "description": "The last user to modify this revision.",
          "notes": ""
        },
        {
          "property_name": "lastModifyingUser.kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#user\".",
          "notes": ""
        },
        {
          "property_name": "lastModifyingUser.displayName",
          "value": "string",
          "description": "A plain text displayable name for this user.",
          "notes": ""
        },
        {
          "property_name": "lastModifyingUser.photoLink",
          "value": "string",
          "description": "A link to the user's profile photo, if available.",
          "notes": ""
        },
        {
          "property_name": "lastModifyingUser.me",
          "value": "boolean",
          "description": "Whether this user is the requesting user.",
          "notes": ""
        },
        {
          "property_name": "lastModifyingUser.permissionId",
          "value": "string",
          "description": "The user's ID as visible in Permission resources.",
          "notes": ""
        },
        {
          "property_name": "lastModifyingUser.emailAddress",
          "value": "string",
          "description": "The email address of the user. This may not be present in certain contexts if the user has not made their email address visible to the requester.",
          "notes": ""
        },
        {
          "property_name": "originalFilename",
          "value": "string",
          "description": "The original filename used to create this revision. This is only applicable to files with binary content in Drive.",
          "notes": ""
        },
        {
          "property_name": "md5Checksum",
          "value": "string",
          "description": "The MD5 checksum of the revision's content. This is only applicable to files with binary content in Drive.",
          "notes": ""
        },
        {
          "property_name": "size",
          "value": "long",
          "description": "The size of the revision's content in bytes. This is only applicable to files with binary content in Drive.",
          "notes": ""
        },
        {
          "property_name": "exportLinks",
          "value": "object",
          "description": "Links for exporting Docs Editors files to specific formats.",
          "notes": ""
        },
        {
          "property_name": "exportLinks.(key)",
          "value": "string",
          "description": "A mapping from export format to URL",
          "notes": ""
        },
        {
          "property_name": "publishedLink",
          "value": "string",
          "description": "A link to the published revision. This is only populated for Google Sites files.",
          "notes": ""
        }
      ],
      "res_description": "The metadata for a revision to a file.This field is only applicable to files with binary content in Drive.",
      "res_example": "{ \"kind\": \"drive#revision\", \"id\": string, \"mimeType\": string, \"modifiedTime\": datetime, \"keepForever\": boolean, \"published\": boolean, \"publishedLink\": string, \"publishAuto\": boolean, \"publishedOutsideDomain\": boolean, \"lastModifyingUser\": { \"kind\": \"drive#user\", \"displayName\": string, \"photoLink\": string, \"me\": boolean, \"permissionId\": string, \"emailAddress\": string }, \"originalFilename\": string, \"md5Checksum\": string, \"size\": long, \"exportLinks\": { (key): string }}",
      "res_type": "Revisions",
      "source_link": "https://developers.google.com/drive/api/v3/reference/revisions"
    },
    {
      "endpoint": "DELETE https://www.googleapis.com/drive/v3/files/fileId/revisions/revisionId",
      "param": [
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "revisionId",
          "value": "string",
          "description": "The ID of the revision.",
          "state": "Path parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file",
        "https://www.googleapis.com/auth/drive.appdata"
      ],
      "res_type": "Revisions",
      "method": "delete",
      "source_link": "https://developers.google.com/drive/api/v3/reference/revisions/delete"
    },
    {
      "endpoint": "GET https://www.googleapis.com/drive/v3/files/fileId/revisions/revisionId",
      "param": [
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "revisionId",
          "value": "string",
          "description": "The ID of the revision.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "acknowledgeAbuse",
          "value": "boolean",
          "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. This is only applicable when alt=media. (Default: false)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. If not specified, the response includes a default set of fields specific to this method. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file",
        "https://www.googleapis.com/auth/drive.readonly",
        "https://www.googleapis.com/auth/drive.metadata.readonly",
        "https://www.googleapis.com/auth/drive.appdata",
        "https://www.googleapis.com/auth/drive.metadata",
        "https://www.googleapis.com/auth/drive.photos.readonly"
      ],
      "res_type": "Revisions",
      "method": "get",
      "source_link": "https://developers.google.com/drive/api/v3/reference/revisions/get"
    },
    {
      "prop_res_body": [
        {
          "property_name": "kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#revisionList\".",
          "notes": ""
        },
        {
          "property_name": "revisions[]",
          "value": "list",
          "description": "The list of revisions. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "notes": ""
        },
        {
          "property_name": "nextPageToken",
          "value": "string",
          "description": "The page token for the next page of revisions. This will be absent if the end of the revisions list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "notes": ""
        }
      ],
      "endpoint": "GET https://www.googleapis.com/drive/v3/files/fileId/revisions",
      "param": [
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. If not specified, the response includes a default set of fields specific to this method. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "pageSize",
          "value": "integer",
          "description": "The maximum number of revisions to return per page. Acceptable values are 1 to 1000, inclusive. (Default: 200)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "pageToken",
          "value": "string",
          "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response.",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file",
        "https://www.googleapis.com/auth/drive.readonly",
        "https://www.googleapis.com/auth/drive.metadata.readonly",
        "https://www.googleapis.com/auth/drive.appdata",
        "https://www.googleapis.com/auth/drive.metadata",
        "https://www.googleapis.com/auth/drive.photos.readonly"
      ],
      "res_type": "Revisions",
      "method": "list",
      "source_link": "https://developers.google.com/drive/api/v3/reference/revisions/list"
    },
    {
      "endpoint": "PATCH https://www.googleapis.com/drive/v3/files/fileId/revisions/revisionId",
      "param": [
        {
          "parameter_name": "fileId",
          "value": "string",
          "description": "The ID of the file.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "revisionId",
          "value": "string",
          "description": "The ID of the revision.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "fields",
          "value": "string",
          "description": "The paths of the fields you want included in the response. If not specified, the response includes a default set of fields specific to this method. For development you can use the special value * to return all fields, but you'll achieve greater performance by only selecting the fields you need. For more information, see Return specific fields for a file.",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.file",
        "https://www.googleapis.com/auth/drive.appdata"
      ],
      "res_type": "Revisions",
      "method": "update",
      "source_link": "https://developers.google.com/drive/api/v3/reference/revisions/update"
    },
    {
      "type": "overview",
      "properties": [
        {
          "property_name": "kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#drive\".",
          "notes": ""
        },
        {
          "property_name": "id",
          "value": "string",
          "description": "The ID of this shared drive which is also the ID of the top level folder of this shared drive.",
          "notes": ""
        },
        {
          "property_name": "name",
          "value": "string",
          "description": "The name of this shared drive.",
          "notes": "writable"
        },
        {
          "property_name": "themeId",
          "value": "string",
          "description": "The ID of the theme from which the background image and color will be set. The set of possible driveThemes can be retrieved from a drive.about.get response. When not specified on a drive.drives.create request, a random theme is chosen from which the background image and color are set. This is a write-only field; it can only be set on requests that don't set colorRgb or backgroundImageFile.",
          "notes": "writable"
        },
        {
          "property_name": "colorRgb",
          "value": "string",
          "description": "The color of this shared drive as an RGB hex string. It can only be set on a drive.drives.update request that does not set themeId.",
          "notes": "writable"
        },
        {
          "property_name": "backgroundImageFile",
          "value": "object",
          "description": "An image file and cropping parameters from which a background image for this shared drive is set. This is a write only field; it can only be set on drive.drives.update requests that don't set themeId. When specified, all fields of the backgroundImageFile must be set.",
          "notes": "writable"
        },
        {
          "property_name": "backgroundImageFile.id",
          "value": "string",
          "description": "The ID of an image file in Google Drive to use for the background image.",
          "notes": ""
        },
        {
          "property_name": "backgroundImageFile.xCoordinate",
          "value": "float",
          "description": "The X coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the horizontal distance from the left side of the entire image to the left side of the cropping area divided by the width of the entire image.",
          "notes": ""
        },
        {
          "property_name": "backgroundImageFile.yCoordinate",
          "value": "float",
          "description": "The Y coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the vertical distance from the top side of the entire image to the top side of the cropping area divided by the height of the entire image.",
          "notes": ""
        },
        {
          "property_name": "backgroundImageFile.width",
          "value": "float",
          "description": "The width of the cropped image in the closed range of 0 to 1. This value represents the width of the cropped image divided by the width of the entire image. The height is computed by applying a width to height aspect ratio of 80 to 9. The resulting image must be at least 1280 pixels wide and 144 pixels high.",
          "notes": ""
        },
        {
          "property_name": "backgroundImageLink",
          "value": "string",
          "description": "A short-lived link to this shared drive's background image.",
          "notes": ""
        },
        {
          "property_name": "capabilities",
          "value": "object",
          "description": "Capabilities the current user has on this shared drive.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canAddChildren",
          "value": "boolean",
          "description": "Whether the current user can add children to folders in this shared drive.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canChangeCopyRequiresWriterPermissionRestriction",
          "value": "boolean",
          "description": "Whether the current user can change the copyRequiresWriterPermission restriction of this shared drive.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canChangeDomainUsersOnlyRestriction",
          "value": "boolean",
          "description": "Whether the current user can change the domainUsersOnly restriction of this shared drive.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canChangeDriveBackground",
          "value": "boolean",
          "description": "Whether the current user can change the background of this shared drive.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canChangeDriveMembersOnlyRestriction",
          "value": "boolean",
          "description": "Whether the current user can change the driveMembersOnly restriction of this shared drive.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canComment",
          "value": "boolean",
          "description": "Whether the current user can comment on files in this shared drive.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canCopy",
          "value": "boolean",
          "description": "Whether the current user can copy files in this shared drive.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canDeleteChildren",
          "value": "boolean",
          "description": "Whether the current user can delete children from folders in this shared drive.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canDeleteDrive",
          "value": "boolean",
          "description": "Whether the current user can delete this shared drive. Attempting to delete the shared drive may still fail if there are untrashed items inside the shared drive.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canDownload",
          "value": "boolean",
          "description": "Whether the current user can download files in this shared drive.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canEdit",
          "value": "boolean",
          "description": "Whether the current user can edit files in this shared drive",
          "notes": ""
        },
        {
          "property_name": "capabilities.canListChildren",
          "value": "boolean",
          "description": "Whether the current user can list the children of folders in this shared drive.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canManageMembers",
          "value": "boolean",
          "description": "Whether the current user can add members to this shared drive or remove them or change their role.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canReadRevisions",
          "value": "boolean",
          "description": "Whether the current user can read the revisions resource of files in this shared drive.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canRename",
          "value": "boolean",
          "description": "Whether the current user can rename files or folders in this shared drive.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canRenameDrive",
          "value": "boolean",
          "description": "Whether the current user can rename this shared drive.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canShare",
          "value": "boolean",
          "description": "Whether the current user can share files or folders in this shared drive.",
          "notes": ""
        },
        {
          "property_name": "capabilities.canTrashChildren",
          "value": "boolean",
          "description": "Whether the current user can trash children from folders in this shared drive.",
          "notes": ""
        },
        {
          "property_name": "createdTime",
          "value": "datetime",
          "description": "The time at which the shared drive was created (RFC 3339 date-time).",
          "notes": ""
        },
        {
          "property_name": "hidden",
          "value": "boolean",
          "description": "Whether the shared drive is hidden from default view.",
          "notes": "writable"
        },
        {
          "property_name": "restrictions",
          "value": "object",
          "description": "A set of restrictions that apply to this shared drive or items inside this shared drive.",
          "notes": "writable"
        },
        {
          "property_name": "restrictions.adminManagedRestrictions",
          "value": "boolean",
          "description": "Whether administrative privileges on this shared drive are required to modify restrictions.",
          "notes": ""
        },
        {
          "property_name": "restrictions.copyRequiresWriterPermission",
          "value": "boolean",
          "description": "Whether the options to copy, print, or download files inside this shared drive, should be disabled for readers and commenters. When this restriction is set to true, it will override the similarly named field to true for any file inside this shared drive.",
          "notes": ""
        },
        {
          "property_name": "restrictions.domainUsersOnly",
          "value": "boolean",
          "description": "Whether access to this shared drive and items inside this shared drive is restricted to users of the domain to which this shared drive belongs. This restriction may be overridden by other sharing policies controlled outside of this shared drive.",
          "notes": ""
        },
        {
          "property_name": "restrictions.driveMembersOnly",
          "value": "boolean",
          "description": "Whether access to items inside this shared drive is restricted to its members.",
          "notes": ""
        }
      ],
      "res_description": "Representation of a shared drive.",
      "res_example": "{ \"kind\": \"drive#drive\", \"id\": string, \"name\": string, \"themeId\": string, \"colorRgb\": string, \"backgroundImageFile\": { \"id\": string, \"xCoordinate\": float, \"yCoordinate\": float, \"width\": float }, \"backgroundImageLink\": string, \"capabilities\": { \"canAddChildren\": boolean, \"canChangeCopyRequiresWriterPermissionRestriction\": boolean, \"canChangeDomainUsersOnlyRestriction\": boolean, \"canChangeDriveBackground\": boolean, \"canChangeDriveMembersOnlyRestriction\": boolean, \"canComment\": boolean, \"canCopy\": boolean, \"canDeleteChildren\": boolean, \"canDeleteDrive\": boolean, \"canDownload\": boolean, \"canEdit\": boolean, \"canListChildren\": boolean, \"canManageMembers\": boolean, \"canReadRevisions\": boolean, \"canRename\": boolean, \"canRenameDrive\": boolean, \"canShare\": boolean, \"canTrashChildren\": boolean }, \"createdTime\": datetime, \"hidden\": boolean, \"restrictions\": { \"adminManagedRestrictions\": boolean, \"copyRequiresWriterPermission\": boolean, \"domainUsersOnly\": boolean, \"driveMembersOnly\": boolean }}",
      "res_type": "Drives",
      "source_link": "https://developers.google.com/drive/api/v3/reference/drives"
    },
    {
      "endpoint": "POST https://www.googleapis.com/drive/v3/drives",
      "param": [
        {
          "parameter_name": "requestId",
          "value": "string",
          "description": "An ID, such as a random UUID, which uniquely identifies this user's request for idempotent creation of a shared drive. A repeated request by the same user and with the same request ID will avoid creating duplicates by attempting to create the same shared drive. If the shared drive already exists a 409 error will be returned.",
          "state": "Required query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive"
      ],
      "res_type": "Drives",
      "method": "create",
      "source_link": "https://developers.google.com/drive/api/v3/reference/drives/create"
    },
    {
      "endpoint": "DELETE https://www.googleapis.com/drive/v3/drives/driveId",
      "param": [
        {
          "parameter_name": "driveId",
          "value": "string",
          "description": "The ID of the shared drive.",
          "state": "Path parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive"
      ],
      "res_type": "Drives",
      "method": "delete",
      "source_link": "https://developers.google.com/drive/api/v3/reference/drives/delete"
    },
    {
      "endpoint": "GET https://www.googleapis.com/drive/v3/drives/driveId",
      "param": [
        {
          "parameter_name": "driveId",
          "value": "string",
          "description": "The ID of the shared drive.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "useDomainAdminAccess",
          "value": "boolean",
          "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the shared drive belongs. (Default: false)",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.readonly"
      ],
      "res_type": "Drives",
      "method": "get",
      "source_link": "https://developers.google.com/drive/api/v3/reference/drives/get"
    },
    {
      "endpoint": "POST https://www.googleapis.com/drive/v3/drives/driveId/hide",
      "param": [
        {
          "parameter_name": "driveId",
          "value": "string",
          "description": "The ID of the shared drive.",
          "state": "Path parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive"
      ],
      "res_type": "Drives",
      "method": "hide",
      "source_link": "https://developers.google.com/drive/api/v3/reference/drives/hide"
    },
    {
      "prop_res_body": [
        {
          "property_name": "kind",
          "value": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#driveList\".",
          "notes": ""
        },
        {
          "property_name": "nextPageToken",
          "value": "string",
          "description": "The page token for the next page of shared drives. This will be absent if the end of the list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "notes": ""
        },
        {
          "property_name": "drives[]",
          "value": "list",
          "description": "The list of shared drives. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "notes": ""
        }
      ],
      "endpoint": "GET https://www.googleapis.com/drive/v3/drives",
      "param": [
        {
          "parameter_name": "pageSize",
          "value": "integer",
          "description": "Maximum number of shared drives to return. Acceptable values are 1 to 100, inclusive. (Default: 10)",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "pageToken",
          "value": "string",
          "description": "Page token for shared drives.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "q",
          "value": "string",
          "description": "Query string for searching shared drives. See the \"Search for shared drives\" guide for supported syntax.",
          "state": "Optional query parameters"
        },
        {
          "parameter_name": "useDomainAdminAccess",
          "value": "boolean",
          "description": "Issue the request as a domain administrator; if set to true, then all shared drives of the domain in which the requester is an administrator are returned. (Default: false)",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/drive.readonly"
      ],
      "res_type": "Drives",
      "method": "list",
      "source_link": "https://developers.google.com/drive/api/v3/reference/drives/list"
    },
    {
      "endpoint": "POST https://www.googleapis.com/drive/v3/drives/driveId/unhide",
      "param": [
        {
          "parameter_name": "driveId",
          "value": "string",
          "description": "The ID of the shared drive.",
          "state": "Path parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive"
      ],
      "res_type": "Drives",
      "method": "unhide",
      "source_link": "https://developers.google.com/drive/api/v3/reference/drives/unhide"
    },
    {
      "endpoint": "PATCH https://www.googleapis.com/drive/v3/drives/driveId",
      "param": [
        {
          "parameter_name": "driveId",
          "value": "string",
          "description": "The ID of the shared drive.",
          "state": "Path parameters"
        },
        {
          "parameter_name": "useDomainAdminAccess",
          "value": "boolean",
          "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the shared drive belongs. (Default: false)",
          "state": "Optional query parameters"
        }
      ],
      "scope": [
        "https://www.googleapis.com/auth/drive"
      ],
      "res_type": "Drives",
      "method": "update",
      "source_link": "https://developers.google.com/drive/api/v3/reference/drives/update"
    }
  ]
}