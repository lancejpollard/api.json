{
  "type": "Call",
  "attrs": {
    "account_sid": {
      "type": "sid<AC>",
      "desc": "The SID of the Account that created this Call resource."
    },
    "annotation": {
      "type": "string",
      "desc": "The annotation provided for the call"
    },
    "answered_by": {
      "type": "string",
      "desc": "Either human or machine if this call was initiated with answering machine detection. Empty otherwise."
    },
    "api_version": {
      "type": "string",
      "desc": "The API version used to create the call."
    },
    "caller_name": {
      "type": "string",
      "desc": "The caller's name if this call was an incoming call to a phone number with caller ID Lookup enabled. Otherwise, empty."
    },
    "date_created": {
      "type": "date_time<rfc2822>",
      "desc": "The date and time in GMT that this resource was created specified in RFC 2822 format."
    },
    "date_updated": {
      "type": "date_time<rfc2822>",
      "desc": "The date and time in GMT that this resource was last updated, specified in RFC 2822 format."
    },
    "direction": {
      "type": "string?",
      "desc": "A string describing the direction of the call. Can be: inbound for inbound calls, outbound-api for calls initiated via the REST API or outbound-dial for calls initiated by a <Dial> verb. Using Elastic SIP Trunking, the values can be trunking-terminating for outgoing calls from your communications infrastructure to the PSTN or trunking-originating for incoming calls to your communications infrastructure from the PSTN."
    },
    "duration": {
      "type": "string",
      "desc": "The length of the call in seconds. This value is empty for busy, failed, unanswered, or ongoing calls."
    },
    "end_time": {
      "type": "date_time<rfc2822>",
      "desc": "The time the call ended, given as GMT in RFC 2822 format. Empty if the call did not complete successfully."
    },
    "forwarded_from": {
      "type": "string",
      "desc": "The forwarding phone number if this call was an incoming call forwarded from another number (depends on carrier supporting forwarding). Otherwise, empty."
    },
    "from": {
      "type": "string",
      "desc": "The phone number, SIP address, Client identifier or SIM SID that made this call. Phone numbers are in E.164 format (e.g., +16175551212). SIP addresses are formatted as name@company.com. Client identifiers are formatted client:name. SIM SIDs are formatted as sim:sid."
    },
    "from_formatted": {
      "type": "string",
      "desc": "The calling phone number, SIP address, or Client identifier formatted for display."
    },
    "group_sid": {
      "type": "sid<GP>",
      "desc": "The Group SID associated with this call. If no Group is associated with the call, the field is empty."
    },
    "parent_call_sid": {
      "type": "sid<CA>",
      "desc": "The SID that identifies the call that created this leg."
    },
    "phone_number_sid": {
      "type": "sid<PN>",
      "desc": "If the call was inbound, this is the SID of the IncomingPhoneNumber resource that received the call. If the call was outbound, it is the SID of the OutgoingCallerId resource from which the call was placed."
    },
    "price": {
      "type": "string?",
      "desc": "The charge for this call, in the currency associated with the account. Populated after the call is completed. May not be immediately available."
    },
    "price_unit": {
      "type": "currency",
      "desc": "The currency in which Price is measured, in ISO 4127 format (e.g., USD, EUR, JPY). Always capitalized for calls."
    },
    "sid": {
      "type": "sid<CA>",
      "desc": "The unique string that that we created to identify this Call resource."
    },
    "start_time": {
      "type": "date_time<rfc2822>",
      "desc": "The start time of the call, given as GMT in RFC 2822 format. Empty if the call has not yet been dialed."
    },
    "status": {
      "type": "enum:status",
      "desc": "The status of this call. Can be: queued, ringing, in-progress, canceled, completed, failed, busy or no-answer. See Call Status Values below for more information."
    },
    "subresource_uris": {
      "type": "uri_map",
      "desc": "A list of subresources available to this call, identified by their URIs relative to https://api.twilio.com."
    },
    "to": {
      "type": "string",
      "desc": "The phone number, SIP address, Client identifier or SIM SID that received this call. Phone numbers are in E.164 format (e.g., +16175551212). SIP addresses are formatted as name@company.com. Client identifiers are formatted client:name. SIM SIDs are formatted as sim:sid."
    },
    "to_formatted": {
      "type": "string",
      "desc": "The phone number, SIP address or Client identifier that received this call. Formatted for display."
    },
    "trunk_sid": {
      "type": "sid<TR>",
      "desc": "The unique identifier of the trunk resource that was used for this call. The field is empty if the call was not made using a SIP trunk or if the call is not terminated."
    },
    "uri": {
      "type": "uri",
      "desc": "The URI of this resource, relative to https://api.twilio.com."
    },
    "queue_time": {
      "type": "string",
      "desc": "The wait time in milliseconds before the call is placed."
    }
  },
  "actions": [
    {
      "title": "Create a Call resource",
      "method": "post",
      "url": "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Calls.json",
      "desc": "Calls can be made via the REST API to phone numbers, SIP addresses, or client identifiers. To place a new outbound call, make an HTTP POST request to your account's Call resource.",
      "req": {
        "AccountSid": {
          "type": "sid<AC>",
          "desc": "The SID of the Account that will create the resource.",
          "required": false
        },
        "To": {
          "type": "endpoint",
          "desc": "The phone number, SIP address, or client identifier to call.",
          "required": true
        },
        "From": {
          "type": "endpoint",
          "desc": "The phone number or client identifier to use as the caller id. If using a phone number, it must be a Twilio number or a Verified outgoing caller id for your account. If the to parameter is a phone number, From must also be a phone number.",
          "required": true
        },
        "Method": {
          "type": "http_method",
          "desc": "The HTTP method we should use when calling the url parameter's value. Can be: GET or POST and the default is POST. If an application_sid parameter is present, this parameter is ignored.",
          "required": false
        },
        "FallbackUrl": {
          "type": "url",
          "desc": "The URL that we call using the fallback_method if an error occurs when requesting or executing the TwiML at url. If an application_sid parameter is present, this parameter is ignored.",
          "required": false
        },
        "FallbackMethod": {
          "type": "http_method",
          "desc": "The HTTP method that we should use to request the fallback_url. Can be: GET or POST and the default is POST. If an application_sid parameter is present, this parameter is ignored.",
          "required": false
        },
        "StatusCallback": {
          "type": "url",
          "desc": "The URL we should call using the status_callback_method to send status information to your application. If no status_callback_event is specified, we will send the completed status. If an application_sid parameter is present, this parameter is ignored. URLs must contain a valid hostname (underscores are not permitted).",
          "required": false
        },
        "StatusCallbackEvent": {
          "type": "string[]",
          "desc": "The call progress events that we will send to the status_callback URL. Can be: initiated, ringing, answered, and completed. If no event is specified, we send the completed status. If you want to receive multiple events, specify each one in a separate status_callback_event parameter. See the code sample for monitoring call progress. If an application_sid is present, this parameter is ignored.",
          "required": false
        },
        "StatusCallbackMethod": {
          "type": "http_method",
          "desc": "The HTTP method we should use when calling the status_callback URL. Can be: GET or POST and the default is POST. If an application_sid parameter is present, this parameter is ignored.",
          "required": false
        },
        "SendDigits": {
          "type": "string",
          "desc": "A string of keys to dial after connecting to the number, maximum of 32 digits. Valid digits in the string include: any digit (0-9), '#', '*' and 'w', to insert a half second pause. For example, if you connected to a company phone number and wanted to pause for one second, and then dial extension 1234 followed by the pound key, the value of this parameter would be ww1234#. Remember to URL-encode this string, since the '#' character has special meaning in a URL. If both SendDigits and MachineDetection parameters are provided, then MachineDetection will be ignored.",
          "required": false
        },
        "Timeout": {
          "type": "integer",
          "desc": "The integer number of seconds that we should allow the phone to ring before assuming there is no answer. The default is 60 seconds and the maximum is 600 seconds. For some call flows, we will add a 5-second buffer to the timeout value you provide. For this reason, a timeout value of 10 seconds could result in an actual timeout closer to 15 seconds. You can set this to a short time, such as 15 seconds, to hang up before reaching an answering machine or voicemail.",
          "required": false
        },
        "Record": {
          "type": "boolean",
          "desc": "Whether to record the call. Can be true to record the phone call, or false to not. The default is false. The recording_url is sent to the status_callback URL.",
          "required": false
        },
        "RecordingChannels": {
          "type": "string",
          "desc": "The number of channels in the final recording. Can be: mono or dual. The default is mono. mono records both legs of the call in a single channel of the recording file. dual records each leg to a separate channel of the recording file. The first channel of a dual-channel recording contains the parent call and the second channel contains the child call.",
          "required": false
        },
        "RecordingStatusCallback": {
          "type": "string",
          "desc": "The URL that we call when the recording is available to be accessed.",
          "required": false
        },
        "RecordingStatusCallbackMethod": {
          "type": "http_method",
          "desc": "The HTTP method we should use when calling the recording_status_callback URL. Can be: GET or POST and the default is POST.",
          "required": false
        },
        "SipAuthUsername": {
          "type": "string",
          "desc": "The username used to authenticate the caller making a SIP call.",
          "required": false
        },
        "SipAuthPassword": {
          "type": "string",
          "desc": "The password required to authenticate the user account specified in sip_auth_username.",
          "required": false
        },
        "MachineDetection": {
          "type": "string",
          "desc": "Whether to detect if a human, answering machine, or fax has picked up the call. Can be: Enable or DetectMessageEnd. Use Enable if you would like us to return AnsweredBy as soon as the called party is identified. Use DetectMessageEnd, if you would like to leave a message on an answering machine. If send_digits is provided, this parameter is ignored. For more information, see Answering Machine Detection.",
          "required": false
        },
        "MachineDetectionTimeout": {
          "type": "integer",
          "desc": "The number of seconds that we should attempt to detect an answering machine before timing out and sending a voice request with AnsweredBy of unknown. The default timeout is 30 seconds.",
          "required": false
        },
        "RecordingStatusCallbackEvent": {
          "type": "string[]",
          "desc": "The recording status events that will trigger calls to the URL specified in recording_status_callback. Can be: in-progress, completed and absent. Defaults to completed. Separate  multiple values with a space.",
          "required": false
        },
        "Trim": {
          "type": "string",
          "desc": "Whether to trim any leading and trailing silence from the recording. Can be: trim-silence or do-not-trim and the default is trim-silence.",
          "required": false
        },
        "CallerId": {
          "type": "string",
          "desc": "The phone number, SIP address, or Client identifier that made this call. Phone numbers are in E.164 format (e.g., +16175551212). SIP addresses are formatted as name@company.com.",
          "required": false
        },
        "MachineDetectionSpeechThreshold": {
          "type": "integer",
          "desc": "The number of milliseconds that is used as the measuring stick for the length of the speech activity, where durations lower than this value will be interpreted as a human and longer than this value as a machine. Possible Values: 1000-6000. Default: 2400.",
          "required": false
        },
        "MachineDetectionSpeechEndThreshold": {
          "type": "integer",
          "desc": "The number of milliseconds of silence after speech activity at which point the speech activity is considered complete. Possible Values: 500-5000. Default: 1200.",
          "required": false
        },
        "MachineDetectionSilenceTimeout": {
          "type": "integer",
          "desc": "The number of milliseconds of initial silence after which an unknown AnsweredBy result will be returned. Possible Values: 2000-10000. Default: 5000.",
          "required": false
        },
        "AsyncAmd": {
          "type": "string",
          "desc": "Select whether to perform answering machine detection in the background. Default, blocks the execution of the call until Answering Machine Detection is completed. Can be: true or false.",
          "required": false
        },
        "AsyncAmdStatusCallback": {
          "type": "url",
          "desc": "The URL that we should call using the async_amd_status_callback_method to notify customer application whether the call was answered by human, machine or fax.",
          "required": false
        },
        "AsyncAmdStatusCallbackMethod": {
          "type": "http_method",
          "desc": "The HTTP method we should use when calling the async_amd_status_callback URL. Can be: GET or POST and the default is POST.",
          "required": false
        },
        "Byoc": {
          "type": "sid<BY>",
          "desc": "The SID of a BYOC (Bring Your Own Carrier) trunk to route this call with. Note that byoc is only meaningful when to is a phone number; it will otherwise be ignored. (Beta)",
          "required": false
        },
        "CallReason": {
          "type": "string",
          "desc": "The Reason for the outgoing call. Use call_reason to specify the purpose of the call that is presented on the called party's phone. (Beta).",
          "required": false
        },
        "Url": {
          "type": "url",
          "desc": "The absolute URL that returns the TwiML instructions for the call. We will call this URL using the method when the call connects. For more information, see the Url Parameter section in Making Calls.",
          "required": false
        },
        "Twiml": {
          "type": "twiml",
          "desc": "TwiML instructions for the call Twilio will use without fetching Twiml from url parameter. If both twiml and url are provided then twiml parameter will be ignored.",
          "required": false
        },
        "ApplicationSid": {
          "type": "sid<AP>",
          "desc": "The SID of the Application resource that will handle the call, if the call will be handled by an application.",
          "required": false
        }
      }
    },
    {
      "title": "Fetch a Call resource",
      "method": "get",
      "url": "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Calls/{Sid}.json",
      "desc": "This API call returns the Call resource of an individual call, identified by its CallSid. This resource is eventually consistent.",
      "req": {
        "AccountSid": {
          "type": "sid<AC>",
          "desc": "The SID of the Account that created the Call resource(s) to fetch.",
          "required": false
        },
        "Sid": {
          "type": "sid<CA>",
          "desc": "The SID of the Call resource to fetch.",
          "required": false
        }
      }
    },
    {
      "title": "Read multiple Call resources",
      "method": "get",
      "url": "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Calls.json",
      "desc": "Return a list of phone calls made to and from an account, identified by its AccountSid.\nThe following query string parameters allow you to filter and limit the list returned to you by the REST API. Note: these parameters are case-sensitive.",
      "req": {
        "AccountSid": {
          "type": "sid<AC>",
          "desc": "The SID of the Account that created the Call resource(s) to read.",
          "required": false
        },
        "To": {
          "type": "phone_number",
          "desc": "Only show calls made to this phone number, SIP address, Client identifier or SIM SID.",
          "required": false
        },
        "From": {
          "type": "phone_number",
          "desc": "Only include calls from this phone number, SIP address, Client identifier or SIM SID.",
          "required": false
        },
        "ParentCallSid": {
          "type": "sid<CA>",
          "desc": "Only include calls spawned by calls with this SID.",
          "required": false
        },
        "Status": {
          "type": "enum:status",
          "desc": "The status of the calls to include. Can be: queued, ringing, in-progress, canceled, completed, failed, busy, or no-answer.",
          "required": false
        },
        "StartTime": {
          "type": "date_time_inequality<iso8601>",
          "desc": "Only include calls that started on this date. Specify a date as YYYY-MM-DD in GMT, for example: 2009-07-06, to read only calls that started on this date. You can also specify an inequality, such as StartTime<=YYYY-MM-DD, to read calls that started on or before midnight of this date, and StartTime>=YYYY-MM-DD to read calls that started on or after midnight of this date.",
          "required": false
        },
        "EndTime": {
          "type": "date_time_inequality<iso8601>",
          "desc": "Only include calls that ended on this date. Specify a date as YYYY-MM-DD in GMT, for example: 2009-07-06, to read only calls that ended on this date. You can also specify an inequality, such as EndTime<=YYYY-MM-DD, to read calls that ended on or before midnight of this date, and EndTime>=YYYY-MM-DD to read calls that ended on or after midnight of this date.",
          "required": false
        }
      }
    },
    {
      "title": "Update a Call resource",
      "method": "post",
      "url": "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Calls/{Sid}.json",
      "desc": "Updating a Call allows you to modify an active call.\nReal-time call modification allows you to interrupt an in-progress call and terminate it or have it begin processing TwiML from either a new URL or from the TwiML provided with modification. Call modification is useful for any application where you want to change the behavior of a running call asynchronously, e.g., hold music, call queues, transferring calls, or forcing a hangup.\nBy POSTing to a specific Call instance, you can redirect a call that is in progress or you can terminate a call.",
      "req": {
        "AccountSid": {
          "type": "sid<AC>",
          "desc": "The SID of the Account that created the Call resource(s) to update.",
          "required": false
        },
        "Sid": {
          "type": "sid<CA>",
          "desc": "The Twilio-provided string that uniquely identifies the Call resource to update",
          "required": false
        },
        "Url": {
          "type": "url",
          "desc": "The absolute URL that returns the TwiML instructions for the call. We will call this URL using the method when the call connects. For more information, see the Url Parameter section in Making Calls.",
          "required": false
        },
        "Method": {
          "type": "http_method",
          "desc": "The HTTP method we should use when calling the url. Can be: GET or POST and the default is POST. If an application_sid parameter is present, this parameter is ignored.",
          "required": false
        },
        "Status": {
          "type": "enum:update_status",
          "desc": "The new status of the resource. Can be: canceled or completed. Specifying canceled will attempt to hang up calls that are queued or ringing; however, it will not affect calls already in progress. Specifying completed will attempt to hang up a call even if it's already in progress.",
          "required": false
        },
        "FallbackUrl": {
          "type": "url",
          "desc": "The URL that we call using the fallback_method if an error occurs when requesting or executing the TwiML at url. If an application_sid parameter is present, this parameter is ignored.",
          "required": false
        },
        "FallbackMethod": {
          "type": "http_method",
          "desc": "The HTTP method that we should use to request the fallback_url. Can be: GET or POST and the default is POST. If an application_sid parameter is present, this parameter is ignored.",
          "required": false
        },
        "StatusCallback": {
          "type": "url",
          "desc": "The URL we should call using the status_callback_method to send status information to your application. If no status_callback_event is specified, we will send the completed status. If an application_sid parameter is present, this parameter is ignored. URLs must contain a valid hostname (underscores are not permitted).",
          "required": false
        },
        "StatusCallbackMethod": {
          "type": "http_method",
          "desc": "The HTTP method we should use when requesting the status_callback URL. Can be: GET or POST and the default is POST. If an application_sid parameter is present, this parameter is ignored.",
          "required": false
        },
        "Twiml": {
          "type": "twiml",
          "desc": "TwiML instructions for the call Twilio will use without fetching Twiml from url. Twiml and url parameters are mutually exclusive",
          "required": false
        }
      }
    },
    {
      "title": "Delete a Call resource",
      "method": "delete",
      "url": "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Calls/{Sid}.json",
      "desc": "This will delete a call record from your account. Once the record is deleted, it will no longer appear in the API and Account Portal logs.\nIf successful, this DELETE returns an HTTP 204 (No Content) with no body.",
      "req": {
        "AccountSid": {
          "type": "sid<AC>",
          "desc": "The SID of the Account that created the Call resource(s) to delete.",
          "required": false
        },
        "Sid": {
          "type": "sid<CA>",
          "desc": "The Twilio-provided Call SID that uniquely identifies the Call resource to delete",
          "required": false
        }
      }
    }
  ]
}
