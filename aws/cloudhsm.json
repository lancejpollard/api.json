[
  {
    "title": "CopyBackupToRegion",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "BackupId": {
        "type": "String",
        "pattern": "backup-[2-7a-zA-Z]{11,16}",
        "required": "Yes",
        "desc": "The ID of the backup that will be copied to the destination region."
      },
      "DestinationRegion": {
        "type": "String",
        "pattern": "[a-z]{2}(-(gov))?-(east|west|north|south|central){1,2}-\\d",
        "required": "Yes",
        "desc": "The AWS region that will contain your copied CloudHSM cluster backup."
      },
      "TagList": {
        "type": "Array of Tag objects",
        "required": "No",
        "desc": "Tags to apply to the destination backup during creation. If you specify tags, only these tags will be applied to the destination backup. If you do not specify tags, the service copies tags from the source backup to the destination backup."
      }
    },
    "res": {
      "DestinationBackup": {
        "type": "DestinationBackup object",
        "desc": "Information on the backup that will be copied to the destination region, including CreateTimestamp, SourceBackup, SourceCluster, and Source Region. CreateTimestamp of the destination backup will be the same as that of the source backup. You will need to use the sourceBackupID returned in this operation to use the DescribeBackups operation on the backup that will be copied to the destination region."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "The request was denied due to request throttling."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "CloudHsmAccessDeniedException": {
        "statusCode": "400",
        "desc": "The request was rejected because the requester does not have permission to perform the requested operation."
      },
      "CloudHsmInternalFailureException": {
        "statusCode": "500",
        "desc": "The request was rejected because of an AWS CloudHSM internal failure. The request can be retried."
      },
      "CloudHsmInvalidRequestException": {
        "statusCode": "400",
        "desc": "The request was rejected because it is not a valid request."
      },
      "CloudHsmResourceNotFoundException": {
        "statusCode": "400",
        "desc": "The request was rejected because it refers to a resource that cannot be found."
      },
      "CloudHsmServiceException": {
        "statusCode": "400",
        "desc": "The request was rejected because an error occurred."
      },
      "CloudHsmTagException": {
        "statusCode": "400",
        "desc": "The request was rejected because of a tagging failure. Verify the tag conditions in all applicable policies, and then retry the request."
      }
    }
  },
  {
    "title": "CreateCluster",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "BackupRetentionPolicy": {
        "type": "BackupRetentionPolicy object",
        "required": "No",
        "desc": "A policy that defines how the service retains backups."
      },
      "HsmType": {
        "type": "String",
        "pattern": "(hsm1\\.medium)",
        "required": "Yes",
        "desc": "The type of HSM to use in the cluster. Currently the only allowed value is hsm1.medium."
      },
      "SourceBackupId": {
        "type": "String",
        "pattern": "backup-[2-7a-zA-Z]{11,16}",
        "required": "No",
        "desc": "The identifier (ID) of the cluster backup to restore. Use this value to restore the cluster from a backup instead of creating a new cluster. To find the backup ID, use DescribeBackups."
      },
      "SubnetIds": {
        "type": "Array of strings",
        "pattern": "subnet-[0-9a-fA-F]{8,17}",
        "required": "Yes",
        "desc": "The identifiers (IDs) of the subnets where you are creating the cluster. You must specify at least one subnet. If you specify multiple subnets, they must meet the following criteria:"
      },
      "TagList": {
        "type": "Array of Tag objects",
        "required": "No",
        "desc": "Tags to apply to the CloudHSM cluster during creation."
      }
    },
    "res": {
      "Cluster": {
        "type": "Cluster object",
        "desc": "Information about the cluster that was created."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "The request was denied due to request throttling."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "CloudHsmAccessDeniedException": {
        "statusCode": "400",
        "desc": "The request was rejected because the requester does not have permission to perform the requested operation."
      },
      "CloudHsmInternalFailureException": {
        "statusCode": "500",
        "desc": "The request was rejected because of an AWS CloudHSM internal failure. The request can be retried."
      },
      "CloudHsmInvalidRequestException": {
        "statusCode": "400",
        "desc": "The request was rejected because it is not a valid request."
      },
      "CloudHsmResourceNotFoundException": {
        "statusCode": "400",
        "desc": "The request was rejected because it refers to a resource that cannot be found."
      },
      "CloudHsmServiceException": {
        "statusCode": "400",
        "desc": "The request was rejected because an error occurred."
      },
      "CloudHsmTagException": {
        "statusCode": "400",
        "desc": "The request was rejected because of a tagging failure. Verify the tag conditions in all applicable policies, and then retry the request."
      }
    }
  },
  {
    "title": "CreateHsm",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "AvailabilityZone": {
        "type": "String",
        "pattern": "[a-z]{2}(-(gov))?-(east|west|north|south|central){1,2}-\\d[a-z]",
        "required": "Yes",
        "desc": "The Availability Zone where you are creating the HSM. To find the cluster's Availability Zones, use DescribeClusters."
      },
      "ClusterId": {
        "type": "String",
        "pattern": "cluster-[2-7a-zA-Z]{11,16}",
        "required": "Yes",
        "desc": "The identifier (ID) of the HSM's cluster. To find the cluster ID, use DescribeClusters."
      },
      "IpAddress": {
        "type": "String",
        "pattern": "\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}",
        "required": "No",
        "desc": "The HSM's IP address. If you specify an IP address, use an available address from the subnet that maps to the Availability Zone where you are creating the HSM. If you don't specify an IP address, one is chosen for you from that subnet."
      }
    },
    "res": {
      "Hsm": {
        "type": "Hsm object",
        "desc": "Information about the HSM that was created."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "The request was denied due to request throttling."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "CloudHsmAccessDeniedException": {
        "statusCode": "400",
        "desc": "The request was rejected because the requester does not have permission to perform the requested operation."
      },
      "CloudHsmInternalFailureException": {
        "statusCode": "500",
        "desc": "The request was rejected because of an AWS CloudHSM internal failure. The request can be retried."
      },
      "CloudHsmInvalidRequestException": {
        "statusCode": "400",
        "desc": "The request was rejected because it is not a valid request."
      },
      "CloudHsmResourceNotFoundException": {
        "statusCode": "400",
        "desc": "The request was rejected because it refers to a resource that cannot be found."
      },
      "CloudHsmServiceException": {
        "statusCode": "400",
        "desc": "The request was rejected because an error occurred."
      }
    }
  },
  {
    "title": "DeleteBackup",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "BackupId": {
        "type": "String",
        "pattern": "backup-[2-7a-zA-Z]{11,16}",
        "required": "Yes",
        "desc": "The ID of the backup to be deleted. To find the ID of a backup, use the DescribeBackups operation."
      }
    },
    "res": {
      "Backup": {
        "type": "Backup object",
        "desc": "Information on the Backup object deleted."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "The request was denied due to request throttling."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "CloudHsmAccessDeniedException": {
        "statusCode": "400",
        "desc": "The request was rejected because the requester does not have permission to perform the requested operation."
      },
      "CloudHsmInternalFailureException": {
        "statusCode": "500",
        "desc": "The request was rejected because of an AWS CloudHSM internal failure. The request can be retried."
      },
      "CloudHsmInvalidRequestException": {
        "statusCode": "400",
        "desc": "The request was rejected because it is not a valid request."
      },
      "CloudHsmResourceNotFoundException": {
        "statusCode": "400",
        "desc": "The request was rejected because it refers to a resource that cannot be found."
      },
      "CloudHsmServiceException": {
        "statusCode": "400",
        "desc": "The request was rejected because an error occurred."
      }
    }
  },
  {
    "title": "DeleteCluster",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "ClusterId": {
        "type": "String",
        "pattern": "cluster-[2-7a-zA-Z]{11,16}",
        "required": "Yes",
        "desc": "The identifier (ID) of the cluster that you are deleting. To find the cluster ID, use DescribeClusters."
      }
    },
    "res": {
      "Cluster": {
        "type": "Cluster object",
        "desc": "Information about the cluster that was deleted."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "The request was denied due to request throttling."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "CloudHsmAccessDeniedException": {
        "statusCode": "400",
        "desc": "The request was rejected because the requester does not have permission to perform the requested operation."
      },
      "CloudHsmInternalFailureException": {
        "statusCode": "500",
        "desc": "The request was rejected because of an AWS CloudHSM internal failure. The request can be retried."
      },
      "CloudHsmInvalidRequestException": {
        "statusCode": "400",
        "desc": "The request was rejected because it is not a valid request."
      },
      "CloudHsmResourceNotFoundException": {
        "statusCode": "400",
        "desc": "The request was rejected because it refers to a resource that cannot be found."
      },
      "CloudHsmServiceException": {
        "statusCode": "400",
        "desc": "The request was rejected because an error occurred."
      },
      "CloudHsmTagException": {
        "statusCode": "400",
        "desc": "The request was rejected because of a tagging failure. Verify the tag conditions in all applicable policies, and then retry the request."
      }
    }
  },
  {
    "title": "DeleteHsm",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "ClusterId": {
        "type": "String",
        "pattern": "cluster-[2-7a-zA-Z]{11,16}",
        "required": "Yes",
        "desc": "The identifier (ID) of the cluster that contains the HSM that you are deleting."
      },
      "EniId": {
        "type": "String",
        "pattern": "eni-[0-9a-fA-F]{8,17}",
        "required": "No",
        "desc": "The identifier (ID) of the elastic network interface (ENI) of the HSM that you are deleting."
      },
      "EniIp": {
        "type": "String",
        "pattern": "\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}",
        "required": "No",
        "desc": "The IP address of the elastic network interface (ENI) of the HSM that you are deleting."
      },
      "HsmId": {
        "type": "String",
        "pattern": "hsm-[2-7a-zA-Z]{11,16}",
        "required": "No",
        "desc": "The identifier (ID) of the HSM that you are deleting."
      }
    },
    "res": {
      "HsmId": {
        "type": "String",
        "pattern": "hsm-[2-7a-zA-Z]{11,16}",
        "desc": "The identifier (ID) of the HSM that was deleted."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "The request was denied due to request throttling."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "CloudHsmAccessDeniedException": {
        "statusCode": "400",
        "desc": "The request was rejected because the requester does not have permission to perform the requested operation."
      },
      "CloudHsmInternalFailureException": {
        "statusCode": "500",
        "desc": "The request was rejected because of an AWS CloudHSM internal failure. The request can be retried."
      },
      "CloudHsmInvalidRequestException": {
        "statusCode": "400",
        "desc": "The request was rejected because it is not a valid request."
      },
      "CloudHsmResourceNotFoundException": {
        "statusCode": "400",
        "desc": "The request was rejected because it refers to a resource that cannot be found."
      },
      "CloudHsmServiceException": {
        "statusCode": "400",
        "desc": "The request was rejected because an error occurred."
      }
    }
  },
  {
    "title": "DescribeBackups",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "Filters": {
        "type": "String to array of strings map",
        "required": "No",
        "desc": "One or more filters to limit the items returned in the response. Use the backupIds filter to return only the specified backups. Specify backups by their backup identifier (ID). Use the sourceBackupIds filter to return only the backups created from a source backup. The sourceBackupID of a source backup is returned by the CopyBackupToRegion operation. Use the clusterIds filter to return only the backups for the specified clusters. Specify clusters by their cluster identifier (ID). Use the states filter to return only backups that match the specified state. Use the neverExpires filter to return backups filtered by the value in the neverExpires parameter. True returns all backups exempt from the backup retention policy. False returns all backups with a backup retention policy defined at the cluster."
      },
      "MaxResults": {
        "type": "Integer",
        "required": "No",
        "desc": "The maximum number of backups to return in the response. When there are more backups than the number you specify, the response contains a NextToken value."
      },
      "NextToken": {
        "type": "String",
        "length": "Maximum length of 256.",
        "pattern": ".*",
        "required": "No",
        "desc": "The NextToken value that you received in the previous response. Use this value to get more backups."
      },
      "SortAscending": {
        "type": "Boolean",
        "required": "No",
        "desc": "Designates whether or not to sort the return backups by ascending chronological order of generation."
      }
    },
    "res": {
      "Backups": {
        "type": "Array of Backup objects",
        "desc": "A list of backups."
      },
      "NextToken": {
        "type": "String",
        "length": "Maximum length of 256.",
        "pattern": ".*",
        "desc": "An opaque string that indicates that the response contains only a subset of backups. Use this value in a subsequent DescribeBackups request to get more backups."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "The request was denied due to request throttling."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "CloudHsmAccessDeniedException": {
        "statusCode": "400",
        "desc": "The request was rejected because the requester does not have permission to perform the requested operation."
      },
      "CloudHsmInternalFailureException": {
        "statusCode": "500",
        "desc": "The request was rejected because of an AWS CloudHSM internal failure. The request can be retried."
      },
      "CloudHsmInvalidRequestException": {
        "statusCode": "400",
        "desc": "The request was rejected because it is not a valid request."
      },
      "CloudHsmResourceNotFoundException": {
        "statusCode": "400",
        "desc": "The request was rejected because it refers to a resource that cannot be found."
      },
      "CloudHsmServiceException": {
        "statusCode": "400",
        "desc": "The request was rejected because an error occurred."
      },
      "CloudHsmTagException": {
        "statusCode": "400",
        "desc": "The request was rejected because of a tagging failure. Verify the tag conditions in all applicable policies, and then retry the request."
      }
    }
  },
  {
    "title": "DescribeClusters",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "Filters": {
        "type": "String to array of strings map",
        "required": "No",
        "desc": "One or more filters to limit the items returned in the response. Use the clusterIds filter to return only the specified clusters. Specify clusters by their cluster identifier (ID). Use the vpcIds filter to return only the clusters in the specified virtual private clouds (VPCs). Specify VPCs by their VPC identifier (ID). Use the states filter to return only clusters that match the specified state."
      },
      "MaxResults": {
        "type": "Integer",
        "required": "No",
        "desc": "The maximum number of clusters to return in the response. When there are more clusters than the number you specify, the response contains a NextToken value."
      },
      "NextToken": {
        "type": "String",
        "length": "Maximum length of 256.",
        "pattern": ".*",
        "required": "No",
        "desc": "The NextToken value that you received in the previous response. Use this value to get more clusters."
      }
    },
    "res": {
      "Clusters": {
        "type": "Array of Cluster objects",
        "desc": "A list of clusters."
      },
      "NextToken": {
        "type": "String",
        "length": "Maximum length of 256.",
        "pattern": ".*",
        "desc": "An opaque string that indicates that the response contains only a subset of clusters. Use this value in a subsequent DescribeClusters request to get more clusters."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "The request was denied due to request throttling."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "CloudHsmAccessDeniedException": {
        "statusCode": "400",
        "desc": "The request was rejected because the requester does not have permission to perform the requested operation."
      },
      "CloudHsmInternalFailureException": {
        "statusCode": "500",
        "desc": "The request was rejected because of an AWS CloudHSM internal failure. The request can be retried."
      },
      "CloudHsmInvalidRequestException": {
        "statusCode": "400",
        "desc": "The request was rejected because it is not a valid request."
      },
      "CloudHsmServiceException": {
        "statusCode": "400",
        "desc": "The request was rejected because an error occurred."
      },
      "CloudHsmTagException": {
        "statusCode": "400",
        "desc": "The request was rejected because of a tagging failure. Verify the tag conditions in all applicable policies, and then retry the request."
      }
    }
  },
  {
    "title": "InitializeCluster",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "ClusterId": {
        "type": "String",
        "pattern": "cluster-[2-7a-zA-Z]{11,16}",
        "required": "Yes",
        "desc": "The identifier (ID) of the cluster that you are claiming. To find the cluster ID, use DescribeClusters."
      },
      "SignedCert": {
        "type": "String",
        "length": "Maximum length of 5000.",
        "pattern": "[a-zA-Z0-9+-/=\\s]*",
        "required": "Yes",
        "desc": "The cluster certificate issued (signed) by your issuing certificate authority (CA). The certificate must be in PEM format and can contain a maximum of 5000 characters."
      },
      "TrustAnchor": {
        "type": "String",
        "length": "Maximum length of 5000.",
        "pattern": "[a-zA-Z0-9+-/=\\s]*",
        "required": "Yes",
        "desc": "The issuing certificate of the issuing certificate authority (CA) that issued (signed) the cluster certificate. You must use a self-signed certificate. The certificate used to sign the HSM CSR must be directly available, and thus must be the root certificate. The certificate must be in PEM format and can contain a maximum of 5000 characters."
      }
    },
    "res": {
      "State": {
        "type": "String",
        "desc": "The cluster's state."
      },
      "StateMessage": {
        "type": "String",
        "length": "Maximum length of 300.",
        "pattern": ".*",
        "desc": "A description of the cluster's state."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "The request was denied due to request throttling."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "CloudHsmAccessDeniedException": {
        "statusCode": "400",
        "desc": "The request was rejected because the requester does not have permission to perform the requested operation."
      },
      "CloudHsmInternalFailureException": {
        "statusCode": "500",
        "desc": "The request was rejected because of an AWS CloudHSM internal failure. The request can be retried."
      },
      "CloudHsmInvalidRequestException": {
        "statusCode": "400",
        "desc": "The request was rejected because it is not a valid request."
      },
      "CloudHsmResourceNotFoundException": {
        "statusCode": "400",
        "desc": "The request was rejected because it refers to a resource that cannot be found."
      },
      "CloudHsmServiceException": {
        "statusCode": "400",
        "desc": "The request was rejected because an error occurred."
      }
    }
  },
  {
    "title": "ListTags",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "MaxResults": {
        "type": "Integer",
        "required": "No",
        "desc": "The maximum number of tags to return in the response. When there are more tags than the number you specify, the response contains a NextToken value."
      },
      "NextToken": {
        "type": "String",
        "length": "Maximum length of 256.",
        "pattern": ".*",
        "required": "No",
        "desc": "The NextToken value that you received in the previous response. Use this value to get more tags."
      },
      "ResourceId": {
        "type": "String",
        "pattern": "(?:cluster|backup)-[2-7a-zA-Z]{11,16}",
        "required": "Yes",
        "desc": "The cluster identifier (ID) for the cluster whose tags you are getting. To find the cluster ID, use DescribeClusters."
      }
    },
    "res": {
      "NextToken": {
        "type": "String",
        "length": "Maximum length of 256.",
        "pattern": ".*",
        "desc": "An opaque string that indicates that the response contains only a subset of tags. Use this value in a subsequent ListTags request to get more tags."
      },
      "TagList": {
        "type": "Array of Tag objects",
        "desc": "A list of tags."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "The request was denied due to request throttling."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "CloudHsmAccessDeniedException": {
        "statusCode": "400",
        "desc": "The request was rejected because the requester does not have permission to perform the requested operation."
      },
      "CloudHsmInternalFailureException": {
        "statusCode": "500",
        "desc": "The request was rejected because of an AWS CloudHSM internal failure. The request can be retried."
      },
      "CloudHsmInvalidRequestException": {
        "statusCode": "400",
        "desc": "The request was rejected because it is not a valid request."
      },
      "CloudHsmResourceNotFoundException": {
        "statusCode": "400",
        "desc": "The request was rejected because it refers to a resource that cannot be found."
      },
      "CloudHsmServiceException": {
        "statusCode": "400",
        "desc": "The request was rejected because an error occurred."
      },
      "CloudHsmTagException": {
        "statusCode": "400",
        "desc": "The request was rejected because of a tagging failure. Verify the tag conditions in all applicable policies, and then retry the request."
      }
    }
  },
  {
    "title": "ModifyBackupAttributes",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "BackupId": {
        "type": "String",
        "pattern": "backup-[2-7a-zA-Z]{11,16}",
        "required": "Yes",
        "desc": "The identifier (ID) of the backup to modify. To find the ID of a backup, use the DescribeBackups operation."
      },
      "NeverExpires": {
        "type": "Boolean",
        "required": "Yes",
        "desc": "Specifies whether the service should exempt a backup from the retention policy for the cluster. True exempts a backup from the retention policy. False means the service applies the backup retention policy defined at the cluster."
      }
    },
    "res": {
      "Backup": {
        "type": "Backup object",
        "desc": "Contains information about a backup of an AWS CloudHSM cluster. All backup objects contain the BackupId, BackupState, ClusterId, and CreateTimestamp parameters. Backups that were copied into a destination region additionally contain the CopyTimestamp, SourceBackup, SourceCluster, and SourceRegion parameters. A backup that is pending deletion will include the DeleteTimestamp parameter."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "The request was denied due to request throttling."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "CloudHsmAccessDeniedException": {
        "statusCode": "400",
        "desc": "The request was rejected because the requester does not have permission to perform the requested operation."
      },
      "CloudHsmInternalFailureException": {
        "statusCode": "500",
        "desc": "The request was rejected because of an AWS CloudHSM internal failure. The request can be retried."
      },
      "CloudHsmInvalidRequestException": {
        "statusCode": "400",
        "desc": "The request was rejected because it is not a valid request."
      },
      "CloudHsmResourceNotFoundException": {
        "statusCode": "400",
        "desc": "The request was rejected because it refers to a resource that cannot be found."
      },
      "CloudHsmServiceException": {
        "statusCode": "400",
        "desc": "The request was rejected because an error occurred."
      }
    }
  },
  {
    "title": "ModifyCluster",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "BackupRetentionPolicy": {
        "type": "BackupRetentionPolicy object",
        "required": "Yes",
        "desc": "A policy that defines how the service retains backups."
      },
      "ClusterId": {
        "type": "String",
        "pattern": "cluster-[2-7a-zA-Z]{11,16}",
        "required": "Yes",
        "desc": "The identifier (ID) of the cluster that you want to modify. To find the cluster ID, use DescribeClusters."
      }
    },
    "res": {
      "Cluster": {
        "type": "Cluster object",
        "desc": "Contains information about an AWS CloudHSM cluster."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "The request was denied due to request throttling."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "CloudHsmAccessDeniedException": {
        "statusCode": "400",
        "desc": "The request was rejected because the requester does not have permission to perform the requested operation."
      },
      "CloudHsmInternalFailureException": {
        "statusCode": "500",
        "desc": "The request was rejected because of an AWS CloudHSM internal failure. The request can be retried."
      },
      "CloudHsmInvalidRequestException": {
        "statusCode": "400",
        "desc": "The request was rejected because it is not a valid request."
      },
      "CloudHsmResourceNotFoundException": {
        "statusCode": "400",
        "desc": "The request was rejected because it refers to a resource that cannot be found."
      },
      "CloudHsmServiceException": {
        "statusCode": "400",
        "desc": "The request was rejected because an error occurred."
      }
    }
  },
  {
    "title": "RestoreBackup",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "BackupId": {
        "type": "String",
        "pattern": "backup-[2-7a-zA-Z]{11,16}",
        "required": "Yes",
        "desc": "The ID of the backup to be restored. To find the ID of a backup, use the DescribeBackups operation."
      }
    },
    "res": {
      "Backup": {
        "type": "Backup object",
        "desc": "Information on the Backup object created."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "The request was denied due to request throttling."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "CloudHsmAccessDeniedException": {
        "statusCode": "400",
        "desc": "The request was rejected because the requester does not have permission to perform the requested operation."
      },
      "CloudHsmInternalFailureException": {
        "statusCode": "500",
        "desc": "The request was rejected because of an AWS CloudHSM internal failure. The request can be retried."
      },
      "CloudHsmInvalidRequestException": {
        "statusCode": "400",
        "desc": "The request was rejected because it is not a valid request."
      },
      "CloudHsmResourceNotFoundException": {
        "statusCode": "400",
        "desc": "The request was rejected because it refers to a resource that cannot be found."
      },
      "CloudHsmServiceException": {
        "statusCode": "400",
        "desc": "The request was rejected because an error occurred."
      }
    }
  },
  {
    "title": "TagResource",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "ResourceId": {
        "type": "String",
        "pattern": "(?:cluster|backup)-[2-7a-zA-Z]{11,16}",
        "required": "Yes",
        "desc": "The cluster identifier (ID) for the cluster that you are tagging. To find the cluster ID, use DescribeClusters."
      },
      "TagList": {
        "type": "Array of Tag objects",
        "required": "Yes",
        "desc": "A list of one or more tags."
      }
    },
    "res": {},
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "The request was denied due to request throttling."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "CloudHsmAccessDeniedException": {
        "statusCode": "400",
        "desc": "The request was rejected because the requester does not have permission to perform the requested operation."
      },
      "CloudHsmInternalFailureException": {
        "statusCode": "500",
        "desc": "The request was rejected because of an AWS CloudHSM internal failure. The request can be retried."
      },
      "CloudHsmInvalidRequestException": {
        "statusCode": "400",
        "desc": "The request was rejected because it is not a valid request."
      },
      "CloudHsmResourceNotFoundException": {
        "statusCode": "400",
        "desc": "The request was rejected because it refers to a resource that cannot be found."
      },
      "CloudHsmServiceException": {
        "statusCode": "400",
        "desc": "The request was rejected because an error occurred."
      },
      "CloudHsmTagException": {
        "statusCode": "400",
        "desc": "The request was rejected because of a tagging failure. Verify the tag conditions in all applicable policies, and then retry the request."
      }
    }
  },
  {
    "title": "UntagResource",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "ResourceId": {
        "type": "String",
        "pattern": "(?:cluster|backup)-[2-7a-zA-Z]{11,16}",
        "required": "Yes",
        "desc": "The cluster identifier (ID) for the cluster whose tags you are removing. To find the cluster ID, use DescribeClusters."
      },
      "TagKeyList": {
        "type": "Array of strings",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "required": "Yes",
        "desc": "A list of one or more tag keys for the tags that you are removing. Specify only the tag keys, not the tag values."
      }
    },
    "res": {},
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "The request was denied due to request throttling."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "CloudHsmAccessDeniedException": {
        "statusCode": "400",
        "desc": "The request was rejected because the requester does not have permission to perform the requested operation."
      },
      "CloudHsmInternalFailureException": {
        "statusCode": "500",
        "desc": "The request was rejected because of an AWS CloudHSM internal failure. The request can be retried."
      },
      "CloudHsmInvalidRequestException": {
        "statusCode": "400",
        "desc": "The request was rejected because it is not a valid request."
      },
      "CloudHsmResourceNotFoundException": {
        "statusCode": "400",
        "desc": "The request was rejected because it refers to a resource that cannot be found."
      },
      "CloudHsmServiceException": {
        "statusCode": "400",
        "desc": "The request was rejected because an error occurred."
      },
      "CloudHsmTagException": {
        "statusCode": "400",
        "desc": "The request was rejected because of a tagging failure. Verify the tag conditions in all applicable policies, and then retry the request."
      }
    }
  }
]