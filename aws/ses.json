[
  {
    "title": "CloneReceiptRuleSet",
    "req": {
      "OriginalRuleSetName": {
        "desc": "The name of the rule set to clone.",
        "type": "String",
        "required": "yes"
      },
      "RuleSetName": {
        "desc": "The name of the rule set to create. The name must:",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "AlreadyExists": {
        "desc": "Indicates that a resource could not be created because of a naming conflict.",
        "type": "String"
      },
      "LimitExceeded": {
        "desc": "Indicates that a resource could not be created because of service limits. For a list of Amazon SES limits, see the Amazon SES Developer Guide.",
        "type": "String"
      },
      "RuleSetDoesNotExist": {
        "desc": "Indicates that the provided receipt rule set does not exist.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateConfigurationSet",
    "req": {
      "ConfigurationSet": {
        "desc": "A data structure that contains the name of the configuration set.",
        "type": "ConfigurationSet object",
        "required": "yes"
      }
    },
    "res": {
      "ConfigurationSetAlreadyExists": {
        "desc": "Indicates that the configuration set could not be created because of a naming conflict.",
        "type": "ConfigurationSet object"
      },
      "InvalidConfigurationSet": {
        "desc": "Indicates that the configuration set is invalid. See the error message for details.",
        "type": "ConfigurationSet object"
      },
      "LimitExceeded": {
        "desc": "Indicates that a resource could not be created because of service limits. For a list of Amazon SES limits, see the Amazon SES Developer Guide.",
        "type": "ConfigurationSet object"
      }
    }
  },
  {
    "title": "CreateConfigurationSetEventDestination",
    "req": {
      "ConfigurationSetName": {
        "desc": "The name of the configuration set that the event destination should be associated with.",
        "type": "String",
        "required": "yes"
      },
      "EventDestination": {
        "desc": "An object that describes the AWS service that email sending event information will be published to.",
        "type": "EventDestination object",
        "required": "yes"
      }
    },
    "res": {
      "ConfigurationSetDoesNotExist": {
        "desc": "Indicates that the configuration set does not exist.",
        "type": "EventDestination object"
      },
      "EventDestinationAlreadyExists": {
        "desc": "Indicates that the event destination could not be created because of a naming conflict.",
        "type": "EventDestination object"
      },
      "InvalidCloudWatchDestination": {
        "desc": "Indicates that the Amazon CloudWatch destination is invalid. See the error message for details.",
        "type": "EventDestination object"
      },
      "InvalidFirehoseDestination": {
        "desc": "Indicates that the Amazon Kinesis Firehose destination is invalid. See the error message for details.",
        "type": "EventDestination object"
      },
      "InvalidSNSDestination": {
        "desc": "Indicates that the Amazon Simple Notification Service (Amazon SNS) destination is invalid. See the error message for details.",
        "type": "EventDestination object"
      },
      "LimitExceeded": {
        "desc": "Indicates that a resource could not be created because of service limits. For a list of Amazon SES limits, see the Amazon SES Developer Guide.",
        "type": "EventDestination object"
      }
    }
  },
  {
    "title": "CreateConfigurationSetTrackingOptions",
    "req": {
      "ConfigurationSetName": {
        "desc": "The name of the configuration set that the tracking options should be associated with.",
        "type": "String",
        "required": "yes"
      },
      "TrackingOptions": {
        "desc": "A domain that is used to redirect email recipients to an Amazon SES-operated domain. This domain captures open and click events generated by Amazon SES emails.",
        "type": "TrackingOptions object",
        "required": "yes"
      }
    },
    "res": {
      "ConfigurationSetDoesNotExist": {
        "desc": "Indicates that the configuration set does not exist.",
        "type": "TrackingOptions object"
      },
      "InvalidTrackingOptions": {
        "desc": "Indicates that the custom domain to be used for open and click tracking redirects is invalid. This error appears most often in the following situations:",
        "type": "TrackingOptions object"
      },
      "TrackingOptionsAlreadyExists": {
        "desc": "Indicates that the configuration set you specified already contains a TrackingOptions object.",
        "type": "TrackingOptions object"
      }
    }
  },
  {
    "title": "CreateCustomVerificationEmailTemplate",
    "req": {
      "FailureRedirectionURL": {
        "desc": "The URL that the recipient of the verification email is sent to if his or her address is not successfully verified.",
        "type": "String",
        "required": "yes"
      },
      "FromEmailAddress": {
        "desc": "The email address that the custom verification email is sent from.",
        "type": "String",
        "required": "yes"
      },
      "SuccessRedirectionURL": {
        "desc": "The URL that the recipient of the verification email is sent to if his or her address is successfully verified.",
        "type": "String",
        "required": "yes"
      },
      "TemplateContent": {
        "desc": "The content of the custom verification email. The total size of the email must be less than 10 MB. The message body may contain HTML, with some limitations. For more information, see Custom Verification Email Frequently Asked Questions in the Amazon SES Developer Guide.",
        "type": "String",
        "required": "yes"
      },
      "TemplateName": {
        "desc": "The name of the custom verification email template.",
        "type": "String",
        "required": "yes"
      },
      "TemplateSubject": {
        "desc": "The subject line of the custom verification email.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "CustomVerificationEmailInvalidContent": {
        "desc": "Indicates that custom verification email template provided content is invalid.",
        "type": "String"
      },
      "CustomVerificationEmailTemplateAlreadyExists": {
        "desc": "Indicates that a custom verification email template with the name you specified already exists.",
        "type": "String"
      },
      "FromEmailAddressNotVerified": {
        "desc": "Indicates that the sender address specified for a custom verification email is not verified, and is therefore not eligible to send the custom verification email.",
        "type": "String"
      },
      "LimitExceeded": {
        "desc": "Indicates that a resource could not be created because of service limits. For a list of Amazon SES limits, see the Amazon SES Developer Guide.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateReceiptFilter",
    "req": {
      "Filter": {
        "desc": "A data structure that describes the IP address filter to create, which consists of a name, an IP address range, and whether to allow or block mail from it.",
        "type": "ReceiptFilter object",
        "required": "yes"
      }
    },
    "res": {
      "AlreadyExists": {
        "desc": "Indicates that a resource could not be created because of a naming conflict.",
        "type": "ReceiptFilter object"
      },
      "LimitExceeded": {
        "desc": "Indicates that a resource could not be created because of service limits. For a list of Amazon SES limits, see the Amazon SES Developer Guide.",
        "type": "ReceiptFilter object"
      }
    }
  },
  {
    "title": "CreateReceiptRule",
    "req": {
      "After": {
        "desc": "The name of an existing rule after which the new rule will be placed. If this parameter is null, the new rule will be inserted at the beginning of the rule list.",
        "type": "String",
        "required": "no"
      },
      "Rule": {
        "desc": "A data structure that contains the specified rule's name, actions, recipients, domains, enabled status, scan status, and TLS policy.",
        "type": "ReceiptRule object",
        "required": "yes"
      },
      "RuleSetName": {
        "desc": "The name of the rule set that the receipt rule will be added to.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "AlreadyExists": {
        "desc": "Indicates that a resource could not be created because of a naming conflict.",
        "type": "String"
      },
      "InvalidLambdaFunction": {
        "desc": "Indicates that the provided AWS Lambda function is invalid, or that Amazon SES could not execute the provided function, possibly due to permissions issues. For information about giving permissions, see the Amazon SES Developer Guide.",
        "type": "String"
      },
      "InvalidS3Configuration": {
        "desc": "Indicates that the provided Amazon S3 bucket or AWS KMS encryption key is invalid, or that Amazon SES could not publish to the bucket, possibly due to permissions issues. For information about giving permissions, see the Amazon SES Developer Guide.",
        "type": "String"
      },
      "InvalidSnsTopic": {
        "desc": "Indicates that the provided Amazon SNS topic is invalid, or that Amazon SES could not publish to the topic, possibly due to permissions issues. For information about giving permissions, see the Amazon SES Developer Guide.",
        "type": "String"
      },
      "LimitExceeded": {
        "desc": "Indicates that a resource could not be created because of service limits. For a list of Amazon SES limits, see the Amazon SES Developer Guide.",
        "type": "String"
      },
      "RuleDoesNotExist": {
        "desc": "Indicates that the provided receipt rule does not exist.",
        "type": "String"
      },
      "RuleSetDoesNotExist": {
        "desc": "Indicates that the provided receipt rule set does not exist.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateReceiptRuleSet",
    "req": {
      "RuleSetName": {
        "desc": "The name of the rule set to create. The name must:",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "AlreadyExists": {
        "desc": "Indicates that a resource could not be created because of a naming conflict.",
        "type": "String"
      },
      "LimitExceeded": {
        "desc": "Indicates that a resource could not be created because of service limits. For a list of Amazon SES limits, see the Amazon SES Developer Guide.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateTemplate",
    "req": {
      "Template": {
        "desc": "The content of the email, composed of a subject line, an HTML part, and a text-only part.",
        "type": "Template object",
        "required": "yes"
      }
    },
    "res": {
      "AlreadyExists": {
        "desc": "Indicates that a resource could not be created because of a naming conflict.",
        "type": "Template object"
      },
      "InvalidTemplate": {
        "desc": "Indicates that the template that you specified could not be rendered. This issue may occur when a template refers to a partial that does not exist.",
        "type": "Template object"
      },
      "LimitExceeded": {
        "desc": "Indicates that a resource could not be created because of service limits. For a list of Amazon SES limits, see the Amazon SES Developer Guide.",
        "type": "Template object"
      }
    }
  },
  {
    "title": "DeleteConfigurationSet",
    "req": {
      "ConfigurationSetName": {
        "desc": "The name of the configuration set to delete.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "ConfigurationSetDoesNotExist": {
        "desc": "Indicates that the configuration set does not exist.",
        "type": "String"
      }
    }
  },
  {
    "title": "DeleteConfigurationSetEventDestination",
    "req": {
      "ConfigurationSetName": {
        "desc": "The name of the configuration set from which to delete the event destination.",
        "type": "String",
        "required": "yes"
      },
      "EventDestinationName": {
        "desc": "The name of the event destination to delete.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "ConfigurationSetDoesNotExist": {
        "desc": "Indicates that the configuration set does not exist.",
        "type": "String"
      },
      "EventDestinationDoesNotExist": {
        "desc": "Indicates that the event destination does not exist.",
        "type": "String"
      }
    }
  },
  {
    "title": "DeleteConfigurationSetTrackingOptions",
    "req": {
      "ConfigurationSetName": {
        "desc": "The name of the configuration set from which you want to delete the tracking options.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "ConfigurationSetDoesNotExist": {
        "desc": "Indicates that the configuration set does not exist.",
        "type": "String"
      },
      "TrackingOptionsDoesNotExist": {
        "desc": "Indicates that the TrackingOptions object you specified does not exist.",
        "type": "String"
      }
    }
  },
  {
    "title": "DeleteCustomVerificationEmailTemplate",
    "req": {
      "TemplateName": {
        "desc": "The name of the custom verification email template that you want to delete.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {}
  },
  {
    "title": "DeleteIdentity",
    "req": {
      "Identity": {
        "desc": "The identity to be removed from the list of identities for the AWS Account.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {}
  },
  {
    "title": "DeleteIdentityPolicy",
    "req": {
      "Identity": {
        "desc": "The identity that is associated with the policy that you want to delete. You can specify the identity by using its name or by using its Amazon Resource Name (ARN). Examples: user@example.com, example.com, arn:aws:ses:us-east-1:123456789012:identity/example.com.",
        "type": "String",
        "required": "yes"
      },
      "PolicyName": {
        "desc": "The name of the policy to be deleted.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {}
  },
  {
    "title": "DeleteReceiptFilter",
    "req": {
      "FilterName": {
        "desc": "The name of the IP address filter to delete.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {}
  },
  {
    "title": "DeleteReceiptRule",
    "req": {
      "RuleName": {
        "desc": "The name of the receipt rule to delete.",
        "type": "String",
        "required": "yes"
      },
      "RuleSetName": {
        "desc": "The name of the receipt rule set that contains the receipt rule to delete.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "RuleSetDoesNotExist": {
        "desc": "Indicates that the provided receipt rule set does not exist.",
        "type": "String"
      }
    }
  },
  {
    "title": "DeleteReceiptRuleSet",
    "req": {
      "RuleSetName": {
        "desc": "The name of the receipt rule set to delete.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "CannotDelete": {
        "desc": "Indicates that the delete operation could not be completed.",
        "type": "String"
      }
    }
  },
  {
    "title": "DeleteTemplate",
    "req": {
      "TemplateName": {
        "desc": "The name of the template to be deleted.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {}
  },
  {
    "title": "DeleteVerifiedEmailAddress",
    "req": {
      "EmailAddress": {
        "desc": "An email address to be removed from the list of verified addresses.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {}
  },
  {
    "title": "DescribeActiveReceiptRuleSet",
    "req": {
      "Metadata": {
        "desc": "The metadata for the currently active receipt rule set. The metadata consists of the rule set name and a timestamp of when the rule set was created.",
        "type": "ReceiptRuleSetMetadata object"
      },
      "Rules.member.N": {
        "desc": "The receipt rules that belong to the active rule set.",
        "type": "Array of ReceiptRule objects"
      }
    },
    "res": {}
  },
  {
    "title": "DescribeConfigurationSet",
    "req": {
      "ConfigurationSetAttributeNames.member.N": {
        "desc": "A list of configuration set attributes to return.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "eventdestinations",
          "trackingoptions",
          "deliveryoptions",
          "reputationoptions"
        ]
      },
      "ConfigurationSetName": {
        "desc": "The name of the configuration set to describe.",
        "type": "String",
        "required": "yes",
        "values": [
          "eventdestinations",
          "trackingoptions",
          "deliveryoptions",
          "reputationoptions"
        ]
      }
    },
    "res": {
      "ConfigurationSet": {
        "desc": "The configuration set object associated with the specified configuration set.",
        "type": "ConfigurationSet object",
        "values": [
          "eventdestinations",
          "trackingoptions",
          "deliveryoptions",
          "reputationoptions"
        ]
      },
      "DeliveryOptions": {
        "desc": "Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS).",
        "type": "DeliveryOptions object",
        "values": [
          "eventdestinations",
          "trackingoptions",
          "deliveryoptions",
          "reputationoptions"
        ]
      },
      "EventDestinations.member.N": {
        "desc": "A list of event destinations associated with the configuration set.",
        "type": "Array of EventDestination objects",
        "values": [
          "eventdestinations",
          "trackingoptions",
          "deliveryoptions",
          "reputationoptions"
        ]
      },
      "ReputationOptions": {
        "desc": "An object that represents the reputation settings for the configuration set.",
        "type": "ReputationOptions object",
        "values": [
          "eventdestinations",
          "trackingoptions",
          "deliveryoptions",
          "reputationoptions"
        ]
      },
      "TrackingOptions": {
        "desc": "The name of the custom open and click tracking domain associated with the configuration set.",
        "type": "TrackingOptions object",
        "values": [
          "eventdestinations",
          "trackingoptions",
          "deliveryoptions",
          "reputationoptions"
        ]
      }
    }
  },
  {
    "title": "DescribeReceiptRule",
    "req": {
      "RuleName": {
        "desc": "The name of the receipt rule.",
        "type": "String",
        "required": "yes"
      },
      "RuleSetName": {
        "desc": "The name of the receipt rule set that the receipt rule belongs to.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "Rule": {
        "desc": "A data structure that contains the specified receipt rule's name, actions, recipients, domains, enabled status, scan status, and Transport Layer Security (TLS) policy.",
        "type": "ReceiptRule object"
      }
    }
  },
  {
    "title": "DescribeReceiptRuleSet",
    "req": {
      "RuleSetName": {
        "desc": "The name of the receipt rule set to describe.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "Metadata": {
        "desc": "The metadata for the receipt rule set, which consists of the rule set name and the timestamp of when the rule set was created.",
        "type": "ReceiptRuleSetMetadata object"
      },
      "Rules.member.N": {
        "desc": "A list of the receipt rules that belong to the specified receipt rule set.",
        "type": "Array of ReceiptRule objects"
      }
    }
  },
  {
    "title": "GetAccountSendingEnabled",
    "req": {
      "Enabled": {
        "desc": "Describes whether email sending is enabled or disabled for your Amazon SES account in the current AWS Region.",
        "type": "Boolean"
      }
    },
    "res": {}
  },
  {
    "title": "GetCustomVerificationEmailTemplate",
    "req": {
      "TemplateName": {
        "desc": "The name of the custom verification email template that you want to retrieve.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "FailureRedirectionURL": {
        "desc": "The URL that the recipient of the verification email is sent to if his or her address is not successfully verified.",
        "type": "String"
      },
      "FromEmailAddress": {
        "desc": "The email address that the custom verification email is sent from.",
        "type": "String"
      },
      "SuccessRedirectionURL": {
        "desc": "The URL that the recipient of the verification email is sent to if his or her address is successfully verified.",
        "type": "String"
      },
      "TemplateContent": {
        "desc": "The content of the custom verification email.",
        "type": "String"
      },
      "TemplateName": {
        "desc": "The name of the custom verification email template.",
        "type": "String"
      },
      "TemplateSubject": {
        "desc": "The subject line of the custom verification email.",
        "type": "String"
      }
    }
  },
  {
    "title": "GetIdentityDkimAttributes",
    "req": {
      "Identities.member.N": {
        "desc": "A list of one or more verified identities - email addresses, domains, or both.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "DkimAttributes.entry.N.value (value)": {
        "desc": "The DKIM attributes for an email address or a domain.",
        "type": "String to IdentityDkimAttributes object map"
      }
    }
  },
  {
    "title": "GetIdentityMailFromDomainAttributes",
    "req": {
      "Identities.member.N": {
        "desc": "A list of one or more identities.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "MailFromDomainAttributes.entry.N.value (value)": {
        "desc": "A map of identities to custom MAIL FROM attributes.",
        "type": "String to IdentityMailFromDomainAttributes object map"
      }
    }
  },
  {
    "title": "GetIdentityNotificationAttributes",
    "req": {
      "Identities.member.N": {
        "desc": "A list of one or more identities. You can specify an identity by using its name or by using its Amazon Resource Name (ARN). Examples: user@example.com, example.com, arn:aws:ses:us-east-1:123456789012:identity/example.com.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "NotificationAttributes.entry.N.value (value)": {
        "desc": "A map of Identity to IdentityNotificationAttributes.",
        "type": "String to IdentityNotificationAttributes object map"
      }
    }
  },
  {
    "title": "GetIdentityPolicies",
    "req": {
      "Identity": {
        "desc": "The identity for which the policies will be retrieved. You can specify an identity by using its name or by using its Amazon Resource Name (ARN). Examples: user@example.com, example.com, arn:aws:ses:us-east-1:123456789012:identity/example.com.",
        "type": "String",
        "required": "yes"
      },
      "PolicyNames.member.N": {
        "desc": "A list of the names of policies to be retrieved. You can retrieve a maximum of 20 policies at a time. If you do not know the names of the policies that are attached to the identity, you can use ListIdentityPolicies.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "Policies.entry.N.value (value)": {
        "desc": "A map of policy names to policies.",
        "type": "String to string map"
      }
    }
  },
  {
    "title": "GetIdentityVerificationAttributes",
    "req": {
      "Identities.member.N": {
        "desc": "A list of identities.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "VerificationAttributes.entry.N.value (value)": {
        "desc": "A map of Identities to IdentityVerificationAttributes objects.",
        "type": "String to IdentityVerificationAttributes object map"
      }
    }
  },
  {
    "title": "GetSendQuota",
    "req": {
      "Max24HourSend": {
        "desc": "The maximum number of emails the user is allowed to send in a 24-hour interval. A value of -1 signifies an unlimited quota.",
        "type": "Double"
      },
      "MaxSendRate": {
        "desc": "The maximum number of emails that Amazon SES can accept from the user's account per second.",
        "type": "Double"
      },
      "SentLast24Hours": {
        "desc": "The number of emails sent during the previous 24 hours.",
        "type": "Double"
      }
    },
    "res": {}
  },
  {
    "title": "GetSendStatistics",
    "req": {
      "SendDataPoints.member.N": {
        "desc": "A list of data points, each of which represents 15 minutes of activity.",
        "type": "Array of SendDataPoint objects"
      }
    },
    "res": {}
  },
  {
    "title": "GetTemplate",
    "req": {
      "TemplateName": {
        "desc": "The name of the template you want to retrieve.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "Template": {
        "desc": "The content of the email, composed of a subject line, an HTML part, and a text-only part.",
        "type": "Template object"
      }
    }
  },
  {
    "title": "ListConfigurationSets",
    "req": {
      "MaxItems": {
        "desc": "The number of configuration sets to return.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "A token returned from a previous call to ListConfigurationSets to indicate the position of the configuration set in the configuration set list.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "ConfigurationSets.member.N": {
        "desc": "A list of configuration sets.",
        "type": "Array of ConfigurationSet objects"
      },
      "NextToken": {
        "desc": "A token indicating that there are additional configuration sets available to be listed. Pass this token to successive calls of ListConfigurationSets.",
        "type": "String"
      }
    }
  },
  {
    "title": "ListCustomVerificationEmailTemplates",
    "req": {
      "MaxResults": {
        "desc": "The maximum number of custom verification email templates to return. This value must be at least 1 and less than or equal to 50. If you do not specify a value, or if you specify a value less than 1 or greater than 50, the operation will return up to 50 results.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "An array the contains the name and creation time stamp for each template in your Amazon SES account.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "CustomVerificationEmailTemplates.member.N": {
        "desc": "A list of the custom verification email templates that exist in your account.",
        "type": "Array of CustomVerificationEmailTemplate objects"
      },
      "NextToken": {
        "desc": "A token indicating that there are additional custom verification email templates available to be listed. Pass this token to a subsequent call to ListTemplates to retrieve the next 50 custom verification email templates.",
        "type": "String"
      }
    }
  },
  {
    "title": "ListIdentities",
    "req": {
      "IdentityType": {
        "desc": "The type of the identities to list. Possible values are \"EmailAddress\" and \"Domain\". If this parameter is omitted, then all identities will be listed.",
        "type": "String",
        "required": "no",
        "values": [
          "emailaddress",
          "domain"
        ]
      },
      "MaxItems": {
        "desc": "The maximum number of identities per page. Possible values are 1-1000 inclusive.",
        "type": "Integer",
        "required": "no",
        "values": [
          "emailaddress",
          "domain"
        ]
      },
      "NextToken": {
        "desc": "The token to use for pagination.",
        "type": "String",
        "required": "no",
        "values": [
          "emailaddress",
          "domain"
        ]
      }
    },
    "res": {
      "Identities.member.N": {
        "desc": "A list of identities.",
        "type": "Array of strings",
        "values": [
          "emailaddress",
          "domain"
        ]
      },
      "NextToken": {
        "desc": "The token used for pagination.",
        "type": "String",
        "values": [
          "emailaddress",
          "domain"
        ]
      }
    }
  },
  {
    "title": "ListIdentityPolicies",
    "req": {
      "Identity": {
        "desc": "The identity that is associated with the policy for which the policies will be listed. You can specify an identity by using its name or by using its Amazon Resource Name (ARN). Examples: user@example.com, example.com, arn:aws:ses:us-east-1:123456789012:identity/example.com.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "PolicyNames.member.N": {
        "desc": "A list of names of policies that apply to the specified identity.",
        "type": "Array of strings"
      }
    }
  },
  {
    "title": "ListReceiptFilters",
    "req": {
      "Filters.member.N": {
        "desc": "A list of IP address filter data structures, which each consist of a name, an IP address range, and whether to allow or block mail from it.",
        "type": "Array of ReceiptFilter objects"
      }
    },
    "res": {}
  },
  {
    "title": "ListReceiptRuleSets",
    "req": {
      "NextToken": {
        "desc": "A token returned from a previous call to ListReceiptRuleSets to indicate the position in the receipt rule set list.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "NextToken": {
        "desc": "A token indicating that there are additional receipt rule sets available to be listed. Pass this token to successive calls of ListReceiptRuleSets to retrieve up to 100 receipt rule sets at a time.",
        "type": "String"
      },
      "RuleSets.member.N": {
        "desc": "The metadata for the currently active receipt rule set. The metadata consists of the rule set name and the timestamp of when the rule set was created.",
        "type": "Array of ReceiptRuleSetMetadata objects"
      }
    }
  },
  {
    "title": "ListTemplates",
    "req": {
      "MaxItems": {
        "desc": "The maximum number of templates to return. This value must be at least 1 and less than or equal to 10. If you do not specify a value, or if you specify a value less than 1 or greater than 10, the operation will return up to 10 results.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "A token returned from a previous call to ListTemplates to indicate the position in the list of email templates.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "NextToken": {
        "desc": "A token indicating that there are additional email templates available to be listed. Pass this token to a subsequent call to ListTemplates to retrieve the next 50 email templates.",
        "type": "String"
      },
      "TemplatesMetadata.member.N": {
        "desc": "An array the contains the name and creation time stamp for each template in your Amazon SES account.",
        "type": "Array of TemplateMetadata objects"
      }
    }
  },
  {
    "title": "ListVerifiedEmailAddresses",
    "req": {
      "VerifiedEmailAddresses.member.N": {
        "desc": "A list of email addresses that have been verified.",
        "type": "Array of strings"
      }
    },
    "res": {}
  },
  {
    "title": "PutConfigurationSetDeliveryOptions",
    "req": {
      "ConfigurationSetName": {
        "desc": "The name of the configuration set that you want to specify the delivery options for.",
        "type": "String",
        "required": "yes"
      },
      "DeliveryOptions": {
        "desc": "Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS).",
        "type": "DeliveryOptions object",
        "required": "no"
      }
    },
    "res": {
      "ConfigurationSetDoesNotExist": {
        "desc": "Indicates that the configuration set does not exist.",
        "type": "DeliveryOptions object"
      },
      "InvalidDeliveryOptions": {
        "desc": "Indicates that provided delivery option is invalid.",
        "type": "DeliveryOptions object"
      }
    }
  },
  {
    "title": "PutIdentityPolicy",
    "req": {
      "Identity": {
        "desc": "The identity that the policy will apply to. You can specify an identity by using its name or by using its Amazon Resource Name (ARN). Examples: user@example.com, example.com, arn:aws:ses:us-east-1:123456789012:identity/example.com.",
        "type": "String",
        "required": "yes"
      },
      "Policy": {
        "desc": "The text of the policy in JSON format. The policy cannot exceed 4 KB.",
        "type": "String",
        "required": "yes"
      },
      "PolicyName": {
        "desc": "The name of the policy.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "InvalidPolicy": {
        "desc": "Indicates that the provided policy is invalid. Check the error stack for more information about what caused the error.",
        "type": "String"
      }
    }
  },
  {
    "title": "ReorderReceiptRuleSet",
    "req": {
      "RuleNames.member.N": {
        "desc": "A list of the specified receipt rule set's receipt rules in the order that you want to put them.",
        "type": "Array of strings",
        "required": "yes"
      },
      "RuleSetName": {
        "desc": "The name of the receipt rule set to reorder.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "RuleDoesNotExist": {
        "desc": "Indicates that the provided receipt rule does not exist.",
        "type": "String"
      },
      "RuleSetDoesNotExist": {
        "desc": "Indicates that the provided receipt rule set does not exist.",
        "type": "String"
      }
    }
  },
  {
    "title": "SendBounce",
    "req": {
      "BouncedRecipientInfoList.member.N": {
        "desc": "A list of recipients of the bounced message, including the information required to create the Delivery Status Notifications (DSNs) for the recipients. You must specify at least one BouncedRecipientInfo in the list.",
        "type": "Array of BouncedRecipientInfo objects",
        "required": "yes"
      },
      "BounceSender": {
        "desc": "The address to use in the \"From\" header of the bounce message. This must be an identity that you have verified with Amazon SES.",
        "type": "String",
        "required": "yes"
      },
      "BounceSenderArn": {
        "desc": "This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the address in the \"From\" header of the bounce. For more information about sending authorization, see the Amazon SES Developer Guide.",
        "type": "String",
        "required": "no"
      },
      "Explanation": {
        "desc": "Human-readable text for the bounce message to explain the failure. If not specified, the text will be auto-generated based on the bounced recipient information.",
        "type": "String",
        "required": "no"
      },
      "MessageDsn": {
        "desc": "Message-related DSN fields. If not specified, Amazon SES will choose the values.",
        "type": "MessageDsn object",
        "required": "no"
      },
      "OriginalMessageId": {
        "desc": "The message ID of the message to be bounced.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "MessageId": {
        "desc": "The message ID of the bounce message.",
        "type": "String"
      }
    }
  },
  {
    "title": "SendBulkTemplatedEmail",
    "req": {
      "ConfigurationSetName": {
        "desc": "The name of the configuration set to use when you send an email using SendBulkTemplatedEmail.",
        "type": "String",
        "required": "no"
      },
      "DefaultTags.member.N": {
        "desc": "A list of tags, in the form of name/value pairs, to apply to an email that you send to a destination using SendBulkTemplatedEmail.",
        "type": "Array of MessageTag objects",
        "required": "no"
      },
      "DefaultTemplateData": {
        "desc": "A list of replacement values to apply to the template when replacement data is not specified in a Destination object. These values act as a default or fallback option when no other data is available.",
        "type": "String",
        "required": "yes"
      },
      "Destinations.member.N": {
        "desc": "One or more Destination objects. All of the recipients in a Destination will receive the same version of the email. You can specify up to 50 Destination objects within a Destinations array.",
        "type": "Array of BulkEmailDestination objects",
        "required": "yes"
      },
      "ReplyToAddresses.member.N": {
        "desc": "The reply-to email address(es) for the message. If the recipient replies to the message, each reply-to address will receive the reply.",
        "type": "Array of strings",
        "required": "no"
      },
      "ReturnPath": {
        "desc": "The email address that bounces and complaints will be forwarded to when feedback forwarding is enabled. If the message cannot be delivered to the recipient, then an error message will be returned from the recipient's ISP; this message will then be forwarded to the email address specified by the ReturnPath parameter. The ReturnPath parameter is never overwritten. This email address must be either individually verified with Amazon SES, or from a domain that has been verified with Amazon SES.",
        "type": "String",
        "required": "no"
      },
      "ReturnPathArn": {
        "desc": "This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the ReturnPath parameter.",
        "type": "String",
        "required": "no"
      },
      "Source": {
        "desc": "The email address that is sending the email. This email address must be either individually verified with Amazon SES, or from a domain that has been verified with Amazon SES. For information about verifying identities, see the Amazon SES Developer Guide.",
        "type": "String",
        "required": "yes"
      },
      "SourceArn": {
        "desc": "This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to send for the email address specified in the Source parameter.",
        "type": "String",
        "required": "no"
      },
      "Template": {
        "desc": "The template to use when sending this email.",
        "type": "String",
        "required": "yes"
      },
      "TemplateArn": {
        "desc": "The ARN of the template to use when sending this email.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "Status.member.N": {
        "desc": "The unique message identifier returned from the SendBulkTemplatedEmail action.",
        "type": "Array of BulkEmailDestinationStatus objects"
      }
    }
  },
  {
    "title": "SendCustomVerificationEmail",
    "req": {
      "ConfigurationSetName": {
        "desc": "Name of a configuration set to use when sending the verification email.",
        "type": "String",
        "required": "no"
      },
      "EmailAddress": {
        "desc": "The email address to verify.",
        "type": "String",
        "required": "yes"
      },
      "TemplateName": {
        "desc": "The name of the custom verification email template to use when sending the verification email.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "MessageId": {
        "desc": "The unique message identifier returned from the SendCustomVerificationEmail operation.",
        "type": "String"
      }
    }
  },
  {
    "title": "SendEmail",
    "req": {
      "ConfigurationSetName": {
        "desc": "The name of the configuration set to use when you send an email using SendEmail.",
        "type": "String",
        "required": "no"
      },
      "Destination": {
        "desc": "The destination for this email, composed of To:, CC:, and BCC: fields.",
        "type": "Destination object",
        "required": "yes"
      },
      "Message": {
        "desc": "The message to be sent.",
        "type": "Message object",
        "required": "yes"
      },
      "ReplyToAddresses.member.N": {
        "desc": "The reply-to email address(es) for the message. If the recipient replies to the message, each reply-to address will receive the reply.",
        "type": "Array of strings",
        "required": "no"
      },
      "ReturnPath": {
        "desc": "The email address that bounces and complaints will be forwarded to when feedback forwarding is enabled. If the message cannot be delivered to the recipient, then an error message will be returned from the recipient's ISP; this message will then be forwarded to the email address specified by the ReturnPath parameter. The ReturnPath parameter is never overwritten. This email address must be either individually verified with Amazon SES, or from a domain that has been verified with Amazon SES.",
        "type": "String",
        "required": "no"
      },
      "ReturnPathArn": {
        "desc": "This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the ReturnPath parameter.",
        "type": "String",
        "required": "no"
      },
      "Source": {
        "desc": "The email address that is sending the email. This email address must be either individually verified with Amazon SES, or from a domain that has been verified with Amazon SES. For information about verifying identities, see the Amazon SES Developer Guide.",
        "type": "String",
        "required": "yes"
      },
      "SourceArn": {
        "desc": "This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to send for the email address specified in the Source parameter.",
        "type": "String",
        "required": "no"
      },
      "Tags.member.N": {
        "desc": "A list of tags, in the form of name/value pairs, to apply to an email that you send using SendEmail. Tags correspond to characteristics of the email that you define, so that you can publish email sending events.",
        "type": "Array of MessageTag objects",
        "required": "no"
      }
    },
    "res": {
      "MessageId": {
        "desc": "The unique message identifier returned from the SendEmail action.",
        "type": "String"
      }
    }
  },
  {
    "title": "SendRawEmail",
    "req": {
      "ConfigurationSetName": {
        "desc": "The name of the configuration set to use when you send an email using SendRawEmail.",
        "type": "String",
        "required": "no"
      },
      "Destinations.member.N": {
        "desc": "A list of destinations for the message, consisting of To:, CC:, and BCC: addresses.",
        "type": "Array of strings",
        "required": "no"
      },
      "FromArn": {
        "desc": "This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to specify a particular \"From\" address in the header of the raw email.",
        "type": "String",
        "required": "no"
      },
      "RawMessage": {
        "desc": "The raw email message itself. The message has to meet the following criteria:",
        "type": "RawMessage object",
        "required": "yes"
      },
      "ReturnPathArn": {
        "desc": "This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the ReturnPath parameter.",
        "type": "String",
        "required": "no"
      },
      "Source": {
        "desc": "The identity's email address. If you do not provide a value for this parameter, you must specify a \"From\" address in the raw text of the message. (You can also specify both.)",
        "type": "String",
        "required": "no"
      },
      "SourceArn": {
        "desc": "This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to send for the email address specified in the Source parameter.",
        "type": "String",
        "required": "no"
      },
      "Tags.member.N": {
        "desc": "A list of tags, in the form of name/value pairs, to apply to an email that you send using SendRawEmail. Tags correspond to characteristics of the email that you define, so that you can publish email sending events.",
        "type": "Array of MessageTag objects",
        "required": "no"
      }
    },
    "res": {
      "MessageId": {
        "desc": "The unique message identifier returned from the SendRawEmail action.",
        "type": "String"
      }
    }
  },
  {
    "title": "SendTemplatedEmail",
    "req": {
      "ConfigurationSetName": {
        "desc": "The name of the configuration set to use when you send an email using SendTemplatedEmail.",
        "type": "String",
        "required": "no"
      },
      "Destination": {
        "desc": "The destination for this email, composed of To:, CC:, and BCC: fields. A Destination can include up to 50 recipients across these three fields.",
        "type": "Destination object",
        "required": "yes"
      },
      "ReplyToAddresses.member.N": {
        "desc": "The reply-to email address(es) for the message. If the recipient replies to the message, each reply-to address will receive the reply.",
        "type": "Array of strings",
        "required": "no"
      },
      "ReturnPath": {
        "desc": "The email address that bounces and complaints will be forwarded to when feedback forwarding is enabled. If the message cannot be delivered to the recipient, then an error message will be returned from the recipient's ISP; this message will then be forwarded to the email address specified by the ReturnPath parameter. The ReturnPath parameter is never overwritten. This email address must be either individually verified with Amazon SES, or from a domain that has been verified with Amazon SES.",
        "type": "String",
        "required": "no"
      },
      "ReturnPathArn": {
        "desc": "This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the ReturnPath parameter.",
        "type": "String",
        "required": "no"
      },
      "Source": {
        "desc": "The email address that is sending the email. This email address must be either individually verified with Amazon SES, or from a domain that has been verified with Amazon SES. For information about verifying identities, see the Amazon SES Developer Guide.",
        "type": "String",
        "required": "yes"
      },
      "SourceArn": {
        "desc": "This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to send for the email address specified in the Source parameter.",
        "type": "String",
        "required": "no"
      },
      "Tags.member.N": {
        "desc": "A list of tags, in the form of name/value pairs, to apply to an email that you send using SendTemplatedEmail. Tags correspond to characteristics of the email that you define, so that you can publish email sending events.",
        "type": "Array of MessageTag objects",
        "required": "no"
      },
      "Template": {
        "desc": "The template to use when sending this email.",
        "type": "String",
        "required": "yes"
      },
      "TemplateArn": {
        "desc": "The ARN of the template to use when sending this email.",
        "type": "String",
        "required": "no"
      },
      "TemplateData": {
        "desc": "A list of replacement values to apply to the template. This parameter is a JSON object, typically consisting of key-value pairs in which the keys correspond to replacement tags in the email template.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "MessageId": {
        "desc": "The unique message identifier returned from the SendTemplatedEmail action.",
        "type": "String"
      }
    }
  },
  {
    "title": "SetActiveReceiptRuleSet",
    "req": {
      "RuleSetName": {
        "desc": "The name of the receipt rule set to make active. Setting this value to null disables all email receiving.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "RuleSetDoesNotExist": {
        "desc": "Indicates that the provided receipt rule set does not exist.",
        "type": "String"
      }
    }
  },
  {
    "title": "SetIdentityDkimEnabled",
    "req": {
      "DkimEnabled": {
        "desc": "Sets whether DKIM signing is enabled for an identity. Set to true to enable DKIM signing for this identity; false to disable it.",
        "type": "Boolean",
        "required": "yes"
      },
      "Identity": {
        "desc": "The identity for which DKIM signing should be enabled or disabled.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {}
  },
  {
    "title": "SetIdentityFeedbackForwardingEnabled",
    "req": {
      "ForwardingEnabled": {
        "desc": "Sets whether Amazon SES will forward bounce and complaint notifications as email. true specifies that Amazon SES will forward bounce and complaint notifications as email, in addition to any Amazon SNS topic publishing otherwise specified. false specifies that Amazon SES will publish bounce and complaint notifications only through Amazon SNS. This value can only be set to false when Amazon SNS topics are set for both Bounce and Complaint notification types.",
        "type": "Boolean",
        "required": "yes"
      },
      "Identity": {
        "desc": "The identity for which to set bounce and complaint notification forwarding. Examples: user@example.com, example.com.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {}
  },
  {
    "title": "SetIdentityHeadersInNotificationsEnabled",
    "req": {
      "Enabled": {
        "desc": "Sets whether Amazon SES includes the original email headers in Amazon SNS notifications of the specified notification type. A value of true specifies that Amazon SES will include headers in notifications, and a value of false specifies that Amazon SES will not include headers in notifications.",
        "type": "Boolean",
        "required": "yes"
      },
      "Identity": {
        "desc": "The identity for which to enable or disable headers in notifications. Examples: user@example.com, example.com.",
        "type": "String",
        "required": "yes"
      },
      "NotificationType": {
        "desc": "The notification type for which to enable or disable headers in notifications.",
        "type": "String",
        "required": "yes",
        "values": [
          "bounce",
          "complaint",
          "delivery"
        ]
      }
    },
    "res": {}
  },
  {
    "title": "SetIdentityMailFromDomain",
    "req": {
      "BehaviorOnMXFailure": {
        "desc": "The action that you want Amazon SES to take if it cannot successfully read the required MX record when you send an email. If you choose UseDefaultValue, Amazon SES will use amazonses.com (or a subdomain of that) as the MAIL FROM domain. If you choose RejectMessage, Amazon SES will return a MailFromDomainNotVerified error and not send the email.",
        "type": "String",
        "required": "no",
        "values": [
          "usedefaultvalue",
          "rejectmessage"
        ]
      },
      "Identity": {
        "desc": "The verified identity for which you want to enable or disable the specified custom MAIL FROM domain.",
        "type": "String",
        "required": "yes",
        "values": [
          "usedefaultvalue",
          "rejectmessage"
        ]
      },
      "MailFromDomain": {
        "desc": "The custom MAIL FROM domain that you want the verified identity to use. The MAIL FROM domain must 1) be a subdomain of the verified identity, 2) not be used in a \"From\" address if the MAIL FROM domain is the destination of email feedback forwarding (for more information, see the Amazon SES Developer Guide), and 3) not be used to receive emails. A value of null disables the custom MAIL FROM setting for the identity.",
        "type": "String",
        "required": "no",
        "values": [
          "usedefaultvalue",
          "rejectmessage"
        ]
      }
    },
    "res": {}
  },
  {
    "title": "SetIdentityNotificationTopic",
    "req": {
      "Identity": {
        "desc": "The identity (email address or domain) that you want to set the Amazon SNS topic for.",
        "type": "String",
        "required": "yes"
      },
      "NotificationType": {
        "desc": "The type of notifications that will be published to the specified Amazon SNS topic.",
        "type": "String",
        "required": "yes",
        "values": [
          "bounce",
          "complaint",
          "delivery"
        ]
      },
      "SnsTopic": {
        "desc": "The Amazon Resource Name (ARN) of the Amazon SNS topic. If the parameter is omitted from the request or a null value is passed, SnsTopic is cleared and publishing is disabled.",
        "type": "String",
        "required": "no",
        "values": [
          "bounce",
          "complaint",
          "delivery"
        ]
      }
    },
    "res": {}
  },
  {
    "title": "SetReceiptRulePosition",
    "req": {
      "After": {
        "desc": "The name of the receipt rule after which to place the specified receipt rule.",
        "type": "String",
        "required": "no"
      },
      "RuleName": {
        "desc": "The name of the receipt rule to reposition.",
        "type": "String",
        "required": "yes"
      },
      "RuleSetName": {
        "desc": "The name of the receipt rule set that contains the receipt rule to reposition.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "RuleDoesNotExist": {
        "desc": "Indicates that the provided receipt rule does not exist.",
        "type": "String"
      },
      "RuleSetDoesNotExist": {
        "desc": "Indicates that the provided receipt rule set does not exist.",
        "type": "String"
      }
    }
  },
  {
    "title": "TestRenderTemplate",
    "req": {
      "TemplateData": {
        "desc": "A list of replacement values to apply to the template. This parameter is a JSON object, typically consisting of key-value pairs in which the keys correspond to replacement tags in the email template.",
        "type": "String",
        "required": "yes"
      },
      "TemplateName": {
        "desc": "The name of the template that you want to render.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "RenderedTemplate": {
        "desc": "The complete MIME message rendered by applying the data in the TemplateData parameter to the template specified in the TemplateName parameter.",
        "type": "String"
      }
    }
  },
  {
    "title": "UpdateAccountSendingEnabled",
    "req": {
      "Enabled": {
        "desc": "Describes whether email sending is enabled or disabled for your Amazon SES account in the current AWS Region.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {}
  },
  {
    "title": "UpdateConfigurationSetEventDestination",
    "req": {
      "ConfigurationSetName": {
        "desc": "The name of the configuration set that contains the event destination that you want to update.",
        "type": "String",
        "required": "yes"
      },
      "EventDestination": {
        "desc": "The event destination object that you want to apply to the specified configuration set.",
        "type": "EventDestination object",
        "required": "yes"
      }
    },
    "res": {
      "ConfigurationSetDoesNotExist": {
        "desc": "Indicates that the configuration set does not exist.",
        "type": "EventDestination object"
      },
      "EventDestinationDoesNotExist": {
        "desc": "Indicates that the event destination does not exist.",
        "type": "EventDestination object"
      },
      "InvalidCloudWatchDestination": {
        "desc": "Indicates that the Amazon CloudWatch destination is invalid. See the error message for details.",
        "type": "EventDestination object"
      },
      "InvalidFirehoseDestination": {
        "desc": "Indicates that the Amazon Kinesis Firehose destination is invalid. See the error message for details.",
        "type": "EventDestination object"
      },
      "InvalidSNSDestination": {
        "desc": "Indicates that the Amazon Simple Notification Service (Amazon SNS) destination is invalid. See the error message for details.",
        "type": "EventDestination object"
      }
    }
  },
  {
    "title": "UpdateConfigurationSetReputationMetricsEnabled",
    "req": {
      "ConfigurationSetName": {
        "desc": "The name of the configuration set that you want to update.",
        "type": "String",
        "required": "yes"
      },
      "Enabled": {
        "desc": "Describes whether or not Amazon SES will publish reputation metrics for the configuration set, such as bounce and complaint rates, to Amazon CloudWatch.",
        "type": "Boolean",
        "required": "yes"
      }
    },
    "res": {
      "ConfigurationSetDoesNotExist": {
        "desc": "Indicates that the configuration set does not exist.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "UpdateConfigurationSetSendingEnabled",
    "req": {
      "ConfigurationSetName": {
        "desc": "The name of the configuration set that you want to update.",
        "type": "String",
        "required": "yes"
      },
      "Enabled": {
        "desc": "Describes whether email sending is enabled or disabled for the configuration set.",
        "type": "Boolean",
        "required": "yes"
      }
    },
    "res": {
      "ConfigurationSetDoesNotExist": {
        "desc": "Indicates that the configuration set does not exist.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "UpdateConfigurationSetTrackingOptions",
    "req": {
      "ConfigurationSetName": {
        "desc": "The name of the configuration set for which you want to update the custom tracking domain.",
        "type": "String",
        "required": "yes"
      },
      "TrackingOptions": {
        "desc": "A domain that is used to redirect email recipients to an Amazon SES-operated domain. This domain captures open and click events generated by Amazon SES emails.",
        "type": "TrackingOptions object",
        "required": "yes"
      }
    },
    "res": {
      "ConfigurationSetDoesNotExist": {
        "desc": "Indicates that the configuration set does not exist.",
        "type": "TrackingOptions object"
      },
      "InvalidTrackingOptions": {
        "desc": "Indicates that the custom domain to be used for open and click tracking redirects is invalid. This error appears most often in the following situations:",
        "type": "TrackingOptions object"
      },
      "TrackingOptionsDoesNotExist": {
        "desc": "Indicates that the TrackingOptions object you specified does not exist.",
        "type": "TrackingOptions object"
      }
    }
  },
  {
    "title": "UpdateCustomVerificationEmailTemplate",
    "req": {
      "FailureRedirectionURL": {
        "desc": "The URL that the recipient of the verification email is sent to if his or her address is not successfully verified.",
        "type": "String",
        "required": "no"
      },
      "FromEmailAddress": {
        "desc": "The email address that the custom verification email is sent from.",
        "type": "String",
        "required": "no"
      },
      "SuccessRedirectionURL": {
        "desc": "The URL that the recipient of the verification email is sent to if his or her address is successfully verified.",
        "type": "String",
        "required": "no"
      },
      "TemplateContent": {
        "desc": "The content of the custom verification email. The total size of the email must be less than 10 MB. The message body may contain HTML, with some limitations. For more information, see Custom Verification Email Frequently Asked Questions in the Amazon SES Developer Guide.",
        "type": "String",
        "required": "no"
      },
      "TemplateName": {
        "desc": "The name of the custom verification email template that you want to update.",
        "type": "String",
        "required": "yes"
      },
      "TemplateSubject": {
        "desc": "The subject line of the custom verification email.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "CustomVerificationEmailInvalidContent": {
        "desc": "Indicates that custom verification email template provided content is invalid.",
        "type": "String"
      },
      "CustomVerificationEmailTemplateDoesNotExist": {
        "desc": "Indicates that a custom verification email template with the name you specified does not exist.",
        "type": "String"
      },
      "FromEmailAddressNotVerified": {
        "desc": "Indicates that the sender address specified for a custom verification email is not verified, and is therefore not eligible to send the custom verification email.",
        "type": "String"
      }
    }
  },
  {
    "title": "UpdateReceiptRule",
    "req": {
      "Rule": {
        "desc": "A data structure that contains the updated receipt rule information.",
        "type": "ReceiptRule object",
        "required": "yes"
      },
      "RuleSetName": {
        "desc": "The name of the receipt rule set that the receipt rule belongs to.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "InvalidLambdaFunction": {
        "desc": "Indicates that the provided AWS Lambda function is invalid, or that Amazon SES could not execute the provided function, possibly due to permissions issues. For information about giving permissions, see the Amazon SES Developer Guide.",
        "type": "String"
      },
      "InvalidS3Configuration": {
        "desc": "Indicates that the provided Amazon S3 bucket or AWS KMS encryption key is invalid, or that Amazon SES could not publish to the bucket, possibly due to permissions issues. For information about giving permissions, see the Amazon SES Developer Guide.",
        "type": "String"
      },
      "InvalidSnsTopic": {
        "desc": "Indicates that the provided Amazon SNS topic is invalid, or that Amazon SES could not publish to the topic, possibly due to permissions issues. For information about giving permissions, see the Amazon SES Developer Guide.",
        "type": "String"
      },
      "LimitExceeded": {
        "desc": "Indicates that a resource could not be created because of service limits. For a list of Amazon SES limits, see the Amazon SES Developer Guide.",
        "type": "String"
      },
      "RuleDoesNotExist": {
        "desc": "Indicates that the provided receipt rule does not exist.",
        "type": "String"
      },
      "RuleSetDoesNotExist": {
        "desc": "Indicates that the provided receipt rule set does not exist.",
        "type": "String"
      }
    }
  },
  {
    "title": "UpdateTemplate",
    "req": {
      "Template": {
        "desc": "The content of the email, composed of a subject line, an HTML part, and a text-only part.",
        "type": "Template object",
        "required": "yes"
      }
    },
    "res": {
      "InvalidTemplate": {
        "desc": "Indicates that the template that you specified could not be rendered. This issue may occur when a template refers to a partial that does not exist.",
        "type": "Template object"
      },
      "TemplateDoesNotExist": {
        "desc": "Indicates that the Template object you specified does not exist in your Amazon SES account.",
        "type": "Template object"
      }
    }
  },
  {
    "title": "VerifyDomainDkim",
    "req": {
      "Domain": {
        "desc": "The name of the domain to be verified for Easy DKIM signing.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "DkimTokens.member.N": {
        "desc": "A set of character strings that represent the domain's identity. If the identity is an email address, the tokens represent the domain of that address.",
        "type": "Array of strings"
      }
    }
  },
  {
    "title": "VerifyDomainIdentity",
    "req": {
      "Domain": {
        "desc": "The domain to be verified.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "VerificationToken": {
        "desc": "A TXT record that you must place in the DNS settings of the domain to complete domain verification with Amazon SES.",
        "type": "String"
      }
    }
  },
  {
    "title": "VerifyEmailAddress",
    "req": {
      "EmailAddress": {
        "desc": "The email address to be verified.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {}
  },
  {
    "title": "VerifyEmailIdentity",
    "req": {
      "EmailAddress": {
        "desc": "The email address to be verified.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {}
  }
]
