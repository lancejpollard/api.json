[
  {
    "title": "AccountAttribute",
    "attrs": {
      "attributeName": {
        "desc": "The name of the account attribute.",
        "type": "String",
        "required": "no"
      },
      "attributeValueSet": {
        "desc": "The values for the account attribute.",
        "type": "Array of AccountAttributeValue objects",
        "required": "no"
      }
    }
  },
  {
    "title": "AccountAttributeValue",
    "attrs": {
      "attributeValue": {
        "desc": "The value of the attribute.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ActiveInstance",
    "attrs": {
      "instanceHealth": {
        "desc": "The health status of the instance. If the status of either the instance status check or the system status check is impaired, the health status of the instance is unhealthy. Otherwise, the health status is healthy.",
        "type": "String",
        "required": "no",
        "values": [
          "healthy",
          "unhealthy"
        ]
      },
      "instanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "no",
        "values": [
          "healthy",
          "unhealthy"
        ]
      },
      "instanceType": {
        "desc": "The instance type.",
        "type": "String",
        "required": "no",
        "values": [
          "healthy",
          "unhealthy"
        ]
      },
      "spotInstanceRequestId": {
        "desc": "The ID of the Spot Instance request.",
        "type": "String",
        "required": "no",
        "values": [
          "healthy",
          "unhealthy"
        ]
      }
    }
  },
  {
    "title": "Address",
    "attrs": {
      "allocationId": {
        "desc": "The ID representing the allocation of the address for use with EC2-VPC.",
        "type": "String",
        "required": "no"
      },
      "associationId": {
        "desc": "The ID representing the association of the address with an instance in a VPC.",
        "type": "String",
        "required": "no"
      },
      "customerOwnedIp": {
        "desc": "The customer-owned IP address.",
        "type": "String",
        "required": "no"
      },
      "customerOwnedIpv4Pool": {
        "desc": "The ID of the customer-owned address pool.",
        "type": "String",
        "required": "no"
      },
      "domain": {
        "desc": "Indicates whether this Elastic IP address is for use with instances in EC2-Classic (standard) or instances in a VPC (vpc).",
        "type": "String",
        "required": "no",
        "values": [
          "vpc",
          "standard"
        ]
      },
      "instanceId": {
        "desc": "The ID of the instance that the address is associated with (if any).",
        "type": "String",
        "required": "no",
        "values": [
          "vpc",
          "standard"
        ]
      },
      "networkBorderGroup": {
        "desc": "The name of the location from which the IP address is advertised.",
        "type": "String",
        "required": "no",
        "values": [
          "vpc",
          "standard"
        ]
      },
      "networkInterfaceId": {
        "desc": "The ID of the network interface.",
        "type": "String",
        "required": "no",
        "values": [
          "vpc",
          "standard"
        ]
      },
      "networkInterfaceOwnerId": {
        "desc": "The ID of the AWS account that owns the network interface.",
        "type": "String",
        "required": "no",
        "values": [
          "vpc",
          "standard"
        ]
      },
      "privateIpAddress": {
        "desc": "The private IP address associated with the Elastic IP address.",
        "type": "String",
        "required": "no",
        "values": [
          "vpc",
          "standard"
        ]
      },
      "publicIp": {
        "desc": "The Elastic IP address.",
        "type": "String",
        "required": "no",
        "values": [
          "vpc",
          "standard"
        ]
      },
      "publicIpv4Pool": {
        "desc": "The ID of an address pool.",
        "type": "String",
        "required": "no",
        "values": [
          "vpc",
          "standard"
        ]
      },
      "tagSet": {
        "desc": "Any tags assigned to the Elastic IP address.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "vpc",
          "standard"
        ]
      }
    }
  },
  {
    "title": "AllowedPrincipal",
    "attrs": {
      "principal": {
        "desc": "The Amazon Resource Name (ARN) of the principal.",
        "type": "String",
        "required": "no"
      },
      "principalType": {
        "desc": "The type of principal.",
        "type": "String",
        "required": "no",
        "values": [
          "all",
          "service",
          "organizationunit",
          "account",
          "user",
          "role"
        ]
      }
    }
  },
  {
    "title": "AssignedPrivateIpAddress",
    "attrs": {
      "privateIpAddress": {
        "desc": "The private IP address assigned to the network interface.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "AssociatedTargetNetwork",
    "attrs": {
      "networkId": {
        "desc": "The ID of the subnet.",
        "type": "String",
        "required": "no"
      },
      "networkType": {
        "desc": "The target network type.",
        "type": "String",
        "required": "no",
        "values": [
          "vpc"
        ]
      }
    }
  },
  {
    "title": "AssociationStatus",
    "attrs": {
      "code": {
        "desc": "The state of the target network association.",
        "type": "String",
        "required": "no",
        "values": [
          "associating",
          "associated",
          "association-failed",
          "disassociating",
          "disassociated"
        ]
      },
      "message": {
        "desc": "A message about the status of the target network association, if applicable.",
        "type": "String",
        "required": "no",
        "values": [
          "associating",
          "associated",
          "association-failed",
          "disassociating",
          "disassociated"
        ]
      }
    }
  },
  {
    "title": "AttributeBooleanValue",
    "attrs": {
      "Value (request), value (response)": {
        "desc": "The attribute value. The valid values are true or false.",
        "type": "Boolean",
        "required": "no"
      }
    }
  },
  {
    "title": "AttributeValue",
    "attrs": {
      "Value (request), value (response)": {
        "desc": "The attribute value. The value is case-sensitive.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "AuthorizationRule",
    "attrs": {
      "accessAll": {
        "desc": "Indicates whether the authorization rule grants access to all clients.",
        "type": "Boolean",
        "required": "no"
      },
      "clientVpnEndpointId": {
        "desc": "The ID of the Client VPN endpoint with which the authorization rule is associated.",
        "type": "String",
        "required": "no"
      },
      "description": {
        "desc": "A brief description of the authorization rule.",
        "type": "String",
        "required": "no"
      },
      "destinationCidr": {
        "desc": "The IPv4 address range, in CIDR notation, of the network to which the authorization rule applies.",
        "type": "String",
        "required": "no"
      },
      "groupId": {
        "desc": "The ID of the Active Directory group to which the authorization rule grants access.",
        "type": "String",
        "required": "no"
      },
      "status": {
        "desc": "The current state of the authorization rule.",
        "type": "ClientVpnAuthorizationRuleStatus object",
        "required": "no"
      }
    }
  },
  {
    "title": "AvailabilityZone",
    "attrs": {
      "groupName": {
        "desc": "For Availability Zones, this parameter has the same value as the Region name.",
        "type": "String",
        "required": "no"
      },
      "messageSet": {
        "desc": "Any messages about the Availability Zone or Local Zone.",
        "type": "Array of AvailabilityZoneMessage objects",
        "required": "no"
      },
      "networkBorderGroup": {
        "desc": "The name of the location from which the address is advertised.",
        "type": "String",
        "required": "no"
      },
      "optInStatus": {
        "desc": "For Availability Zones, this parameter always has the value of opt-in-not-required.",
        "type": "String",
        "required": "no",
        "values": [
          "opt-in-not-required",
          "opted-in",
          "not-opted-in"
        ]
      },
      "regionName": {
        "desc": "The name of the Region.",
        "type": "String",
        "required": "no",
        "values": [
          "opt-in-not-required",
          "opted-in",
          "not-opted-in"
        ]
      },
      "zoneId": {
        "desc": "The ID of the Availability Zone or Local Zone.",
        "type": "String",
        "required": "no",
        "values": [
          "opt-in-not-required",
          "opted-in",
          "not-opted-in"
        ]
      },
      "zoneName": {
        "desc": "The name of the Availability Zone or Local Zone.",
        "type": "String",
        "required": "no",
        "values": [
          "opt-in-not-required",
          "opted-in",
          "not-opted-in"
        ]
      },
      "zoneState": {
        "desc": "The state of the Availability Zone or Local Zone.",
        "type": "String",
        "required": "no",
        "values": [
          "available",
          "information",
          "impaired",
          "unavailable"
        ]
      }
    }
  },
  {
    "title": "AvailabilityZoneMessage",
    "attrs": {
      "message": {
        "desc": "The message about the Availability Zone or Local Zone.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "AvailableCapacity",
    "attrs": {
      "availableInstanceCapacity": {
        "desc": "The number of instances that can be launched onto the Dedicated Host depending on the host's available capacity. For Dedicated Hosts that support multiple instance types, this parameter represents the number of instances for each instance size that is supported on the host.",
        "type": "Array of InstanceCapacity objects",
        "required": "no"
      },
      "availableVCpus": {
        "desc": "The number of vCPUs available for launching instances onto the Dedicated Host.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "BlobAttributeValue",
    "attrs": {
      "Value": {
        "desc": "The value of the data.",
        "type": "Base64-encoded binary data",
        "required": "no"
      }
    }
  },
  {
    "title": "BlockDeviceMapping",
    "attrs": {
      "DeviceName (request), deviceName (response)": {
        "desc": "The device name (for example, /dev/sdh or xvdh).",
        "type": "String",
        "required": "no"
      },
      "Ebs (request), ebs (response)": {
        "desc": "Parameters used to automatically set up EBS volumes when the instance is launched.",
        "type": "EbsBlockDevice object",
        "required": "no"
      },
      "NoDevice (request), noDevice (response)": {
        "desc": "Suppresses the specified device included in the block device mapping of the AMI.",
        "type": "String",
        "required": "no"
      },
      "VirtualName (request), virtualName (response)": {
        "desc": "The virtual device name (ephemeralN). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1. The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "BundleTask",
    "attrs": {
      "bundleId": {
        "desc": "The ID of the bundle task.",
        "type": "String",
        "required": "no"
      },
      "error": {
        "desc": "If the task fails, a description of the error.",
        "type": "BundleTaskError object",
        "required": "no"
      },
      "instanceId": {
        "desc": "The ID of the instance associated with this bundle task.",
        "type": "String",
        "required": "no"
      },
      "progress": {
        "desc": "The level of task completion, as a percent (for example, 20%).",
        "type": "String",
        "required": "no"
      },
      "startTime": {
        "desc": "The time this task started.",
        "type": "Timestamp",
        "required": "no"
      },
      "state": {
        "desc": "The state of the task.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "waiting-for-shutdown",
          "bundling",
          "storing",
          "cancelling",
          "complete",
          "failed"
        ]
      },
      "storage": {
        "desc": "The Amazon S3 storage locations.",
        "type": "Storage object",
        "required": "no",
        "values": [
          "pending",
          "waiting-for-shutdown",
          "bundling",
          "storing",
          "cancelling",
          "complete",
          "failed"
        ]
      },
      "updateTime": {
        "desc": "The time of the most recent update for the task.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "pending",
          "waiting-for-shutdown",
          "bundling",
          "storing",
          "cancelling",
          "complete",
          "failed"
        ]
      }
    }
  },
  {
    "title": "BundleTaskError",
    "attrs": {
      "code": {
        "desc": "The error code.",
        "type": "String",
        "required": "no"
      },
      "message": {
        "desc": "The error message.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ByoipCidr",
    "attrs": {
      "cidr": {
        "desc": "The address range, in CIDR notation.",
        "type": "String",
        "required": "no"
      },
      "description": {
        "desc": "The description of the address range.",
        "type": "String",
        "required": "no"
      },
      "state": {
        "desc": "The state of the address pool.",
        "type": "String",
        "required": "no",
        "values": [
          "advertised",
          "deprovisioned",
          "failed-deprovision",
          "failed-provision",
          "pending-deprovision"
        ]
      },
      "statusMessage": {
        "desc": "Upon success, contains the ID of the address pool. Otherwise, contains an error message.",
        "type": "String",
        "required": "no",
        "values": [
          "advertised",
          "deprovisioned",
          "failed-deprovision",
          "failed-provision",
          "pending-deprovision"
        ]
      }
    }
  },
  {
    "title": "CancelledSpotInstanceRequest",
    "attrs": {
      "spotInstanceRequestId": {
        "desc": "The ID of the Spot Instance request.",
        "type": "String",
        "required": "no"
      },
      "state": {
        "desc": "The state of the Spot Instance request.",
        "type": "String",
        "required": "no",
        "values": [
          "active",
          "open",
          "closed",
          "cancelled",
          "completed"
        ]
      }
    }
  },
  {
    "title": "CancelSpotFleetRequestsError",
    "attrs": {
      "code": {
        "desc": "The error code.",
        "type": "String",
        "required": "no",
        "values": [
          "fleetrequestiddoesnotexist",
          "fleetrequestidmalformed",
          "fleetrequestnotincancellablestate"
        ]
      },
      "message": {
        "desc": "The description for the error code.",
        "type": "String",
        "required": "no",
        "values": [
          "fleetrequestiddoesnotexist",
          "fleetrequestidmalformed",
          "fleetrequestnotincancellablestate"
        ]
      }
    }
  },
  {
    "title": "CancelSpotFleetRequestsErrorItem",
    "attrs": {
      "error": {
        "desc": "The error.",
        "type": "CancelSpotFleetRequestsError object",
        "required": "no"
      },
      "spotFleetRequestId": {
        "desc": "The ID of the Spot Fleet request.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "CancelSpotFleetRequestsSuccessItem",
    "attrs": {
      "currentSpotFleetRequestState": {
        "desc": "The current state of the Spot Fleet request.",
        "type": "String",
        "required": "no",
        "values": [
          "submitted",
          "active",
          "cancelled",
          "failed",
          "cancelled_running",
          "cancelled_terminating"
        ]
      },
      "previousSpotFleetRequestState": {
        "desc": "The previous state of the Spot Fleet request.",
        "type": "String",
        "required": "no",
        "values": [
          "submitted",
          "active",
          "cancelled",
          "failed",
          "cancelled_running",
          "cancelled_terminating"
        ]
      },
      "spotFleetRequestId": {
        "desc": "The ID of the Spot Fleet request.",
        "type": "String",
        "required": "no",
        "values": [
          "submitted",
          "active",
          "cancelled",
          "failed",
          "cancelled_running",
          "cancelled_terminating"
        ]
      }
    }
  },
  {
    "title": "CapacityReservation",
    "attrs": {
      "availabilityZone": {
        "desc": "The Availability Zone in which the capacity is reserved.",
        "type": "String",
        "required": "no"
      },
      "availabilityZoneId": {
        "desc": "The Availability Zone ID of the Capacity Reservation.",
        "type": "String",
        "required": "no"
      },
      "availableInstanceCount": {
        "desc": "The remaining capacity. Indicates the number of instances that can be launched in the Capacity Reservation.",
        "type": "Integer",
        "required": "no"
      },
      "capacityReservationArn": {
        "desc": "The Amazon Resource Name (ARN) of the Capacity Reservation.",
        "type": "String",
        "required": "no"
      },
      "capacityReservationId": {
        "desc": "The ID of the Capacity Reservation.",
        "type": "String",
        "required": "no"
      },
      "createDate": {
        "desc": "The date and time at which the Capacity Reservation was created.",
        "type": "Timestamp",
        "required": "no"
      },
      "ebsOptimized": {
        "desc": "Indicates whether the Capacity Reservation supports EBS-optimized instances. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS- optimized instance.",
        "type": "Boolean",
        "required": "no"
      },
      "endDate": {
        "desc": "The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation's state changes to expired when it reaches its end date and time.",
        "type": "Timestamp",
        "required": "no"
      },
      "endDateType": {
        "desc": "Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:",
        "type": "String",
        "required": "no",
        "values": [
          "unlimited",
          "limited"
        ]
      },
      "ephemeralStorage": {
        "desc": "Indicates whether the Capacity Reservation supports instances with temporary, block-level storage.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "unlimited",
          "limited"
        ]
      },
      "instanceMatchCriteria": {
        "desc": "Indicates the type of instance launches that the Capacity Reservation accepts. The options include:",
        "type": "String",
        "required": "no",
        "values": [
          "open",
          "targeted"
        ]
      },
      "instancePlatform": {
        "desc": "The type of operating system for which the Capacity Reservation reserves capacity.",
        "type": "String",
        "required": "no",
        "values": [
          "linux/unix",
          "red hat enterprise linux",
          "suse linux",
          "windows",
          "windows with sql server"
        ]
      },
      "instanceType": {
        "desc": "The type of instance for which the Capacity Reservation reserves capacity.",
        "type": "String",
        "required": "no",
        "values": [
          "linux/unix",
          "red hat enterprise linux",
          "suse linux",
          "windows",
          "windows with sql server"
        ]
      },
      "ownerId": {
        "desc": "The ID of the AWS account that owns the Capacity Reservation.",
        "type": "String",
        "required": "no",
        "values": [
          "linux/unix",
          "red hat enterprise linux",
          "suse linux",
          "windows",
          "windows with sql server"
        ]
      },
      "state": {
        "desc": "The current state of the Capacity Reservation. A Capacity Reservation can be in one of the following states:",
        "type": "String",
        "required": "no",
        "values": [
          "active",
          "expired",
          "cancelled",
          "pending",
          "failed"
        ]
      },
      "tagSet": {
        "desc": "Any tags assigned to the Capacity Reservation.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "active",
          "expired",
          "cancelled",
          "pending",
          "failed"
        ]
      },
      "tenancy": {
        "desc": "Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:",
        "type": "String",
        "required": "no",
        "values": [
          "default",
          "dedicated"
        ]
      },
      "totalInstanceCount": {
        "desc": "The total number of instances for which the Capacity Reservation reserves capacity.",
        "type": "Integer",
        "required": "no",
        "values": [
          "default",
          "dedicated"
        ]
      }
    }
  },
  {
    "title": "CapacityReservationOptions",
    "attrs": {
      "usageStrategy": {
        "desc": "Indicates whether to use unused Capacity Reservations for fulfilling On-Demand capacity.",
        "type": "String",
        "required": "no",
        "values": [
          "use-capacity-reservations-first"
        ]
      }
    }
  },
  {
    "title": "CapacityReservationOptionsRequest",
    "attrs": {
      "UsageStrategy": {
        "desc": "Indicates whether to use unused Capacity Reservations for fulfilling On-Demand capacity.",
        "type": "String",
        "required": "no",
        "values": [
          "use-capacity-reservations-first"
        ]
      }
    }
  },
  {
    "title": "CapacityReservationSpecification",
    "attrs": {
      "CapacityReservationPreference": {
        "desc": "Indicates the instance's Capacity Reservation preferences. Possible preferences include:",
        "type": "String",
        "required": "no",
        "values": [
          "open",
          "none"
        ]
      },
      "CapacityReservationTarget": {
        "desc": "Information about the target Capacity Reservation.",
        "type": "CapacityReservationTarget object",
        "required": "no",
        "values": [
          "open",
          "none"
        ]
      }
    }
  },
  {
    "title": "CapacityReservationSpecificationResponse",
    "attrs": {
      "capacityReservationPreference": {
        "desc": "Describes the instance's Capacity Reservation preferences. Possible preferences include:",
        "type": "String",
        "required": "no",
        "values": [
          "open",
          "none"
        ]
      },
      "capacityReservationTarget": {
        "desc": "Information about the targeted Capacity Reservation.",
        "type": "CapacityReservationTargetResponse object",
        "required": "no",
        "values": [
          "open",
          "none"
        ]
      }
    }
  },
  {
    "title": "CapacityReservationTarget",
    "attrs": {
      "CapacityReservationId": {
        "desc": "The ID of the Capacity Reservation.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "CapacityReservationTargetResponse",
    "attrs": {
      "capacityReservationId": {
        "desc": "The ID of the Capacity Reservation.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "CertificateAuthentication",
    "attrs": {
      "clientRootCertificateChain": {
        "desc": "The ARN of the client certificate.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "CertificateAuthenticationRequest",
    "attrs": {
      "ClientRootCertificateChainArn": {
        "desc": "The ARN of the client certificate. The certificate must be signed by a certificate authority (CA) and it must be provisioned in AWS Certificate Manager (ACM).",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "CidrAuthorizationContext",
    "attrs": {
      "Message": {
        "desc": "The plain-text authorization message for the prefix and account.",
        "type": "String",
        "required": "yes"
      },
      "Signature": {
        "desc": "The signed authorization message for the prefix and account.",
        "type": "String",
        "required": "yes"
      }
    }
  },
  {
    "title": "CidrBlock",
    "attrs": {
      "cidrBlock": {
        "desc": "The IPv4 CIDR block.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ClassicLinkDnsSupport",
    "attrs": {
      "classicLinkDnsSupported": {
        "desc": "Indicates whether ClassicLink DNS support is enabled for the VPC.",
        "type": "Boolean",
        "required": "no"
      },
      "vpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ClassicLinkInstance",
    "attrs": {
      "groupSet": {
        "desc": "A list of security groups.",
        "type": "Array of GroupIdentifier objects",
        "required": "no"
      },
      "instanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "no"
      },
      "tagSet": {
        "desc": "Any tags assigned to the instance.",
        "type": "Array of Tag objects",
        "required": "no"
      },
      "vpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ClassicLoadBalancer",
    "attrs": {
      "Name (request), name (response)": {
        "desc": "The name of the load balancer.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ClassicLoadBalancersConfig",
    "attrs": {
      "ClassicLoadBalancers (request), classicLoadBalancers (response)": {
        "desc": "One or more Classic Load Balancers.",
        "type": "Array of ClassicLoadBalancer objects",
        "required": "no"
      }
    }
  },
  {
    "title": "ClientCertificateRevocationListStatus",
    "attrs": {
      "code": {
        "desc": "The state of the client certificate revocation list.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "active"
        ]
      },
      "message": {
        "desc": "A message about the status of the client certificate revocation list, if applicable.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "active"
        ]
      }
    }
  },
  {
    "title": "ClientData",
    "attrs": {
      "Comment": {
        "desc": "A user-defined comment about the disk upload.",
        "type": "String",
        "required": "no"
      },
      "UploadEnd": {
        "desc": "The time that the disk upload ends.",
        "type": "Timestamp",
        "required": "no"
      },
      "UploadSize": {
        "desc": "The size of the uploaded disk image, in GiB.",
        "type": "Double",
        "required": "no"
      },
      "UploadStart": {
        "desc": "The time that the disk upload starts.",
        "type": "Timestamp",
        "required": "no"
      }
    }
  },
  {
    "title": "ClientVpnAuthentication",
    "attrs": {
      "activeDirectory": {
        "desc": "Information about the Active Directory, if applicable.",
        "type": "DirectoryServiceAuthentication object",
        "required": "no"
      },
      "mutualAuthentication": {
        "desc": "Information about the authentication certificates, if applicable.",
        "type": "CertificateAuthentication object",
        "required": "no"
      },
      "type": {
        "desc": "The authentication type used.",
        "type": "String",
        "required": "no",
        "values": [
          "certificate-authentication",
          "directory-service-authentication"
        ]
      }
    }
  },
  {
    "title": "ClientVpnAuthenticationRequest",
    "attrs": {
      "ActiveDirectory": {
        "desc": "Information about the Active Directory to be used, if applicable. You must provide this information if Type is directory-service-authentication.",
        "type": "DirectoryServiceAuthenticationRequest object",
        "required": "no"
      },
      "MutualAuthentication": {
        "desc": "Information about the authentication certificates to be used, if applicable. You must provide this information if Type is certificate-authentication.",
        "type": "CertificateAuthenticationRequest object",
        "required": "no"
      },
      "Type": {
        "desc": "The type of client authentication to be used. Specify certificate-authentication to use certificate-based authentication, or directory-service-authentication to use Active Directory authentication.",
        "type": "String",
        "required": "no",
        "values": [
          "certificate-authentication",
          "directory-service-authentication"
        ]
      }
    }
  },
  {
    "title": "ClientVpnAuthorizationRuleStatus",
    "attrs": {
      "code": {
        "desc": "The state of the authorization rule.",
        "type": "String",
        "required": "no",
        "values": [
          "authorizing",
          "active",
          "failed",
          "revoking"
        ]
      },
      "message": {
        "desc": "A message about the status of the authorization rule, if applicable.",
        "type": "String",
        "required": "no",
        "values": [
          "authorizing",
          "active",
          "failed",
          "revoking"
        ]
      }
    }
  },
  {
    "title": "ClientVpnConnection",
    "attrs": {
      "clientIp": {
        "desc": "The IP address of the client.",
        "type": "String",
        "required": "no"
      },
      "clientVpnEndpointId": {
        "desc": "The ID of the Client VPN endpoint to which the client is connected.",
        "type": "String",
        "required": "no"
      },
      "commonName": {
        "desc": "The common name associated with the client. This is either the name of the client certificate, or the Active Directory user name.",
        "type": "String",
        "required": "no"
      },
      "connectionEndTime": {
        "desc": "The date and time the client connection was terminated.",
        "type": "String",
        "required": "no"
      },
      "connectionEstablishedTime": {
        "desc": "The date and time the client connection was established.",
        "type": "String",
        "required": "no"
      },
      "connectionId": {
        "desc": "The ID of the client connection.",
        "type": "String",
        "required": "no"
      },
      "egressBytes": {
        "desc": "The number of bytes received by the client.",
        "type": "String",
        "required": "no"
      },
      "egressPackets": {
        "desc": "The number of packets received by the client.",
        "type": "String",
        "required": "no"
      },
      "ingressBytes": {
        "desc": "The number of bytes sent by the client.",
        "type": "String",
        "required": "no"
      },
      "ingressPackets": {
        "desc": "The number of packets sent by the client.",
        "type": "String",
        "required": "no"
      },
      "status": {
        "desc": "The current state of the client connection.",
        "type": "ClientVpnConnectionStatus object",
        "required": "no"
      },
      "timestamp": {
        "desc": "The current date and time.",
        "type": "String",
        "required": "no"
      },
      "username": {
        "desc": "The username of the client who established the client connection. This information is only provided if Active Directory client authentication is used.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ClientVpnConnectionStatus",
    "attrs": {
      "code": {
        "desc": "The state of the client connection.",
        "type": "String",
        "required": "no",
        "values": [
          "active",
          "failed-to-terminate",
          "terminating",
          "terminated"
        ]
      },
      "message": {
        "desc": "A message about the status of the client connection, if applicable.",
        "type": "String",
        "required": "no",
        "values": [
          "active",
          "failed-to-terminate",
          "terminating",
          "terminated"
        ]
      }
    }
  },
  {
    "title": "ClientVpnEndpoint",
    "attrs": {
      "associatedTargetNetwork": {
        "desc": "This member has been deprecated.",
        "type": "Array of AssociatedTargetNetwork objects",
        "required": "no"
      },
      "authenticationOptions": {
        "desc": "Information about the authentication method used by the Client VPN endpoint.",
        "type": "Array of ClientVpnAuthentication objects",
        "required": "no"
      },
      "clientCidrBlock": {
        "desc": "The IPv4 address range, in CIDR notation, from which client IP addresses are assigned.",
        "type": "String",
        "required": "no"
      },
      "clientVpnEndpointId": {
        "desc": "The ID of the Client VPN endpoint.",
        "type": "String",
        "required": "no"
      },
      "connectionLogOptions": {
        "desc": "Information about the client connection logging options for the Client VPN endpoint.",
        "type": "ConnectionLogResponseOptions object",
        "required": "no"
      },
      "creationTime": {
        "desc": "The date and time the Client VPN endpoint was created.",
        "type": "String",
        "required": "no"
      },
      "deletionTime": {
        "desc": "The date and time the Client VPN endpoint was deleted, if applicable.",
        "type": "String",
        "required": "no"
      },
      "description": {
        "desc": "A brief description of the endpoint.",
        "type": "String",
        "required": "no"
      },
      "dnsName": {
        "desc": "The DNS name to be used by clients when connecting to the Client VPN endpoint.",
        "type": "String",
        "required": "no"
      },
      "dnsServer": {
        "desc": "Information about the DNS servers to be used for DNS resolution.",
        "type": "Array of strings",
        "required": "no"
      },
      "securityGroupIdSet": {
        "desc": "The IDs of the security groups for the target network.",
        "type": "Array of strings",
        "required": "no"
      },
      "serverCertificateArn": {
        "desc": "The ARN of the server certificate.",
        "type": "String",
        "required": "no"
      },
      "splitTunnel": {
        "desc": "Indicates whether split-tunnel is enabled in the AWS Client VPN endpoint.",
        "type": "Boolean",
        "required": "no"
      },
      "status": {
        "desc": "The current state of the Client VPN endpoint.",
        "type": "ClientVpnEndpointStatus object",
        "required": "no"
      },
      "tagSet": {
        "desc": "Any tags assigned to the Client VPN endpoint.",
        "type": "Array of Tag objects",
        "required": "no"
      },
      "transportProtocol": {
        "desc": "The transport protocol used by the Client VPN endpoint.",
        "type": "String",
        "required": "no",
        "values": [
          "tcp",
          "udp"
        ]
      },
      "vpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "no",
        "values": [
          "tcp",
          "udp"
        ]
      },
      "vpnPort": {
        "desc": "The port number for the Client VPN endpoint.",
        "type": "Integer",
        "required": "no",
        "values": [
          "tcp",
          "udp"
        ]
      },
      "vpnProtocol": {
        "desc": "The protocol used by the VPN session.",
        "type": "String",
        "required": "no",
        "values": [
          "openvpn"
        ]
      }
    }
  },
  {
    "title": "ClientVpnEndpointStatus",
    "attrs": {
      "code": {
        "desc": "The state of the Client VPN endpoint. Possible states include:",
        "type": "String",
        "required": "no",
        "values": [
          "pending-associate",
          "available",
          "deleting",
          "deleted"
        ]
      },
      "message": {
        "desc": "A message about the status of the Client VPN endpoint.",
        "type": "String",
        "required": "no",
        "values": [
          "pending-associate",
          "available",
          "deleting",
          "deleted"
        ]
      }
    }
  },
  {
    "title": "ClientVpnRoute",
    "attrs": {
      "clientVpnEndpointId": {
        "desc": "The ID of the Client VPN endpoint with which the route is associated.",
        "type": "String",
        "required": "no"
      },
      "description": {
        "desc": "A brief description of the route.",
        "type": "String",
        "required": "no"
      },
      "destinationCidr": {
        "desc": "The IPv4 address range, in CIDR notation, of the route destination.",
        "type": "String",
        "required": "no"
      },
      "origin": {
        "desc": "Indicates how the route was associated with the Client VPN endpoint. associate indicates that the route was automatically added when the target network was associated with the Client VPN endpoint. add-route indicates that the route was manually added using the CreateClientVpnRoute action.",
        "type": "String",
        "required": "no"
      },
      "status": {
        "desc": "The current state of the route.",
        "type": "ClientVpnRouteStatus object",
        "required": "no"
      },
      "targetSubnet": {
        "desc": "The ID of the subnet through which traffic is routed.",
        "type": "String",
        "required": "no"
      },
      "type": {
        "desc": "The route type.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ClientVpnRouteStatus",
    "attrs": {
      "code": {
        "desc": "The state of the Client VPN endpoint route.",
        "type": "String",
        "required": "no",
        "values": [
          "creating",
          "active",
          "failed",
          "deleting"
        ]
      },
      "message": {
        "desc": "A message about the status of the Client VPN endpoint route, if applicable.",
        "type": "String",
        "required": "no",
        "values": [
          "creating",
          "active",
          "failed",
          "deleting"
        ]
      }
    }
  },
  {
    "title": "CoipAddressUsage",
    "attrs": {
      "allocationId": {
        "desc": "The allocation ID of the address.",
        "type": "String",
        "required": "no"
      },
      "awsAccountId": {
        "desc": "The AWS account ID.",
        "type": "String",
        "required": "no"
      },
      "awsService": {
        "desc": "The AWS service.",
        "type": "String",
        "required": "no"
      },
      "coIp": {
        "desc": "The customer-owned IP address.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "CoipPool",
    "attrs": {
      "localGatewayRouteTableId": {
        "desc": "The ID of the local gateway route table.",
        "type": "String",
        "required": "no"
      },
      "poolCidrSet": {
        "desc": "The address ranges of the address pool.",
        "type": "Array of strings",
        "required": "no"
      },
      "poolId": {
        "desc": "The ID of the address pool.",
        "type": "String",
        "required": "no"
      },
      "tagSet": {
        "desc": "The tags.",
        "type": "Array of Tag objects",
        "required": "no"
      }
    }
  },
  {
    "title": "ConnectionLogOptions",
    "attrs": {
      "CloudwatchLogGroup": {
        "desc": "The name of the CloudWatch Logs log group.",
        "type": "String",
        "required": "no"
      },
      "CloudwatchLogStream": {
        "desc": "The name of the CloudWatch Logs log stream to which the connection data is published.",
        "type": "String",
        "required": "no"
      },
      "Enabled": {
        "desc": "Indicates whether connection logging is enabled.",
        "type": "Boolean",
        "required": "no"
      }
    }
  },
  {
    "title": "ConnectionLogResponseOptions",
    "attrs": {
      "CloudwatchLogGroup": {
        "desc": "The name of the Amazon CloudWatch Logs log group to which connection logging data is published.",
        "type": "String",
        "required": "no"
      },
      "CloudwatchLogStream": {
        "desc": "The name of the Amazon CloudWatch Logs log stream to which connection logging data is published.",
        "type": "String",
        "required": "no"
      },
      "Enabled": {
        "desc": "Indicates whether client connection logging is enabled for the Client VPN endpoint.",
        "type": "Boolean",
        "required": "no"
      }
    }
  },
  {
    "title": "ConnectionNotification",
    "attrs": {
      "connectionEvents": {
        "desc": "The events for the notification. Valid values are Accept, Connect, Delete, and Reject.",
        "type": "Array of strings",
        "required": "no"
      },
      "connectionNotificationArn": {
        "desc": "The ARN of the SNS topic for the notification.",
        "type": "String",
        "required": "no"
      },
      "connectionNotificationId": {
        "desc": "The ID of the notification.",
        "type": "String",
        "required": "no"
      },
      "connectionNotificationState": {
        "desc": "The state of the notification.",
        "type": "String",
        "required": "no",
        "values": [
          "enabled",
          "disabled"
        ]
      },
      "connectionNotificationType": {
        "desc": "The type of notification.",
        "type": "String",
        "required": "no",
        "values": [
          "topic"
        ]
      },
      "serviceId": {
        "desc": "The ID of the endpoint service.",
        "type": "String",
        "required": "no",
        "values": [
          "topic"
        ]
      },
      "vpcEndpointId": {
        "desc": "The ID of the VPC endpoint.",
        "type": "String",
        "required": "no",
        "values": [
          "topic"
        ]
      }
    }
  },
  {
    "title": "ConversionTask",
    "attrs": {
      "conversionTaskId": {
        "desc": "The ID of the conversion task.",
        "type": "String",
        "required": "no"
      },
      "expirationTime": {
        "desc": "The time when the task expires. If the upload isn't complete before the expiration time, we automatically cancel the task.",
        "type": "String",
        "required": "no"
      },
      "importInstance": {
        "desc": "If the task is for importing an instance, this contains information about the import instance task.",
        "type": "ImportInstanceTaskDetails object",
        "required": "no"
      },
      "importVolume": {
        "desc": "If the task is for importing a volume, this contains information about the import volume task.",
        "type": "ImportVolumeTaskDetails object",
        "required": "no"
      },
      "state": {
        "desc": "The state of the conversion task.",
        "type": "String",
        "required": "no",
        "values": [
          "active",
          "cancelling",
          "cancelled",
          "completed"
        ]
      },
      "statusMessage": {
        "desc": "The status message related to the conversion task.",
        "type": "String",
        "required": "no",
        "values": [
          "active",
          "cancelling",
          "cancelled",
          "completed"
        ]
      },
      "tagSet": {
        "desc": "Any tags assigned to the task.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "active",
          "cancelling",
          "cancelled",
          "completed"
        ]
      }
    }
  },
  {
    "title": "CpuOptions",
    "attrs": {
      "coreCount": {
        "desc": "The number of CPU cores for the instance.",
        "type": "Integer",
        "required": "no"
      },
      "threadsPerCore": {
        "desc": "The number of threads per CPU core.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "CpuOptionsRequest",
    "attrs": {
      "CoreCount": {
        "desc": "The number of CPU cores for the instance.",
        "type": "Integer",
        "required": "no"
      },
      "ThreadsPerCore": {
        "desc": "The number of threads per CPU core. To disable multithreading for the instance, specify a value of 1. Otherwise, specify the default value of 2.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "CreateFleetError",
    "attrs": {
      "errorCode": {
        "desc": "The error code that indicates why the instance could not be launched. For more information about error codes, see Error Codes.",
        "type": "String",
        "required": "no"
      },
      "errorMessage": {
        "desc": "The error message that describes why the instance could not be launched. For more information about error messages, see Error Codes.",
        "type": "String",
        "required": "no"
      },
      "launchTemplateAndOverrides": {
        "desc": "The launch templates and overrides that were used for launching the instances. The values that you specify in the Overrides replace the values in the launch template.",
        "type": "LaunchTemplateAndOverridesResponse object",
        "required": "no"
      },
      "lifecycle": {
        "desc": "Indicates if the instance that could not be launched was a Spot Instance or On-Demand Instance.",
        "type": "String",
        "required": "no",
        "values": [
          "spot",
          "on-demand"
        ]
      }
    }
  },
  {
    "title": "CreateFleetInstance",
    "attrs": {
      "instanceIds": {
        "desc": "The IDs of the instances.",
        "type": "Array of strings",
        "required": "no"
      },
      "instanceType": {
        "desc": "The instance type.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "launchTemplateAndOverrides": {
        "desc": "The launch templates and overrides that were used for launching the instances. The values that you specify in the Overrides replace the values in the launch template.",
        "type": "LaunchTemplateAndOverridesResponse object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "lifecycle": {
        "desc": "Indicates if the instance that was launched is a Spot Instance or On-Demand Instance.",
        "type": "String",
        "required": "no",
        "values": [
          "spot",
          "on-demand"
        ]
      },
      "platform": {
        "desc": "The value is Windows for Windows instances. Otherwise, the value is blank.",
        "type": "String",
        "required": "no",
        "values": [
          "windows"
        ]
      }
    }
  },
  {
    "title": "CreateTransitGatewayVpcAttachmentRequestOptions",
    "attrs": {
      "DnsSupport": {
        "desc": "Enable or disable DNS support. The default is enable.",
        "type": "String",
        "required": "no",
        "values": [
          "enable",
          "disable"
        ]
      },
      "Ipv6Support": {
        "desc": "Enable or disable IPv6 support. The default is enable.",
        "type": "String",
        "required": "no",
        "values": [
          "enable",
          "disable"
        ]
      }
    }
  },
  {
    "title": "CreateVolumePermission",
    "attrs": {
      "Group (request), group (response)": {
        "desc": "The group to be added or removed. The possible value is all.",
        "type": "String",
        "required": "no",
        "values": [
          "all"
        ]
      },
      "UserId (request), userId (response)": {
        "desc": "The AWS account ID to be added or removed.",
        "type": "String",
        "required": "no",
        "values": [
          "all"
        ]
      }
    }
  },
  {
    "title": "CreateVolumePermissionModifications",
    "attrs": {
      "Add": {
        "desc": "Adds the specified AWS account ID or group to the list.",
        "type": "Array of CreateVolumePermission objects",
        "required": "no"
      },
      "Remove": {
        "desc": "Removes the specified AWS account ID or group from the list.",
        "type": "Array of CreateVolumePermission objects",
        "required": "no"
      }
    }
  },
  {
    "title": "CreditSpecification",
    "attrs": {
      "cpuCredits": {
        "desc": "The credit option for CPU usage of a T2 or T3 instance. Valid values are standard and unlimited.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "CreditSpecificationRequest",
    "attrs": {
      "CpuCredits": {
        "desc": "The credit option for CPU usage of a T2 or T3 instance. Valid values are standard and unlimited.",
        "type": "String",
        "required": "yes"
      }
    }
  },
  {
    "title": "CustomerGateway",
    "attrs": {
      "bgpAsn": {
        "desc": "The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).",
        "type": "String",
        "required": "no"
      },
      "certificateArn": {
        "desc": "The Amazon Resource Name (ARN) for the customer gateway certificate.",
        "type": "String",
        "required": "no"
      },
      "customerGatewayId": {
        "desc": "The ID of the customer gateway.",
        "type": "String",
        "required": "no"
      },
      "deviceName": {
        "desc": "The name of customer gateway device.",
        "type": "String",
        "required": "no"
      },
      "ipAddress": {
        "desc": "The Internet-routable IP address of the customer gateway's outside interface.",
        "type": "String",
        "required": "no"
      },
      "state": {
        "desc": "The current state of the customer gateway (pending | available | deleting | deleted).",
        "type": "String",
        "required": "no"
      },
      "tagSet": {
        "desc": "Any tags assigned to the customer gateway.",
        "type": "Array of Tag objects",
        "required": "no"
      },
      "type": {
        "desc": "The type of VPN connection the customer gateway supports (ipsec.1).",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "DeleteFleetError",
    "attrs": {
      "code": {
        "desc": "The error code.",
        "type": "String",
        "required": "no",
        "values": [
          "fleetiddoesnotexist",
          "fleetidmalformed",
          "fleetnotindeletablestate",
          "unexpectederror"
        ]
      },
      "message": {
        "desc": "The description for the error code.",
        "type": "String",
        "required": "no",
        "values": [
          "fleetiddoesnotexist",
          "fleetidmalformed",
          "fleetnotindeletablestate",
          "unexpectederror"
        ]
      }
    }
  },
  {
    "title": "DeleteFleetErrorItem",
    "attrs": {
      "error": {
        "desc": "The error.",
        "type": "DeleteFleetError object",
        "required": "no"
      },
      "fleetId": {
        "desc": "The ID of the EC2 Fleet.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "DeleteFleetSuccessItem",
    "attrs": {
      "currentFleetState": {
        "desc": "The current state of the EC2 Fleet.",
        "type": "String",
        "required": "no",
        "values": [
          "submitted",
          "active",
          "deleted",
          "failed",
          "deleted_running",
          "deleted_terminating",
          "modifying"
        ]
      },
      "fleetId": {
        "desc": "The ID of the EC2 Fleet.",
        "type": "String",
        "required": "no",
        "values": [
          "submitted",
          "active",
          "deleted",
          "failed",
          "deleted_running",
          "deleted_terminating",
          "modifying"
        ]
      },
      "previousFleetState": {
        "desc": "The previous state of the EC2 Fleet.",
        "type": "String",
        "required": "no",
        "values": [
          "submitted",
          "active",
          "deleted",
          "failed",
          "deleted_running",
          "deleted_terminating",
          "modifying"
        ]
      }
    }
  },
  {
    "title": "DeleteLaunchTemplateVersionsResponseErrorItem",
    "attrs": {
      "launchTemplateId": {
        "desc": "The ID of the launch template.",
        "type": "String",
        "required": "no"
      },
      "launchTemplateName": {
        "desc": "The name of the launch template.",
        "type": "String",
        "required": "no"
      },
      "responseError": {
        "desc": "Information about the error.",
        "type": "ResponseError object",
        "required": "no"
      },
      "versionNumber": {
        "desc": "The version number of the launch template.",
        "type": "Long",
        "required": "no"
      }
    }
  },
  {
    "title": "DeleteLaunchTemplateVersionsResponseSuccessItem",
    "attrs": {
      "launchTemplateId": {
        "desc": "The ID of the launch template.",
        "type": "String",
        "required": "no"
      },
      "launchTemplateName": {
        "desc": "The name of the launch template.",
        "type": "String",
        "required": "no"
      },
      "versionNumber": {
        "desc": "The version number of the launch template.",
        "type": "Long",
        "required": "no"
      }
    }
  },
  {
    "title": "DeleteQueuedReservedInstancesError",
    "attrs": {
      "code": {
        "desc": "The error code.",
        "type": "String",
        "required": "no",
        "values": [
          "reserved-instances-id-invalid",
          "reserved-instances-not-in-queued-state",
          "unexpected-error"
        ]
      },
      "message": {
        "desc": "The error message.",
        "type": "String",
        "required": "no",
        "values": [
          "reserved-instances-id-invalid",
          "reserved-instances-not-in-queued-state",
          "unexpected-error"
        ]
      }
    }
  },
  {
    "title": "DescribeFastSnapshotRestoreSuccessItem",
    "attrs": {
      "availabilityZone": {
        "desc": "The Availability Zone.",
        "type": "String",
        "required": "no"
      },
      "disabledTime": {
        "desc": "The time at which fast snapshot restores entered the disabled state.",
        "type": "Timestamp",
        "required": "no"
      },
      "disablingTime": {
        "desc": "The time at which fast snapshot restores entered the disabling state.",
        "type": "Timestamp",
        "required": "no"
      },
      "enabledTime": {
        "desc": "The time at which fast snapshot restores entered the enabled state.",
        "type": "Timestamp",
        "required": "no"
      },
      "enablingTime": {
        "desc": "The time at which fast snapshot restores entered the enabling state.",
        "type": "Timestamp",
        "required": "no"
      },
      "optimizingTime": {
        "desc": "The time at which fast snapshot restores entered the optimizing state.",
        "type": "Timestamp",
        "required": "no"
      },
      "ownerAlias": {
        "desc": "The alias of the snapshot owner.",
        "type": "String",
        "required": "no"
      },
      "ownerId": {
        "desc": "The ID of the AWS account that owns the snapshot.",
        "type": "String",
        "required": "no"
      },
      "snapshotId": {
        "desc": "The ID of the snapshot.",
        "type": "String",
        "required": "no"
      },
      "state": {
        "desc": "The state of fast snapshot restores.",
        "type": "String",
        "required": "no",
        "values": [
          "enabling",
          "optimizing",
          "enabled",
          "disabling",
          "disabled"
        ]
      },
      "stateTransitionReason": {
        "desc": "The reason for the state transition. The possible values are as follows:",
        "type": "String",
        "required": "no",
        "values": [
          "enabling",
          "optimizing",
          "enabled",
          "disabling",
          "disabled"
        ]
      }
    }
  },
  {
    "title": "DescribeFleetError",
    "attrs": {
      "errorCode": {
        "desc": "The error code that indicates why the instance could not be launched. For more information about error codes, see Error Codes.",
        "type": "String",
        "required": "no"
      },
      "errorMessage": {
        "desc": "The error message that describes why the instance could not be launched. For more information about error messages, see Error Codes.",
        "type": "String",
        "required": "no"
      },
      "launchTemplateAndOverrides": {
        "desc": "The launch templates and overrides that were used for launching the instances. The values that you specify in the Overrides replace the values in the launch template.",
        "type": "LaunchTemplateAndOverridesResponse object",
        "required": "no"
      },
      "lifecycle": {
        "desc": "Indicates if the instance that could not be launched was a Spot Instance or On-Demand Instance.",
        "type": "String",
        "required": "no",
        "values": [
          "spot",
          "on-demand"
        ]
      }
    }
  },
  {
    "title": "DescribeFleetsInstances",
    "attrs": {
      "instanceIds": {
        "desc": "The IDs of the instances.",
        "type": "Array of strings",
        "required": "no"
      },
      "instanceType": {
        "desc": "The instance type.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "launchTemplateAndOverrides": {
        "desc": "The launch templates and overrides that were used for launching the instances. The values that you specify in the Overrides replace the values in the launch template.",
        "type": "LaunchTemplateAndOverridesResponse object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "lifecycle": {
        "desc": "Indicates if the instance that was launched is a Spot Instance or On-Demand Instance.",
        "type": "String",
        "required": "no",
        "values": [
          "spot",
          "on-demand"
        ]
      },
      "platform": {
        "desc": "The value is Windows for Windows instances. Otherwise, the value is blank.",
        "type": "String",
        "required": "no",
        "values": [
          "windows"
        ]
      }
    }
  },
  {
    "title": "DhcpConfiguration",
    "attrs": {
      "key": {
        "desc": "The name of a DHCP option.",
        "type": "String",
        "required": "no"
      },
      "valueSet": {
        "desc": "One or more values for the DHCP option.",
        "type": "Array of AttributeValue objects",
        "required": "no"
      }
    }
  },
  {
    "title": "DhcpOptions",
    "attrs": {
      "dhcpConfigurationSet": {
        "desc": "One or more DHCP options in the set.",
        "type": "Array of DhcpConfiguration objects",
        "required": "no"
      },
      "dhcpOptionsId": {
        "desc": "The ID of the set of DHCP options.",
        "type": "String",
        "required": "no"
      },
      "ownerId": {
        "desc": "The ID of the AWS account that owns the DHCP options set.",
        "type": "String",
        "required": "no"
      },
      "tagSet": {
        "desc": "Any tags assigned to the DHCP options set.",
        "type": "Array of Tag objects",
        "required": "no"
      }
    }
  },
  {
    "title": "DirectoryServiceAuthentication",
    "attrs": {
      "directoryId": {
        "desc": "The ID of the Active Directory used for authentication.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "DirectoryServiceAuthenticationRequest",
    "attrs": {
      "DirectoryId": {
        "desc": "The ID of the Active Directory to be used for authentication.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "DisableFastSnapshotRestoreErrorItem",
    "attrs": {
      "fastSnapshotRestoreStateErrorSet": {
        "desc": "The errors.",
        "type": "Array of DisableFastSnapshotRestoreStateErrorItem objects",
        "required": "no"
      },
      "snapshotId": {
        "desc": "The ID of the snapshot.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "DisableFastSnapshotRestoreStateError",
    "attrs": {
      "code": {
        "desc": "The error code.",
        "type": "String",
        "required": "no"
      },
      "message": {
        "desc": "The error message.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "DisableFastSnapshotRestoreStateErrorItem",
    "attrs": {
      "availabilityZone": {
        "desc": "The Availability Zone.",
        "type": "String",
        "required": "no"
      },
      "error": {
        "desc": "The error.",
        "type": "DisableFastSnapshotRestoreStateError object",
        "required": "no"
      }
    }
  },
  {
    "title": "DisableFastSnapshotRestoreSuccessItem",
    "attrs": {
      "availabilityZone": {
        "desc": "The Availability Zone.",
        "type": "String",
        "required": "no"
      },
      "disabledTime": {
        "desc": "The time at which fast snapshot restores entered the disabled state.",
        "type": "Timestamp",
        "required": "no"
      },
      "disablingTime": {
        "desc": "The time at which fast snapshot restores entered the disabling state.",
        "type": "Timestamp",
        "required": "no"
      },
      "enabledTime": {
        "desc": "The time at which fast snapshot restores entered the enabled state.",
        "type": "Timestamp",
        "required": "no"
      },
      "enablingTime": {
        "desc": "The time at which fast snapshot restores entered the enabling state.",
        "type": "Timestamp",
        "required": "no"
      },
      "optimizingTime": {
        "desc": "The time at which fast snapshot restores entered the optimizing state.",
        "type": "Timestamp",
        "required": "no"
      },
      "ownerAlias": {
        "desc": "The alias of the snapshot owner.",
        "type": "String",
        "required": "no"
      },
      "ownerId": {
        "desc": "The ID of the AWS account that owns the snapshot.",
        "type": "String",
        "required": "no"
      },
      "snapshotId": {
        "desc": "The ID of the snapshot.",
        "type": "String",
        "required": "no"
      },
      "state": {
        "desc": "The state of fast snapshot restores for the snapshot.",
        "type": "String",
        "required": "no",
        "values": [
          "enabling",
          "optimizing",
          "enabled",
          "disabling",
          "disabled"
        ]
      },
      "stateTransitionReason": {
        "desc": "The reason for the state transition. The possible values are as follows:",
        "type": "String",
        "required": "no",
        "values": [
          "enabling",
          "optimizing",
          "enabled",
          "disabling",
          "disabled"
        ]
      }
    }
  },
  {
    "title": "DiskImage",
    "attrs": {
      "Description": {
        "desc": "A description of the disk image.",
        "type": "String",
        "required": "no"
      },
      "Image": {
        "desc": "Information about the disk image.",
        "type": "DiskImageDetail object",
        "required": "no"
      },
      "Volume": {
        "desc": "Information about the volume.",
        "type": "VolumeDetail object",
        "required": "no"
      }
    }
  },
  {
    "title": "DiskImageDescription",
    "attrs": {
      "checksum": {
        "desc": "The checksum computed for the disk image.",
        "type": "String",
        "required": "no"
      },
      "format": {
        "desc": "The disk image format.",
        "type": "String",
        "required": "no",
        "values": [
          "vmdk",
          "raw",
          "vhd"
        ]
      },
      "importManifestUrl": {
        "desc": "A presigned URL for the import manifest stored in Amazon S3. For information about creating a presigned URL for an Amazon S3 object, read the \"Query String Request Authentication Alternative\" section of the Authenticating REST Requests topic in the Amazon Simple Storage Service Developer Guide.",
        "type": "String",
        "required": "no",
        "values": [
          "vmdk",
          "raw",
          "vhd"
        ]
      },
      "size": {
        "desc": "The size of the disk image, in GiB.",
        "type": "Long",
        "required": "no",
        "values": [
          "vmdk",
          "raw",
          "vhd"
        ]
      }
    }
  },
  {
    "title": "DiskImageDetail",
    "attrs": {
      "Bytes": {
        "desc": "The size of the disk image, in GiB.",
        "type": "Long",
        "required": "yes"
      },
      "Format": {
        "desc": "The disk image format.",
        "type": "String",
        "required": "yes",
        "values": [
          "vmdk",
          "raw",
          "vhd"
        ]
      },
      "ImportManifestUrl": {
        "desc": "A presigned URL for the import manifest stored in Amazon S3 and presented here as an Amazon S3 presigned URL. For information about creating a presigned URL for an Amazon S3 object, read the \"Query String Request Authentication Alternative\" section of the Authenticating REST Requests topic in the Amazon Simple Storage Service Developer Guide.",
        "type": "String",
        "required": "yes",
        "values": [
          "vmdk",
          "raw",
          "vhd"
        ]
      }
    }
  },
  {
    "title": "DiskImageVolumeDescription",
    "attrs": {
      "id": {
        "desc": "The volume identifier.",
        "type": "String",
        "required": "no"
      },
      "size": {
        "desc": "The size of the volume, in GiB.",
        "type": "Long",
        "required": "no"
      }
    }
  },
  {
    "title": "DiskInfo",
    "attrs": {
      "count": {
        "desc": "The number of disks with this configuration.",
        "type": "Integer",
        "required": "no"
      },
      "sizeInGB": {
        "desc": "The size of the disk in GB.",
        "type": "Long",
        "required": "no"
      },
      "type": {
        "desc": "The type of disk.",
        "type": "String",
        "required": "no",
        "values": [
          "hdd",
          "ssd"
        ]
      }
    }
  },
  {
    "title": "DnsEntry",
    "attrs": {
      "dnsName": {
        "desc": "The DNS name.",
        "type": "String",
        "required": "no"
      },
      "hostedZoneId": {
        "desc": "The ID of the private hosted zone.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "DnsServersOptionsModifyStructure",
    "attrs": {
      "CustomDnsServers": {
        "desc": "The IPv4 address range, in CIDR notation, of the DNS servers to be used. You can specify up to two DNS servers. Ensure that the DNS servers can be reached by the clients. The specified values overwrite the existing values.",
        "type": "Array of strings",
        "required": "no"
      },
      "Enabled": {
        "desc": "Indicates whether DNS servers should be used. Specify False to delete the existing DNS servers.",
        "type": "Boolean",
        "required": "no"
      }
    }
  },
  {
    "title": "EbsBlockDevice",
    "attrs": {
      "DeleteOnTermination (request), deleteOnTermination (response)": {
        "desc": "Indicates whether the EBS volume is deleted on instance termination. For more information, see Preserving Amazon EBS Volumes on Instance Termination in the Amazon Elastic Compute Cloud User Guide.",
        "type": "Boolean",
        "required": "no"
      },
      "Encrypted (request), encrypted (response)": {
        "desc": "Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The effect of setting the encryption state to true depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide.",
        "type": "Boolean",
        "required": "no"
      },
      "Iops (request), iops (response)": {
        "desc": "The number of I/O operations per second (IOPS) that the volume supports. For io1 volumes, this represents the number of IOPS that are provisioned for the volume. For gp2 volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide.",
        "type": "Integer",
        "required": "no"
      },
      "KmsKeyId (request), KmsKeyId (response)": {
        "desc": "Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.",
        "type": "String",
        "required": "no"
      },
      "SnapshotId (request), snapshotId (response)": {
        "desc": "The ID of the snapshot.",
        "type": "String",
        "required": "no"
      },
      "VolumeSize (request), volumeSize (response)": {
        "desc": "The size of the volume, in GiB.",
        "type": "Integer",
        "required": "no"
      },
      "VolumeType (request), volumeType (response)": {
        "desc": "The volume type. If you set the type to io1, you must also specify the Iops parameter. If you set the type to gp2, st1, sc1, or standard, you must omit the Iops parameter.",
        "type": "String",
        "required": "no",
        "values": [
          "standard",
          "io1",
          "gp2",
          "sc1",
          "st1"
        ]
      }
    }
  },
  {
    "title": "EbsInfo",
    "attrs": {
      "ebsOptimizedSupport": {
        "desc": "Indicates that the instance type is Amazon EBS-optimized. For more information, see Amazon EBS-Optimized Instances in Amazon EC2 User Guide for Linux Instances.",
        "type": "String",
        "required": "no",
        "values": [
          "unsupported",
          "supported",
          "default"
        ]
      },
      "encryptionSupport": {
        "desc": "Indicates whether Amazon EBS encryption is supported.",
        "type": "String",
        "required": "no",
        "values": [
          "unsupported",
          "supported"
        ]
      }
    }
  },
  {
    "title": "EbsInstanceBlockDevice",
    "attrs": {
      "attachTime": {
        "desc": "The time stamp when the attachment initiated.",
        "type": "Timestamp",
        "required": "no"
      },
      "deleteOnTermination": {
        "desc": "Indicates whether the volume is deleted on instance termination.",
        "type": "Boolean",
        "required": "no"
      },
      "status": {
        "desc": "The attachment state.",
        "type": "String",
        "required": "no",
        "values": [
          "attaching",
          "attached",
          "detaching",
          "detached"
        ]
      },
      "volumeId": {
        "desc": "The ID of the EBS volume.",
        "type": "String",
        "required": "no",
        "values": [
          "attaching",
          "attached",
          "detaching",
          "detached"
        ]
      }
    }
  },
  {
    "title": "EbsInstanceBlockDeviceSpecification",
    "attrs": {
      "DeleteOnTermination": {
        "desc": "Indicates whether the volume is deleted on instance termination.",
        "type": "Boolean",
        "required": "no"
      },
      "VolumeId": {
        "desc": "The ID of the EBS volume.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "EgressOnlyInternetGateway",
    "attrs": {
      "attachmentSet": {
        "desc": "Information about the attachment of the egress-only internet gateway.",
        "type": "Array of InternetGatewayAttachment objects",
        "required": "no"
      },
      "egressOnlyInternetGatewayId": {
        "desc": "The ID of the egress-only internet gateway.",
        "type": "String",
        "required": "no"
      },
      "tagSet": {
        "desc": "The tags assigned to the egress-only internet gateway.",
        "type": "Array of Tag objects",
        "required": "no"
      }
    }
  },
  {
    "title": "ElasticGpuAssociation",
    "attrs": {
      "elasticGpuAssociationId": {
        "desc": "The ID of the association.",
        "type": "String",
        "required": "no"
      },
      "elasticGpuAssociationState": {
        "desc": "The state of the association between the instance and the Elastic Graphics accelerator.",
        "type": "String",
        "required": "no"
      },
      "elasticGpuAssociationTime": {
        "desc": "The time the Elastic Graphics accelerator was associated with the instance.",
        "type": "String",
        "required": "no"
      },
      "elasticGpuId": {
        "desc": "The ID of the Elastic Graphics accelerator.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ElasticGpuHealth",
    "attrs": {
      "status": {
        "desc": "The health status.",
        "type": "String",
        "required": "no",
        "values": [
          "ok",
          "impaired"
        ]
      }
    }
  },
  {
    "title": "ElasticGpus",
    "attrs": {
      "availabilityZone": {
        "desc": "The Availability Zone in the which the Elastic Graphics accelerator resides.",
        "type": "String",
        "required": "no"
      },
      "elasticGpuHealth": {
        "desc": "The status of the Elastic Graphics accelerator.",
        "type": "ElasticGpuHealth object",
        "required": "no"
      },
      "elasticGpuId": {
        "desc": "The ID of the Elastic Graphics accelerator.",
        "type": "String",
        "required": "no"
      },
      "elasticGpuState": {
        "desc": "The state of the Elastic Graphics accelerator.",
        "type": "String",
        "required": "no",
        "values": [
          "attached"
        ]
      },
      "elasticGpuType": {
        "desc": "The type of Elastic Graphics accelerator.",
        "type": "String",
        "required": "no",
        "values": [
          "attached"
        ]
      },
      "instanceId": {
        "desc": "The ID of the instance to which the Elastic Graphics accelerator is attached.",
        "type": "String",
        "required": "no",
        "values": [
          "attached"
        ]
      },
      "tagSet": {
        "desc": "The tags assigned to the Elastic Graphics accelerator.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "attached"
        ]
      }
    }
  },
  {
    "title": "ElasticGpuSpecification",
    "attrs": {
      "Type": {
        "desc": "The type of Elastic Graphics accelerator. For more information about the values to specify for Type, see Elastic Graphics Basics, specifically the Elastic Graphics accelerator column, in the Amazon Elastic Compute Cloud User Guide for Windows Instances.",
        "type": "String",
        "required": "yes"
      }
    }
  },
  {
    "title": "ElasticGpuSpecificationResponse",
    "attrs": {
      "type": {
        "desc": "The elastic GPU type.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ElasticInferenceAccelerator",
    "attrs": {
      "Count": {
        "desc": "The number of elastic inference accelerators to attach to the instance.",
        "type": "Integer",
        "required": "no"
      },
      "Type": {
        "desc": "The type of elastic inference accelerator. The possible values are eia1.medium, eia1.large, and eia1.xlarge.",
        "type": "String",
        "required": "yes"
      }
    }
  },
  {
    "title": "ElasticInferenceAcceleratorAssociation",
    "attrs": {
      "elasticInferenceAcceleratorArn": {
        "desc": "The Amazon Resource Name (ARN) of the elastic inference accelerator.",
        "type": "String",
        "required": "no"
      },
      "elasticInferenceAcceleratorAssociationId": {
        "desc": "The ID of the association.",
        "type": "String",
        "required": "no"
      },
      "elasticInferenceAcceleratorAssociationState": {
        "desc": "The state of the elastic inference accelerator.",
        "type": "String",
        "required": "no"
      },
      "elasticInferenceAcceleratorAssociationTime": {
        "desc": "The time at which the elastic inference accelerator is associated with an instance.",
        "type": "Timestamp",
        "required": "no"
      }
    }
  },
  {
    "title": "EnableFastSnapshotRestoreErrorItem",
    "attrs": {
      "fastSnapshotRestoreStateErrorSet": {
        "desc": "The errors.",
        "type": "Array of EnableFastSnapshotRestoreStateErrorItem objects",
        "required": "no"
      },
      "snapshotId": {
        "desc": "The ID of the snapshot.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "EnableFastSnapshotRestoreStateError",
    "attrs": {
      "code": {
        "desc": "The error code.",
        "type": "String",
        "required": "no"
      },
      "message": {
        "desc": "The error message.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "EnableFastSnapshotRestoreStateErrorItem",
    "attrs": {
      "availabilityZone": {
        "desc": "The Availability Zone.",
        "type": "String",
        "required": "no"
      },
      "error": {
        "desc": "The error.",
        "type": "EnableFastSnapshotRestoreStateError object",
        "required": "no"
      }
    }
  },
  {
    "title": "EnableFastSnapshotRestoreSuccessItem",
    "attrs": {
      "availabilityZone": {
        "desc": "The Availability Zone.",
        "type": "String",
        "required": "no"
      },
      "disabledTime": {
        "desc": "The time at which fast snapshot restores entered the disabled state.",
        "type": "Timestamp",
        "required": "no"
      },
      "disablingTime": {
        "desc": "The time at which fast snapshot restores entered the disabling state.",
        "type": "Timestamp",
        "required": "no"
      },
      "enabledTime": {
        "desc": "The time at which fast snapshot restores entered the enabled state.",
        "type": "Timestamp",
        "required": "no"
      },
      "enablingTime": {
        "desc": "The time at which fast snapshot restores entered the enabling state.",
        "type": "Timestamp",
        "required": "no"
      },
      "optimizingTime": {
        "desc": "The time at which fast snapshot restores entered the optimizing state.",
        "type": "Timestamp",
        "required": "no"
      },
      "ownerAlias": {
        "desc": "The alias of the snapshot owner.",
        "type": "String",
        "required": "no"
      },
      "ownerId": {
        "desc": "The ID of the AWS account that owns the snapshot.",
        "type": "String",
        "required": "no"
      },
      "snapshotId": {
        "desc": "The ID of the snapshot.",
        "type": "String",
        "required": "no"
      },
      "state": {
        "desc": "The state of fast snapshot restores.",
        "type": "String",
        "required": "no",
        "values": [
          "enabling",
          "optimizing",
          "enabled",
          "disabling",
          "disabled"
        ]
      },
      "stateTransitionReason": {
        "desc": "The reason for the state transition. The possible values are as follows:",
        "type": "String",
        "required": "no",
        "values": [
          "enabling",
          "optimizing",
          "enabled",
          "disabling",
          "disabled"
        ]
      }
    }
  },
  {
    "title": "EventInformation",
    "attrs": {
      "eventDescription": {
        "desc": "The description of the event.",
        "type": "String",
        "required": "no"
      },
      "eventSubType": {
        "desc": "The event.",
        "type": "String",
        "required": "no"
      },
      "instanceId": {
        "desc": "The ID of the instance. This information is available only for instanceChange events.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ExportImageTask",
    "attrs": {
      "description": {
        "desc": "A description of the image being exported.",
        "type": "String",
        "required": "no"
      },
      "exportImageTaskId": {
        "desc": "The ID of the export image task.",
        "type": "String",
        "required": "no"
      },
      "imageId": {
        "desc": "The ID of the image.",
        "type": "String",
        "required": "no"
      },
      "progress": {
        "desc": "The percent complete of the export image task.",
        "type": "String",
        "required": "no"
      },
      "s3ExportLocation": {
        "desc": "Information about the destination S3 bucket.",
        "type": "ExportTaskS3Location object",
        "required": "no"
      },
      "status": {
        "desc": "The status of the export image task. The possible values are active, completed, deleting, and deleted.",
        "type": "String",
        "required": "no"
      },
      "statusMessage": {
        "desc": "The status message for the export image task.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ExportTask",
    "attrs": {
      "description": {
        "desc": "A description of the resource being exported.",
        "type": "String",
        "required": "no"
      },
      "exportTaskId": {
        "desc": "The ID of the export task.",
        "type": "String",
        "required": "no"
      },
      "exportToS3": {
        "desc": "Information about the export task.",
        "type": "ExportToS3Task object",
        "required": "no"
      },
      "instanceExport": {
        "desc": "Information about the instance to export.",
        "type": "InstanceExportDetails object",
        "required": "no"
      },
      "state": {
        "desc": "The state of the export task.",
        "type": "String",
        "required": "no",
        "values": [
          "active",
          "cancelling",
          "cancelled",
          "completed"
        ]
      },
      "statusMessage": {
        "desc": "The status message related to the export task.",
        "type": "String",
        "required": "no",
        "values": [
          "active",
          "cancelling",
          "cancelled",
          "completed"
        ]
      },
      "tagSet": {
        "desc": "The tags for the export task.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "active",
          "cancelling",
          "cancelled",
          "completed"
        ]
      }
    }
  },
  {
    "title": "ExportTaskS3Location",
    "attrs": {
      "s3Bucket": {
        "desc": "The destination S3 bucket.",
        "type": "String",
        "required": "no"
      },
      "s3Prefix": {
        "desc": "The prefix (logical hierarchy) in the bucket.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ExportTaskS3LocationRequest",
    "attrs": {
      "S3Bucket": {
        "desc": "The destination S3 bucket.",
        "type": "String",
        "required": "yes"
      },
      "S3Prefix": {
        "desc": "The prefix (logical hierarchy) in the bucket.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ExportToS3Task",
    "attrs": {
      "containerFormat": {
        "desc": "The container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is exported.",
        "type": "String",
        "required": "no",
        "values": [
          "ova"
        ]
      },
      "diskImageFormat": {
        "desc": "The format for the exported image.",
        "type": "String",
        "required": "no",
        "values": [
          "vmdk",
          "raw",
          "vhd"
        ]
      },
      "s3Bucket": {
        "desc": "The S3 bucket for the destination image. The destination bucket must exist and grant WRITE and READ_ACP permissions to the AWS account vm-import-export@amazon.com.",
        "type": "String",
        "required": "no",
        "values": [
          "vmdk",
          "raw",
          "vhd"
        ]
      },
      "s3Key": {
        "desc": "The encryption key for your S3 bucket.",
        "type": "String",
        "required": "no",
        "values": [
          "vmdk",
          "raw",
          "vhd"
        ]
      }
    }
  },
  {
    "title": "ExportToS3TaskSpecification",
    "attrs": {
      "ContainerFormat": {
        "desc": "The container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is exported.",
        "type": "String",
        "required": "no",
        "values": [
          "ova"
        ]
      },
      "DiskImageFormat": {
        "desc": "The format for the exported image.",
        "type": "String",
        "required": "no",
        "values": [
          "vmdk",
          "raw",
          "vhd"
        ]
      },
      "S3Bucket": {
        "desc": "The S3 bucket for the destination image. The destination bucket must exist and grant WRITE and READ_ACP permissions to the AWS account vm-import-export@amazon.com.",
        "type": "String",
        "required": "no",
        "values": [
          "vmdk",
          "raw",
          "vhd"
        ]
      },
      "S3Prefix": {
        "desc": "The image is written to a single object in the S3 bucket at the S3 key s3prefix + exportTaskId + '.' + diskImageFormat.",
        "type": "String",
        "required": "no",
        "values": [
          "vmdk",
          "raw",
          "vhd"
        ]
      }
    }
  },
  {
    "title": "FailedQueuedPurchaseDeletion",
    "attrs": {
      "error": {
        "desc": "The error.",
        "type": "DeleteQueuedReservedInstancesError object",
        "required": "no"
      },
      "reservedInstancesId": {
        "desc": "The ID of the Reserved Instance.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "Filter",
    "attrs": {
      "Name": {
        "desc": "The name of the filter. Filter names are case-sensitive.",
        "type": "String",
        "required": "no"
      },
      "Values": {
        "desc": "The filter values. Filter values are case-sensitive.",
        "type": "Array of strings",
        "required": "no"
      }
    }
  },
  {
    "title": "FleetData",
    "attrs": {
      "activityStatus": {
        "desc": "The progress of the EC2 Fleet. If there is an error, the status is error. After all requests are placed, the status is pending_fulfillment. If the size of the EC2 Fleet is equal to or greater than its target capacity, the status is fulfilled. If the size of the EC2 Fleet is decreased, the status is pending_termination while instances are terminating.",
        "type": "String",
        "required": "no",
        "values": [
          "error",
          "pending_fulfillment",
          "pending_termination",
          "fulfilled"
        ]
      },
      "clientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see Ensuring Idempotency.",
        "type": "String",
        "required": "no",
        "values": [
          "error",
          "pending_fulfillment",
          "pending_termination",
          "fulfilled"
        ]
      },
      "createTime": {
        "desc": "The creation date and time of the EC2 Fleet.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "error",
          "pending_fulfillment",
          "pending_termination",
          "fulfilled"
        ]
      },
      "errorSet": {
        "desc": "Information about the instances that could not be launched by the fleet. Valid only when Type is set to instant.",
        "type": "Array of DescribeFleetError objects",
        "required": "no",
        "values": [
          "error",
          "pending_fulfillment",
          "pending_termination",
          "fulfilled"
        ]
      },
      "excessCapacityTerminationPolicy": {
        "desc": "Indicates whether running instances should be terminated if the target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.",
        "type": "String",
        "required": "no",
        "values": [
          "no-termination",
          "termination"
        ]
      },
      "fleetId": {
        "desc": "The ID of the EC2 Fleet.",
        "type": "String",
        "required": "no",
        "values": [
          "no-termination",
          "termination"
        ]
      },
      "fleetInstanceSet": {
        "desc": "Information about the instances that were launched by the fleet. Valid only when Type is set to instant.",
        "type": "Array of DescribeFleetsInstances objects",
        "required": "no",
        "values": [
          "no-termination",
          "termination"
        ]
      },
      "fleetState": {
        "desc": "The state of the EC2 Fleet.",
        "type": "String",
        "required": "no",
        "values": [
          "submitted",
          "active",
          "deleted",
          "failed",
          "deleted_running",
          "deleted_terminating",
          "modifying"
        ]
      },
      "fulfilledCapacity": {
        "desc": "The number of units fulfilled by this request compared to the set target capacity.",
        "type": "Double",
        "required": "no",
        "values": [
          "submitted",
          "active",
          "deleted",
          "failed",
          "deleted_running",
          "deleted_terminating",
          "modifying"
        ]
      },
      "fulfilledOnDemandCapacity": {
        "desc": "The number of units fulfilled by this request compared to the set target On-Demand capacity.",
        "type": "Double",
        "required": "no",
        "values": [
          "submitted",
          "active",
          "deleted",
          "failed",
          "deleted_running",
          "deleted_terminating",
          "modifying"
        ]
      },
      "launchTemplateConfigs": {
        "desc": "The launch template and overrides.",
        "type": "Array of FleetLaunchTemplateConfig objects",
        "required": "no",
        "values": [
          "submitted",
          "active",
          "deleted",
          "failed",
          "deleted_running",
          "deleted_terminating",
          "modifying"
        ]
      },
      "onDemandOptions": {
        "desc": "The allocation strategy of On-Demand Instances in an EC2 Fleet.",
        "type": "OnDemandOptions object",
        "required": "no",
        "values": [
          "submitted",
          "active",
          "deleted",
          "failed",
          "deleted_running",
          "deleted_terminating",
          "modifying"
        ]
      },
      "replaceUnhealthyInstances": {
        "desc": "Indicates whether EC2 Fleet should replace unhealthy instances.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "submitted",
          "active",
          "deleted",
          "failed",
          "deleted_running",
          "deleted_terminating",
          "modifying"
        ]
      },
      "spotOptions": {
        "desc": "The configuration of Spot Instances in an EC2 Fleet.",
        "type": "SpotOptions object",
        "required": "no",
        "values": [
          "submitted",
          "active",
          "deleted",
          "failed",
          "deleted_running",
          "deleted_terminating",
          "modifying"
        ]
      },
      "tagSet": {
        "desc": "The tags for an EC2 Fleet resource.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "submitted",
          "active",
          "deleted",
          "failed",
          "deleted_running",
          "deleted_terminating",
          "modifying"
        ]
      },
      "targetCapacitySpecification": {
        "desc": "The number of units to request. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is maintain, you can specify a target capacity of 0 and add capacity later.",
        "type": "TargetCapacitySpecification object",
        "required": "no",
        "values": [
          "submitted",
          "active",
          "deleted",
          "failed",
          "deleted_running",
          "deleted_terminating",
          "modifying"
        ]
      },
      "terminateInstancesWithExpiration": {
        "desc": "Indicates whether running instances should be terminated when the EC2 Fleet expires.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "submitted",
          "active",
          "deleted",
          "failed",
          "deleted_running",
          "deleted_terminating",
          "modifying"
        ]
      },
      "type": {
        "desc": "The type of request. Indicates whether the EC2 Fleet only requests the target capacity, or also attempts to maintain it. If you request a certain target capacity, EC2 Fleet only places the required requests; it does not attempt to replenish instances if capacity is diminished, and it does not submit requests in alternative capacity pools if capacity is unavailable. To maintain a certain target capacity, EC2 Fleet places the required requests to meet this target capacity. It also automatically replenishes any interrupted Spot Instances. Default: maintain.",
        "type": "String",
        "required": "no",
        "values": [
          "request",
          "maintain",
          "instant"
        ]
      },
      "validFrom": {
        "desc": "The start date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "request",
          "maintain",
          "instant"
        ]
      },
      "validUntil": {
        "desc": "The end date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new instance requests are placed or able to fulfill the request. The default end date is 7 days from the current date.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "request",
          "maintain",
          "instant"
        ]
      }
    }
  },
  {
    "title": "FleetLaunchTemplateConfig",
    "attrs": {
      "launchTemplateSpecification": {
        "desc": "The launch template.",
        "type": "FleetLaunchTemplateSpecification object",
        "required": "no"
      },
      "overrides": {
        "desc": "Any parameters that you specify override the same parameters in the launch template.",
        "type": "Array of FleetLaunchTemplateOverrides objects",
        "required": "no"
      }
    }
  },
  {
    "title": "FleetLaunchTemplateConfigRequest",
    "attrs": {
      "LaunchTemplateSpecification": {
        "desc": "The launch template to use. You must specify either the launch template ID or launch template name in the request.",
        "type": "FleetLaunchTemplateSpecificationRequest object",
        "required": "no"
      },
      "Overrides": {
        "desc": "Any parameters that you specify override the same parameters in the launch template.",
        "type": "Array of FleetLaunchTemplateOverridesRequest objects",
        "required": "no"
      }
    }
  },
  {
    "title": "FleetLaunchTemplateOverrides",
    "attrs": {
      "availabilityZone": {
        "desc": "The Availability Zone in which to launch the instances.",
        "type": "String",
        "required": "no"
      },
      "instanceType": {
        "desc": "The instance type.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "maxPrice": {
        "desc": "The maximum price per unit hour that you are willing to pay for a Spot Instance.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "placement": {
        "desc": "The location where the instance launched, if applicable.",
        "type": "PlacementResponse object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "priority": {
        "desc": "The priority for the launch template override. If AllocationStrategy is set to prioritized, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. Valid values are whole numbers starting at 0. The lower the number, the higher the priority. If no number is set, the override has the lowest priority.",
        "type": "Double",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "subnetId": {
        "desc": "The ID of the subnet in which to launch the instances.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "weightedCapacity": {
        "desc": "The number of units provided by the specified instance type.",
        "type": "Double",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      }
    }
  },
  {
    "title": "FleetLaunchTemplateOverridesRequest",
    "attrs": {
      "AvailabilityZone": {
        "desc": "The Availability Zone in which to launch the instances.",
        "type": "String",
        "required": "no"
      },
      "InstanceType": {
        "desc": "The instance type.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "MaxPrice": {
        "desc": "The maximum price per unit hour that you are willing to pay for a Spot Instance.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "Placement": {
        "desc": "The location where the instance launched, if applicable.",
        "type": "Placement object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "Priority": {
        "desc": "The priority for the launch template override. If AllocationStrategy is set to prioritized, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. Valid values are whole numbers starting at 0. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority.",
        "type": "Double",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "SubnetId": {
        "desc": "The IDs of the subnets in which to launch the instances. Separate multiple subnet IDs using commas (for example, subnet-1234abcdeexample1, subnet-0987cdef6example2). A request of type instant can have only one subnet ID.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "WeightedCapacity": {
        "desc": "The number of units provided by the specified instance type.",
        "type": "Double",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      }
    }
  },
  {
    "title": "FleetLaunchTemplateSpecification",
    "attrs": {
      "LaunchTemplateId (request), launchTemplateId (response)": {
        "desc": "The ID of the launch template. You must specify either a template ID or a template name.",
        "type": "String",
        "required": "no"
      },
      "LaunchTemplateName (request), launchTemplateName (response)": {
        "desc": "The name of the launch template. You must specify either a template name or a template ID.",
        "type": "String",
        "required": "no"
      },
      "Version (request), version (response)": {
        "desc": "The version number of the launch template. You must specify a version number.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "FleetLaunchTemplateSpecificationRequest",
    "attrs": {
      "LaunchTemplateId": {
        "desc": "The ID of the launch template.",
        "type": "String",
        "required": "no"
      },
      "LaunchTemplateName": {
        "desc": "The name of the launch template.",
        "type": "String",
        "required": "no"
      },
      "Version": {
        "desc": "The version number of the launch template. Note: This is a required parameter and will be updated soon.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "FlowLog",
    "attrs": {
      "creationTime": {
        "desc": "The date and time the flow log was created.",
        "type": "Timestamp",
        "required": "no"
      },
      "deliverLogsErrorMessage": {
        "desc": "Information about the error that occurred. Rate limited indicates that CloudWatch Logs throttling has been applied for one or more network interfaces, or that you've reached the limit on the number of log groups that you can create. Access error indicates that the IAM role associated with the flow log does not have sufficient permissions to publish to CloudWatch Logs. Unknown error indicates an internal error.",
        "type": "String",
        "required": "no"
      },
      "deliverLogsPermissionArn": {
        "desc": "The ARN of the IAM role that posts logs to CloudWatch Logs.",
        "type": "String",
        "required": "no"
      },
      "deliverLogsStatus": {
        "desc": "The status of the logs delivery (SUCCESS | FAILED).",
        "type": "String",
        "required": "no"
      },
      "flowLogId": {
        "desc": "The flow log ID.",
        "type": "String",
        "required": "no"
      },
      "flowLogStatus": {
        "desc": "The status of the flow log (ACTIVE).",
        "type": "String",
        "required": "no"
      },
      "logDestination": {
        "desc": "Specifies the destination to which the flow log data is published. Flow log data can be published to an CloudWatch Logs log group or an Amazon S3 bucket. If the flow log publishes to CloudWatch Logs, this element indicates the Amazon Resource Name (ARN) of the CloudWatch Logs log group to which the data is published. If the flow log publishes to Amazon S3, this element indicates the ARN of the Amazon S3 bucket to which the data is published.",
        "type": "String",
        "required": "no"
      },
      "logDestinationType": {
        "desc": "Specifies the type of destination to which the flow log data is published. Flow log data can be published to CloudWatch Logs or Amazon S3.",
        "type": "String",
        "required": "no",
        "values": [
          "cloud-watch-logs",
          "s3"
        ]
      },
      "logFormat": {
        "desc": "The format of the flow log record.",
        "type": "String",
        "required": "no",
        "values": [
          "cloud-watch-logs",
          "s3"
        ]
      },
      "logGroupName": {
        "desc": "The name of the flow log group.",
        "type": "String",
        "required": "no",
        "values": [
          "cloud-watch-logs",
          "s3"
        ]
      },
      "maxAggregationInterval": {
        "desc": "The maximum interval of time, in seconds, during which a flow of packets is captured and aggregated into a flow log record.",
        "type": "Integer",
        "required": "no",
        "values": [
          "60",
          "600"
        ]
      },
      "resourceId": {
        "desc": "The ID of the resource on which the flow log was created.",
        "type": "String",
        "required": "no",
        "values": [
          "60",
          "600"
        ]
      },
      "tagSet": {
        "desc": "The tags for the flow log.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "60",
          "600"
        ]
      },
      "trafficType": {
        "desc": "The type of traffic captured for the flow log.",
        "type": "String",
        "required": "no",
        "values": [
          "accept",
          "reject",
          "all"
        ]
      }
    }
  },
  {
    "title": "FpgaDeviceInfo",
    "attrs": {
      "count": {
        "desc": "The count of FPGA accelerators for the instance type.",
        "type": "Integer",
        "required": "no"
      },
      "manufacturer": {
        "desc": "The manufacturer of the FPGA accelerator.",
        "type": "String",
        "required": "no"
      },
      "memoryInfo": {
        "desc": "Describes the memory for the FPGA accelerator for the instance type.",
        "type": "FpgaDeviceMemoryInfo object",
        "required": "no"
      },
      "name": {
        "desc": "The name of the FPGA accelerator.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "FpgaDeviceMemoryInfo",
    "attrs": {
      "sizeInMiB": {
        "desc": "The size (in MiB) for the memory available to the FPGA accelerator.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "FpgaImage",
    "attrs": {
      "createTime": {
        "desc": "The date and time the AFI was created.",
        "type": "Timestamp",
        "required": "no"
      },
      "dataRetentionSupport": {
        "desc": "Indicates whether data retention support is enabled for the AFI.",
        "type": "Boolean",
        "required": "no"
      },
      "description": {
        "desc": "The description of the AFI.",
        "type": "String",
        "required": "no"
      },
      "fpgaImageGlobalId": {
        "desc": "The global FPGA image identifier (AGFI ID).",
        "type": "String",
        "required": "no"
      },
      "fpgaImageId": {
        "desc": "The FPGA image identifier (AFI ID).",
        "type": "String",
        "required": "no"
      },
      "name": {
        "desc": "The name of the AFI.",
        "type": "String",
        "required": "no"
      },
      "ownerAlias": {
        "desc": "The alias of the AFI owner. Possible values include self, amazon, and aws-marketplace.",
        "type": "String",
        "required": "no"
      },
      "ownerId": {
        "desc": "The AWS account ID of the AFI owner.",
        "type": "String",
        "required": "no"
      },
      "pciId": {
        "desc": "Information about the PCI bus.",
        "type": "PciId object",
        "required": "no"
      },
      "productCodes": {
        "desc": "The product codes for the AFI.",
        "type": "Array of ProductCode objects",
        "required": "no"
      },
      "public": {
        "desc": "Indicates whether the AFI is public.",
        "type": "Boolean",
        "required": "no"
      },
      "shellVersion": {
        "desc": "The version of the AWS Shell that was used to create the bitstream.",
        "type": "String",
        "required": "no"
      },
      "state": {
        "desc": "Information about the state of the AFI.",
        "type": "FpgaImageState object",
        "required": "no"
      },
      "tags": {
        "desc": "Any tags assigned to the AFI.",
        "type": "Array of Tag objects",
        "required": "no"
      },
      "updateTime": {
        "desc": "The time of the most recent update to the AFI.",
        "type": "Timestamp",
        "required": "no"
      }
    }
  },
  {
    "title": "FpgaImageAttribute",
    "attrs": {
      "description": {
        "desc": "The description of the AFI.",
        "type": "String",
        "required": "no"
      },
      "fpgaImageId": {
        "desc": "The ID of the AFI.",
        "type": "String",
        "required": "no"
      },
      "loadPermissions": {
        "desc": "The load permissions.",
        "type": "Array of LoadPermission objects",
        "required": "no"
      },
      "name": {
        "desc": "The name of the AFI.",
        "type": "String",
        "required": "no"
      },
      "productCodes": {
        "desc": "The product codes.",
        "type": "Array of ProductCode objects",
        "required": "no"
      }
    }
  },
  {
    "title": "FpgaImageState",
    "attrs": {
      "code": {
        "desc": "The state. The following are the possible values:",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "failed",
          "available",
          "unavailable"
        ]
      },
      "message": {
        "desc": "If the state is failed, this is the error message.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "failed",
          "available",
          "unavailable"
        ]
      }
    }
  },
  {
    "title": "FpgaInfo",
    "attrs": {
      "fpgas": {
        "desc": "Describes the FPGAs for the instance type.",
        "type": "Array of FpgaDeviceInfo objects",
        "required": "no"
      },
      "totalFpgaMemoryInMiB": {
        "desc": "The total memory of all FPGA accelerators for the instance type.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "GpuDeviceInfo",
    "attrs": {
      "count": {
        "desc": "The number of GPUs for the instance type.",
        "type": "Integer",
        "required": "no"
      },
      "manufacturer": {
        "desc": "The manufacturer of the GPU accelerator.",
        "type": "String",
        "required": "no"
      },
      "memoryInfo": {
        "desc": "Describes the memory available to the GPU accelerator.",
        "type": "GpuDeviceMemoryInfo object",
        "required": "no"
      },
      "name": {
        "desc": "The name of the GPU accelerator.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "GpuDeviceMemoryInfo",
    "attrs": {
      "sizeInMiB": {
        "desc": "The size (in MiB) for the memory available to the GPU accelerator.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "GpuInfo",
    "attrs": {
      "gpus": {
        "desc": "Describes the GPU accelerators for the instance type.",
        "type": "Array of GpuDeviceInfo objects",
        "required": "no"
      },
      "totalGpuMemoryInMiB": {
        "desc": "The total size of the memory for the GPU accelerators for the instance type.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "GroupIdentifier",
    "attrs": {
      "GroupId (request), groupId (response)": {
        "desc": "The ID of the security group.",
        "type": "String",
        "required": "no"
      },
      "GroupName (request), groupName (response)": {
        "desc": "The name of the security group.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "HibernationOptions",
    "attrs": {
      "configured": {
        "desc": "If this parameter is set to true, your instance is enabled for hibernation; otherwise, it is not enabled for hibernation.",
        "type": "Boolean",
        "required": "no"
      }
    }
  },
  {
    "title": "HibernationOptionsRequest",
    "attrs": {
      "Configured": {
        "desc": "If you set this parameter to true, your instance is enabled for hibernation.",
        "type": "Boolean",
        "required": "no"
      }
    }
  },
  {
    "title": "HistoryRecord",
    "attrs": {
      "eventInformation": {
        "desc": "Information about the event.",
        "type": "EventInformation object",
        "required": "no"
      },
      "eventType": {
        "desc": "The event type.",
        "type": "String",
        "required": "no",
        "values": [
          "instancechange",
          "fleetrequestchange",
          "error",
          "information"
        ]
      },
      "timestamp": {
        "desc": "The date and time of the event, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ).",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "instancechange",
          "fleetrequestchange",
          "error",
          "information"
        ]
      }
    }
  },
  {
    "title": "HistoryRecordEntry",
    "attrs": {
      "eventInformation": {
        "desc": "Information about the event.",
        "type": "EventInformation object",
        "required": "no"
      },
      "eventType": {
        "desc": "The event type.",
        "type": "String",
        "required": "no",
        "values": [
          "instance-change",
          "fleet-change",
          "service-error"
        ]
      },
      "timestamp": {
        "desc": "The date and time of the event, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ).",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "instance-change",
          "fleet-change",
          "service-error"
        ]
      }
    }
  },
  {
    "title": "Host",
    "attrs": {
      "allocationTime": {
        "desc": "The time that the Dedicated Host was allocated.",
        "type": "Timestamp",
        "required": "no"
      },
      "allowsMultipleInstanceTypes": {
        "desc": "Indicates whether the Dedicated Host supports multiple instance types of the same instance family, or a specific instance type only. one indicates that the Dedicated Host supports multiple instance types in the instance family. off indicates that the Dedicated Host supports a single instance type only.",
        "type": "String",
        "required": "no",
        "values": [
          "on",
          "off"
        ]
      },
      "autoPlacement": {
        "desc": "Whether auto-placement is on or off.",
        "type": "String",
        "required": "no",
        "values": [
          "on",
          "off"
        ]
      },
      "availabilityZone": {
        "desc": "The Availability Zone of the Dedicated Host.",
        "type": "String",
        "required": "no",
        "values": [
          "on",
          "off"
        ]
      },
      "availabilityZoneId": {
        "desc": "The ID of the Availability Zone in which the Dedicated Host is allocated.",
        "type": "String",
        "required": "no",
        "values": [
          "on",
          "off"
        ]
      },
      "availableCapacity": {
        "desc": "Information about the instances running on the Dedicated Host.",
        "type": "AvailableCapacity object",
        "required": "no",
        "values": [
          "on",
          "off"
        ]
      },
      "clientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency.",
        "type": "String",
        "required": "no",
        "values": [
          "on",
          "off"
        ]
      },
      "hostId": {
        "desc": "The ID of the Dedicated Host.",
        "type": "String",
        "required": "no",
        "values": [
          "on",
          "off"
        ]
      },
      "hostProperties": {
        "desc": "The hardware specifications of the Dedicated Host.",
        "type": "HostProperties object",
        "required": "no",
        "values": [
          "on",
          "off"
        ]
      },
      "hostRecovery": {
        "desc": "Indicates whether host recovery is enabled or disabled for the Dedicated Host.",
        "type": "String",
        "required": "no",
        "values": [
          "on",
          "off"
        ]
      },
      "hostReservationId": {
        "desc": "The reservation ID of the Dedicated Host. This returns a null response if the Dedicated Host doesn't have an associated reservation.",
        "type": "String",
        "required": "no",
        "values": [
          "on",
          "off"
        ]
      },
      "instances": {
        "desc": "The IDs and instance type that are currently running on the Dedicated Host.",
        "type": "Array of HostInstance objects",
        "required": "no",
        "values": [
          "on",
          "off"
        ]
      },
      "memberOfServiceLinkedResourceGroup": {
        "desc": "Indicates whether the Dedicated Host is in a host resource group. If memberOfServiceLinkedResourceGroup is true, the host is in a host resource group; otherwise, it is not.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "on",
          "off"
        ]
      },
      "ownerId": {
        "desc": "The ID of the AWS account that owns the Dedicated Host.",
        "type": "String",
        "required": "no",
        "values": [
          "on",
          "off"
        ]
      },
      "releaseTime": {
        "desc": "The time that the Dedicated Host was released.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "on",
          "off"
        ]
      },
      "state": {
        "desc": "The Dedicated Host's state.",
        "type": "String",
        "required": "no",
        "values": [
          "available",
          "under-assessment",
          "permanent-failure",
          "released",
          "released-permanent-failure"
        ]
      },
      "tagSet": {
        "desc": "Any tags assigned to the Dedicated Host.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "available",
          "under-assessment",
          "permanent-failure",
          "released",
          "released-permanent-failure"
        ]
      }
    }
  },
  {
    "title": "HostInstance",
    "attrs": {
      "instanceId": {
        "desc": "The ID of instance that is running on the Dedicated Host.",
        "type": "String",
        "required": "no"
      },
      "instanceType": {
        "desc": "The instance type (for example, m3.medium) of the running instance.",
        "type": "String",
        "required": "no"
      },
      "ownerId": {
        "desc": "The ID of the AWS account that owns the instance.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "HostOffering",
    "attrs": {
      "currencyCode": {
        "desc": "The currency of the offering.",
        "type": "String",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "duration": {
        "desc": "The duration of the offering (in seconds).",
        "type": "Integer",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "hourlyPrice": {
        "desc": "The hourly price of the offering.",
        "type": "String",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "instanceFamily": {
        "desc": "The instance family of the offering.",
        "type": "String",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "offeringId": {
        "desc": "The ID of the offering.",
        "type": "String",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "paymentOption": {
        "desc": "The available payment option.",
        "type": "String",
        "required": "no",
        "values": [
          "allupfront",
          "partialupfront",
          "noupfront"
        ]
      },
      "upfrontPrice": {
        "desc": "The upfront price of the offering. Does not apply to No Upfront offerings.",
        "type": "String",
        "required": "no",
        "values": [
          "allupfront",
          "partialupfront",
          "noupfront"
        ]
      }
    }
  },
  {
    "title": "HostProperties",
    "attrs": {
      "cores": {
        "desc": "The number of cores on the Dedicated Host.",
        "type": "Integer",
        "required": "no"
      },
      "instanceFamily": {
        "desc": "The instance family supported by the Dedicated Host. For example, m5.",
        "type": "String",
        "required": "no"
      },
      "instanceType": {
        "desc": "The instance type supported by the Dedicated Host. For example, m5.large. If the host supports multiple instance types, no instanceType is returned.",
        "type": "String",
        "required": "no"
      },
      "sockets": {
        "desc": "The number of sockets on the Dedicated Host.",
        "type": "Integer",
        "required": "no"
      },
      "totalVCpus": {
        "desc": "The total number of vCPUs on the Dedicated Host.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "HostReservation",
    "attrs": {
      "count": {
        "desc": "The number of Dedicated Hosts the reservation is associated with.",
        "type": "Integer",
        "required": "no"
      },
      "currencyCode": {
        "desc": "The currency in which the upfrontPrice and hourlyPrice amounts are specified. At this time, the only supported currency is USD.",
        "type": "String",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "duration": {
        "desc": "The length of the reservation's term, specified in seconds. Can be 31536000 (1 year) | 94608000 (3 years).",
        "type": "Integer",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "end": {
        "desc": "The date and time that the reservation ends.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "hostIdSet": {
        "desc": "The IDs of the Dedicated Hosts associated with the reservation.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "hostReservationId": {
        "desc": "The ID of the reservation that specifies the associated Dedicated Hosts.",
        "type": "String",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "hourlyPrice": {
        "desc": "The hourly price of the reservation.",
        "type": "String",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "instanceFamily": {
        "desc": "The instance family of the Dedicated Host Reservation. The instance family on the Dedicated Host must be the same in order for it to benefit from the reservation.",
        "type": "String",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "offeringId": {
        "desc": "The ID of the reservation. This remains the same regardless of which Dedicated Hosts are associated with it.",
        "type": "String",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "paymentOption": {
        "desc": "The payment option selected for this reservation.",
        "type": "String",
        "required": "no",
        "values": [
          "allupfront",
          "partialupfront",
          "noupfront"
        ]
      },
      "start": {
        "desc": "The date and time that the reservation started.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "allupfront",
          "partialupfront",
          "noupfront"
        ]
      },
      "state": {
        "desc": "The state of the reservation.",
        "type": "String",
        "required": "no",
        "values": [
          "payment-pending",
          "payment-failed",
          "active",
          "retired"
        ]
      },
      "tagSet": {
        "desc": "Any tags assigned to the Dedicated Host Reservation.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "payment-pending",
          "payment-failed",
          "active",
          "retired"
        ]
      },
      "upfrontPrice": {
        "desc": "The upfront price of the reservation.",
        "type": "String",
        "required": "no",
        "values": [
          "payment-pending",
          "payment-failed",
          "active",
          "retired"
        ]
      }
    }
  },
  {
    "title": "IamInstanceProfile",
    "attrs": {
      "arn": {
        "desc": "The Amazon Resource Name (ARN) of the instance profile.",
        "type": "String",
        "required": "no"
      },
      "id": {
        "desc": "The ID of the instance profile.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "IamInstanceProfileAssociation",
    "attrs": {
      "associationId": {
        "desc": "The ID of the association.",
        "type": "String",
        "required": "no"
      },
      "iamInstanceProfile": {
        "desc": "The IAM instance profile.",
        "type": "IamInstanceProfile object",
        "required": "no"
      },
      "instanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "no"
      },
      "state": {
        "desc": "The state of the association.",
        "type": "String",
        "required": "no",
        "values": [
          "associating",
          "associated",
          "disassociating",
          "disassociated"
        ]
      },
      "timestamp": {
        "desc": "The time the IAM instance profile was associated with the instance.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "associating",
          "associated",
          "disassociating",
          "disassociated"
        ]
      }
    }
  },
  {
    "title": "IamInstanceProfileSpecification",
    "attrs": {
      "Arn (request), arn (response)": {
        "desc": "The Amazon Resource Name (ARN) of the instance profile.",
        "type": "String",
        "required": "no"
      },
      "Name (request), name (response)": {
        "desc": "The name of the instance profile.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "IcmpTypeCode",
    "attrs": {
      "Code (request), code (response)": {
        "desc": "The ICMP code. A value of -1 means all codes for the specified ICMP type.",
        "type": "Integer",
        "required": "no"
      },
      "Type (request), type (response)": {
        "desc": "The ICMP type. A value of -1 means all types.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "IdFormat",
    "attrs": {
      "deadline": {
        "desc": "The date in UTC at which you are permanently switched over to using longer IDs. If a deadline is not yet available for this resource type, this field is not returned.",
        "type": "Timestamp",
        "required": "no"
      },
      "resource": {
        "desc": "The type of resource.",
        "type": "String",
        "required": "no"
      },
      "useLongIds": {
        "desc": "Indicates whether longer IDs (17-character IDs) are enabled for the resource.",
        "type": "Boolean",
        "required": "no"
      }
    }
  },
  {
    "title": "IKEVersionsListValue",
    "attrs": {
      "value": {
        "desc": "The IKE version.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "IKEVersionsRequestListValue",
    "attrs": {
      "Value": {
        "desc": "The IKE version.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "Image",
    "attrs": {
      "architecture": {
        "desc": "The architecture of the image.",
        "type": "String",
        "required": "no",
        "values": [
          "i386",
          "x86_64",
          "arm64"
        ]
      },
      "blockDeviceMapping": {
        "desc": "Any block device mapping entries.",
        "type": "Array of BlockDeviceMapping objects",
        "required": "no",
        "values": [
          "i386",
          "x86_64",
          "arm64"
        ]
      },
      "creationDate": {
        "desc": "The date and time the image was created.",
        "type": "String",
        "required": "no",
        "values": [
          "i386",
          "x86_64",
          "arm64"
        ]
      },
      "description": {
        "desc": "The description of the AMI that was provided during image creation.",
        "type": "String",
        "required": "no",
        "values": [
          "i386",
          "x86_64",
          "arm64"
        ]
      },
      "enaSupport": {
        "desc": "Specifies whether enhanced networking with ENA is enabled.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "i386",
          "x86_64",
          "arm64"
        ]
      },
      "hypervisor": {
        "desc": "The hypervisor type of the image.",
        "type": "String",
        "required": "no",
        "values": [
          "ovm",
          "xen"
        ]
      },
      "imageId": {
        "desc": "The ID of the AMI.",
        "type": "String",
        "required": "no",
        "values": [
          "ovm",
          "xen"
        ]
      },
      "imageLocation": {
        "desc": "The location of the AMI.",
        "type": "String",
        "required": "no",
        "values": [
          "ovm",
          "xen"
        ]
      },
      "imageOwnerAlias": {
        "desc": "The AWS account alias (for example, amazon, self) or the AWS account ID of the AMI owner.",
        "type": "String",
        "required": "no",
        "values": [
          "ovm",
          "xen"
        ]
      },
      "imageOwnerId": {
        "desc": "The AWS account ID of the image owner.",
        "type": "String",
        "required": "no",
        "values": [
          "ovm",
          "xen"
        ]
      },
      "imageState": {
        "desc": "The current state of the AMI. If the state is available, the image is successfully registered and can be used to launch an instance.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "available",
          "invalid",
          "deregistered",
          "transient",
          "failed",
          "error"
        ]
      },
      "imageType": {
        "desc": "The type of image.",
        "type": "String",
        "required": "no",
        "values": [
          "machine",
          "kernel",
          "ramdisk"
        ]
      },
      "isPublic": {
        "desc": "Indicates whether the image has public launch permissions. The value is true if this image has public launch permissions or false if it has only implicit and explicit launch permissions.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "machine",
          "kernel",
          "ramdisk"
        ]
      },
      "kernelId": {
        "desc": "The kernel associated with the image, if any. Only applicable for machine images.",
        "type": "String",
        "required": "no",
        "values": [
          "machine",
          "kernel",
          "ramdisk"
        ]
      },
      "name": {
        "desc": "The name of the AMI that was provided during image creation.",
        "type": "String",
        "required": "no",
        "values": [
          "machine",
          "kernel",
          "ramdisk"
        ]
      },
      "platform": {
        "desc": "This value is set to windows for Windows AMIs; otherwise, it is blank.",
        "type": "String",
        "required": "no",
        "values": [
          "windows"
        ]
      },
      "platformDetails": {
        "desc": "The platform details associated with the billing code of the AMI. For more information, see Obtaining Billing Information in the Amazon Elastic Compute Cloud User Guide.",
        "type": "String",
        "required": "no",
        "values": [
          "windows"
        ]
      },
      "productCodes": {
        "desc": "Any product codes associated with the AMI.",
        "type": "Array of ProductCode objects",
        "required": "no",
        "values": [
          "windows"
        ]
      },
      "ramdiskId": {
        "desc": "The RAM disk associated with the image, if any. Only applicable for machine images.",
        "type": "String",
        "required": "no",
        "values": [
          "windows"
        ]
      },
      "rootDeviceName": {
        "desc": "The device name of the root device volume (for example, /dev/sda1).",
        "type": "String",
        "required": "no",
        "values": [
          "windows"
        ]
      },
      "rootDeviceType": {
        "desc": "The type of root device used by the AMI. The AMI can use an EBS volume or an instance store volume.",
        "type": "String",
        "required": "no",
        "values": [
          "ebs",
          "instance-store"
        ]
      },
      "sriovNetSupport": {
        "desc": "Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.",
        "type": "String",
        "required": "no",
        "values": [
          "ebs",
          "instance-store"
        ]
      },
      "stateReason": {
        "desc": "The reason for the state change.",
        "type": "StateReason object",
        "required": "no",
        "values": [
          "ebs",
          "instance-store"
        ]
      },
      "tagSet": {
        "desc": "Any tags assigned to the image.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "ebs",
          "instance-store"
        ]
      },
      "usageOperation": {
        "desc": "The operation of the Amazon EC2 instance and the billing code that is associated with the AMI. usageOperation corresponds to the lineitem/Operation column on your AWS Cost and Usage Report and in the AWS Price List API. For the list of UsageOperation codes, see Platform Details and Usage Operation Billing Codes in the Amazon Elastic Compute Cloud User Guide.",
        "type": "String",
        "required": "no",
        "values": [
          "ebs",
          "instance-store"
        ]
      },
      "virtualizationType": {
        "desc": "The type of virtualization of the AMI.",
        "type": "String",
        "required": "no",
        "values": [
          "hvm",
          "paravirtual"
        ]
      }
    }
  },
  {
    "title": "ImageDiskContainer",
    "attrs": {
      "Description": {
        "desc": "The description of the disk image.",
        "type": "String",
        "required": "no"
      },
      "DeviceName": {
        "desc": "The block device mapping for the disk.",
        "type": "String",
        "required": "no"
      },
      "Format": {
        "desc": "The format of the disk image being imported.",
        "type": "String",
        "required": "no"
      },
      "SnapshotId": {
        "desc": "The ID of the EBS snapshot to be used for importing the snapshot.",
        "type": "String",
        "required": "no"
      },
      "Url": {
        "desc": "The URL to the Amazon S3-based disk image being imported. The URL can either be a https URL (https://..) or an Amazon S3 URL (s3://..)",
        "type": "String",
        "required": "no"
      },
      "UserBucket": {
        "desc": "The S3 bucket for the disk image.",
        "type": "UserBucket object",
        "required": "no"
      }
    }
  },
  {
    "title": "ImportImageLicenseConfigurationRequest",
    "attrs": {
      "LicenseConfigurationArn": {
        "desc": "The ARN of a license configuration.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ImportImageLicenseConfigurationResponse",
    "attrs": {
      "licenseConfigurationArn": {
        "desc": "The ARN of a license configuration.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ImportImageTask",
    "attrs": {
      "architecture": {
        "desc": "The architecture of the virtual machine.",
        "type": "String",
        "required": "no"
      },
      "description": {
        "desc": "A description of the import task.",
        "type": "String",
        "required": "no"
      },
      "encrypted": {
        "desc": "Indicates whether the image is encrypted.",
        "type": "Boolean",
        "required": "no"
      },
      "hypervisor": {
        "desc": "The target hypervisor for the import task.",
        "type": "String",
        "required": "no"
      },
      "imageId": {
        "desc": "The ID of the Amazon Machine Image (AMI) of the imported virtual machine.",
        "type": "String",
        "required": "no"
      },
      "importTaskId": {
        "desc": "The ID of the import image task.",
        "type": "String",
        "required": "no"
      },
      "kmsKeyId": {
        "desc": "The identifier for the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to create the encrypted image.",
        "type": "String",
        "required": "no"
      },
      "licenseSpecifications": {
        "desc": "The ARNs of the license configurations that are associated with the import image task.",
        "type": "Array of ImportImageLicenseConfigurationResponse objects",
        "required": "no"
      },
      "licenseType": {
        "desc": "The license type of the virtual machine.",
        "type": "String",
        "required": "no"
      },
      "platform": {
        "desc": "The description string for the import image task.",
        "type": "String",
        "required": "no"
      },
      "progress": {
        "desc": "The percentage of progress of the import image task.",
        "type": "String",
        "required": "no"
      },
      "snapshotDetailSet": {
        "desc": "Information about the snapshots.",
        "type": "Array of SnapshotDetail objects",
        "required": "no"
      },
      "status": {
        "desc": "A brief status for the import image task.",
        "type": "String",
        "required": "no"
      },
      "statusMessage": {
        "desc": "A descriptive status message for the import image task.",
        "type": "String",
        "required": "no"
      },
      "tagSet": {
        "desc": "The tags for the import image task.",
        "type": "Array of Tag objects",
        "required": "no"
      }
    }
  },
  {
    "title": "ImportInstanceLaunchSpecification",
    "attrs": {
      "AdditionalInfo": {
        "desc": "Reserved.",
        "type": "String",
        "required": "no"
      },
      "Architecture": {
        "desc": "The architecture of the instance.",
        "type": "String",
        "required": "no",
        "values": [
          "i386",
          "x86_64",
          "arm64"
        ]
      },
      "GroupIds": {
        "desc": "The security group IDs.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "i386",
          "x86_64",
          "arm64"
        ]
      },
      "GroupNames": {
        "desc": "The security group names.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "i386",
          "x86_64",
          "arm64"
        ]
      },
      "InstanceInitiatedShutdownBehavior": {
        "desc": "Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).",
        "type": "String",
        "required": "no",
        "values": [
          "stop",
          "terminate"
        ]
      },
      "InstanceType": {
        "desc": "The instance type. For more information about the instance types that you can import, see Instance Types in the VM Import/Export User Guide.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "Monitoring": {
        "desc": "Indicates whether monitoring is enabled.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "Placement": {
        "desc": "The placement information for the instance.",
        "type": "Placement object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "PrivateIpAddress": {
        "desc": "[EC2-VPC] An available IP address from the IP address range of the subnet.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "SubnetId": {
        "desc": "[EC2-VPC] The ID of the subnet in which to launch the instance.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "UserData": {
        "desc": "The Base64-encoded user data to make available to the instance.",
        "type": "UserData object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      }
    }
  },
  {
    "title": "ImportInstanceTaskDetails",
    "attrs": {
      "description": {
        "desc": "A description of the task.",
        "type": "String",
        "required": "no"
      },
      "instanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "no"
      },
      "platform": {
        "desc": "The instance operating system.",
        "type": "String",
        "required": "no",
        "values": [
          "windows"
        ]
      },
      "volumes": {
        "desc": "The volumes.",
        "type": "Array of ImportInstanceVolumeDetailItem objects",
        "required": "no",
        "values": [
          "windows"
        ]
      }
    }
  },
  {
    "title": "ImportInstanceVolumeDetailItem",
    "attrs": {
      "availabilityZone": {
        "desc": "The Availability Zone where the resulting instance will reside.",
        "type": "String",
        "required": "no"
      },
      "bytesConverted": {
        "desc": "The number of bytes converted so far.",
        "type": "Long",
        "required": "no"
      },
      "description": {
        "desc": "A description of the task.",
        "type": "String",
        "required": "no"
      },
      "image": {
        "desc": "The image.",
        "type": "DiskImageDescription object",
        "required": "no"
      },
      "status": {
        "desc": "The status of the import of this particular disk image.",
        "type": "String",
        "required": "no"
      },
      "statusMessage": {
        "desc": "The status information or errors related to the disk image.",
        "type": "String",
        "required": "no"
      },
      "volume": {
        "desc": "The volume.",
        "type": "DiskImageVolumeDescription object",
        "required": "no"
      }
    }
  },
  {
    "title": "ImportSnapshotTask",
    "attrs": {
      "description": {
        "desc": "A description of the import snapshot task.",
        "type": "String",
        "required": "no"
      },
      "importTaskId": {
        "desc": "The ID of the import snapshot task.",
        "type": "String",
        "required": "no"
      },
      "snapshotTaskDetail": {
        "desc": "Describes an import snapshot task.",
        "type": "SnapshotTaskDetail object",
        "required": "no"
      },
      "tagSet": {
        "desc": "The tags for the import snapshot task.",
        "type": "Array of Tag objects",
        "required": "no"
      }
    }
  },
  {
    "title": "ImportVolumeTaskDetails",
    "attrs": {
      "availabilityZone": {
        "desc": "The Availability Zone where the resulting volume will reside.",
        "type": "String",
        "required": "no"
      },
      "bytesConverted": {
        "desc": "The number of bytes converted so far.",
        "type": "Long",
        "required": "no"
      },
      "description": {
        "desc": "The description you provided when starting the import volume task.",
        "type": "String",
        "required": "no"
      },
      "image": {
        "desc": "The image.",
        "type": "DiskImageDescription object",
        "required": "no"
      },
      "volume": {
        "desc": "The volume.",
        "type": "DiskImageVolumeDescription object",
        "required": "no"
      }
    }
  },
  {
    "title": "InferenceAcceleratorInfo",
    "attrs": {
      "accelerators": {
        "desc": "Describes the Inference accelerators for the instance type.",
        "type": "Array of InferenceDeviceInfo objects",
        "required": "no"
      }
    }
  },
  {
    "title": "InferenceDeviceInfo",
    "attrs": {
      "count": {
        "desc": "The number of Inference accelerators for the instance type.",
        "type": "Integer",
        "required": "no"
      },
      "manufacturer": {
        "desc": "The manufacturer of the Inference accelerator.",
        "type": "String",
        "required": "no"
      },
      "name": {
        "desc": "The name of the Inference accelerator.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "Instance",
    "attrs": {
      "amiLaunchIndex": {
        "desc": "The AMI launch index, which can be used to find this instance in the launch group.",
        "type": "Integer",
        "required": "no"
      },
      "architecture": {
        "desc": "The architecture of the image.",
        "type": "String",
        "required": "no",
        "values": [
          "i386",
          "x86_64",
          "arm64"
        ]
      },
      "blockDeviceMapping": {
        "desc": "Any block device mapping entries for the instance.",
        "type": "Array of InstanceBlockDeviceMapping objects",
        "required": "no",
        "values": [
          "i386",
          "x86_64",
          "arm64"
        ]
      },
      "capacityReservationId": {
        "desc": "The ID of the Capacity Reservation.",
        "type": "String",
        "required": "no",
        "values": [
          "i386",
          "x86_64",
          "arm64"
        ]
      },
      "capacityReservationSpecification": {
        "desc": "Information about the Capacity Reservation targeting option.",
        "type": "CapacityReservationSpecificationResponse object",
        "required": "no",
        "values": [
          "i386",
          "x86_64",
          "arm64"
        ]
      },
      "clientToken": {
        "desc": "The idempotency token you provided when you launched the instance, if applicable.",
        "type": "String",
        "required": "no",
        "values": [
          "i386",
          "x86_64",
          "arm64"
        ]
      },
      "cpuOptions": {
        "desc": "The CPU options for the instance.",
        "type": "CpuOptions object",
        "required": "no",
        "values": [
          "i386",
          "x86_64",
          "arm64"
        ]
      },
      "dnsName": {
        "desc": "(IPv4 only) The public DNS name assigned to the instance. This name is not available until the instance enters the running state. For EC2-VPC, this name is only available if you've enabled DNS hostnames for your VPC.",
        "type": "String",
        "required": "no",
        "values": [
          "i386",
          "x86_64",
          "arm64"
        ]
      },
      "ebsOptimized": {
        "desc": "Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "i386",
          "x86_64",
          "arm64"
        ]
      },
      "elasticGpuAssociationSet": {
        "desc": "The Elastic GPU associated with the instance.",
        "type": "Array of ElasticGpuAssociation objects",
        "required": "no",
        "values": [
          "i386",
          "x86_64",
          "arm64"
        ]
      },
      "elasticInferenceAcceleratorAssociationSet": {
        "desc": "The elastic inference accelerator associated with the instance.",
        "type": "Array of ElasticInferenceAcceleratorAssociation objects",
        "required": "no",
        "values": [
          "i386",
          "x86_64",
          "arm64"
        ]
      },
      "enaSupport": {
        "desc": "Specifies whether enhanced networking with ENA is enabled.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "i386",
          "x86_64",
          "arm64"
        ]
      },
      "groupSet": {
        "desc": "The security groups for the instance.",
        "type": "Array of GroupIdentifier objects",
        "required": "no",
        "values": [
          "i386",
          "x86_64",
          "arm64"
        ]
      },
      "hibernationOptions": {
        "desc": "Indicates whether the instance is enabled for hibernation.",
        "type": "HibernationOptions object",
        "required": "no",
        "values": [
          "i386",
          "x86_64",
          "arm64"
        ]
      },
      "hypervisor": {
        "desc": "The hypervisor type of the instance. The value xen is used for both Xen and Nitro hypervisors.",
        "type": "String",
        "required": "no",
        "values": [
          "ovm",
          "xen"
        ]
      },
      "iamInstanceProfile": {
        "desc": "The IAM instance profile associated with the instance, if applicable.",
        "type": "IamInstanceProfile object",
        "required": "no",
        "values": [
          "ovm",
          "xen"
        ]
      },
      "imageId": {
        "desc": "The ID of the AMI used to launch the instance.",
        "type": "String",
        "required": "no",
        "values": [
          "ovm",
          "xen"
        ]
      },
      "instanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "no",
        "values": [
          "ovm",
          "xen"
        ]
      },
      "instanceLifecycle": {
        "desc": "Indicates whether this is a Spot Instance or a Scheduled Instance.",
        "type": "String",
        "required": "no",
        "values": [
          "spot",
          "scheduled"
        ]
      },
      "instanceState": {
        "desc": "The current state of the instance.",
        "type": "InstanceState object",
        "required": "no",
        "values": [
          "spot",
          "scheduled"
        ]
      },
      "instanceType": {
        "desc": "The instance type.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "ipAddress": {
        "desc": "The public IPv4 address assigned to the instance, if applicable.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "kernelId": {
        "desc": "The kernel associated with this instance, if applicable.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "keyName": {
        "desc": "The name of the key pair, if this instance was launched with an associated key pair.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "launchTime": {
        "desc": "The time the instance was launched.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "licenseSet": {
        "desc": "The license configurations.",
        "type": "Array of LicenseConfiguration objects",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "metadataOptions": {
        "desc": "The metadata options for the instance.",
        "type": "InstanceMetadataOptionsResponse object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "monitoring": {
        "desc": "The monitoring for the instance.",
        "type": "Monitoring object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "networkInterfaceSet": {
        "desc": "[EC2-VPC] The network interfaces for the instance.",
        "type": "Array of InstanceNetworkInterface objects",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "outpostArn": {
        "desc": "The Amazon Resource Name (ARN) of the Outpost.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "placement": {
        "desc": "The location where the instance launched, if applicable.",
        "type": "Placement object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "platform": {
        "desc": "The value is Windows for Windows instances; otherwise blank.",
        "type": "String",
        "required": "no",
        "values": [
          "windows"
        ]
      },
      "privateDnsName": {
        "desc": "(IPv4 only) The private DNS hostname name assigned to the instance. This DNS hostname can only be used inside the Amazon EC2 network. This name is not available until the instance enters the running state.",
        "type": "String",
        "required": "no",
        "values": [
          "windows"
        ]
      },
      "privateIpAddress": {
        "desc": "The private IPv4 address assigned to the instance.",
        "type": "String",
        "required": "no",
        "values": [
          "windows"
        ]
      },
      "productCodes": {
        "desc": "The product codes attached to this instance, if applicable.",
        "type": "Array of ProductCode objects",
        "required": "no",
        "values": [
          "windows"
        ]
      },
      "ramdiskId": {
        "desc": "The RAM disk associated with this instance, if applicable.",
        "type": "String",
        "required": "no",
        "values": [
          "windows"
        ]
      },
      "reason": {
        "desc": "The reason for the most recent state transition. This might be an empty string.",
        "type": "String",
        "required": "no",
        "values": [
          "windows"
        ]
      },
      "rootDeviceName": {
        "desc": "The device name of the root device volume (for example, /dev/sda1).",
        "type": "String",
        "required": "no",
        "values": [
          "windows"
        ]
      },
      "rootDeviceType": {
        "desc": "The root device type used by the AMI. The AMI can use an EBS volume or an instance store volume.",
        "type": "String",
        "required": "no",
        "values": [
          "ebs",
          "instance-store"
        ]
      },
      "sourceDestCheck": {
        "desc": "Specifies whether to enable an instance launched in a VPC to perform NAT. This controls whether source/destination checking is enabled on the instance. A value of true means that checking is enabled, and false means that checking is disabled. The value must be false for the instance to perform NAT. For more information, see NAT Instances in the Amazon Virtual Private Cloud User Guide.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "ebs",
          "instance-store"
        ]
      },
      "spotInstanceRequestId": {
        "desc": "If the request is a Spot Instance request, the ID of the request.",
        "type": "String",
        "required": "no",
        "values": [
          "ebs",
          "instance-store"
        ]
      },
      "sriovNetSupport": {
        "desc": "Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.",
        "type": "String",
        "required": "no",
        "values": [
          "ebs",
          "instance-store"
        ]
      },
      "stateReason": {
        "desc": "The reason for the most recent state transition.",
        "type": "StateReason object",
        "required": "no",
        "values": [
          "ebs",
          "instance-store"
        ]
      },
      "subnetId": {
        "desc": "[EC2-VPC] The ID of the subnet in which the instance is running.",
        "type": "String",
        "required": "no",
        "values": [
          "ebs",
          "instance-store"
        ]
      },
      "tagSet": {
        "desc": "Any tags assigned to the instance.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "ebs",
          "instance-store"
        ]
      },
      "virtualizationType": {
        "desc": "The virtualization type of the instance.",
        "type": "String",
        "required": "no",
        "values": [
          "hvm",
          "paravirtual"
        ]
      },
      "vpcId": {
        "desc": "[EC2-VPC] The ID of the VPC in which the instance is running.",
        "type": "String",
        "required": "no",
        "values": [
          "hvm",
          "paravirtual"
        ]
      }
    }
  },
  {
    "title": "InstanceBlockDeviceMapping",
    "attrs": {
      "deviceName": {
        "desc": "The device name (for example, /dev/sdh or xvdh).",
        "type": "String",
        "required": "no"
      },
      "ebs": {
        "desc": "Parameters used to automatically set up EBS volumes when the instance is launched.",
        "type": "EbsInstanceBlockDevice object",
        "required": "no"
      }
    }
  },
  {
    "title": "InstanceBlockDeviceMappingSpecification",
    "attrs": {
      "DeviceName": {
        "desc": "The device name (for example, /dev/sdh or xvdh).",
        "type": "String",
        "required": "no"
      },
      "Ebs": {
        "desc": "Parameters used to automatically set up EBS volumes when the instance is launched.",
        "type": "EbsInstanceBlockDeviceSpecification object",
        "required": "no"
      },
      "NoDevice": {
        "desc": "suppress the specified device included in the block device mapping.",
        "type": "String",
        "required": "no"
      },
      "VirtualName": {
        "desc": "The virtual device name.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "InstanceCapacity",
    "attrs": {
      "availableCapacity": {
        "desc": "The number of instances that can be launched onto the Dedicated Host based on the host's available capacity.",
        "type": "Integer",
        "required": "no"
      },
      "instanceType": {
        "desc": "The instance type supported by the Dedicated Host.",
        "type": "String",
        "required": "no"
      },
      "totalCapacity": {
        "desc": "The total number of instances that can be launched onto the Dedicated Host if there are no instances running on it.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "InstanceCount",
    "attrs": {
      "instanceCount": {
        "desc": "The number of listed Reserved Instances in the state specified by the state.",
        "type": "Integer",
        "required": "no"
      },
      "state": {
        "desc": "The states of the listed Reserved Instances.",
        "type": "String",
        "required": "no",
        "values": [
          "available",
          "sold",
          "cancelled",
          "pending"
        ]
      }
    }
  },
  {
    "title": "InstanceCreditSpecification",
    "attrs": {
      "cpuCredits": {
        "desc": "The credit option for CPU usage of the instance. Valid values are standard and unlimited.",
        "type": "String",
        "required": "no"
      },
      "instanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "InstanceCreditSpecificationRequest",
    "attrs": {
      "CpuCredits": {
        "desc": "The credit option for CPU usage of the instance. Valid values are standard and unlimited.",
        "type": "String",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "InstanceExportDetails",
    "attrs": {
      "instanceId": {
        "desc": "The ID of the resource being exported.",
        "type": "String",
        "required": "no"
      },
      "targetEnvironment": {
        "desc": "The target virtualization environment.",
        "type": "String",
        "required": "no",
        "values": [
          "citrix",
          "vmware",
          "microsoft"
        ]
      }
    }
  },
  {
    "title": "InstanceFamilyCreditSpecification",
    "attrs": {
      "cpuCredits": {
        "desc": "The default credit option for CPU usage of the instance family. Valid values are standard and unlimited.",
        "type": "String",
        "required": "no"
      },
      "instanceFamily": {
        "desc": "The instance family.",
        "type": "String",
        "required": "no",
        "values": [
          "t2",
          "t3",
          "t3a"
        ]
      }
    }
  },
  {
    "title": "InstanceIpv6Address",
    "attrs": {
      "Ipv6Address (request), ipv6Address (response)": {
        "desc": "The IPv6 address.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "InstanceIpv6AddressRequest",
    "attrs": {
      "Ipv6Address": {
        "desc": "The IPv6 address.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "InstanceMarketOptionsRequest",
    "attrs": {
      "MarketType": {
        "desc": "The market type.",
        "type": "String",
        "required": "no",
        "values": [
          "spot"
        ]
      },
      "SpotOptions": {
        "desc": "The options for Spot Instances.",
        "type": "SpotMarketOptions object",
        "required": "no",
        "values": [
          "spot"
        ]
      }
    }
  },
  {
    "title": "InstanceMetadataOptionsRequest",
    "attrs": {
      "HttpEndpoint": {
        "desc": "This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is enabled.",
        "type": "String",
        "required": "no",
        "values": [
          "disabled",
          "enabled"
        ]
      },
      "HttpPutResponseHopLimit": {
        "desc": "The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.",
        "type": "Integer",
        "required": "no",
        "values": [
          "disabled",
          "enabled"
        ]
      },
      "HttpTokens": {
        "desc": "The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is optional.",
        "type": "String",
        "required": "no",
        "values": [
          "optional",
          "required"
        ]
      }
    }
  },
  {
    "title": "InstanceMetadataOptionsResponse",
    "attrs": {
      "httpEndpoint": {
        "desc": "This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is enabled.",
        "type": "String",
        "required": "no",
        "values": [
          "disabled",
          "enabled"
        ]
      },
      "httpPutResponseHopLimit": {
        "desc": "The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.",
        "type": "Integer",
        "required": "no",
        "values": [
          "disabled",
          "enabled"
        ]
      },
      "httpTokens": {
        "desc": "The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is optional.",
        "type": "String",
        "required": "no",
        "values": [
          "optional",
          "required"
        ]
      },
      "state": {
        "desc": "The state of the metadata option changes.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "applied"
        ]
      }
    }
  },
  {
    "title": "InstanceMonitoring",
    "attrs": {
      "instanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "no"
      },
      "monitoring": {
        "desc": "The monitoring for the instance.",
        "type": "Monitoring object",
        "required": "no"
      }
    }
  },
  {
    "title": "InstanceNetworkInterface",
    "attrs": {
      "association": {
        "desc": "The association information for an Elastic IPv4 associated with the network interface.",
        "type": "InstanceNetworkInterfaceAssociation object",
        "required": "no"
      },
      "attachment": {
        "desc": "The network interface attachment.",
        "type": "InstanceNetworkInterfaceAttachment object",
        "required": "no"
      },
      "description": {
        "desc": "The description.",
        "type": "String",
        "required": "no"
      },
      "groupSet": {
        "desc": "One or more security groups.",
        "type": "Array of GroupIdentifier objects",
        "required": "no"
      },
      "interfaceType": {
        "desc": "Describes the type of network interface.",
        "type": "String",
        "required": "no"
      },
      "ipv6AddressesSet": {
        "desc": "One or more IPv6 addresses associated with the network interface.",
        "type": "Array of InstanceIpv6Address objects",
        "required": "no"
      },
      "macAddress": {
        "desc": "The MAC address.",
        "type": "String",
        "required": "no"
      },
      "networkInterfaceId": {
        "desc": "The ID of the network interface.",
        "type": "String",
        "required": "no"
      },
      "ownerId": {
        "desc": "The ID of the AWS account that created the network interface.",
        "type": "String",
        "required": "no"
      },
      "privateDnsName": {
        "desc": "The private DNS name.",
        "type": "String",
        "required": "no"
      },
      "privateIpAddress": {
        "desc": "The IPv4 address of the network interface within the subnet.",
        "type": "String",
        "required": "no"
      },
      "privateIpAddressesSet": {
        "desc": "One or more private IPv4 addresses associated with the network interface.",
        "type": "Array of InstancePrivateIpAddress objects",
        "required": "no"
      },
      "sourceDestCheck": {
        "desc": "Indicates whether to validate network traffic to or from this network interface.",
        "type": "Boolean",
        "required": "no"
      },
      "status": {
        "desc": "The status of the network interface.",
        "type": "String",
        "required": "no",
        "values": [
          "available",
          "associated",
          "attaching",
          "in-use",
          "detaching"
        ]
      },
      "subnetId": {
        "desc": "The ID of the subnet.",
        "type": "String",
        "required": "no",
        "values": [
          "available",
          "associated",
          "attaching",
          "in-use",
          "detaching"
        ]
      },
      "vpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "no",
        "values": [
          "available",
          "associated",
          "attaching",
          "in-use",
          "detaching"
        ]
      }
    }
  },
  {
    "title": "InstanceNetworkInterfaceAssociation",
    "attrs": {
      "ipOwnerId": {
        "desc": "The ID of the owner of the Elastic IP address.",
        "type": "String",
        "required": "no"
      },
      "publicDnsName": {
        "desc": "The public DNS name.",
        "type": "String",
        "required": "no"
      },
      "publicIp": {
        "desc": "The public IP address or Elastic IP address bound to the network interface.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "InstanceNetworkInterfaceAttachment",
    "attrs": {
      "attachmentId": {
        "desc": "The ID of the network interface attachment.",
        "type": "String",
        "required": "no"
      },
      "attachTime": {
        "desc": "The time stamp when the attachment initiated.",
        "type": "Timestamp",
        "required": "no"
      },
      "deleteOnTermination": {
        "desc": "Indicates whether the network interface is deleted when the instance is terminated.",
        "type": "Boolean",
        "required": "no"
      },
      "deviceIndex": {
        "desc": "The index of the device on the instance for the network interface attachment.",
        "type": "Integer",
        "required": "no"
      },
      "status": {
        "desc": "The attachment state.",
        "type": "String",
        "required": "no",
        "values": [
          "attaching",
          "attached",
          "detaching",
          "detached"
        ]
      }
    }
  },
  {
    "title": "InstanceNetworkInterfaceSpecification",
    "attrs": {
      "AssociatePublicIpAddress (request), associatePublicIpAddress (response)": {
        "desc": "Indicates whether to assign a public IPv4 address to an instance you launch in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is true.",
        "type": "Boolean",
        "required": "no"
      },
      "DeleteOnTermination (request), deleteOnTermination (response)": {
        "desc": "If set to true, the interface is deleted when the instance is terminated. You can specify true only if creating a new network interface when launching an instance.",
        "type": "Boolean",
        "required": "no"
      },
      "Description (request), description (response)": {
        "desc": "The description of the network interface. Applies only if creating a network interface when launching an instance.",
        "type": "String",
        "required": "no"
      },
      "DeviceIndex (request), deviceIndex (response)": {
        "desc": "The position of the network interface in the attachment order. A primary network interface has a device index of 0.",
        "type": "Integer",
        "required": "no"
      },
      "InterfaceType (request), InterfaceType (response)": {
        "desc": "The type of network interface. To create an Elastic Fabric Adapter (EFA), specify efa. For more information, see Elastic Fabric Adapter in the Amazon Elastic Compute Cloud User Guide.",
        "type": "String",
        "required": "no"
      },
      "Ipv6AddressCount (request), ipv6AddressCount (response)": {
        "desc": "A number of IPv6 addresses to assign to the network interface. Amazon EC2 chooses the IPv6 addresses from the range of the subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch.",
        "type": "Integer",
        "required": "no"
      },
      "Ipv6Addresses (request), ipv6AddressesSet (response)": {
        "desc": "One or more IPv6 addresses to assign to the network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch.",
        "type": "Array of InstanceIpv6Address objects",
        "required": "no"
      },
      "NetworkInterfaceId (request), networkInterfaceId (response)": {
        "desc": "The ID of the network interface.",
        "type": "String",
        "required": "no"
      },
      "PrivateIpAddress (request), privateIpAddress (response)": {
        "desc": "The private IPv4 address of the network interface. Applies only if creating a network interface when launching an instance. You cannot specify this option if you're launching more than one instance in a RunInstances request.",
        "type": "String",
        "required": "no"
      },
      "PrivateIpAddresses (request), privateIpAddressesSet (response)": {
        "desc": "One or more private IPv4 addresses to assign to the network interface. Only one private IPv4 address can be designated as primary. You cannot specify this option if you're launching more than one instance in a RunInstances request.",
        "type": "Array of PrivateIpAddressSpecification objects",
        "required": "no"
      },
      "SecondaryPrivateIpAddressCount (request), secondaryPrivateIpAddressCount (response)": {
        "desc": "The number of secondary private IPv4 addresses. You can't specify this option and specify more than one private IP address using the private IP addresses option. You cannot specify this option if you're launching more than one instance in a RunInstances request.",
        "type": "Integer",
        "required": "no"
      },
      "Groups (request), SecurityGroupId (response)": {
        "desc": "The IDs of the security groups for the network interface. Applies only if creating a network interface when launching an instance.",
        "type": "Array of strings",
        "required": "no"
      },
      "SubnetId (request), subnetId (response)": {
        "desc": "The ID of the subnet associated with the network interface. Applies only if creating a network interface when launching an instance.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "InstancePrivateIpAddress",
    "attrs": {
      "association": {
        "desc": "The association information for an Elastic IP address for the network interface.",
        "type": "InstanceNetworkInterfaceAssociation object",
        "required": "no"
      },
      "primary": {
        "desc": "Indicates whether this IPv4 address is the primary private IP address of the network interface.",
        "type": "Boolean",
        "required": "no"
      },
      "privateDnsName": {
        "desc": "The private IPv4 DNS name.",
        "type": "String",
        "required": "no"
      },
      "privateIpAddress": {
        "desc": "The private IPv4 address of the network interface.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "InstanceSpecification",
    "attrs": {
      "ExcludeBootVolume": {
        "desc": "Excludes the root volume from being snapshotted.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The instance to specify which volumes should be snapshotted.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "InstanceState",
    "attrs": {
      "code": {
        "desc": "The state of the instance as a 16-bit unsigned integer.",
        "type": "Integer",
        "required": "no"
      },
      "name": {
        "desc": "The current state of the instance.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "running",
          "shutting-down",
          "terminated",
          "stopping",
          "stopped"
        ]
      }
    }
  },
  {
    "title": "InstanceStateChange",
    "attrs": {
      "currentState": {
        "desc": "The current state of the instance.",
        "type": "InstanceState object",
        "required": "no"
      },
      "instanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "no"
      },
      "previousState": {
        "desc": "The previous state of the instance.",
        "type": "InstanceState object",
        "required": "no"
      }
    }
  },
  {
    "title": "InstanceStatus",
    "attrs": {
      "availabilityZone": {
        "desc": "The Availability Zone of the instance.",
        "type": "String",
        "required": "no"
      },
      "eventsSet": {
        "desc": "Any scheduled events associated with the instance.",
        "type": "Array of InstanceStatusEvent objects",
        "required": "no"
      },
      "instanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "no"
      },
      "instanceState": {
        "desc": "The intended state of the instance. DescribeInstanceStatus requires that an instance be in the running state.",
        "type": "InstanceState object",
        "required": "no"
      },
      "instanceStatus": {
        "desc": "Reports impaired functionality that stems from issues internal to the instance, such as impaired reachability.",
        "type": "InstanceStatusSummary object",
        "required": "no"
      },
      "outpostArn": {
        "desc": "The Amazon Resource Name (ARN) of the Outpost.",
        "type": "String",
        "required": "no"
      },
      "systemStatus": {
        "desc": "Reports impaired functionality that stems from issues related to the systems that support an instance, such as hardware failures and network connectivity problems.",
        "type": "InstanceStatusSummary object",
        "required": "no"
      }
    }
  },
  {
    "title": "InstanceStatusDetails",
    "attrs": {
      "impairedSince": {
        "desc": "The time when a status check failed. For an instance that was launched and impaired, this is the time when the instance was launched.",
        "type": "Timestamp",
        "required": "no"
      },
      "name": {
        "desc": "The type of instance status.",
        "type": "String",
        "required": "no",
        "values": [
          "reachability"
        ]
      },
      "status": {
        "desc": "The status.",
        "type": "String",
        "required": "no",
        "values": [
          "passed",
          "failed",
          "insufficient-data",
          "initializing"
        ]
      }
    }
  },
  {
    "title": "InstanceStatusEvent",
    "attrs": {
      "code": {
        "desc": "The event code.",
        "type": "String",
        "required": "no",
        "values": [
          "instance-reboot",
          "system-reboot",
          "system-maintenance",
          "instance-retirement",
          "instance-stop"
        ]
      },
      "description": {
        "desc": "A description of the event.",
        "type": "String",
        "required": "no",
        "values": [
          "instance-reboot",
          "system-reboot",
          "system-maintenance",
          "instance-retirement",
          "instance-stop"
        ]
      },
      "instanceEventId": {
        "desc": "The ID of the event.",
        "type": "String",
        "required": "no",
        "values": [
          "instance-reboot",
          "system-reboot",
          "system-maintenance",
          "instance-retirement",
          "instance-stop"
        ]
      },
      "notAfter": {
        "desc": "The latest scheduled end time for the event.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "instance-reboot",
          "system-reboot",
          "system-maintenance",
          "instance-retirement",
          "instance-stop"
        ]
      },
      "notBefore": {
        "desc": "The earliest scheduled start time for the event.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "instance-reboot",
          "system-reboot",
          "system-maintenance",
          "instance-retirement",
          "instance-stop"
        ]
      },
      "notBeforeDeadline": {
        "desc": "The deadline for starting the event.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "instance-reboot",
          "system-reboot",
          "system-maintenance",
          "instance-retirement",
          "instance-stop"
        ]
      }
    }
  },
  {
    "title": "InstanceStatusSummary",
    "attrs": {
      "details": {
        "desc": "The system instance health or application instance health.",
        "type": "Array of InstanceStatusDetails objects",
        "required": "no"
      },
      "status": {
        "desc": "The status.",
        "type": "String",
        "required": "no",
        "values": [
          "ok",
          "impaired",
          "insufficient-data",
          "not-applicable",
          "initializing"
        ]
      }
    }
  },
  {
    "title": "InstanceStorageInfo",
    "attrs": {
      "disks": {
        "desc": "Array describing the disks that are available for the instance type.",
        "type": "Array of DiskInfo objects",
        "required": "no"
      },
      "totalSizeInGB": {
        "desc": "The total size of the disks, in GB.",
        "type": "Long",
        "required": "no"
      }
    }
  },
  {
    "title": "InstanceTypeInfo",
    "attrs": {
      "autoRecoverySupported": {
        "desc": "Indicates whether auto recovery is supported.",
        "type": "Boolean",
        "required": "no"
      },
      "bareMetal": {
        "desc": "Indicates whether the instance is bare metal.",
        "type": "Boolean",
        "required": "no"
      },
      "burstablePerformanceSupported": {
        "desc": "Indicates whether the instance type is a burstable performance instance type.",
        "type": "Boolean",
        "required": "no"
      },
      "currentGeneration": {
        "desc": "Indicates whether the instance type is a current generation.",
        "type": "Boolean",
        "required": "no"
      },
      "dedicatedHostsSupported": {
        "desc": "Indicates whether Dedicated Hosts are supported on the instance type.",
        "type": "Boolean",
        "required": "no"
      },
      "ebsInfo": {
        "desc": "Describes the Amazon EBS settings for the instance type.",
        "type": "EbsInfo object",
        "required": "no"
      },
      "fpgaInfo": {
        "desc": "Describes the FPGA accelerator settings for the instance type.",
        "type": "FpgaInfo object",
        "required": "no"
      },
      "freeTierEligible": {
        "desc": "Indicates whether the instance type is eligible for the free tier.",
        "type": "Boolean",
        "required": "no"
      },
      "gpuInfo": {
        "desc": "Describes the GPU accelerator settings for the instance type.",
        "type": "GpuInfo object",
        "required": "no"
      },
      "hibernationSupported": {
        "desc": "Indicates whether On-Demand hibernation is supported.",
        "type": "Boolean",
        "required": "no"
      },
      "hypervisor": {
        "desc": "Indicates the hypervisor used for the instance type.",
        "type": "String",
        "required": "no",
        "values": [
          "nitro",
          "xen"
        ]
      },
      "inferenceAcceleratorInfo": {
        "desc": "Describes the Inference accelerator settings for the instance type.",
        "type": "InferenceAcceleratorInfo object",
        "required": "no",
        "values": [
          "nitro",
          "xen"
        ]
      },
      "instanceStorageInfo": {
        "desc": "Describes the disks for the instance type.",
        "type": "InstanceStorageInfo object",
        "required": "no",
        "values": [
          "nitro",
          "xen"
        ]
      },
      "instanceStorageSupported": {
        "desc": "Indicates whether instance storage is supported.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "nitro",
          "xen"
        ]
      },
      "instanceType": {
        "desc": "The instance type. For more information, see Instance Types in the Amazon Elastic Compute Cloud User Guide.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "memoryInfo": {
        "desc": "Describes the memory for the instance type.",
        "type": "MemoryInfo object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "networkInfo": {
        "desc": "Describes the network settings for the instance type.",
        "type": "NetworkInfo object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "placementGroupInfo": {
        "desc": "Describes the placement group settings for the instance type.",
        "type": "PlacementGroupInfo object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "processorInfo": {
        "desc": "Describes the processor.",
        "type": "ProcessorInfo object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "supportedRootDeviceTypes": {
        "desc": "Indicates the supported root device types.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "ebs",
          "instance-store"
        ]
      },
      "supportedUsageClasses": {
        "desc": "Indicates whether the instance type is offered for spot or On-Demand.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "spot",
          "on-demand"
        ]
      },
      "vCpuInfo": {
        "desc": "Describes the vCPU configurations for the instance type.",
        "type": "VCpuInfo object",
        "required": "no",
        "values": [
          "spot",
          "on-demand"
        ]
      }
    }
  },
  {
    "title": "InstanceTypeOffering",
    "attrs": {
      "instanceType": {
        "desc": "The instance type. For more information, see Instance Types in the Amazon Elastic Compute Cloud User Guide.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "location": {
        "desc": "The identifier for the location. This depends on the location type. For example, if the location type is region, the location is the Region code (for example, us-east-2.)",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "locationType": {
        "desc": "The location type.",
        "type": "String",
        "required": "no",
        "values": [
          "region",
          "availability-zone",
          "availability-zone-id"
        ]
      }
    }
  },
  {
    "title": "InstanceUsage",
    "attrs": {
      "accountId": {
        "desc": "The ID of the AWS account that is making use of the Capacity Reservation.",
        "type": "String",
        "required": "no"
      },
      "usedInstanceCount": {
        "desc": "The number of instances the AWS account currently has in the Capacity Reservation.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "InternetGateway",
    "attrs": {
      "attachmentSet": {
        "desc": "Any VPCs attached to the internet gateway.",
        "type": "Array of InternetGatewayAttachment objects",
        "required": "no"
      },
      "internetGatewayId": {
        "desc": "The ID of the internet gateway.",
        "type": "String",
        "required": "no"
      },
      "ownerId": {
        "desc": "The ID of the AWS account that owns the internet gateway.",
        "type": "String",
        "required": "no"
      },
      "tagSet": {
        "desc": "Any tags assigned to the internet gateway.",
        "type": "Array of Tag objects",
        "required": "no"
      }
    }
  },
  {
    "title": "InternetGatewayAttachment",
    "attrs": {
      "state": {
        "desc": "The current state of the attachment. For an internet gateway, the state is available when attached to a VPC; otherwise, this value is not returned.",
        "type": "String",
        "required": "no",
        "values": [
          "attaching",
          "attached",
          "detaching",
          "detached"
        ]
      },
      "vpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "no",
        "values": [
          "attaching",
          "attached",
          "detaching",
          "detached"
        ]
      }
    }
  },
  {
    "title": "IpPermission",
    "attrs": {
      "FromPort (request), fromPort (response)": {
        "desc": "The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.",
        "type": "Integer",
        "required": "no"
      },
      "UserIdGroupPairs (request), groups (response)": {
        "desc": "The security group and AWS account ID pairs.",
        "type": "Array of UserIdGroupPair objects",
        "required": "no"
      },
      "IpProtocol (request), ipProtocol (response)": {
        "desc": "The IP protocol name (tcp, udp, icmp, icmpv6) or number (see Protocol Numbers).",
        "type": "String",
        "required": "no"
      },
      "IpRanges (request), ipRanges (response)": {
        "desc": "The IPv4 ranges.",
        "type": "Array of IpRange objects",
        "required": "no"
      },
      "Ipv6Ranges (request), ipv6Ranges (response)": {
        "desc": "[VPC only] The IPv6 ranges.",
        "type": "Array of Ipv6Range objects",
        "required": "no"
      },
      "PrefixListIds (request), prefixListIds (response)": {
        "desc": "[VPC only] The prefix list IDs for an AWS service. With outbound rules, this is the AWS service to access through a VPC endpoint from instances associated with the security group.",
        "type": "Array of PrefixListId objects",
        "required": "no"
      },
      "ToPort (request), toPort (response)": {
        "desc": "The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "IpRange",
    "attrs": {
      "CidrIp (request), cidrIp (response)": {
        "desc": "The IPv4 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv4 address, use the /32 prefix length.",
        "type": "String",
        "required": "no"
      },
      "Description (request), description (response)": {
        "desc": "A description for the security group rule that references this IPv4 address range.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "Ipv6CidrAssociation",
    "attrs": {
      "associatedResource": {
        "desc": "The resource that's associated with the IPv6 CIDR block.",
        "type": "String",
        "required": "no"
      },
      "ipv6Cidr": {
        "desc": "The IPv6 CIDR block.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "Ipv6CidrBlock",
    "attrs": {
      "ipv6CidrBlock": {
        "desc": "The IPv6 CIDR block.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "Ipv6Pool",
    "attrs": {
      "description": {
        "desc": "The description for the address pool.",
        "type": "String",
        "required": "no"
      },
      "poolCidrBlockSet": {
        "desc": "The CIDR blocks for the address pool.",
        "type": "Array of PoolCidrBlock objects",
        "required": "no"
      },
      "poolId": {
        "desc": "The ID of the address pool.",
        "type": "String",
        "required": "no"
      },
      "tagSet": {
        "desc": "Any tags for the address pool.",
        "type": "Array of Tag objects",
        "required": "no"
      }
    }
  },
  {
    "title": "Ipv6Range",
    "attrs": {
      "CidrIpv6 (request), cidrIpv6 (response)": {
        "desc": "The IPv6 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv6 address, use the /128 prefix length.",
        "type": "String",
        "required": "no"
      },
      "Description (request), description (response)": {
        "desc": "A description for the security group rule that references this IPv6 address range.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "KeyPairInfo",
    "attrs": {
      "keyFingerprint": {
        "desc": "If you used CreateKeyPair to create the key pair, this is the SHA-1 digest of the DER encoded private key. If you used ImportKeyPair to provide AWS the public key, this is the MD5 public key fingerprint as specified in section 4 of RFC4716.",
        "type": "String",
        "required": "no"
      },
      "keyName": {
        "desc": "The name of the key pair.",
        "type": "String",
        "required": "no"
      },
      "keyPairId": {
        "desc": "The ID of the key pair.",
        "type": "String",
        "required": "no"
      },
      "tagSet": {
        "desc": "Any tags applied to the key pair.",
        "type": "Array of Tag objects",
        "required": "no"
      }
    }
  },
  {
    "title": "LastError",
    "attrs": {
      "code": {
        "desc": "The error code for the VPC endpoint error.",
        "type": "String",
        "required": "no"
      },
      "message": {
        "desc": "The error message for the VPC endpoint error.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "LaunchPermission",
    "attrs": {
      "Group (request), group (response)": {
        "desc": "The name of the group.",
        "type": "String",
        "required": "no",
        "values": [
          "all"
        ]
      },
      "UserId (request), userId (response)": {
        "desc": "The AWS account ID.",
        "type": "String",
        "required": "no",
        "values": [
          "all"
        ]
      }
    }
  },
  {
    "title": "LaunchPermissionModifications",
    "attrs": {
      "Add": {
        "desc": "The AWS account ID to add to the list of launch permissions for the AMI.",
        "type": "Array of LaunchPermission objects",
        "required": "no"
      },
      "Remove": {
        "desc": "The AWS account ID to remove from the list of launch permissions for the AMI.",
        "type": "Array of LaunchPermission objects",
        "required": "no"
      }
    }
  },
  {
    "title": "LaunchSpecification",
    "attrs": {
      "addressingType": {
        "desc": "Deprecated.",
        "type": "String",
        "required": "no"
      },
      "blockDeviceMapping": {
        "desc": "One or more block device mapping entries.",
        "type": "Array of BlockDeviceMapping objects",
        "required": "no"
      },
      "ebsOptimized": {
        "desc": "Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.",
        "type": "Boolean",
        "required": "no"
      },
      "groupSet": {
        "desc": "One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.",
        "type": "Array of GroupIdentifier objects",
        "required": "no"
      },
      "iamInstanceProfile": {
        "desc": "The IAM instance profile.",
        "type": "IamInstanceProfileSpecification object",
        "required": "no"
      },
      "imageId": {
        "desc": "The ID of the AMI.",
        "type": "String",
        "required": "no"
      },
      "instanceType": {
        "desc": "The instance type.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "kernelId": {
        "desc": "The ID of the kernel.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "keyName": {
        "desc": "The name of the key pair.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "monitoring": {
        "desc": "Describes the monitoring of an instance.",
        "type": "RunInstancesMonitoringEnabled object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "networkInterfaceSet": {
        "desc": "One or more network interfaces. If you specify a network interface, you must specify subnet IDs and security group IDs using the network interface.",
        "type": "Array of InstanceNetworkInterfaceSpecification objects",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "placement": {
        "desc": "The placement information for the instance.",
        "type": "SpotPlacement object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "ramdiskId": {
        "desc": "The ID of the RAM disk.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "subnetId": {
        "desc": "The ID of the subnet in which to launch the instance.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "userData": {
        "desc": "The Base64-encoded user data for the instance.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      }
    }
  },
  {
    "title": "LaunchTemplate",
    "attrs": {
      "createdBy": {
        "desc": "The principal that created the launch template.",
        "type": "String",
        "required": "no"
      },
      "createTime": {
        "desc": "The time launch template was created.",
        "type": "Timestamp",
        "required": "no"
      },
      "defaultVersionNumber": {
        "desc": "The version number of the default version of the launch template.",
        "type": "Long",
        "required": "no"
      },
      "latestVersionNumber": {
        "desc": "The version number of the latest version of the launch template.",
        "type": "Long",
        "required": "no"
      },
      "launchTemplateId": {
        "desc": "The ID of the launch template.",
        "type": "String",
        "required": "no"
      },
      "launchTemplateName": {
        "desc": "The name of the launch template.",
        "type": "String",
        "required": "no"
      },
      "tagSet": {
        "desc": "The tags for the launch template.",
        "type": "Array of Tag objects",
        "required": "no"
      }
    }
  },
  {
    "title": "LaunchTemplateAndOverridesResponse",
    "attrs": {
      "launchTemplateSpecification": {
        "desc": "The launch template.",
        "type": "FleetLaunchTemplateSpecification object",
        "required": "no"
      },
      "overrides": {
        "desc": "Any parameters that you specify override the same parameters in the launch template.",
        "type": "FleetLaunchTemplateOverrides object",
        "required": "no"
      }
    }
  },
  {
    "title": "LaunchTemplateBlockDeviceMapping",
    "attrs": {
      "deviceName": {
        "desc": "The device name.",
        "type": "String",
        "required": "no"
      },
      "ebs": {
        "desc": "Information about the block device for an EBS volume.",
        "type": "LaunchTemplateEbsBlockDevice object",
        "required": "no"
      },
      "noDevice": {
        "desc": "Suppresses the specified device included in the block device mapping of the AMI.",
        "type": "String",
        "required": "no"
      },
      "virtualName": {
        "desc": "The virtual device name (ephemeralN).",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "LaunchTemplateBlockDeviceMappingRequest",
    "attrs": {
      "DeviceName": {
        "desc": "The device name (for example, /dev/sdh or xvdh).",
        "type": "String",
        "required": "no"
      },
      "Ebs": {
        "desc": "Parameters used to automatically set up EBS volumes when the instance is launched.",
        "type": "LaunchTemplateEbsBlockDeviceRequest object",
        "required": "no"
      },
      "NoDevice": {
        "desc": "Suppresses the specified device included in the block device mapping of the AMI.",
        "type": "String",
        "required": "no"
      },
      "VirtualName": {
        "desc": "The virtual device name (ephemeralN). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1. The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "LaunchTemplateCapacityReservationSpecificationRequest",
    "attrs": {
      "CapacityReservationPreference": {
        "desc": "Indicates the instance's Capacity Reservation preferences. Possible preferences include:",
        "type": "String",
        "required": "no",
        "values": [
          "open",
          "none"
        ]
      },
      "CapacityReservationTarget": {
        "desc": "Information about the target Capacity Reservation.",
        "type": "CapacityReservationTarget object",
        "required": "no",
        "values": [
          "open",
          "none"
        ]
      }
    }
  },
  {
    "title": "LaunchTemplateCapacityReservationSpecificationResponse",
    "attrs": {
      "capacityReservationPreference": {
        "desc": "Indicates the instance's Capacity Reservation preferences. Possible preferences include:",
        "type": "String",
        "required": "no",
        "values": [
          "open",
          "none"
        ]
      },
      "capacityReservationTarget": {
        "desc": "Information about the target Capacity Reservation.",
        "type": "CapacityReservationTargetResponse object",
        "required": "no",
        "values": [
          "open",
          "none"
        ]
      }
    }
  },
  {
    "title": "LaunchTemplateConfig",
    "attrs": {
      "LaunchTemplateSpecification (request), launchTemplateSpecification (response)": {
        "desc": "The launch template.",
        "type": "FleetLaunchTemplateSpecification object",
        "required": "no"
      },
      "Overrides (request), overrides (response)": {
        "desc": "Any parameters that you specify override the same parameters in the launch template.",
        "type": "Array of LaunchTemplateOverrides objects",
        "required": "no"
      }
    }
  },
  {
    "title": "LaunchTemplateCpuOptions",
    "attrs": {
      "coreCount": {
        "desc": "The number of CPU cores for the instance.",
        "type": "Integer",
        "required": "no"
      },
      "threadsPerCore": {
        "desc": "The number of threads per CPU core.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "LaunchTemplateCpuOptionsRequest",
    "attrs": {
      "CoreCount": {
        "desc": "The number of CPU cores for the instance.",
        "type": "Integer",
        "required": "no"
      },
      "ThreadsPerCore": {
        "desc": "The number of threads per CPU core. To disable multithreading for the instance, specify a value of 1. Otherwise, specify the default value of 2.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "LaunchTemplateEbsBlockDevice",
    "attrs": {
      "deleteOnTermination": {
        "desc": "Indicates whether the EBS volume is deleted on instance termination.",
        "type": "Boolean",
        "required": "no"
      },
      "encrypted": {
        "desc": "Indicates whether the EBS volume is encrypted.",
        "type": "Boolean",
        "required": "no"
      },
      "iops": {
        "desc": "The number of I/O operations per second (IOPS) that the volume supports.",
        "type": "Integer",
        "required": "no"
      },
      "kmsKeyId": {
        "desc": "The ARN of the AWS Key Management Service (AWS KMS) CMK used for encryption.",
        "type": "String",
        "required": "no"
      },
      "snapshotId": {
        "desc": "The ID of the snapshot.",
        "type": "String",
        "required": "no"
      },
      "volumeSize": {
        "desc": "The size of the volume, in GiB.",
        "type": "Integer",
        "required": "no"
      },
      "volumeType": {
        "desc": "The volume type.",
        "type": "String",
        "required": "no",
        "values": [
          "standard",
          "io1",
          "gp2",
          "sc1",
          "st1"
        ]
      }
    }
  },
  {
    "title": "LaunchTemplateEbsBlockDeviceRequest",
    "attrs": {
      "DeleteOnTermination": {
        "desc": "Indicates whether the EBS volume is deleted on instance termination.",
        "type": "Boolean",
        "required": "no"
      },
      "Encrypted": {
        "desc": "Indicates whether the EBS volume is encrypted. Encrypted volumes can only be attached to instances that support Amazon EBS encryption. If you are creating a volume from a snapshot, you can't specify an encryption value.",
        "type": "Boolean",
        "required": "no"
      },
      "Iops": {
        "desc": "The number of I/O operations per second (IOPS) that the volume supports. For io1, this represents the number of IOPS that are provisioned for the volume. For gp2, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information about General Purpose SSD baseline performance, I/O credits, and bursting, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide.",
        "type": "Integer",
        "required": "no"
      },
      "KmsKeyId": {
        "desc": "The ARN of the symmetric AWS Key Management Service (AWS KMS) CMK used for encryption.",
        "type": "String",
        "required": "no"
      },
      "SnapshotId": {
        "desc": "The ID of the snapshot.",
        "type": "String",
        "required": "no"
      },
      "VolumeSize": {
        "desc": "The size of the volume, in GiB.",
        "type": "Integer",
        "required": "no"
      },
      "VolumeType": {
        "desc": "The volume type.",
        "type": "String",
        "required": "no",
        "values": [
          "standard",
          "io1",
          "gp2",
          "sc1",
          "st1"
        ]
      }
    }
  },
  {
    "title": "LaunchTemplateElasticInferenceAccelerator",
    "attrs": {
      "Count": {
        "desc": "The number of elastic inference accelerators to attach to the instance.",
        "type": "Integer",
        "required": "no"
      },
      "Type": {
        "desc": "The type of elastic inference accelerator. The possible values are eia1.medium, eia1.large, and eia1.xlarge.",
        "type": "String",
        "required": "yes"
      }
    }
  },
  {
    "title": "LaunchTemplateElasticInferenceAcceleratorResponse",
    "attrs": {
      "count": {
        "desc": "The number of elastic inference accelerators to attach to the instance.",
        "type": "Integer",
        "required": "no"
      },
      "type": {
        "desc": "The type of elastic inference accelerator. The possible values are eia1.medium, eia1.large, and eia1.xlarge.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "LaunchTemplateHibernationOptions",
    "attrs": {
      "configured": {
        "desc": "If this parameter is set to true, the instance is enabled for hibernation; otherwise, it is not enabled for hibernation.",
        "type": "Boolean",
        "required": "no"
      }
    }
  },
  {
    "title": "LaunchTemplateHibernationOptionsRequest",
    "attrs": {
      "Configured": {
        "desc": "If you set this parameter to true, the instance is enabled for hibernation.",
        "type": "Boolean",
        "required": "no"
      }
    }
  },
  {
    "title": "LaunchTemplateIamInstanceProfileSpecification",
    "attrs": {
      "arn": {
        "desc": "The Amazon Resource Name (ARN) of the instance profile.",
        "type": "String",
        "required": "no"
      },
      "name": {
        "desc": "The name of the instance profile.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "LaunchTemplateIamInstanceProfileSpecificationRequest",
    "attrs": {
      "Arn": {
        "desc": "The Amazon Resource Name (ARN) of the instance profile.",
        "type": "String",
        "required": "no"
      },
      "Name": {
        "desc": "The name of the instance profile.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "LaunchTemplateInstanceMarketOptions",
    "attrs": {
      "marketType": {
        "desc": "The market type.",
        "type": "String",
        "required": "no",
        "values": [
          "spot"
        ]
      },
      "spotOptions": {
        "desc": "The options for Spot Instances.",
        "type": "LaunchTemplateSpotMarketOptions object",
        "required": "no",
        "values": [
          "spot"
        ]
      }
    }
  },
  {
    "title": "LaunchTemplateInstanceMarketOptionsRequest",
    "attrs": {
      "MarketType": {
        "desc": "The market type.",
        "type": "String",
        "required": "no",
        "values": [
          "spot"
        ]
      },
      "SpotOptions": {
        "desc": "The options for Spot Instances.",
        "type": "LaunchTemplateSpotMarketOptionsRequest object",
        "required": "no",
        "values": [
          "spot"
        ]
      }
    }
  },
  {
    "title": "LaunchTemplateInstanceMetadataOptions",
    "attrs": {
      "httpEndpoint": {
        "desc": "This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is enabled.",
        "type": "String",
        "required": "no",
        "values": [
          "disabled",
          "enabled"
        ]
      },
      "httpPutResponseHopLimit": {
        "desc": "The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.",
        "type": "Integer",
        "required": "no",
        "values": [
          "disabled",
          "enabled"
        ]
      },
      "httpTokens": {
        "desc": "The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is optional.",
        "type": "String",
        "required": "no",
        "values": [
          "optional",
          "required"
        ]
      },
      "state": {
        "desc": "The state of the metadata option changes.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "applied"
        ]
      }
    }
  },
  {
    "title": "LaunchTemplateInstanceMetadataOptionsRequest",
    "attrs": {
      "HttpEndpoint": {
        "desc": "This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is enabled.",
        "type": "String",
        "required": "no",
        "values": [
          "disabled",
          "enabled"
        ]
      },
      "HttpPutResponseHopLimit": {
        "desc": "The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.",
        "type": "Integer",
        "required": "no",
        "values": [
          "disabled",
          "enabled"
        ]
      },
      "HttpTokens": {
        "desc": "The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is optional.",
        "type": "String",
        "required": "no",
        "values": [
          "optional",
          "required"
        ]
      }
    }
  },
  {
    "title": "LaunchTemplateInstanceNetworkInterfaceSpecification",
    "attrs": {
      "associatePublicIpAddress": {
        "desc": "Indicates whether to associate a public IPv4 address with eth0 for a new network interface.",
        "type": "Boolean",
        "required": "no"
      },
      "deleteOnTermination": {
        "desc": "Indicates whether the network interface is deleted when the instance is terminated.",
        "type": "Boolean",
        "required": "no"
      },
      "description": {
        "desc": "A description for the network interface.",
        "type": "String",
        "required": "no"
      },
      "deviceIndex": {
        "desc": "The device index for the network interface attachment.",
        "type": "Integer",
        "required": "no"
      },
      "groupSet": {
        "desc": "The IDs of one or more security groups.",
        "type": "Array of strings",
        "required": "no"
      },
      "interfaceType": {
        "desc": "The type of network interface.",
        "type": "String",
        "required": "no"
      },
      "ipv6AddressCount": {
        "desc": "The number of IPv6 addresses for the network interface.",
        "type": "Integer",
        "required": "no"
      },
      "ipv6AddressesSet": {
        "desc": "The IPv6 addresses for the network interface.",
        "type": "Array of InstanceIpv6Address objects",
        "required": "no"
      },
      "networkInterfaceId": {
        "desc": "The ID of the network interface.",
        "type": "String",
        "required": "no"
      },
      "privateIpAddress": {
        "desc": "The primary private IPv4 address of the network interface.",
        "type": "String",
        "required": "no"
      },
      "privateIpAddressesSet": {
        "desc": "One or more private IPv4 addresses.",
        "type": "Array of PrivateIpAddressSpecification objects",
        "required": "no"
      },
      "secondaryPrivateIpAddressCount": {
        "desc": "The number of secondary private IPv4 addresses for the network interface.",
        "type": "Integer",
        "required": "no"
      },
      "subnetId": {
        "desc": "The ID of the subnet for the network interface.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "LaunchTemplateInstanceNetworkInterfaceSpecificationRequest",
    "attrs": {
      "AssociatePublicIpAddress": {
        "desc": "Associates a public IPv4 address with eth0 for a new network interface.",
        "type": "Boolean",
        "required": "no"
      },
      "DeleteOnTermination": {
        "desc": "Indicates whether the network interface is deleted when the instance is terminated.",
        "type": "Boolean",
        "required": "no"
      },
      "Description": {
        "desc": "A description for the network interface.",
        "type": "String",
        "required": "no"
      },
      "DeviceIndex": {
        "desc": "The device index for the network interface attachment.",
        "type": "Integer",
        "required": "no"
      },
      "InterfaceType": {
        "desc": "The type of network interface. To create an Elastic Fabric Adapter (EFA), specify efa. For more information, see Elastic Fabric Adapter in the Amazon Elastic Compute Cloud User Guide.",
        "type": "String",
        "required": "no"
      },
      "Ipv6AddressCount": {
        "desc": "The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can't use this option if specifying specific IPv6 addresses.",
        "type": "Integer",
        "required": "no"
      },
      "Ipv6Addresses": {
        "desc": "One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. You can't use this option if you're specifying a number of IPv6 addresses.",
        "type": "Array of InstanceIpv6AddressRequest objects",
        "required": "no"
      },
      "NetworkInterfaceId": {
        "desc": "The ID of the network interface.",
        "type": "String",
        "required": "no"
      },
      "PrivateIpAddress": {
        "desc": "The primary private IPv4 address of the network interface.",
        "type": "String",
        "required": "no"
      },
      "PrivateIpAddresses": {
        "desc": "One or more private IPv4 addresses.",
        "type": "Array of PrivateIpAddressSpecification objects",
        "required": "no"
      },
      "SecondaryPrivateIpAddressCount": {
        "desc": "The number of secondary private IPv4 addresses to assign to a network interface.",
        "type": "Integer",
        "required": "no"
      },
      "Groups": {
        "desc": "The IDs of one or more security groups.",
        "type": "Array of strings",
        "required": "no"
      },
      "SubnetId": {
        "desc": "The ID of the subnet for the network interface.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "LaunchTemplateLicenseConfiguration",
    "attrs": {
      "licenseConfigurationArn": {
        "desc": "The Amazon Resource Name (ARN) of the license configuration.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "LaunchTemplateLicenseConfigurationRequest",
    "attrs": {
      "LicenseConfigurationArn": {
        "desc": "The Amazon Resource Name (ARN) of the license configuration.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "LaunchTemplateOverrides",
    "attrs": {
      "AvailabilityZone (request), availabilityZone (response)": {
        "desc": "The Availability Zone in which to launch the instances.",
        "type": "String",
        "required": "no"
      },
      "InstanceType (request), instanceType (response)": {
        "desc": "The instance type.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "Priority (request), priority (response)": {
        "desc": "The priority for the launch template override. If OnDemandAllocationStrategy is set to prioritized, Spot Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. Valid values are whole numbers starting at 0. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority.",
        "type": "Double",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "SpotPrice (request), spotPrice (response)": {
        "desc": "The maximum price per unit hour that you are willing to pay for a Spot Instance.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "SubnetId (request), subnetId (response)": {
        "desc": "The ID of the subnet in which to launch the instances.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "WeightedCapacity (request), weightedCapacity (response)": {
        "desc": "The number of units provided by the specified instance type.",
        "type": "Double",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      }
    }
  },
  {
    "title": "LaunchTemplatePlacement",
    "attrs": {
      "affinity": {
        "desc": "The affinity setting for the instance on the Dedicated Host.",
        "type": "String",
        "required": "no"
      },
      "availabilityZone": {
        "desc": "The Availability Zone of the instance.",
        "type": "String",
        "required": "no"
      },
      "groupName": {
        "desc": "The name of the placement group for the instance.",
        "type": "String",
        "required": "no"
      },
      "hostId": {
        "desc": "The ID of the Dedicated Host for the instance.",
        "type": "String",
        "required": "no"
      },
      "hostResourceGroupArn": {
        "desc": "The ARN of the host resource group in which to launch the instances.",
        "type": "String",
        "required": "no"
      },
      "partitionNumber": {
        "desc": "The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition.",
        "type": "Integer",
        "required": "no"
      },
      "spreadDomain": {
        "desc": "Reserved for future use.",
        "type": "String",
        "required": "no"
      },
      "tenancy": {
        "desc": "The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware.",
        "type": "String",
        "required": "no",
        "values": [
          "default",
          "dedicated",
          "host"
        ]
      }
    }
  },
  {
    "title": "LaunchTemplatePlacementRequest",
    "attrs": {
      "Affinity": {
        "desc": "The affinity setting for an instance on a Dedicated Host.",
        "type": "String",
        "required": "no"
      },
      "AvailabilityZone": {
        "desc": "The Availability Zone for the instance.",
        "type": "String",
        "required": "no"
      },
      "GroupName": {
        "desc": "The name of the placement group for the instance.",
        "type": "String",
        "required": "no"
      },
      "HostId": {
        "desc": "The ID of the Dedicated Host for the instance.",
        "type": "String",
        "required": "no"
      },
      "HostResourceGroupArn": {
        "desc": "The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the Tenancy parameter or set it to host.",
        "type": "String",
        "required": "no"
      },
      "PartitionNumber": {
        "desc": "The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition.",
        "type": "Integer",
        "required": "no"
      },
      "SpreadDomain": {
        "desc": "Reserved for future use.",
        "type": "String",
        "required": "no"
      },
      "Tenancy": {
        "desc": "The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware.",
        "type": "String",
        "required": "no",
        "values": [
          "default",
          "dedicated",
          "host"
        ]
      }
    }
  },
  {
    "title": "LaunchTemplatesMonitoring",
    "attrs": {
      "enabled": {
        "desc": "Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.",
        "type": "Boolean",
        "required": "no"
      }
    }
  },
  {
    "title": "LaunchTemplatesMonitoringRequest",
    "attrs": {
      "Enabled": {
        "desc": "Specify true to enable detailed monitoring. Otherwise, basic monitoring is enabled.",
        "type": "Boolean",
        "required": "no"
      }
    }
  },
  {
    "title": "LaunchTemplateSpecification",
    "attrs": {
      "LaunchTemplateId": {
        "desc": "The ID of the launch template.",
        "type": "String",
        "required": "no"
      },
      "LaunchTemplateName": {
        "desc": "The name of the launch template.",
        "type": "String",
        "required": "no"
      },
      "Version": {
        "desc": "The version number of the launch template.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "LaunchTemplateSpotMarketOptions",
    "attrs": {
      "blockDurationMinutes": {
        "desc": "The required duration for the Spot Instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).",
        "type": "Integer",
        "required": "no"
      },
      "instanceInterruptionBehavior": {
        "desc": "The behavior when a Spot Instance is interrupted.",
        "type": "String",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "maxPrice": {
        "desc": "The maximum hourly price you're willing to pay for the Spot Instances.",
        "type": "String",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "spotInstanceType": {
        "desc": "The Spot Instance request type.",
        "type": "String",
        "required": "no",
        "values": [
          "one-time",
          "persistent"
        ]
      },
      "validUntil": {
        "desc": "The end date of the request. For a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date and time is reached.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "one-time",
          "persistent"
        ]
      }
    }
  },
  {
    "title": "LaunchTemplateSpotMarketOptionsRequest",
    "attrs": {
      "BlockDurationMinutes": {
        "desc": "The required duration for the Spot Instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).",
        "type": "Integer",
        "required": "no"
      },
      "InstanceInterruptionBehavior": {
        "desc": "The behavior when a Spot Instance is interrupted. The default is terminate.",
        "type": "String",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "MaxPrice": {
        "desc": "The maximum hourly price you're willing to pay for the Spot Instances.",
        "type": "String",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "SpotInstanceType": {
        "desc": "The Spot Instance request type.",
        "type": "String",
        "required": "no",
        "values": [
          "one-time",
          "persistent"
        ]
      },
      "ValidUntil": {
        "desc": "The end date of the request. For a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date and time is reached. The default end date is 7 days from the current date.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "one-time",
          "persistent"
        ]
      }
    }
  },
  {
    "title": "LaunchTemplateTagSpecification",
    "attrs": {
      "resourceType": {
        "desc": "The type of resource.",
        "type": "String",
        "required": "no",
        "values": [
          "client-vpn-endpoint",
          "customer-gateway",
          "dedicated-host",
          "dhcp-options",
          "elastic-ip"
        ]
      },
      "tagSet": {
        "desc": "The tags for the resource.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "client-vpn-endpoint",
          "customer-gateway",
          "dedicated-host",
          "dhcp-options",
          "elastic-ip"
        ]
      }
    }
  },
  {
    "title": "LaunchTemplateTagSpecificationRequest",
    "attrs": {
      "ResourceType": {
        "desc": "The type of resource to tag. Currently, the resource types that support tagging on creation are instance and volume. To tag a resource after it has been created, see CreateTags.",
        "type": "String",
        "required": "no",
        "values": [
          "client-vpn-endpoint",
          "customer-gateway",
          "dedicated-host",
          "dhcp-options",
          "elastic-ip"
        ]
      },
      "Tags": {
        "desc": "The tags to apply to the resource.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "client-vpn-endpoint",
          "customer-gateway",
          "dedicated-host",
          "dhcp-options",
          "elastic-ip"
        ]
      }
    }
  },
  {
    "title": "LaunchTemplateVersion",
    "attrs": {
      "createdBy": {
        "desc": "The principal that created the version.",
        "type": "String",
        "required": "no"
      },
      "createTime": {
        "desc": "The time the version was created.",
        "type": "Timestamp",
        "required": "no"
      },
      "defaultVersion": {
        "desc": "Indicates whether the version is the default version.",
        "type": "Boolean",
        "required": "no"
      },
      "launchTemplateData": {
        "desc": "Information about the launch template.",
        "type": "ResponseLaunchTemplateData object",
        "required": "no"
      },
      "launchTemplateId": {
        "desc": "The ID of the launch template.",
        "type": "String",
        "required": "no"
      },
      "launchTemplateName": {
        "desc": "The name of the launch template.",
        "type": "String",
        "required": "no"
      },
      "versionDescription": {
        "desc": "The description for the version.",
        "type": "String",
        "required": "no"
      },
      "versionNumber": {
        "desc": "The version number.",
        "type": "Long",
        "required": "no"
      }
    }
  },
  {
    "title": "LicenseConfiguration",
    "attrs": {
      "licenseConfigurationArn": {
        "desc": "The Amazon Resource Name (ARN) of the license configuration.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "LicenseConfigurationRequest",
    "attrs": {
      "LicenseConfigurationArn": {
        "desc": "The Amazon Resource Name (ARN) of the license configuration.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "LoadBalancersConfig",
    "attrs": {
      "ClassicLoadBalancersConfig (request), classicLoadBalancersConfig (response)": {
        "desc": "The Classic Load Balancers.",
        "type": "ClassicLoadBalancersConfig object",
        "required": "no"
      },
      "TargetGroupsConfig (request), targetGroupsConfig (response)": {
        "desc": "The target groups.",
        "type": "TargetGroupsConfig object",
        "required": "no"
      }
    }
  },
  {
    "title": "LoadPermission",
    "attrs": {
      "group": {
        "desc": "The name of the group.",
        "type": "String",
        "required": "no",
        "values": [
          "all"
        ]
      },
      "userId": {
        "desc": "The AWS account ID.",
        "type": "String",
        "required": "no",
        "values": [
          "all"
        ]
      }
    }
  },
  {
    "title": "LoadPermissionModifications",
    "attrs": {
      "Add": {
        "desc": "The load permissions to add.",
        "type": "Array of LoadPermissionRequest objects",
        "required": "no"
      },
      "Remove": {
        "desc": "The load permissions to remove.",
        "type": "Array of LoadPermissionRequest objects",
        "required": "no"
      }
    }
  },
  {
    "title": "LoadPermissionRequest",
    "attrs": {
      "Group": {
        "desc": "The name of the group.",
        "type": "String",
        "required": "no",
        "values": [
          "all"
        ]
      },
      "UserId": {
        "desc": "The AWS account ID.",
        "type": "String",
        "required": "no",
        "values": [
          "all"
        ]
      }
    }
  },
  {
    "title": "LocalGateway",
    "attrs": {
      "localGatewayId": {
        "desc": "The ID of the local gateway.",
        "type": "String",
        "required": "no"
      },
      "outpostArn": {
        "desc": "The Amazon Resource Name (ARN) of the Outpost.",
        "type": "String",
        "required": "no"
      },
      "ownerId": {
        "desc": "The ID of the AWS account ID that owns the local gateway.",
        "type": "String",
        "required": "no"
      },
      "state": {
        "desc": "The state of the local gateway.",
        "type": "String",
        "required": "no"
      },
      "tagSet": {
        "desc": "The tags assigned to the local gateway.",
        "type": "Array of Tag objects",
        "required": "no"
      }
    }
  },
  {
    "title": "LocalGatewayRoute",
    "attrs": {
      "destinationCidrBlock": {
        "desc": "The CIDR block used for destination matches.",
        "type": "String",
        "required": "no"
      },
      "localGatewayRouteTableId": {
        "desc": "The ID of the local gateway route table.",
        "type": "String",
        "required": "no"
      },
      "localGatewayVirtualInterfaceGroupId": {
        "desc": "The ID of the virtual interface group.",
        "type": "String",
        "required": "no"
      },
      "state": {
        "desc": "The state of the route.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "active",
          "blackhole",
          "deleting",
          "deleted"
        ]
      },
      "type": {
        "desc": "The route type.",
        "type": "String",
        "required": "no",
        "values": [
          "static",
          "propagated"
        ]
      }
    }
  },
  {
    "title": "LocalGatewayRouteTable",
    "attrs": {
      "localGatewayId": {
        "desc": "The ID of the local gateway.",
        "type": "String",
        "required": "no"
      },
      "localGatewayRouteTableId": {
        "desc": "The ID of the local gateway route table.",
        "type": "String",
        "required": "no"
      },
      "outpostArn": {
        "desc": "The Amazon Resource Name (ARN) of the Outpost.",
        "type": "String",
        "required": "no"
      },
      "state": {
        "desc": "The state of the local gateway route table.",
        "type": "String",
        "required": "no"
      },
      "tagSet": {
        "desc": "The tags assigned to the local gateway route table.",
        "type": "Array of Tag objects",
        "required": "no"
      }
    }
  },
  {
    "title": "LocalGatewayRouteTableVirtualInterfaceGroupAssociation",
    "attrs": {
      "localGatewayId": {
        "desc": "The ID of the local gateway.",
        "type": "String",
        "required": "no"
      },
      "localGatewayRouteTableId": {
        "desc": "The ID of the local gateway route table.",
        "type": "String",
        "required": "no"
      },
      "localGatewayRouteTableVirtualInterfaceGroupAssociationId": {
        "desc": "The ID of the association.",
        "type": "String",
        "required": "no"
      },
      "localGatewayVirtualInterfaceGroupId": {
        "desc": "The ID of the virtual interface group.",
        "type": "String",
        "required": "no"
      },
      "state": {
        "desc": "The state of the association.",
        "type": "String",
        "required": "no"
      },
      "tagSet": {
        "desc": "The tags assigned to the association.",
        "type": "Array of Tag objects",
        "required": "no"
      }
    }
  },
  {
    "title": "LocalGatewayRouteTableVpcAssociation",
    "attrs": {
      "localGatewayId": {
        "desc": "The ID of the local gateway.",
        "type": "String",
        "required": "no"
      },
      "localGatewayRouteTableId": {
        "desc": "The ID of the local gateway route table.",
        "type": "String",
        "required": "no"
      },
      "localGatewayRouteTableVpcAssociationId": {
        "desc": "The ID of the association.",
        "type": "String",
        "required": "no"
      },
      "state": {
        "desc": "The state of the association.",
        "type": "String",
        "required": "no"
      },
      "tagSet": {
        "desc": "The tags assigned to the association.",
        "type": "Array of Tag objects",
        "required": "no"
      },
      "vpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "LocalGatewayVirtualInterface",
    "attrs": {
      "localAddress": {
        "desc": "The local address.",
        "type": "String",
        "required": "no"
      },
      "localBgpAsn": {
        "desc": "The Border Gateway Protocol (BGP) Autonomous System Number (ASN) of the local gateway.",
        "type": "Integer",
        "required": "no"
      },
      "localGatewayId": {
        "desc": "The ID of the local gateway.",
        "type": "String",
        "required": "no"
      },
      "localGatewayVirtualInterfaceId": {
        "desc": "The ID of the virtual interface.",
        "type": "String",
        "required": "no"
      },
      "peerAddress": {
        "desc": "The peer address.",
        "type": "String",
        "required": "no"
      },
      "peerBgpAsn": {
        "desc": "The peer BGP ASN.",
        "type": "Integer",
        "required": "no"
      },
      "tagSet": {
        "desc": "The tags assigned to the virtual interface.",
        "type": "Array of Tag objects",
        "required": "no"
      },
      "vlan": {
        "desc": "The ID of the VLAN.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "LocalGatewayVirtualInterfaceGroup",
    "attrs": {
      "localGatewayId": {
        "desc": "The ID of the local gateway.",
        "type": "String",
        "required": "no"
      },
      "localGatewayVirtualInterfaceGroupId": {
        "desc": "The ID of the virtual interface group.",
        "type": "String",
        "required": "no"
      },
      "localGatewayVirtualInterfaceIdSet": {
        "desc": "The IDs of the virtual interfaces.",
        "type": "Array of strings",
        "required": "no"
      },
      "tagSet": {
        "desc": "The tags assigned to the virtual interface group.",
        "type": "Array of Tag objects",
        "required": "no"
      }
    }
  },
  {
    "title": "MemoryInfo",
    "attrs": {
      "sizeInMiB": {
        "desc": "Size of the memory, in MiB.",
        "type": "Long",
        "required": "no"
      }
    }
  },
  {
    "title": "ModifyTransitGatewayVpcAttachmentRequestOptions",
    "attrs": {
      "DnsSupport": {
        "desc": "Enable or disable DNS support. The default is enable.",
        "type": "String",
        "required": "no",
        "values": [
          "enable",
          "disable"
        ]
      },
      "Ipv6Support": {
        "desc": "Enable or disable IPv6 support. The default is enable.",
        "type": "String",
        "required": "no",
        "values": [
          "enable",
          "disable"
        ]
      }
    }
  },
  {
    "title": "ModifyVpnTunnelOptionsSpecification",
    "attrs": {
      "DPDTimeoutSeconds": {
        "desc": "The number of seconds after which a DPD timeout occurs.",
        "type": "Integer",
        "required": "no"
      },
      "IKEVersions": {
        "desc": "The IKE versions that are permitted for the VPN tunnel.",
        "type": "Array of IKEVersionsRequestListValue objects",
        "required": "no"
      },
      "Phase1DHGroupNumbers": {
        "desc": "One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 1 IKE negotiations.",
        "type": "Array of Phase1DHGroupNumbersRequestListValue objects",
        "required": "no"
      },
      "Phase1EncryptionAlgorithms": {
        "desc": "One or more encryption algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.",
        "type": "Array of Phase1EncryptionAlgorithmsRequestListValue objects",
        "required": "no"
      },
      "Phase1IntegrityAlgorithms": {
        "desc": "One or more integrity algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.",
        "type": "Array of Phase1IntegrityAlgorithmsRequestListValue objects",
        "required": "no"
      },
      "Phase1LifetimeSeconds": {
        "desc": "The lifetime for phase 1 of the IKE negotiation, in seconds.",
        "type": "Integer",
        "required": "no"
      },
      "Phase2DHGroupNumbers": {
        "desc": "One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 2 IKE negotiations.",
        "type": "Array of Phase2DHGroupNumbersRequestListValue objects",
        "required": "no"
      },
      "Phase2EncryptionAlgorithms": {
        "desc": "One or more encryption algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.",
        "type": "Array of Phase2EncryptionAlgorithmsRequestListValue objects",
        "required": "no"
      },
      "Phase2IntegrityAlgorithms": {
        "desc": "One or more integrity algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.",
        "type": "Array of Phase2IntegrityAlgorithmsRequestListValue objects",
        "required": "no"
      },
      "Phase2LifetimeSeconds": {
        "desc": "The lifetime for phase 2 of the IKE negotiation, in seconds.",
        "type": "Integer",
        "required": "no"
      },
      "PreSharedKey": {
        "desc": "The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and the customer gateway.",
        "type": "String",
        "required": "no"
      },
      "RekeyFuzzPercentage": {
        "desc": "The percentage of the rekey window (determined by RekeyMarginTimeSeconds) during which the rekey time is randomly selected.",
        "type": "Integer",
        "required": "no"
      },
      "RekeyMarginTimeSeconds": {
        "desc": "The margin time, in seconds, before the phase 2 lifetime expires, during which the AWS side of the VPN connection performs an IKE rekey. The exact time of the rekey is randomly selected based on the value for RekeyFuzzPercentage.",
        "type": "Integer",
        "required": "no"
      },
      "ReplayWindowSize": {
        "desc": "The number of packets in an IKE replay window.",
        "type": "Integer",
        "required": "no"
      },
      "TunnelInsideCidr": {
        "desc": "The range of inside IP addresses for the tunnel. Any specified CIDR blocks must be unique across all VPN connections that use the same virtual private gateway.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "Monitoring",
    "attrs": {
      "state": {
        "desc": "Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.",
        "type": "String",
        "required": "no",
        "values": [
          "disabled",
          "disabling",
          "enabled",
          "pending"
        ]
      }
    }
  },
  {
    "title": "MovingAddressStatus",
    "attrs": {
      "moveStatus": {
        "desc": "The status of the Elastic IP address that's being moved to the EC2-VPC platform, or restored to the EC2-Classic platform.",
        "type": "String",
        "required": "no",
        "values": [
          "movingtovpc",
          "restoringtoclassic"
        ]
      },
      "publicIp": {
        "desc": "The Elastic IP address.",
        "type": "String",
        "required": "no",
        "values": [
          "movingtovpc",
          "restoringtoclassic"
        ]
      }
    }
  },
  {
    "title": "NatGateway",
    "attrs": {
      "createTime": {
        "desc": "The date and time the NAT gateway was created.",
        "type": "Timestamp",
        "required": "no"
      },
      "deleteTime": {
        "desc": "The date and time the NAT gateway was deleted, if applicable.",
        "type": "Timestamp",
        "required": "no"
      },
      "failureCode": {
        "desc": "If the NAT gateway could not be created, specifies the error code for the failure. (InsufficientFreeAddressesInSubnet | Gateway.NotAttached | InvalidAllocationID.NotFound | Resource.AlreadyAssociated | InternalError | InvalidSubnetID.NotFound)",
        "type": "String",
        "required": "no"
      },
      "failureMessage": {
        "desc": "If the NAT gateway could not be created, specifies the error message for the failure, that corresponds to the error code.",
        "type": "String",
        "required": "no"
      },
      "natGatewayAddressSet": {
        "desc": "Information about the IP addresses and network interface associated with the NAT gateway.",
        "type": "Array of NatGatewayAddress objects",
        "required": "no"
      },
      "natGatewayId": {
        "desc": "The ID of the NAT gateway.",
        "type": "String",
        "required": "no"
      },
      "provisionedBandwidth": {
        "desc": "Reserved. If you need to sustain traffic greater than the documented limits, contact us through the Support Center.",
        "type": "ProvisionedBandwidth object",
        "required": "no"
      },
      "state": {
        "desc": "The state of the NAT gateway.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "failed",
          "available",
          "deleting",
          "deleted"
        ]
      },
      "subnetId": {
        "desc": "The ID of the subnet in which the NAT gateway is located.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "failed",
          "available",
          "deleting",
          "deleted"
        ]
      },
      "tagSet": {
        "desc": "The tags for the NAT gateway.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "pending",
          "failed",
          "available",
          "deleting",
          "deleted"
        ]
      },
      "vpcId": {
        "desc": "The ID of the VPC in which the NAT gateway is located.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "failed",
          "available",
          "deleting",
          "deleted"
        ]
      }
    }
  },
  {
    "title": "NatGatewayAddress",
    "attrs": {
      "allocationId": {
        "desc": "The allocation ID of the Elastic IP address that's associated with the NAT gateway.",
        "type": "String",
        "required": "no"
      },
      "networkInterfaceId": {
        "desc": "The ID of the network interface associated with the NAT gateway.",
        "type": "String",
        "required": "no"
      },
      "privateIp": {
        "desc": "The private IP address associated with the Elastic IP address.",
        "type": "String",
        "required": "no"
      },
      "publicIp": {
        "desc": "The Elastic IP address associated with the NAT gateway.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "NetworkAcl",
    "attrs": {
      "associationSet": {
        "desc": "Any associations between the network ACL and one or more subnets",
        "type": "Array of NetworkAclAssociation objects",
        "required": "no"
      },
      "default": {
        "desc": "Indicates whether this is the default network ACL for the VPC.",
        "type": "Boolean",
        "required": "no"
      },
      "entrySet": {
        "desc": "One or more entries (rules) in the network ACL.",
        "type": "Array of NetworkAclEntry objects",
        "required": "no"
      },
      "networkAclId": {
        "desc": "The ID of the network ACL.",
        "type": "String",
        "required": "no"
      },
      "ownerId": {
        "desc": "The ID of the AWS account that owns the network ACL.",
        "type": "String",
        "required": "no"
      },
      "tagSet": {
        "desc": "Any tags assigned to the network ACL.",
        "type": "Array of Tag objects",
        "required": "no"
      },
      "vpcId": {
        "desc": "The ID of the VPC for the network ACL.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "NetworkAclAssociation",
    "attrs": {
      "networkAclAssociationId": {
        "desc": "The ID of the association between a network ACL and a subnet.",
        "type": "String",
        "required": "no"
      },
      "networkAclId": {
        "desc": "The ID of the network ACL.",
        "type": "String",
        "required": "no"
      },
      "subnetId": {
        "desc": "The ID of the subnet.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "NetworkAclEntry",
    "attrs": {
      "cidrBlock": {
        "desc": "The IPv4 network range to allow or deny, in CIDR notation.",
        "type": "String",
        "required": "no"
      },
      "egress": {
        "desc": "Indicates whether the rule is an egress rule (applied to traffic leaving the subnet).",
        "type": "Boolean",
        "required": "no"
      },
      "icmpTypeCode": {
        "desc": "ICMP protocol: The ICMP type and code.",
        "type": "IcmpTypeCode object",
        "required": "no"
      },
      "ipv6CidrBlock": {
        "desc": "The IPv6 network range to allow or deny, in CIDR notation.",
        "type": "String",
        "required": "no"
      },
      "portRange": {
        "desc": "TCP or UDP protocols: The range of ports the rule applies to.",
        "type": "PortRange object",
        "required": "no"
      },
      "protocol": {
        "desc": "The protocol number. A value of \"-1\" means all protocols.",
        "type": "String",
        "required": "no"
      },
      "ruleAction": {
        "desc": "Indicates whether to allow or deny the traffic that matches the rule.",
        "type": "String",
        "required": "no",
        "values": [
          "allow",
          "deny"
        ]
      },
      "ruleNumber": {
        "desc": "The rule number for the entry. ACL entries are processed in ascending order by rule number.",
        "type": "Integer",
        "required": "no",
        "values": [
          "allow",
          "deny"
        ]
      }
    }
  },
  {
    "title": "NetworkInfo",
    "attrs": {
      "enaSupport": {
        "desc": "Indicates whether Elastic Network Adapter (ENA) is supported.",
        "type": "String",
        "required": "no",
        "values": [
          "unsupported",
          "supported",
          "required"
        ]
      },
      "ipv4AddressesPerInterface": {
        "desc": "The maximum number of IPv4 addresses per network interface.",
        "type": "Integer",
        "required": "no",
        "values": [
          "unsupported",
          "supported",
          "required"
        ]
      },
      "ipv6AddressesPerInterface": {
        "desc": "The maximum number of IPv6 addresses per network interface.",
        "type": "Integer",
        "required": "no",
        "values": [
          "unsupported",
          "supported",
          "required"
        ]
      },
      "ipv6Supported": {
        "desc": "Indicates whether IPv6 is supported.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "unsupported",
          "supported",
          "required"
        ]
      },
      "maximumNetworkInterfaces": {
        "desc": "The maximum number of network interfaces for the instance type.",
        "type": "Integer",
        "required": "no",
        "values": [
          "unsupported",
          "supported",
          "required"
        ]
      },
      "networkPerformance": {
        "desc": "Describes the network performance.",
        "type": "String",
        "required": "no",
        "values": [
          "unsupported",
          "supported",
          "required"
        ]
      }
    }
  },
  {
    "title": "NetworkInterface",
    "attrs": {
      "association": {
        "desc": "The association information for an Elastic IP address (IPv4) associated with the network interface.",
        "type": "NetworkInterfaceAssociation object",
        "required": "no"
      },
      "attachment": {
        "desc": "The network interface attachment.",
        "type": "NetworkInterfaceAttachment object",
        "required": "no"
      },
      "availabilityZone": {
        "desc": "The Availability Zone.",
        "type": "String",
        "required": "no"
      },
      "description": {
        "desc": "A description.",
        "type": "String",
        "required": "no"
      },
      "groupSet": {
        "desc": "Any security groups for the network interface.",
        "type": "Array of GroupIdentifier objects",
        "required": "no"
      },
      "interfaceType": {
        "desc": "The type of network interface.",
        "type": "String",
        "required": "no",
        "values": [
          "interface",
          "natgateway",
          "efa"
        ]
      },
      "ipv6AddressesSet": {
        "desc": "The IPv6 addresses associated with the network interface.",
        "type": "Array of NetworkInterfaceIpv6Address objects",
        "required": "no",
        "values": [
          "interface",
          "natgateway",
          "efa"
        ]
      },
      "macAddress": {
        "desc": "The MAC address.",
        "type": "String",
        "required": "no",
        "values": [
          "interface",
          "natgateway",
          "efa"
        ]
      },
      "networkInterfaceId": {
        "desc": "The ID of the network interface.",
        "type": "String",
        "required": "no",
        "values": [
          "interface",
          "natgateway",
          "efa"
        ]
      },
      "outpostArn": {
        "desc": "The Amazon Resource Name (ARN) of the Outpost.",
        "type": "String",
        "required": "no",
        "values": [
          "interface",
          "natgateway",
          "efa"
        ]
      },
      "ownerId": {
        "desc": "The AWS account ID of the owner of the network interface.",
        "type": "String",
        "required": "no",
        "values": [
          "interface",
          "natgateway",
          "efa"
        ]
      },
      "privateDnsName": {
        "desc": "The private DNS name.",
        "type": "String",
        "required": "no",
        "values": [
          "interface",
          "natgateway",
          "efa"
        ]
      },
      "privateIpAddress": {
        "desc": "The IPv4 address of the network interface within the subnet.",
        "type": "String",
        "required": "no",
        "values": [
          "interface",
          "natgateway",
          "efa"
        ]
      },
      "privateIpAddressesSet": {
        "desc": "The private IPv4 addresses associated with the network interface.",
        "type": "Array of NetworkInterfacePrivateIpAddress objects",
        "required": "no",
        "values": [
          "interface",
          "natgateway",
          "efa"
        ]
      },
      "requesterId": {
        "desc": "The ID of the entity that launched the instance on your behalf (for example, AWS Management Console or Auto Scaling).",
        "type": "String",
        "required": "no",
        "values": [
          "interface",
          "natgateway",
          "efa"
        ]
      },
      "requesterManaged": {
        "desc": "Indicates whether the network interface is being managed by AWS.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "interface",
          "natgateway",
          "efa"
        ]
      },
      "sourceDestCheck": {
        "desc": "Indicates whether traffic to or from the instance is validated.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "interface",
          "natgateway",
          "efa"
        ]
      },
      "status": {
        "desc": "The status of the network interface.",
        "type": "String",
        "required": "no",
        "values": [
          "available",
          "associated",
          "attaching",
          "in-use",
          "detaching"
        ]
      },
      "subnetId": {
        "desc": "The ID of the subnet.",
        "type": "String",
        "required": "no",
        "values": [
          "available",
          "associated",
          "attaching",
          "in-use",
          "detaching"
        ]
      },
      "tagSet": {
        "desc": "Any tags assigned to the network interface.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "available",
          "associated",
          "attaching",
          "in-use",
          "detaching"
        ]
      },
      "vpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "no",
        "values": [
          "available",
          "associated",
          "attaching",
          "in-use",
          "detaching"
        ]
      }
    }
  },
  {
    "title": "NetworkInterfaceAssociation",
    "attrs": {
      "allocationId": {
        "desc": "The allocation ID.",
        "type": "String",
        "required": "no"
      },
      "associationId": {
        "desc": "The association ID.",
        "type": "String",
        "required": "no"
      },
      "ipOwnerId": {
        "desc": "The ID of the Elastic IP address owner.",
        "type": "String",
        "required": "no"
      },
      "publicDnsName": {
        "desc": "The public DNS name.",
        "type": "String",
        "required": "no"
      },
      "publicIp": {
        "desc": "The address of the Elastic IP address bound to the network interface.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "NetworkInterfaceAttachment",
    "attrs": {
      "attachmentId": {
        "desc": "The ID of the network interface attachment.",
        "type": "String",
        "required": "no"
      },
      "attachTime": {
        "desc": "The timestamp indicating when the attachment initiated.",
        "type": "Timestamp",
        "required": "no"
      },
      "deleteOnTermination": {
        "desc": "Indicates whether the network interface is deleted when the instance is terminated.",
        "type": "Boolean",
        "required": "no"
      },
      "deviceIndex": {
        "desc": "The device index of the network interface attachment on the instance.",
        "type": "Integer",
        "required": "no"
      },
      "instanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "no"
      },
      "instanceOwnerId": {
        "desc": "The AWS account ID of the owner of the instance.",
        "type": "String",
        "required": "no"
      },
      "status": {
        "desc": "The attachment state.",
        "type": "String",
        "required": "no",
        "values": [
          "attaching",
          "attached",
          "detaching",
          "detached"
        ]
      }
    }
  },
  {
    "title": "NetworkInterfaceAttachmentChanges",
    "attrs": {
      "AttachmentId": {
        "desc": "The ID of the network interface attachment.",
        "type": "String",
        "required": "no"
      },
      "DeleteOnTermination": {
        "desc": "Indicates whether the network interface is deleted when the instance is terminated.",
        "type": "Boolean",
        "required": "no"
      }
    }
  },
  {
    "title": "NetworkInterfaceIpv6Address",
    "attrs": {
      "ipv6Address": {
        "desc": "The IPv6 address.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "NetworkInterfacePermission",
    "attrs": {
      "awsAccountId": {
        "desc": "The AWS account ID.",
        "type": "String",
        "required": "no"
      },
      "awsService": {
        "desc": "The AWS service.",
        "type": "String",
        "required": "no"
      },
      "networkInterfaceId": {
        "desc": "The ID of the network interface.",
        "type": "String",
        "required": "no"
      },
      "networkInterfacePermissionId": {
        "desc": "The ID of the network interface permission.",
        "type": "String",
        "required": "no"
      },
      "permission": {
        "desc": "The type of permission.",
        "type": "String",
        "required": "no",
        "values": [
          "instance-attach",
          "eip-associate"
        ]
      },
      "permissionState": {
        "desc": "Information about the state of the permission.",
        "type": "NetworkInterfacePermissionState object",
        "required": "no",
        "values": [
          "instance-attach",
          "eip-associate"
        ]
      }
    }
  },
  {
    "title": "NetworkInterfacePermissionState",
    "attrs": {
      "state": {
        "desc": "The state of the permission.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "granted",
          "revoking",
          "revoked"
        ]
      },
      "statusMessage": {
        "desc": "A status message, if applicable.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "granted",
          "revoking",
          "revoked"
        ]
      }
    }
  },
  {
    "title": "NetworkInterfacePrivateIpAddress",
    "attrs": {
      "association": {
        "desc": "The association information for an Elastic IP address (IPv4) associated with the network interface.",
        "type": "NetworkInterfaceAssociation object",
        "required": "no"
      },
      "primary": {
        "desc": "Indicates whether this IPv4 address is the primary private IPv4 address of the network interface.",
        "type": "Boolean",
        "required": "no"
      },
      "privateDnsName": {
        "desc": "The private DNS name.",
        "type": "String",
        "required": "no"
      },
      "privateIpAddress": {
        "desc": "The private IPv4 address.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "NewDhcpConfiguration",
    "attrs": {
      "Key": {
        "desc": "Type: String",
        "required": "no"
      },
      "Values": {
        "desc": "Type: Array of strings",
        "required": "no"
      }
    }
  },
  {
    "title": "OnDemandOptions",
    "attrs": {
      "allocationStrategy": {
        "desc": "The order of the launch template overrides to use in fulfilling On-Demand capacity. If you specify lowest-price, EC2 Fleet uses price to determine the order, launching the lowest price first. If you specify prioritized, EC2 Fleet uses the priority that you assigned to each launch template override, launching the highest priority first. If you do not specify a value, EC2 Fleet defaults to lowest-price.",
        "type": "String",
        "required": "no",
        "values": [
          "lowest-price",
          "prioritized"
        ]
      },
      "capacityReservationOptions": {
        "desc": "The strategy for using unused Capacity Reservations for fulfilling On-Demand capacity. Supported only for fleets of type instant.",
        "type": "CapacityReservationOptions object",
        "required": "no",
        "values": [
          "lowest-price",
          "prioritized"
        ]
      },
      "maxTotalPrice": {
        "desc": "The maximum amount per hour for On-Demand Instances that you're willing to pay.",
        "type": "String",
        "required": "no",
        "values": [
          "lowest-price",
          "prioritized"
        ]
      },
      "minTargetCapacity": {
        "desc": "The minimum target capacity for On-Demand Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances.",
        "type": "Integer",
        "required": "no",
        "values": [
          "lowest-price",
          "prioritized"
        ]
      },
      "singleAvailabilityZone": {
        "desc": "Indicates that the fleet launches all On-Demand Instances into a single Availability Zone. Supported only for fleets of type instant.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "lowest-price",
          "prioritized"
        ]
      },
      "singleInstanceType": {
        "desc": "Indicates that the fleet uses a single instance type to launch all On-Demand Instances in the fleet. Supported only for fleets of type instant.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "lowest-price",
          "prioritized"
        ]
      }
    }
  },
  {
    "title": "OnDemandOptionsRequest",
    "attrs": {
      "AllocationStrategy": {
        "desc": "The order of the launch template overrides to use in fulfilling On-Demand capacity. If you specify lowest-price, EC2 Fleet uses price to determine the order, launching the lowest price first. If you specify prioritized, EC2 Fleet uses the priority that you assigned to each launch template override, launching the highest priority first. If you do not specify a value, EC2 Fleet defaults to lowest-price.",
        "type": "String",
        "required": "no",
        "values": [
          "lowest-price",
          "prioritized"
        ]
      },
      "CapacityReservationOptions": {
        "desc": "The strategy for using unused Capacity Reservations for fulfilling On-Demand capacity. Supported only for fleets of type instant.",
        "type": "CapacityReservationOptionsRequest object",
        "required": "no",
        "values": [
          "lowest-price",
          "prioritized"
        ]
      },
      "MaxTotalPrice": {
        "desc": "The maximum amount per hour for On-Demand Instances that you're willing to pay.",
        "type": "String",
        "required": "no",
        "values": [
          "lowest-price",
          "prioritized"
        ]
      },
      "MinTargetCapacity": {
        "desc": "The minimum target capacity for On-Demand Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances.",
        "type": "Integer",
        "required": "no",
        "values": [
          "lowest-price",
          "prioritized"
        ]
      },
      "SingleAvailabilityZone": {
        "desc": "Indicates that the fleet launches all On-Demand Instances into a single Availability Zone. Supported only for fleets of type instant.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "lowest-price",
          "prioritized"
        ]
      },
      "SingleInstanceType": {
        "desc": "Indicates that the fleet uses a single instance type to launch all On-Demand Instances in the fleet. Supported only for fleets of type instant.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "lowest-price",
          "prioritized"
        ]
      }
    }
  },
  {
    "title": "PciId",
    "attrs": {
      "DeviceId": {
        "desc": "The ID of the device.",
        "type": "String",
        "required": "no"
      },
      "SubsystemId": {
        "desc": "The ID of the subsystem.",
        "type": "String",
        "required": "no"
      },
      "SubsystemVendorId": {
        "desc": "The ID of the vendor for the subsystem.",
        "type": "String",
        "required": "no"
      },
      "VendorId": {
        "desc": "The ID of the vendor.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "PeeringAttachmentStatus",
    "attrs": {
      "code": {
        "desc": "The status code.",
        "type": "String",
        "required": "no"
      },
      "message": {
        "desc": "The status message, if applicable.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "PeeringConnectionOptions",
    "attrs": {
      "allowDnsResolutionFromRemoteVpc": {
        "desc": "If true, the public DNS hostnames of instances in the specified VPC resolve to private IP addresses when queried from instances in the peer VPC.",
        "type": "Boolean",
        "required": "no"
      },
      "allowEgressFromLocalClassicLinkToRemoteVpc": {
        "desc": "If true, enables outbound communication from an EC2-Classic instance that's linked to a local VPC using ClassicLink to instances in a peer VPC.",
        "type": "Boolean",
        "required": "no"
      },
      "allowEgressFromLocalVpcToRemoteClassicLink": {
        "desc": "If true, enables outbound communication from instances in a local VPC to an EC2-Classic instance that's linked to a peer VPC using ClassicLink.",
        "type": "Boolean",
        "required": "no"
      }
    }
  },
  {
    "title": "PeeringConnectionOptionsRequest",
    "attrs": {
      "AllowDnsResolutionFromRemoteVpc": {
        "desc": "If true, enables a local VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the peer VPC.",
        "type": "Boolean",
        "required": "no"
      },
      "AllowEgressFromLocalClassicLinkToRemoteVpc": {
        "desc": "If true, enables outbound communication from an EC2-Classic instance that's linked to a local VPC using ClassicLink to instances in a peer VPC.",
        "type": "Boolean",
        "required": "no"
      },
      "AllowEgressFromLocalVpcToRemoteClassicLink": {
        "desc": "If true, enables outbound communication from instances in a local VPC to an EC2-Classic instance that's linked to a peer VPC using ClassicLink.",
        "type": "Boolean",
        "required": "no"
      }
    }
  },
  {
    "title": "PeeringTgwInfo",
    "attrs": {
      "ownerId": {
        "desc": "The AWS account ID of the owner of the transit gateway.",
        "type": "String",
        "required": "no"
      },
      "region": {
        "desc": "The Region of the transit gateway.",
        "type": "String",
        "required": "no"
      },
      "transitGatewayId": {
        "desc": "The ID of the transit gateway.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "Phase1DHGroupNumbersListValue",
    "attrs": {
      "value": {
        "desc": "The Diffie-Hellmann group number.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "Phase1DHGroupNumbersRequestListValue",
    "attrs": {
      "Value": {
        "desc": "The Diffie-Hellmann group number.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "Phase1EncryptionAlgorithmsListValue",
    "attrs": {
      "value": {
        "desc": "The value for the encryption algorithm.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "Phase1EncryptionAlgorithmsRequestListValue",
    "attrs": {
      "Value": {
        "desc": "The value for the encryption algorithm.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "Phase1IntegrityAlgorithmsListValue",
    "attrs": {
      "value": {
        "desc": "The value for the integrity algorithm.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "Phase1IntegrityAlgorithmsRequestListValue",
    "attrs": {
      "Value": {
        "desc": "The value for the integrity algorithm.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "Phase2DHGroupNumbersListValue",
    "attrs": {
      "value": {
        "desc": "The Diffie-Hellmann group number.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "Phase2DHGroupNumbersRequestListValue",
    "attrs": {
      "Value": {
        "desc": "The Diffie-Hellmann group number.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "Phase2EncryptionAlgorithmsListValue",
    "attrs": {
      "value": {
        "desc": "The encryption algorithm.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "Phase2EncryptionAlgorithmsRequestListValue",
    "attrs": {
      "Value": {
        "desc": "The encryption algorithm.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "Phase2IntegrityAlgorithmsListValue",
    "attrs": {
      "value": {
        "desc": "The integrity algorithm.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "Phase2IntegrityAlgorithmsRequestListValue",
    "attrs": {
      "Value": {
        "desc": "The integrity algorithm.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "Placement",
    "attrs": {
      "Affinity (request), affinity (response)": {
        "desc": "The affinity setting for the instance on the Dedicated Host. This parameter is not supported for the ImportInstance command.",
        "type": "String",
        "required": "no"
      },
      "AvailabilityZone (request), availabilityZone (response)": {
        "desc": "The Availability Zone of the instance.",
        "type": "String",
        "required": "no"
      },
      "GroupName (request), groupName (response)": {
        "desc": "The name of the placement group the instance is in.",
        "type": "String",
        "required": "no"
      },
      "HostId (request), hostId (response)": {
        "desc": "The ID of the Dedicated Host on which the instance resides. This parameter is not supported for the ImportInstance command.",
        "type": "String",
        "required": "no"
      },
      "HostResourceGroupArn (request), hostResourceGroupArn (response)": {
        "desc": "The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the Tenancy parameter or set it to host.",
        "type": "String",
        "required": "no"
      },
      "PartitionNumber (request), partitionNumber (response)": {
        "desc": "The number of the partition the instance is in. Valid only if the placement group strategy is set to partition.",
        "type": "Integer",
        "required": "no"
      },
      "SpreadDomain (request), spreadDomain (response)": {
        "desc": "Reserved for future use.",
        "type": "String",
        "required": "no"
      },
      "Tenancy (request), tenancy (response)": {
        "desc": "The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the ImportInstance command.",
        "type": "String",
        "required": "no",
        "values": [
          "default",
          "dedicated",
          "host"
        ]
      }
    }
  },
  {
    "title": "PlacementGroup",
    "attrs": {
      "groupId": {
        "desc": "The ID of the placement group.",
        "type": "String",
        "required": "no"
      },
      "groupName": {
        "desc": "The name of the placement group.",
        "type": "String",
        "required": "no"
      },
      "partitionCount": {
        "desc": "The number of partitions. Valid only if strategy is set to partition.",
        "type": "Integer",
        "required": "no"
      },
      "state": {
        "desc": "The state of the placement group.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "available",
          "deleting",
          "deleted"
        ]
      },
      "strategy": {
        "desc": "The placement strategy.",
        "type": "String",
        "required": "no",
        "values": [
          "cluster",
          "spread",
          "partition"
        ]
      },
      "tagSet": {
        "desc": "Any tags applied to the placement group.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "cluster",
          "spread",
          "partition"
        ]
      }
    }
  },
  {
    "title": "PlacementGroupInfo",
    "attrs": {
      "supportedStrategies": {
        "desc": "A list of supported placement groups types.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "cluster",
          "partition",
          "spread"
        ]
      }
    }
  },
  {
    "title": "PlacementResponse",
    "attrs": {
      "groupName": {
        "desc": "The name of the placement group that the instance is in.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "PoolCidrBlock",
    "attrs": {
      "poolCidrBlock": {
        "desc": "The CIDR block.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "PortRange",
    "attrs": {
      "From (request), from (response)": {
        "desc": "The first port in the range.",
        "type": "Integer",
        "required": "no"
      },
      "To (request), to (response)": {
        "desc": "The last port in the range.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "PrefixList",
    "attrs": {
      "cidrSet": {
        "desc": "The IP address range of the AWS service.",
        "type": "Array of strings",
        "required": "no"
      },
      "prefixListId": {
        "desc": "The ID of the prefix.",
        "type": "String",
        "required": "no"
      },
      "prefixListName": {
        "desc": "The name of the prefix.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "PrefixListId",
    "attrs": {
      "Description (request), description (response)": {
        "desc": "A description for the security group rule that references this prefix list ID.",
        "type": "String",
        "required": "no"
      },
      "PrefixListId (request), prefixListId (response)": {
        "desc": "The ID of the prefix.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "PriceSchedule",
    "attrs": {
      "active": {
        "desc": "The current price schedule, as determined by the term remaining for the Reserved Instance in the listing.",
        "type": "Boolean",
        "required": "no"
      },
      "currencyCode": {
        "desc": "The currency for transacting the Reserved Instance resale. At this time, the only supported currency is USD.",
        "type": "String",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "price": {
        "desc": "The fixed price for the term.",
        "type": "Double",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "term": {
        "desc": "The number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.",
        "type": "Long",
        "required": "no",
        "values": [
          "usd"
        ]
      }
    }
  },
  {
    "title": "PriceScheduleSpecification",
    "attrs": {
      "CurrencyCode": {
        "desc": "The currency for transacting the Reserved Instance resale. At this time, the only supported currency is USD.",
        "type": "String",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "Price": {
        "desc": "The fixed price for the term.",
        "type": "Double",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "Term": {
        "desc": "The number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.",
        "type": "Long",
        "required": "no",
        "values": [
          "usd"
        ]
      }
    }
  },
  {
    "title": "PricingDetail",
    "attrs": {
      "count": {
        "desc": "The number of reservations available for the price.",
        "type": "Integer",
        "required": "no"
      },
      "price": {
        "desc": "The price per instance.",
        "type": "Double",
        "required": "no"
      }
    }
  },
  {
    "title": "PrincipalIdFormat",
    "attrs": {
      "arn": {
        "desc": "PrincipalIdFormatARN description",
        "type": "String",
        "required": "no"
      },
      "statusSet": {
        "desc": "PrincipalIdFormatStatuses description",
        "type": "Array of IdFormat objects",
        "required": "no"
      }
    }
  },
  {
    "title": "PrivateDnsNameConfiguration",
    "attrs": {
      "name": {
        "desc": "The name of the record subdomain the service provider needs to create. The service provider adds the value text to the name.",
        "type": "String",
        "required": "no"
      },
      "state": {
        "desc": "The verification state of the VPC endpoint service.",
        "type": "String",
        "required": "no",
        "values": [
          "pendingverification",
          "verified",
          "failed"
        ]
      },
      "type": {
        "desc": "The endpoint service verification type, for example TXT.",
        "type": "String",
        "required": "no",
        "values": [
          "pendingverification",
          "verified",
          "failed"
        ]
      },
      "value": {
        "desc": "The value the service provider adds to the private DNS name domain record before verification.",
        "type": "String",
        "required": "no",
        "values": [
          "pendingverification",
          "verified",
          "failed"
        ]
      }
    }
  },
  {
    "title": "PrivateIpAddressSpecification",
    "attrs": {
      "Primary (request), primary (response)": {
        "desc": "Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.",
        "type": "Boolean",
        "required": "no"
      },
      "PrivateIpAddress (request), privateIpAddress (response)": {
        "desc": "The private IPv4 addresses.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ProcessorInfo",
    "attrs": {
      "supportedArchitectures": {
        "desc": "A list of architectures supported by the instance type.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "i386",
          "x86_64",
          "arm64"
        ]
      },
      "sustainedClockSpeedInGhz": {
        "desc": "The speed of the processor, in GHz.",
        "type": "Double",
        "required": "no",
        "values": [
          "i386",
          "x86_64",
          "arm64"
        ]
      }
    }
  },
  {
    "title": "ProductCode",
    "attrs": {
      "productCode": {
        "desc": "The product code.",
        "type": "String",
        "required": "no"
      },
      "type": {
        "desc": "The type of product code.",
        "type": "String",
        "required": "no",
        "values": [
          "devpay",
          "marketplace"
        ]
      }
    }
  },
  {
    "title": "PropagatingVgw",
    "attrs": {
      "gatewayId": {
        "desc": "The ID of the virtual private gateway.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ProvisionedBandwidth",
    "attrs": {
      "provisioned": {
        "desc": "Reserved. If you need to sustain traffic greater than the documented limits, contact us through the Support Center.",
        "type": "String",
        "required": "no"
      },
      "provisionTime": {
        "desc": "Reserved. If you need to sustain traffic greater than the documented limits, contact us through the Support Center.",
        "type": "Timestamp",
        "required": "no"
      },
      "requested": {
        "desc": "Reserved. If you need to sustain traffic greater than the documented limits, contact us through the Support Center.",
        "type": "String",
        "required": "no"
      },
      "requestTime": {
        "desc": "Reserved. If you need to sustain traffic greater than the documented limits, contact us through the Support Center.",
        "type": "Timestamp",
        "required": "no"
      },
      "status": {
        "desc": "Reserved. If you need to sustain traffic greater than the documented limits, contact us through the Support Center.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "PublicIpv4Pool",
    "attrs": {
      "description": {
        "desc": "A description of the address pool.",
        "type": "String",
        "required": "no"
      },
      "poolAddressRangeSet": {
        "desc": "The address ranges.",
        "type": "Array of PublicIpv4PoolRange objects",
        "required": "no"
      },
      "poolId": {
        "desc": "The ID of the address pool.",
        "type": "String",
        "required": "no"
      },
      "tagSet": {
        "desc": "Any tags for the address pool.",
        "type": "Array of Tag objects",
        "required": "no"
      },
      "totalAddressCount": {
        "desc": "The total number of addresses.",
        "type": "Integer",
        "required": "no"
      },
      "totalAvailableAddressCount": {
        "desc": "The total number of available addresses.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "PublicIpv4PoolRange",
    "attrs": {
      "addressCount": {
        "desc": "The number of addresses in the range.",
        "type": "Integer",
        "required": "no"
      },
      "availableAddressCount": {
        "desc": "The number of available addresses in the range.",
        "type": "Integer",
        "required": "no"
      },
      "firstAddress": {
        "desc": "The first IP address in the range.",
        "type": "String",
        "required": "no"
      },
      "lastAddress": {
        "desc": "The last IP address in the range.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "Purchase",
    "attrs": {
      "currencyCode": {
        "desc": "The currency in which the UpfrontPrice and HourlyPrice amounts are specified. At this time, the only supported currency is USD.",
        "type": "String",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "duration": {
        "desc": "The duration of the reservation's term in seconds.",
        "type": "Integer",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "hostIdSet": {
        "desc": "The IDs of the Dedicated Hosts associated with the reservation.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "hostReservationId": {
        "desc": "The ID of the reservation.",
        "type": "String",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "hourlyPrice": {
        "desc": "The hourly price of the reservation per hour.",
        "type": "String",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "instanceFamily": {
        "desc": "The instance family on the Dedicated Host that the reservation can be associated with.",
        "type": "String",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "paymentOption": {
        "desc": "The payment option for the reservation.",
        "type": "String",
        "required": "no",
        "values": [
          "allupfront",
          "partialupfront",
          "noupfront"
        ]
      },
      "upfrontPrice": {
        "desc": "The upfront price of the reservation.",
        "type": "String",
        "required": "no",
        "values": [
          "allupfront",
          "partialupfront",
          "noupfront"
        ]
      }
    }
  },
  {
    "title": "PurchaseRequest",
    "attrs": {
      "InstanceCount": {
        "desc": "The number of instances.",
        "type": "Integer",
        "required": "yes"
      },
      "PurchaseToken": {
        "desc": "The purchase token.",
        "type": "String",
        "required": "yes"
      }
    }
  },
  {
    "title": "RecurringCharge",
    "attrs": {
      "amount": {
        "desc": "The amount of the recurring charge.",
        "type": "Double",
        "required": "no"
      },
      "frequency": {
        "desc": "The frequency of the recurring charge.",
        "type": "String",
        "required": "no",
        "values": [
          "hourly"
        ]
      }
    }
  },
  {
    "title": "Region",
    "attrs": {
      "optInStatus": {
        "desc": "The Region opt-in status. The possible values are opt-in-not-required, opted-in, and not-opted-in.",
        "type": "String",
        "required": "no"
      },
      "regionEndpoint": {
        "desc": "The Region service endpoint.",
        "type": "String",
        "required": "no"
      },
      "regionName": {
        "desc": "The name of the Region.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "RequestLaunchTemplateData",
    "attrs": {
      "BlockDeviceMappings": {
        "desc": "The block device mapping.",
        "type": "Array of LaunchTemplateBlockDeviceMappingRequest objects",
        "required": "no"
      },
      "CapacityReservationSpecification": {
        "desc": "The Capacity Reservation targeting option. If you do not specify this parameter, the instance's Capacity Reservation preference defaults to open, which enables it to run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).",
        "type": "LaunchTemplateCapacityReservationSpecificationRequest object",
        "required": "no"
      },
      "CpuOptions": {
        "desc": "The CPU options for the instance. For more information, see Optimizing CPU Options in the Amazon Elastic Compute Cloud User Guide.",
        "type": "LaunchTemplateCpuOptionsRequest object",
        "required": "no"
      },
      "CreditSpecification": {
        "desc": "The credit option for CPU usage of the instance. Valid for T2 or T3 instances only.",
        "type": "CreditSpecificationRequest object",
        "required": "no"
      },
      "DisableApiTermination": {
        "desc": "If you set this parameter to true, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute after launch, use ModifyInstanceAttribute. Alternatively, if you set InstanceInitiatedShutdownBehavior to terminate, you can terminate the instance by running the shutdown command from the instance.",
        "type": "Boolean",
        "required": "no"
      },
      "EbsOptimized": {
        "desc": "Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.",
        "type": "Boolean",
        "required": "no"
      },
      "ElasticGpuSpecifications": {
        "desc": "An elastic GPU to associate with the instance.",
        "type": "Array of ElasticGpuSpecification objects",
        "required": "no"
      },
      "ElasticInferenceAccelerators": {
        "desc": "The elastic inference accelerator for the instance.",
        "type": "Array of LaunchTemplateElasticInferenceAccelerator objects",
        "required": "no"
      },
      "HibernationOptions": {
        "desc": "Indicates whether an instance is enabled for hibernation. This parameter is valid only if the instance meets the hibernation prerequisites. For more information, see Hibernate Your Instance in the Amazon Elastic Compute Cloud User Guide.",
        "type": "LaunchTemplateHibernationOptionsRequest object",
        "required": "no"
      },
      "IamInstanceProfile": {
        "desc": "The IAM instance profile.",
        "type": "LaunchTemplateIamInstanceProfileSpecificationRequest object",
        "required": "no"
      },
      "ImageId": {
        "desc": "The ID of the AMI.",
        "type": "String",
        "required": "no"
      },
      "InstanceInitiatedShutdownBehavior": {
        "desc": "Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).",
        "type": "String",
        "required": "no",
        "values": [
          "stop",
          "terminate"
        ]
      },
      "InstanceMarketOptions": {
        "desc": "The market (purchasing) option for the instances.",
        "type": "LaunchTemplateInstanceMarketOptionsRequest object",
        "required": "no",
        "values": [
          "stop",
          "terminate"
        ]
      },
      "InstanceType": {
        "desc": "The instance type. For more information, see Instance Types in the Amazon Elastic Compute Cloud User Guide.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "KernelId": {
        "desc": "The ID of the kernel.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "KeyName": {
        "desc": "The name of the key pair. You can create a key pair using CreateKeyPair or ImportKeyPair.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "LicenseSpecifications": {
        "desc": "The license configurations.",
        "type": "Array of LaunchTemplateLicenseConfigurationRequest objects",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "MetadataOptions": {
        "desc": "The metadata options for the instance. For more information, see Instance Metadata and User Data in the Amazon Elastic Compute Cloud User Guide.",
        "type": "LaunchTemplateInstanceMetadataOptionsRequest object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "Monitoring": {
        "desc": "The monitoring for the instance.",
        "type": "LaunchTemplatesMonitoringRequest object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "NetworkInterfaces": {
        "desc": "One or more network interfaces. If you specify a network interface, you must specify any security groups and subnets as part of the network interface.",
        "type": "Array of LaunchTemplateInstanceNetworkInterfaceSpecificationRequest objects",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "Placement": {
        "desc": "The placement for the instance.",
        "type": "LaunchTemplatePlacementRequest object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "RamDiskId": {
        "desc": "The ID of the RAM disk.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "SecurityGroups": {
        "desc": "[EC2-Classic, default VPC] One or more security group names. For a nondefault VPC, you must use security group IDs instead. You cannot specify both a security group ID and security name in the same request.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "SecurityGroupIds": {
        "desc": "One or more security group IDs. You can create a security group using CreateSecurityGroup. You cannot specify both a security group ID and security name in the same request.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "TagSpecifications": {
        "desc": "The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags.",
        "type": "Array of LaunchTemplateTagSpecificationRequest objects",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "UserData": {
        "desc": "The Base64-encoded user data to make available to the instance. For more information, see Running Commands on Your Linux Instance at Launch (Linux) and Adding User Data (Windows).",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      }
    }
  },
  {
    "title": "RequestSpotLaunchSpecification",
    "attrs": {
      "AddressingType": {
        "desc": "Deprecated.",
        "type": "String",
        "required": "no"
      },
      "BlockDeviceMappings": {
        "desc": "One or more block device mapping entries. You can't specify both a snapshot ID and an encryption value. This is because only blank volumes can be encrypted on creation. If a snapshot is the basis for a volume, it is not blank and its encryption status is used for the volume encryption status.",
        "type": "Array of BlockDeviceMapping objects",
        "required": "no"
      },
      "EbsOptimized": {
        "desc": "Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.",
        "type": "Boolean",
        "required": "no"
      },
      "IamInstanceProfile": {
        "desc": "The IAM instance profile.",
        "type": "IamInstanceProfileSpecification object",
        "required": "no"
      },
      "ImageId": {
        "desc": "The ID of the AMI.",
        "type": "String",
        "required": "no"
      },
      "InstanceType": {
        "desc": "The instance type.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "KernelId": {
        "desc": "The ID of the kernel.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "KeyName": {
        "desc": "The name of the key pair.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "Monitoring": {
        "desc": "Indicates whether basic or detailed monitoring is enabled for the instance.",
        "type": "RunInstancesMonitoringEnabled object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "NetworkInterfaces": {
        "desc": "One or more network interfaces. If you specify a network interface, you must specify subnet IDs and security group IDs using the network interface.",
        "type": "Array of InstanceNetworkInterfaceSpecification objects",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "Placement": {
        "desc": "The placement information for the instance.",
        "type": "SpotPlacement object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "RamdiskId": {
        "desc": "The ID of the RAM disk.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "SecurityGroups": {
        "desc": "One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "SecurityGroupIds": {
        "desc": "One or more security group IDs.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "SubnetId": {
        "desc": "The IDs of the subnets in which to launch the instance. To specify multiple subnets, separate them using commas; for example, \"subnet-1234abcdeexample1, subnet-0987cdef6example2\".",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "UserData": {
        "desc": "The Base64-encoded user data for the instance. User data is limited to 16 KB.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      }
    }
  },
  {
    "title": "Reservation",
    "attrs": {
      "groupSet": {
        "desc": "[EC2-Classic only] The security groups.",
        "type": "Array of GroupIdentifier objects",
        "required": "no"
      },
      "instancesSet": {
        "desc": "The instances.",
        "type": "Array of Instance objects",
        "required": "no"
      },
      "ownerId": {
        "desc": "The ID of the AWS account that owns the reservation.",
        "type": "String",
        "required": "no"
      },
      "requesterId": {
        "desc": "The ID of the requester that launched the instances on your behalf (for example, AWS Management Console or Auto Scaling).",
        "type": "String",
        "required": "no"
      },
      "reservationId": {
        "desc": "The ID of the reservation.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ReservationValue",
    "attrs": {
      "hourlyPrice": {
        "desc": "The hourly rate of the reservation.",
        "type": "String",
        "required": "no"
      },
      "remainingTotalValue": {
        "desc": "The balance of the total value (the sum of remainingUpfrontValue + hourlyPrice * number of hours remaining).",
        "type": "String",
        "required": "no"
      },
      "remainingUpfrontValue": {
        "desc": "The remaining upfront cost of the reservation.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ReservedInstanceLimitPrice",
    "attrs": {
      "Amount": {
        "desc": "Used for Reserved Instance Marketplace offerings. Specifies the limit price on the total order (instanceCount * price).",
        "type": "Double",
        "required": "no"
      },
      "CurrencyCode": {
        "desc": "The currency in which the limitPrice amount is specified. At this time, the only supported currency is USD.",
        "type": "String",
        "required": "no",
        "values": [
          "usd"
        ]
      }
    }
  },
  {
    "title": "ReservedInstanceReservationValue",
    "attrs": {
      "reservationValue": {
        "desc": "The total value of the Convertible Reserved Instance that you are exchanging.",
        "type": "ReservationValue object",
        "required": "no"
      },
      "reservedInstanceId": {
        "desc": "The ID of the Convertible Reserved Instance that you are exchanging.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ReservedInstances",
    "attrs": {
      "availabilityZone": {
        "desc": "The Availability Zone in which the Reserved Instance can be used.",
        "type": "String",
        "required": "no"
      },
      "currencyCode": {
        "desc": "The currency of the Reserved Instance. It's specified using ISO 4217 standard currency codes. At this time, the only supported currency is USD.",
        "type": "String",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "duration": {
        "desc": "The duration of the Reserved Instance, in seconds.",
        "type": "Long",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "end": {
        "desc": "The time when the Reserved Instance expires.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "fixedPrice": {
        "desc": "The purchase price of the Reserved Instance.",
        "type": "Float",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "instanceCount": {
        "desc": "The number of reservations purchased.",
        "type": "Integer",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "instanceTenancy": {
        "desc": "The tenancy of the instance.",
        "type": "String",
        "required": "no",
        "values": [
          "default",
          "dedicated",
          "host"
        ]
      },
      "instanceType": {
        "desc": "The instance type on which the Reserved Instance can be used.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "offeringClass": {
        "desc": "The offering class of the Reserved Instance.",
        "type": "String",
        "required": "no",
        "values": [
          "standard",
          "convertible"
        ]
      },
      "offeringType": {
        "desc": "The Reserved Instance offering type.",
        "type": "String",
        "required": "no",
        "values": [
          "heavy utilization",
          "medium utilization",
          "light utilization",
          "no upfront",
          "partial"
        ]
      },
      "productDescription": {
        "desc": "The Reserved Instance product platform description.",
        "type": "String",
        "required": "no",
        "values": [
          "linux/unix",
          "linux/unix (amazon vpc)",
          "windows",
          "windows (amazon vpc)"
        ]
      },
      "recurringCharges": {
        "desc": "The recurring charge tag assigned to the resource.",
        "type": "Array of RecurringCharge objects",
        "required": "no",
        "values": [
          "linux/unix",
          "linux/unix (amazon vpc)",
          "windows",
          "windows (amazon vpc)"
        ]
      },
      "reservedInstancesId": {
        "desc": "The ID of the Reserved Instance.",
        "type": "String",
        "required": "no",
        "values": [
          "linux/unix",
          "linux/unix (amazon vpc)",
          "windows",
          "windows (amazon vpc)"
        ]
      },
      "scope": {
        "desc": "The scope of the Reserved Instance.",
        "type": "String",
        "required": "no",
        "values": [
          "availability zone",
          "region"
        ]
      },
      "start": {
        "desc": "The date and time the Reserved Instance started.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "availability zone",
          "region"
        ]
      },
      "state": {
        "desc": "The state of the Reserved Instance purchase.",
        "type": "String",
        "required": "no",
        "values": [
          "payment-pending",
          "active",
          "payment-failed",
          "retired",
          "queued",
          "queued-deleted"
        ]
      },
      "tagSet": {
        "desc": "Any tags assigned to the resource.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "payment-pending",
          "active",
          "payment-failed",
          "retired",
          "queued",
          "queued-deleted"
        ]
      },
      "usagePrice": {
        "desc": "The usage price of the Reserved Instance, per hour.",
        "type": "Float",
        "required": "no",
        "values": [
          "payment-pending",
          "active",
          "payment-failed",
          "retired",
          "queued",
          "queued-deleted"
        ]
      }
    }
  },
  {
    "title": "ReservedInstancesConfiguration",
    "attrs": {
      "AvailabilityZone (request), availabilityZone (response)": {
        "desc": "The Availability Zone for the modified Reserved Instances.",
        "type": "String",
        "required": "no"
      },
      "InstanceCount (request), instanceCount (response)": {
        "desc": "The number of modified Reserved Instances.",
        "type": "Integer",
        "required": "no"
      },
      "InstanceType (request), instanceType (response)": {
        "desc": "The instance type for the modified Reserved Instances.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "Platform (request), platform (response)": {
        "desc": "The network platform of the modified Reserved Instances, which is either EC2-Classic or EC2-VPC.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "Scope (request), scope (response)": {
        "desc": "Whether the Reserved Instance is applied to instances in a Region or instances in a specific Availability Zone.",
        "type": "String",
        "required": "no",
        "values": [
          "availability zone",
          "region"
        ]
      }
    }
  },
  {
    "title": "ReservedInstancesId",
    "attrs": {
      "reservedInstancesId": {
        "desc": "The ID of the Reserved Instance.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ReservedInstancesListing",
    "attrs": {
      "clientToken": {
        "desc": "A unique, case-sensitive key supplied by the client to ensure that the request is idempotent. For more information, see Ensuring Idempotency.",
        "type": "String",
        "required": "no"
      },
      "createDate": {
        "desc": "The time the listing was created.",
        "type": "Timestamp",
        "required": "no"
      },
      "instanceCounts": {
        "desc": "The number of instances in this state.",
        "type": "Array of InstanceCount objects",
        "required": "no"
      },
      "priceSchedules": {
        "desc": "The price of the Reserved Instance listing.",
        "type": "Array of PriceSchedule objects",
        "required": "no"
      },
      "reservedInstancesId": {
        "desc": "The ID of the Reserved Instance.",
        "type": "String",
        "required": "no"
      },
      "reservedInstancesListingId": {
        "desc": "The ID of the Reserved Instance listing.",
        "type": "String",
        "required": "no"
      },
      "status": {
        "desc": "The status of the Reserved Instance listing.",
        "type": "String",
        "required": "no",
        "values": [
          "active",
          "pending",
          "cancelled",
          "closed"
        ]
      },
      "statusMessage": {
        "desc": "The reason for the current status of the Reserved Instance listing. The response can be blank.",
        "type": "String",
        "required": "no",
        "values": [
          "active",
          "pending",
          "cancelled",
          "closed"
        ]
      },
      "tagSet": {
        "desc": "Any tags assigned to the resource.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "active",
          "pending",
          "cancelled",
          "closed"
        ]
      },
      "updateDate": {
        "desc": "The last modified timestamp of the listing.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "active",
          "pending",
          "cancelled",
          "closed"
        ]
      }
    }
  },
  {
    "title": "ReservedInstancesModification",
    "attrs": {
      "clientToken": {
        "desc": "A unique, case-sensitive key supplied by the client to ensure that the request is idempotent. For more information, see Ensuring Idempotency.",
        "type": "String",
        "required": "no"
      },
      "createDate": {
        "desc": "The time when the modification request was created.",
        "type": "Timestamp",
        "required": "no"
      },
      "effectiveDate": {
        "desc": "The time for the modification to become effective.",
        "type": "Timestamp",
        "required": "no"
      },
      "modificationResultSet": {
        "desc": "Contains target configurations along with their corresponding new Reserved Instance IDs.",
        "type": "Array of ReservedInstancesModificationResult objects",
        "required": "no"
      },
      "reservedInstancesModificationId": {
        "desc": "A unique ID for the Reserved Instance modification.",
        "type": "String",
        "required": "no"
      },
      "reservedInstancesSet": {
        "desc": "The IDs of one or more Reserved Instances.",
        "type": "Array of ReservedInstancesId objects",
        "required": "no"
      },
      "status": {
        "desc": "The status of the Reserved Instances modification request.",
        "type": "String",
        "required": "no"
      },
      "statusMessage": {
        "desc": "The reason for the status.",
        "type": "String",
        "required": "no"
      },
      "updateDate": {
        "desc": "The time when the modification request was last updated.",
        "type": "Timestamp",
        "required": "no"
      }
    }
  },
  {
    "title": "ReservedInstancesModificationResult",
    "attrs": {
      "reservedInstancesId": {
        "desc": "The ID for the Reserved Instances that were created as part of the modification request. This field is only available when the modification is fulfilled.",
        "type": "String",
        "required": "no"
      },
      "targetConfiguration": {
        "desc": "The target Reserved Instances configurations supplied as part of the modification request.",
        "type": "ReservedInstancesConfiguration object",
        "required": "no"
      }
    }
  },
  {
    "title": "ReservedInstancesOffering",
    "attrs": {
      "availabilityZone": {
        "desc": "The Availability Zone in which the Reserved Instance can be used.",
        "type": "String",
        "required": "no"
      },
      "currencyCode": {
        "desc": "The currency of the Reserved Instance offering you are purchasing. It's specified using ISO 4217 standard currency codes. At this time, the only supported currency is USD.",
        "type": "String",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "duration": {
        "desc": "The duration of the Reserved Instance, in seconds.",
        "type": "Long",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "fixedPrice": {
        "desc": "The purchase price of the Reserved Instance.",
        "type": "Float",
        "required": "no",
        "values": [
          "usd"
        ]
      },
      "instanceTenancy": {
        "desc": "The tenancy of the instance.",
        "type": "String",
        "required": "no",
        "values": [
          "default",
          "dedicated",
          "host"
        ]
      },
      "instanceType": {
        "desc": "The instance type on which the Reserved Instance can be used.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "marketplace": {
        "desc": "Indicates whether the offering is available through the Reserved Instance Marketplace (resale) or AWS. If it's a Reserved Instance Marketplace offering, this is true.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "offeringClass": {
        "desc": "If convertible it can be exchanged for Reserved Instances of the same or higher monetary value, with different configurations. If standard, it is not possible to perform an exchange.",
        "type": "String",
        "required": "no",
        "values": [
          "standard",
          "convertible"
        ]
      },
      "offeringType": {
        "desc": "The Reserved Instance offering type.",
        "type": "String",
        "required": "no",
        "values": [
          "heavy utilization",
          "medium utilization",
          "light utilization",
          "no upfront",
          "partial"
        ]
      },
      "pricingDetailsSet": {
        "desc": "The pricing details of the Reserved Instance offering.",
        "type": "Array of PricingDetail objects",
        "required": "no",
        "values": [
          "heavy utilization",
          "medium utilization",
          "light utilization",
          "no upfront",
          "partial"
        ]
      },
      "productDescription": {
        "desc": "The Reserved Instance product platform description.",
        "type": "String",
        "required": "no",
        "values": [
          "linux/unix",
          "linux/unix (amazon vpc)",
          "windows",
          "windows (amazon vpc)"
        ]
      },
      "recurringCharges": {
        "desc": "The recurring charge tag assigned to the resource.",
        "type": "Array of RecurringCharge objects",
        "required": "no",
        "values": [
          "linux/unix",
          "linux/unix (amazon vpc)",
          "windows",
          "windows (amazon vpc)"
        ]
      },
      "reservedInstancesOfferingId": {
        "desc": "The ID of the Reserved Instance offering. This is the offering ID used in GetReservedInstancesExchangeQuote to confirm that an exchange can be made.",
        "type": "String",
        "required": "no",
        "values": [
          "linux/unix",
          "linux/unix (amazon vpc)",
          "windows",
          "windows (amazon vpc)"
        ]
      },
      "scope": {
        "desc": "Whether the Reserved Instance is applied to instances in a Region or an Availability Zone.",
        "type": "String",
        "required": "no",
        "values": [
          "availability zone",
          "region"
        ]
      },
      "usagePrice": {
        "desc": "The usage price of the Reserved Instance, per hour.",
        "type": "Float",
        "required": "no",
        "values": [
          "availability zone",
          "region"
        ]
      }
    }
  },
  {
    "title": "ResponseError",
    "attrs": {
      "code": {
        "desc": "The error code.",
        "type": "String",
        "required": "no",
        "values": [
          "launchtemplateiddoesnotexist",
          "launchtemplateidmalformed",
          "launchtemplatenamedoesnotexist"
        ]
      },
      "message": {
        "desc": "The error message, if applicable.",
        "type": "String",
        "required": "no",
        "values": [
          "launchtemplateiddoesnotexist",
          "launchtemplateidmalformed",
          "launchtemplatenamedoesnotexist"
        ]
      }
    }
  },
  {
    "title": "ResponseLaunchTemplateData",
    "attrs": {
      "blockDeviceMappingSet": {
        "desc": "The block device mappings.",
        "type": "Array of LaunchTemplateBlockDeviceMapping objects",
        "required": "no"
      },
      "capacityReservationSpecification": {
        "desc": "Information about the Capacity Reservation targeting option.",
        "type": "LaunchTemplateCapacityReservationSpecificationResponse object",
        "required": "no"
      },
      "cpuOptions": {
        "desc": "The CPU options for the instance. For more information, see Optimizing CPU Options in the Amazon Elastic Compute Cloud User Guide.",
        "type": "LaunchTemplateCpuOptions object",
        "required": "no"
      },
      "creditSpecification": {
        "desc": "The credit option for CPU usage of the instance.",
        "type": "CreditSpecification object",
        "required": "no"
      },
      "disableApiTermination": {
        "desc": "If set to true, indicates that the instance cannot be terminated using the Amazon EC2 console, command line tool, or API.",
        "type": "Boolean",
        "required": "no"
      },
      "ebsOptimized": {
        "desc": "Indicates whether the instance is optimized for Amazon EBS I/O.",
        "type": "Boolean",
        "required": "no"
      },
      "elasticGpuSpecificationSet": {
        "desc": "The elastic GPU specification.",
        "type": "Array of ElasticGpuSpecificationResponse objects",
        "required": "no"
      },
      "elasticInferenceAcceleratorSet": {
        "desc": "The elastic inference accelerator for the instance.",
        "type": "Array of LaunchTemplateElasticInferenceAcceleratorResponse objects",
        "required": "no"
      },
      "hibernationOptions": {
        "desc": "Indicates whether an instance is configured for hibernation. For more information, see Hibernate Your Instance in the Amazon Elastic Compute Cloud User Guide.",
        "type": "LaunchTemplateHibernationOptions object",
        "required": "no"
      },
      "iamInstanceProfile": {
        "desc": "The IAM instance profile.",
        "type": "LaunchTemplateIamInstanceProfileSpecification object",
        "required": "no"
      },
      "imageId": {
        "desc": "The ID of the AMI that was used to launch the instance.",
        "type": "String",
        "required": "no"
      },
      "instanceInitiatedShutdownBehavior": {
        "desc": "Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).",
        "type": "String",
        "required": "no",
        "values": [
          "stop",
          "terminate"
        ]
      },
      "instanceMarketOptions": {
        "desc": "The market (purchasing) option for the instances.",
        "type": "LaunchTemplateInstanceMarketOptions object",
        "required": "no",
        "values": [
          "stop",
          "terminate"
        ]
      },
      "instanceType": {
        "desc": "The instance type.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "kernelId": {
        "desc": "The ID of the kernel, if applicable.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "keyName": {
        "desc": "The name of the key pair.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "licenseSet": {
        "desc": "The license configurations.",
        "type": "Array of LaunchTemplateLicenseConfiguration objects",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "metadataOptions": {
        "desc": "The metadata options for the instance. For more information, see Instance Metadata and User Data in the Amazon Elastic Compute Cloud User Guide.",
        "type": "LaunchTemplateInstanceMetadataOptions object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "monitoring": {
        "desc": "The monitoring for the instance.",
        "type": "LaunchTemplatesMonitoring object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "networkInterfaceSet": {
        "desc": "The network interfaces.",
        "type": "Array of LaunchTemplateInstanceNetworkInterfaceSpecification objects",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "placement": {
        "desc": "The placement of the instance.",
        "type": "LaunchTemplatePlacement object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "ramDiskId": {
        "desc": "The ID of the RAM disk, if applicable.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "securityGroupIdSet": {
        "desc": "The security group IDs.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "securityGroupSet": {
        "desc": "The security group names.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "tagSpecificationSet": {
        "desc": "The tags.",
        "type": "Array of LaunchTemplateTagSpecification objects",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "userData": {
        "desc": "The user data for the instance.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      }
    }
  },
  {
    "title": "Route",
    "attrs": {
      "destinationCidrBlock": {
        "desc": "The IPv4 CIDR block used for the destination match.",
        "type": "String",
        "required": "no"
      },
      "destinationIpv6CidrBlock": {
        "desc": "The IPv6 CIDR block used for the destination match.",
        "type": "String",
        "required": "no"
      },
      "destinationPrefixListId": {
        "desc": "The prefix of the AWS service.",
        "type": "String",
        "required": "no"
      },
      "egressOnlyInternetGatewayId": {
        "desc": "The ID of the egress-only internet gateway.",
        "type": "String",
        "required": "no"
      },
      "gatewayId": {
        "desc": "The ID of a gateway attached to your VPC.",
        "type": "String",
        "required": "no"
      },
      "instanceId": {
        "desc": "The ID of a NAT instance in your VPC.",
        "type": "String",
        "required": "no"
      },
      "instanceOwnerId": {
        "desc": "The AWS account ID of the owner of the instance.",
        "type": "String",
        "required": "no"
      },
      "localGatewayId": {
        "desc": "The ID of the local gateway.",
        "type": "String",
        "required": "no"
      },
      "natGatewayId": {
        "desc": "The ID of a NAT gateway.",
        "type": "String",
        "required": "no"
      },
      "networkInterfaceId": {
        "desc": "The ID of the network interface.",
        "type": "String",
        "required": "no"
      },
      "origin": {
        "desc": "Describes how the route was created.",
        "type": "String",
        "required": "no",
        "values": [
          "createroutetable",
          "createroute",
          "enablevgwroutepropagation"
        ]
      },
      "state": {
        "desc": "The state of the route. The blackhole state indicates that the route's target isn't available (for example, the specified gateway isn't attached to the VPC, or the specified NAT instance has been terminated).",
        "type": "String",
        "required": "no",
        "values": [
          "active",
          "blackhole"
        ]
      },
      "transitGatewayId": {
        "desc": "The ID of a transit gateway.",
        "type": "String",
        "required": "no",
        "values": [
          "active",
          "blackhole"
        ]
      },
      "vpcPeeringConnectionId": {
        "desc": "The ID of a VPC peering connection.",
        "type": "String",
        "required": "no",
        "values": [
          "active",
          "blackhole"
        ]
      }
    }
  },
  {
    "title": "RouteTable",
    "attrs": {
      "associationSet": {
        "desc": "The associations between the route table and one or more subnets or a gateway.",
        "type": "Array of RouteTableAssociation objects",
        "required": "no"
      },
      "ownerId": {
        "desc": "The ID of the AWS account that owns the route table.",
        "type": "String",
        "required": "no"
      },
      "propagatingVgwSet": {
        "desc": "Any virtual private gateway (VGW) propagating routes.",
        "type": "Array of PropagatingVgw objects",
        "required": "no"
      },
      "routeSet": {
        "desc": "The routes in the route table.",
        "type": "Array of Route objects",
        "required": "no"
      },
      "routeTableId": {
        "desc": "The ID of the route table.",
        "type": "String",
        "required": "no"
      },
      "tagSet": {
        "desc": "Any tags assigned to the route table.",
        "type": "Array of Tag objects",
        "required": "no"
      },
      "vpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "RouteTableAssociation",
    "attrs": {
      "associationState": {
        "desc": "The state of the association.",
        "type": "RouteTableAssociationState object",
        "required": "no"
      },
      "gatewayId": {
        "desc": "The ID of the internet gateway or virtual private gateway.",
        "type": "String",
        "required": "no"
      },
      "main": {
        "desc": "Indicates whether this is the main route table.",
        "type": "Boolean",
        "required": "no"
      },
      "routeTableAssociationId": {
        "desc": "The ID of the association.",
        "type": "String",
        "required": "no"
      },
      "routeTableId": {
        "desc": "The ID of the route table.",
        "type": "String",
        "required": "no"
      },
      "subnetId": {
        "desc": "The ID of the subnet. A subnet ID is not returned for an implicit association.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "RouteTableAssociationState",
    "attrs": {
      "state": {
        "desc": "The state of the association.",
        "type": "String",
        "required": "no",
        "values": [
          "associating",
          "associated",
          "disassociating",
          "disassociated",
          "failed"
        ]
      },
      "statusMessage": {
        "desc": "The status message, if applicable.",
        "type": "String",
        "required": "no",
        "values": [
          "associating",
          "associated",
          "disassociating",
          "disassociated",
          "failed"
        ]
      }
    }
  },
  {
    "title": "RunInstancesMonitoringEnabled",
    "attrs": {
      "Enabled (request), enabled (response)": {
        "desc": "Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.",
        "type": "Boolean",
        "required": "yes"
      }
    }
  },
  {
    "title": "S3Storage",
    "attrs": {
      "AWSAccessKeyId (request), AWSAccessKeyId (response)": {
        "desc": "The access key ID of the owner of the bucket. Before you specify a value for your access key ID, review and follow the guidance in Best Practices for Managing AWS Access Keys.",
        "type": "String",
        "required": "no"
      },
      "Bucket (request), bucket (response)": {
        "desc": "The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.",
        "type": "String",
        "required": "no"
      },
      "Prefix (request), prefix (response)": {
        "desc": "The beginning of the file name of the AMI.",
        "type": "String",
        "required": "no"
      },
      "UploadPolicy (request), uploadPolicy (response)": {
        "desc": "An Amazon S3 upload policy that gives Amazon EC2 permission to upload items into Amazon S3 on your behalf.",
        "type": "Base64-encoded binary data object",
        "required": "no"
      },
      "UploadPolicySignature (request), uploadPolicySignature (response)": {
        "desc": "The signature of the JSON document.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ScheduledInstance",
    "attrs": {
      "availabilityZone": {
        "desc": "The Availability Zone.",
        "type": "String",
        "required": "no"
      },
      "createDate": {
        "desc": "The date when the Scheduled Instance was purchased.",
        "type": "Timestamp",
        "required": "no"
      },
      "hourlyPrice": {
        "desc": "The hourly price for a single instance.",
        "type": "String",
        "required": "no"
      },
      "instanceCount": {
        "desc": "The number of instances.",
        "type": "Integer",
        "required": "no"
      },
      "instanceType": {
        "desc": "The instance type.",
        "type": "String",
        "required": "no"
      },
      "networkPlatform": {
        "desc": "The network platform (EC2-Classic or EC2-VPC).",
        "type": "String",
        "required": "no"
      },
      "nextSlotStartTime": {
        "desc": "The time for the next schedule to start.",
        "type": "Timestamp",
        "required": "no"
      },
      "platform": {
        "desc": "The platform (Linux/UNIX or Windows).",
        "type": "String",
        "required": "no"
      },
      "previousSlotEndTime": {
        "desc": "The time that the previous schedule ended or will end.",
        "type": "Timestamp",
        "required": "no"
      },
      "recurrence": {
        "desc": "The schedule recurrence.",
        "type": "ScheduledInstanceRecurrence object",
        "required": "no"
      },
      "scheduledInstanceId": {
        "desc": "The Scheduled Instance ID.",
        "type": "String",
        "required": "no"
      },
      "slotDurationInHours": {
        "desc": "The number of hours in the schedule.",
        "type": "Integer",
        "required": "no"
      },
      "termEndDate": {
        "desc": "The end date for the Scheduled Instance.",
        "type": "Timestamp",
        "required": "no"
      },
      "termStartDate": {
        "desc": "The start date for the Scheduled Instance.",
        "type": "Timestamp",
        "required": "no"
      },
      "totalScheduledInstanceHours": {
        "desc": "The total number of hours for a single instance for the entire term.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "ScheduledInstanceAvailability",
    "attrs": {
      "availabilityZone": {
        "desc": "The Availability Zone.",
        "type": "String",
        "required": "no"
      },
      "availableInstanceCount": {
        "desc": "The number of available instances.",
        "type": "Integer",
        "required": "no"
      },
      "firstSlotStartTime": {
        "desc": "The time period for the first schedule to start.",
        "type": "Timestamp",
        "required": "no"
      },
      "hourlyPrice": {
        "desc": "The hourly price for a single instance.",
        "type": "String",
        "required": "no"
      },
      "instanceType": {
        "desc": "The instance type. You can specify one of the C3, C4, M4, or R3 instance types.",
        "type": "String",
        "required": "no"
      },
      "maxTermDurationInDays": {
        "desc": "The maximum term. The only possible value is 365 days.",
        "type": "Integer",
        "required": "no"
      },
      "minTermDurationInDays": {
        "desc": "The minimum term. The only possible value is 365 days.",
        "type": "Integer",
        "required": "no"
      },
      "networkPlatform": {
        "desc": "The network platform (EC2-Classic or EC2-VPC).",
        "type": "String",
        "required": "no"
      },
      "platform": {
        "desc": "The platform (Linux/UNIX or Windows).",
        "type": "String",
        "required": "no"
      },
      "purchaseToken": {
        "desc": "The purchase token. This token expires in two hours.",
        "type": "String",
        "required": "no"
      },
      "recurrence": {
        "desc": "The schedule recurrence.",
        "type": "ScheduledInstanceRecurrence object",
        "required": "no"
      },
      "slotDurationInHours": {
        "desc": "The number of hours in the schedule.",
        "type": "Integer",
        "required": "no"
      },
      "totalScheduledInstanceHours": {
        "desc": "The total number of hours for a single instance for the entire term.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "ScheduledInstanceRecurrence",
    "attrs": {
      "frequency": {
        "desc": "The frequency (Daily, Weekly, or Monthly).",
        "type": "String",
        "required": "no"
      },
      "interval": {
        "desc": "The interval quantity. The interval unit depends on the value of frequency. For example, every 2 weeks or every 2 months.",
        "type": "Integer",
        "required": "no"
      },
      "occurrenceDaySet": {
        "desc": "The days. For a monthly schedule, this is one or more days of the month (1-31). For a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday).",
        "type": "Array of integers",
        "required": "no"
      },
      "occurrenceRelativeToEnd": {
        "desc": "Indicates whether the occurrence is relative to the end of the specified week or month.",
        "type": "Boolean",
        "required": "no"
      },
      "occurrenceUnit": {
        "desc": "The unit for occurrenceDaySet (DayOfWeek or DayOfMonth).",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ScheduledInstanceRecurrenceRequest",
    "attrs": {
      "Frequency": {
        "desc": "The frequency (Daily, Weekly, or Monthly).",
        "type": "String",
        "required": "no"
      },
      "Interval": {
        "desc": "The interval quantity. The interval unit depends on the value of Frequency. For example, every 2 weeks or every 2 months.",
        "type": "Integer",
        "required": "no"
      },
      "OccurrenceDays": {
        "desc": "The days. For a monthly schedule, this is one or more days of the month (1-31). For a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday). You can't specify this value with a daily schedule. If the occurrence is relative to the end of the month, you can specify only a single day.",
        "type": "Array of integers",
        "required": "no"
      },
      "OccurrenceRelativeToEnd": {
        "desc": "Indicates whether the occurrence is relative to the end of the specified week or month. You can't specify this value with a daily schedule.",
        "type": "Boolean",
        "required": "no"
      },
      "OccurrenceUnit": {
        "desc": "The unit for OccurrenceDays (DayOfWeek or DayOfMonth). This value is required for a monthly schedule. You can't specify DayOfWeek with a weekly schedule. You can't specify this value with a daily schedule.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ScheduledInstancesBlockDeviceMapping",
    "attrs": {
      "DeviceName": {
        "desc": "The device name (for example, /dev/sdh or xvdh).",
        "type": "String",
        "required": "no"
      },
      "Ebs": {
        "desc": "Parameters used to set up EBS volumes automatically when the instance is launched.",
        "type": "ScheduledInstancesEbs object",
        "required": "no"
      },
      "NoDevice": {
        "desc": "Suppresses the specified device included in the block device mapping of the AMI.",
        "type": "String",
        "required": "no"
      },
      "VirtualName": {
        "desc": "The virtual device name (ephemeralN). Instance store volumes are numbered starting from 0. An instance type with two available instance store volumes can specify mappings for ephemeral0 and ephemeral1. The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ScheduledInstancesEbs",
    "attrs": {
      "DeleteOnTermination": {
        "desc": "Indicates whether the volume is deleted on instance termination.",
        "type": "Boolean",
        "required": "no"
      },
      "Encrypted": {
        "desc": "Indicates whether the volume is encrypted. You can attached encrypted volumes only to instances that support them.",
        "type": "Boolean",
        "required": "no"
      },
      "Iops": {
        "desc": "The number of I/O operations per second (IOPS) that the volume supports. For io1 volumes, this represents the number of IOPS that are provisioned for the volume. For gp2 volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information about gp2 baseline performance, I/O credits, and bursting, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide.",
        "type": "Integer",
        "required": "no"
      },
      "SnapshotId": {
        "desc": "The ID of the snapshot.",
        "type": "String",
        "required": "no"
      },
      "VolumeSize": {
        "desc": "The size of the volume, in GiB.",
        "type": "Integer",
        "required": "no"
      },
      "VolumeType": {
        "desc": "The volume type. gp2 for General Purpose SSD, io1 for Provisioned IOPS SSD, Throughput Optimized HDD for st1, Cold HDD for sc1, or standard for Magnetic.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ScheduledInstancesIamInstanceProfile",
    "attrs": {
      "Arn": {
        "desc": "The Amazon Resource Name (ARN).",
        "type": "String",
        "required": "no"
      },
      "Name": {
        "desc": "The name.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ScheduledInstancesIpv6Address",
    "attrs": {
      "Ipv6Address": {
        "desc": "The IPv6 address.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ScheduledInstancesLaunchSpecification",
    "attrs": {
      "BlockDeviceMappings": {
        "desc": "The block device mapping entries.",
        "type": "Array of ScheduledInstancesBlockDeviceMapping objects",
        "required": "no"
      },
      "EbsOptimized": {
        "desc": "Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.",
        "type": "Boolean",
        "required": "no"
      },
      "IamInstanceProfile": {
        "desc": "The IAM instance profile.",
        "type": "ScheduledInstancesIamInstanceProfile object",
        "required": "no"
      },
      "ImageId": {
        "desc": "The ID of the Amazon Machine Image (AMI).",
        "type": "String",
        "required": "yes"
      },
      "InstanceType": {
        "desc": "The instance type.",
        "type": "String",
        "required": "no"
      },
      "KernelId": {
        "desc": "The ID of the kernel.",
        "type": "String",
        "required": "no"
      },
      "KeyName": {
        "desc": "The name of the key pair.",
        "type": "String",
        "required": "no"
      },
      "Monitoring": {
        "desc": "Enable or disable monitoring for the instances.",
        "type": "ScheduledInstancesMonitoring object",
        "required": "no"
      },
      "NetworkInterfaces": {
        "desc": "The network interfaces.",
        "type": "Array of ScheduledInstancesNetworkInterface objects",
        "required": "no"
      },
      "Placement": {
        "desc": "The placement information.",
        "type": "ScheduledInstancesPlacement object",
        "required": "no"
      },
      "RamdiskId": {
        "desc": "The ID of the RAM disk.",
        "type": "String",
        "required": "no"
      },
      "SecurityGroupIds": {
        "desc": "The IDs of the security groups.",
        "type": "Array of strings",
        "required": "no"
      },
      "SubnetId": {
        "desc": "The ID of the subnet in which to launch the instances.",
        "type": "String",
        "required": "no"
      },
      "UserData": {
        "desc": "The base64-encoded MIME user data.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ScheduledInstancesMonitoring",
    "attrs": {
      "Enabled": {
        "desc": "Indicates whether monitoring is enabled.",
        "type": "Boolean",
        "required": "no"
      }
    }
  },
  {
    "title": "ScheduledInstancesNetworkInterface",
    "attrs": {
      "AssociatePublicIpAddress": {
        "desc": "Indicates whether to assign a public IPv4 address to instances launched in a VPC. The public IPv4 address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is true.",
        "type": "Boolean",
        "required": "no"
      },
      "DeleteOnTermination": {
        "desc": "Indicates whether to delete the interface when the instance is terminated.",
        "type": "Boolean",
        "required": "no"
      },
      "Description": {
        "desc": "The description.",
        "type": "String",
        "required": "no"
      },
      "DeviceIndex": {
        "desc": "The index of the device for the network interface attachment.",
        "type": "Integer",
        "required": "no"
      },
      "Groups": {
        "desc": "The IDs of the security groups.",
        "type": "Array of strings",
        "required": "no"
      },
      "Ipv6Addresses": {
        "desc": "The specific IPv6 addresses from the subnet range.",
        "type": "Array of ScheduledInstancesIpv6Address objects",
        "required": "no"
      },
      "Ipv6AddressCount": {
        "desc": "The number of IPv6 addresses to assign to the network interface. The IPv6 addresses are automatically selected from the subnet range.",
        "type": "Integer",
        "required": "no"
      },
      "NetworkInterfaceId": {
        "desc": "The ID of the network interface.",
        "type": "String",
        "required": "no"
      },
      "PrivateIpAddress": {
        "desc": "The IPv4 address of the network interface within the subnet.",
        "type": "String",
        "required": "no"
      },
      "PrivateIpAddressConfigs": {
        "desc": "The private IPv4 addresses.",
        "type": "Array of ScheduledInstancesPrivateIpAddressConfig objects",
        "required": "no"
      },
      "SecondaryPrivateIpAddressCount": {
        "desc": "The number of secondary private IPv4 addresses.",
        "type": "Integer",
        "required": "no"
      },
      "SubnetId": {
        "desc": "The ID of the subnet.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ScheduledInstancesPlacement",
    "attrs": {
      "AvailabilityZone": {
        "desc": "The Availability Zone.",
        "type": "String",
        "required": "no"
      },
      "GroupName": {
        "desc": "The name of the placement group.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ScheduledInstancesPrivateIpAddressConfig",
    "attrs": {
      "Primary": {
        "desc": "Indicates whether this is a primary IPv4 address. Otherwise, this is a secondary IPv4 address.",
        "type": "Boolean",
        "required": "no"
      },
      "PrivateIpAddress": {
        "desc": "The IPv4 address.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "SecurityGroup",
    "attrs": {
      "groupDescription": {
        "desc": "A description of the security group.",
        "type": "String",
        "required": "no"
      },
      "groupId": {
        "desc": "The ID of the security group.",
        "type": "String",
        "required": "no"
      },
      "groupName": {
        "desc": "The name of the security group.",
        "type": "String",
        "required": "no"
      },
      "ipPermissions": {
        "desc": "The inbound rules associated with the security group.",
        "type": "Array of IpPermission objects",
        "required": "no"
      },
      "ipPermissionsEgress": {
        "desc": "[VPC only] The outbound rules associated with the security group.",
        "type": "Array of IpPermission objects",
        "required": "no"
      },
      "ownerId": {
        "desc": "The AWS account ID of the owner of the security group.",
        "type": "String",
        "required": "no"
      },
      "tagSet": {
        "desc": "Any tags assigned to the security group.",
        "type": "Array of Tag objects",
        "required": "no"
      },
      "vpcId": {
        "desc": "[VPC only] The ID of the VPC for the security group.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "SecurityGroupIdentifier",
    "attrs": {
      "groupId": {
        "desc": "The ID of the security group.",
        "type": "String",
        "required": "no"
      },
      "groupName": {
        "desc": "The name of the security group.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "SecurityGroupReference",
    "attrs": {
      "groupId": {
        "desc": "The ID of your security group.",
        "type": "String",
        "required": "no"
      },
      "referencingVpcId": {
        "desc": "The ID of the VPC with the referencing security group.",
        "type": "String",
        "required": "no"
      },
      "vpcPeeringConnectionId": {
        "desc": "The ID of the VPC peering connection.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "ServiceConfiguration",
    "attrs": {
      "acceptanceRequired": {
        "desc": "Indicates whether requests from other AWS accounts to create an endpoint to the service must first be accepted.",
        "type": "Boolean",
        "required": "no"
      },
      "availabilityZoneSet": {
        "desc": "The Availability Zones in which the service is available.",
        "type": "Array of strings",
        "required": "no"
      },
      "baseEndpointDnsNameSet": {
        "desc": "The DNS names for the service.",
        "type": "Array of strings",
        "required": "no"
      },
      "managesVpcEndpoints": {
        "desc": "Indicates whether the service manages its VPC endpoints. Management of the service VPC endpoints using the VPC endpoint API is restricted.",
        "type": "Boolean",
        "required": "no"
      },
      "networkLoadBalancerArnSet": {
        "desc": "The Amazon Resource Names (ARNs) of the Network Load Balancers for the service.",
        "type": "Array of strings",
        "required": "no"
      },
      "privateDnsName": {
        "desc": "The private DNS name for the service.",
        "type": "String",
        "required": "no"
      },
      "privateDnsNameConfiguration": {
        "desc": "Information about the endpoint service private DNS name configuration.",
        "type": "PrivateDnsNameConfiguration object",
        "required": "no"
      },
      "serviceId": {
        "desc": "The ID of the service.",
        "type": "String",
        "required": "no"
      },
      "serviceName": {
        "desc": "The name of the service.",
        "type": "String",
        "required": "no"
      },
      "serviceState": {
        "desc": "The service state.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "available",
          "deleting",
          "deleted",
          "failed"
        ]
      },
      "serviceType": {
        "desc": "The type of service.",
        "type": "Array of ServiceTypeDetail objects",
        "required": "no",
        "values": [
          "pending",
          "available",
          "deleting",
          "deleted",
          "failed"
        ]
      },
      "tagSet": {
        "desc": "Any tags assigned to the service.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "pending",
          "available",
          "deleting",
          "deleted",
          "failed"
        ]
      }
    }
  },
  {
    "title": "ServiceDetail",
    "attrs": {
      "acceptanceRequired": {
        "desc": "Indicates whether VPC endpoint connection requests to the service must be accepted by the service owner.",
        "type": "Boolean",
        "required": "no"
      },
      "availabilityZoneSet": {
        "desc": "The Availability Zones in which the service is available.",
        "type": "Array of strings",
        "required": "no"
      },
      "baseEndpointDnsNameSet": {
        "desc": "The DNS names for the service.",
        "type": "Array of strings",
        "required": "no"
      },
      "managesVpcEndpoints": {
        "desc": "Indicates whether the service manages its VPC endpoints. Management of the service VPC endpoints using the VPC endpoint API is restricted.",
        "type": "Boolean",
        "required": "no"
      },
      "owner": {
        "desc": "The AWS account ID of the service owner.",
        "type": "String",
        "required": "no"
      },
      "privateDnsName": {
        "desc": "The private DNS name for the service.",
        "type": "String",
        "required": "no"
      },
      "privateDnsNameVerificationState": {
        "desc": "The verification state of the VPC endpoint service.",
        "type": "String",
        "required": "no",
        "values": [
          "pendingverification",
          "verified",
          "failed"
        ]
      },
      "serviceId": {
        "desc": "The ID of the endpoint service.",
        "type": "String",
        "required": "no",
        "values": [
          "pendingverification",
          "verified",
          "failed"
        ]
      },
      "serviceName": {
        "desc": "The Amazon Resource Name (ARN) of the service.",
        "type": "String",
        "required": "no",
        "values": [
          "pendingverification",
          "verified",
          "failed"
        ]
      },
      "serviceType": {
        "desc": "The type of service.",
        "type": "Array of ServiceTypeDetail objects",
        "required": "no",
        "values": [
          "pendingverification",
          "verified",
          "failed"
        ]
      },
      "tagSet": {
        "desc": "Any tags assigned to the service.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "pendingverification",
          "verified",
          "failed"
        ]
      },
      "vpcEndpointPolicySupported": {
        "desc": "Indicates whether the service supports endpoint policies.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "pendingverification",
          "verified",
          "failed"
        ]
      }
    }
  },
  {
    "title": "ServiceTypeDetail",
    "attrs": {
      "serviceType": {
        "desc": "The type of service.",
        "type": "String",
        "required": "no",
        "values": [
          "interface",
          "gateway"
        ]
      }
    }
  },
  {
    "title": "SlotDateTimeRangeRequest",
    "attrs": {
      "EarliestTime": {
        "desc": "The earliest date and time, in UTC, for the Scheduled Instance to start.",
        "type": "Timestamp",
        "required": "yes"
      },
      "LatestTime": {
        "desc": "The latest date and time, in UTC, for the Scheduled Instance to start. This value must be later than or equal to the earliest date and at most three months in the future.",
        "type": "Timestamp",
        "required": "yes"
      }
    }
  },
  {
    "title": "SlotStartTimeRangeRequest",
    "attrs": {
      "EarliestTime": {
        "desc": "The earliest date and time, in UTC, for the Scheduled Instance to start.",
        "type": "Timestamp",
        "required": "no"
      },
      "LatestTime": {
        "desc": "The latest date and time, in UTC, for the Scheduled Instance to start.",
        "type": "Timestamp",
        "required": "no"
      }
    }
  },
  {
    "title": "Snapshot",
    "attrs": {
      "dataEncryptionKeyId": {
        "desc": "The data encryption key identifier for the snapshot. This value is a unique identifier that corresponds to the data encryption key that was used to encrypt the original volume or snapshot copy. Because data encryption keys are inherited by volumes created from snapshots, and vice versa, if snapshots share the same data encryption key identifier, then they belong to the same volume/snapshot lineage. This parameter is only returned by DescribeSnapshots.",
        "type": "String",
        "required": "no"
      },
      "description": {
        "desc": "The description for the snapshot.",
        "type": "String",
        "required": "no"
      },
      "encrypted": {
        "desc": "Indicates whether the snapshot is encrypted.",
        "type": "Boolean",
        "required": "no"
      },
      "kmsKeyId": {
        "desc": "The Amazon Resource Name (ARN) of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the parent volume.",
        "type": "String",
        "required": "no"
      },
      "ownerAlias": {
        "desc": "Value from an Amazon-maintained list (amazon | self | all | aws-marketplace | microsoft) of snapshot owners. Not to be confused with the user-configured AWS account alias, which is set from the IAM console.",
        "type": "String",
        "required": "no"
      },
      "ownerId": {
        "desc": "The AWS account ID of the EBS snapshot owner.",
        "type": "String",
        "required": "no"
      },
      "progress": {
        "desc": "The progress of the snapshot, as a percentage.",
        "type": "String",
        "required": "no"
      },
      "snapshotId": {
        "desc": "The ID of the snapshot. Each snapshot receives a unique identifier when it is created.",
        "type": "String",
        "required": "no"
      },
      "startTime": {
        "desc": "The time stamp when the snapshot was initiated.",
        "type": "Timestamp",
        "required": "no"
      },
      "status": {
        "desc": "The snapshot state.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "completed",
          "error"
        ]
      },
      "statusMessage": {
        "desc": "Encrypted Amazon EBS snapshots are copied asynchronously. If a snapshot copy operation fails (for example, if the proper AWS Key Management Service (AWS KMS) permissions are not obtained) this field displays error state details to help you diagnose why the error occurred. This parameter is only returned by DescribeSnapshots.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "completed",
          "error"
        ]
      },
      "tagSet": {
        "desc": "Any tags assigned to the snapshot.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "pending",
          "completed",
          "error"
        ]
      },
      "volumeId": {
        "desc": "The ID of the volume that was used to create the snapshot. Snapshots created by the CopySnapshot action have an arbitrary volume ID that should not be used for any purpose.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "completed",
          "error"
        ]
      },
      "volumeSize": {
        "desc": "The size of the volume, in GiB.",
        "type": "Integer",
        "required": "no",
        "values": [
          "pending",
          "completed",
          "error"
        ]
      }
    }
  },
  {
    "title": "SnapshotDetail",
    "attrs": {
      "description": {
        "desc": "A description for the snapshot.",
        "type": "String",
        "required": "no"
      },
      "deviceName": {
        "desc": "The block device mapping for the snapshot.",
        "type": "String",
        "required": "no"
      },
      "diskImageSize": {
        "desc": "The size of the disk in the snapshot, in GiB.",
        "type": "Double",
        "required": "no"
      },
      "format": {
        "desc": "The format of the disk image from which the snapshot is created.",
        "type": "String",
        "required": "no"
      },
      "progress": {
        "desc": "The percentage of progress for the task.",
        "type": "String",
        "required": "no"
      },
      "snapshotId": {
        "desc": "The snapshot ID of the disk being imported.",
        "type": "String",
        "required": "no"
      },
      "status": {
        "desc": "A brief status of the snapshot creation.",
        "type": "String",
        "required": "no"
      },
      "statusMessage": {
        "desc": "A detailed status message for the snapshot creation.",
        "type": "String",
        "required": "no"
      },
      "url": {
        "desc": "The URL used to access the disk image.",
        "type": "String",
        "required": "no"
      },
      "userBucket": {
        "desc": "The S3 bucket for the disk image.",
        "type": "UserBucketDetails object",
        "required": "no"
      }
    }
  },
  {
    "title": "SnapshotDiskContainer",
    "attrs": {
      "Description": {
        "desc": "The description of the disk image being imported.",
        "type": "String",
        "required": "no"
      },
      "Format": {
        "desc": "The format of the disk image being imported.",
        "type": "String",
        "required": "no"
      },
      "Url": {
        "desc": "The URL to the Amazon S3-based disk image being imported. It can either be a https URL (https://..) or an Amazon S3 URL (s3://..).",
        "type": "String",
        "required": "no"
      },
      "UserBucket": {
        "desc": "The S3 bucket for the disk image.",
        "type": "UserBucket object",
        "required": "no"
      }
    }
  },
  {
    "title": "SnapshotInfo",
    "attrs": {
      "description": {
        "desc": "Description specified by the CreateSnapshotRequest that has been applied to all snapshots.",
        "type": "String",
        "required": "no"
      },
      "encrypted": {
        "desc": "Indicates whether the snapshot is encrypted.",
        "type": "Boolean",
        "required": "no"
      },
      "ownerId": {
        "desc": "Account id used when creating this snapshot.",
        "type": "String",
        "required": "no"
      },
      "progress": {
        "desc": "Progress this snapshot has made towards completing.",
        "type": "String",
        "required": "no"
      },
      "snapshotId": {
        "desc": "Snapshot id that can be used to describe this snapshot.",
        "type": "String",
        "required": "no"
      },
      "startTime": {
        "desc": "Time this snapshot was started. This is the same for all snapshots initiated by the same request.",
        "type": "Timestamp",
        "required": "no"
      },
      "state": {
        "desc": "Current state of the snapshot.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "completed",
          "error"
        ]
      },
      "tagSet": {
        "desc": "Tags associated with this snapshot.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "pending",
          "completed",
          "error"
        ]
      },
      "volumeId": {
        "desc": "Source volume from which this snapshot was created.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "completed",
          "error"
        ]
      },
      "volumeSize": {
        "desc": "Size of the volume from which this snapshot was created.",
        "type": "Integer",
        "required": "no",
        "values": [
          "pending",
          "completed",
          "error"
        ]
      }
    }
  },
  {
    "title": "SnapshotTaskDetail",
    "attrs": {
      "description": {
        "desc": "The description of the snapshot.",
        "type": "String",
        "required": "no"
      },
      "diskImageSize": {
        "desc": "The size of the disk in the snapshot, in GiB.",
        "type": "Double",
        "required": "no"
      },
      "encrypted": {
        "desc": "Indicates whether the snapshot is encrypted.",
        "type": "Boolean",
        "required": "no"
      },
      "format": {
        "desc": "The format of the disk image from which the snapshot is created.",
        "type": "String",
        "required": "no"
      },
      "kmsKeyId": {
        "desc": "The identifier for the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to create the encrypted snapshot.",
        "type": "String",
        "required": "no"
      },
      "progress": {
        "desc": "The percentage of completion for the import snapshot task.",
        "type": "String",
        "required": "no"
      },
      "snapshotId": {
        "desc": "The snapshot ID of the disk being imported.",
        "type": "String",
        "required": "no"
      },
      "status": {
        "desc": "A brief status for the import snapshot task.",
        "type": "String",
        "required": "no"
      },
      "statusMessage": {
        "desc": "A detailed status message for the import snapshot task.",
        "type": "String",
        "required": "no"
      },
      "url": {
        "desc": "The URL of the disk image from which the snapshot is created.",
        "type": "String",
        "required": "no"
      },
      "userBucket": {
        "desc": "The S3 bucket for the disk image.",
        "type": "UserBucketDetails object",
        "required": "no"
      }
    }
  },
  {
    "title": "SpotDatafeedSubscription",
    "attrs": {
      "bucket": {
        "desc": "The Amazon S3 bucket where the Spot Instance data feed is located.",
        "type": "String",
        "required": "no"
      },
      "fault": {
        "desc": "The fault codes for the Spot Instance request, if any.",
        "type": "SpotInstanceStateFault object",
        "required": "no"
      },
      "ownerId": {
        "desc": "The AWS account ID of the account.",
        "type": "String",
        "required": "no"
      },
      "prefix": {
        "desc": "The prefix that is prepended to data feed files.",
        "type": "String",
        "required": "no"
      },
      "state": {
        "desc": "The state of the Spot Instance data feed subscription.",
        "type": "String",
        "required": "no",
        "values": [
          "active",
          "inactive"
        ]
      }
    }
  },
  {
    "title": "SpotFleetLaunchSpecification",
    "attrs": {
      "AddressingType (request), addressingType (response)": {
        "desc": "Deprecated.",
        "type": "String",
        "required": "no"
      },
      "BlockDeviceMappings (request), blockDeviceMapping (response)": {
        "desc": "One or more block devices that are mapped to the Spot Instances. You can't specify both a snapshot ID and an encryption value. This is because only blank volumes can be encrypted on creation. If a snapshot is the basis for a volume, it is not blank and its encryption status is used for the volume encryption status.",
        "type": "Array of BlockDeviceMapping objects",
        "required": "no"
      },
      "EbsOptimized (request), ebsOptimized (response)": {
        "desc": "Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.",
        "type": "Boolean",
        "required": "no"
      },
      "SecurityGroups (request), groupSet (response)": {
        "desc": "One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.",
        "type": "Array of GroupIdentifier objects",
        "required": "no"
      },
      "IamInstanceProfile (request), iamInstanceProfile (response)": {
        "desc": "The IAM instance profile.",
        "type": "IamInstanceProfileSpecification object",
        "required": "no"
      },
      "ImageId (request), imageId (response)": {
        "desc": "The ID of the AMI.",
        "type": "String",
        "required": "no"
      },
      "InstanceType (request), instanceType (response)": {
        "desc": "The instance type.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "KernelId (request), kernelId (response)": {
        "desc": "The ID of the kernel.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "KeyName (request), keyName (response)": {
        "desc": "The name of the key pair.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "Monitoring (request), monitoring (response)": {
        "desc": "Enable or disable monitoring for the instances.",
        "type": "SpotFleetMonitoring object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "NetworkInterfaces (request), networkInterfaceSet (response)": {
        "desc": "One or more network interfaces. If you specify a network interface, you must specify subnet IDs and security group IDs using the network interface.",
        "type": "Array of InstanceNetworkInterfaceSpecification objects",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "Placement (request), placement (response)": {
        "desc": "The placement information.",
        "type": "SpotPlacement object",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "RamdiskId (request), ramdiskId (response)": {
        "desc": "The ID of the RAM disk. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, refer to the AWS Resource Center and search for the kernel ID.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "SpotPrice (request), spotPrice (response)": {
        "desc": "The maximum price per unit hour that you are willing to pay for a Spot Instance. If this value is not specified, the default is the Spot price specified for the fleet. To determine the Spot price per unit hour, divide the Spot price by the value of WeightedCapacity.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "SubnetId (request), subnetId (response)": {
        "desc": "The IDs of the subnets in which to launch the instances. To specify multiple subnets, separate them using commas; for example, \"subnet-1234abcdeexample1, subnet-0987cdef6example2\".",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "TagSpecifications (request), tagSpecificationSet (response)": {
        "desc": "The tags to apply during creation.",
        "type": "Array of SpotFleetTagSpecification objects",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "UserData (request), userData (response)": {
        "desc": "The Base64-encoded user data that instances use when starting up.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "WeightedCapacity (request), weightedCapacity (response)": {
        "desc": "The number of units provided by the specified instance type. These are the same units that you chose to set the target capacity in terms of instances, or a performance characteristic such as vCPUs, memory, or I/O.",
        "type": "Double",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      }
    }
  },
  {
    "title": "SpotFleetMonitoring",
    "attrs": {
      "Enabled (request), enabled (response)": {
        "desc": "Enables monitoring for the instance.",
        "type": "Boolean",
        "required": "no"
      }
    }
  },
  {
    "title": "SpotFleetRequestConfig",
    "attrs": {
      "activityStatus": {
        "desc": "The progress of the Spot Fleet request. If there is an error, the status is error. After all requests are placed, the status is pending_fulfillment. If the size of the fleet is equal to or greater than its target capacity, the status is fulfilled. If the size of the fleet is decreased, the status is pending_termination while Spot Instances are terminating.",
        "type": "String",
        "required": "no",
        "values": [
          "error",
          "pending_fulfillment",
          "pending_termination",
          "fulfilled"
        ]
      },
      "createTime": {
        "desc": "The creation date and time of the request.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "error",
          "pending_fulfillment",
          "pending_termination",
          "fulfilled"
        ]
      },
      "spotFleetRequestConfig": {
        "desc": "The configuration of the Spot Fleet request.",
        "type": "SpotFleetRequestConfigData object",
        "required": "no",
        "values": [
          "error",
          "pending_fulfillment",
          "pending_termination",
          "fulfilled"
        ]
      },
      "spotFleetRequestId": {
        "desc": "The ID of the Spot Fleet request.",
        "type": "String",
        "required": "no",
        "values": [
          "error",
          "pending_fulfillment",
          "pending_termination",
          "fulfilled"
        ]
      },
      "spotFleetRequestState": {
        "desc": "The state of the Spot Fleet request.",
        "type": "String",
        "required": "no",
        "values": [
          "submitted",
          "active",
          "cancelled",
          "failed",
          "cancelled_running",
          "cancelled_terminating"
        ]
      },
      "tagSet": {
        "desc": "The tags for a Spot Fleet resource.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "submitted",
          "active",
          "cancelled",
          "failed",
          "cancelled_running",
          "cancelled_terminating"
        ]
      }
    }
  },
  {
    "title": "SpotFleetRequestConfigData",
    "attrs": {
      "AllocationStrategy (request), allocationStrategy (response)": {
        "desc": "Indicates how to allocate the target Spot Instance capacity across the Spot Instance pools specified by the Spot Fleet request.",
        "type": "String",
        "required": "no",
        "values": [
          "lowestprice",
          "diversified",
          "capacityoptimized"
        ]
      },
      "ClientToken (request), clientToken (response)": {
        "desc": "A unique, case-sensitive identifier that you provide to ensure the idempotency of your listings. This helps to avoid duplicate listings. For more information, see Ensuring Idempotency.",
        "type": "String",
        "required": "no",
        "values": [
          "lowestprice",
          "diversified",
          "capacityoptimized"
        ]
      },
      "ExcessCapacityTerminationPolicy (request), excessCapacityTerminationPolicy (response)": {
        "desc": "Indicates whether running Spot Instances should be terminated if you decrease the target capacity of the Spot Fleet request below the current size of the Spot Fleet.",
        "type": "String",
        "required": "no",
        "values": [
          "notermination",
          "default"
        ]
      },
      "FulfilledCapacity (request), fulfilledCapacity (response)": {
        "desc": "The number of units fulfilled by this request compared to the set target capacity. You cannot set this value.",
        "type": "Double",
        "required": "no",
        "values": [
          "notermination",
          "default"
        ]
      },
      "IamFleetRole (request), iamFleetRole (response)": {
        "desc": "The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that grants the Spot Fleet the permission to request, launch, terminate, and tag instances on your behalf. For more information, see Spot Fleet Prerequisites in the Amazon EC2 User Guide for Linux Instances. Spot Fleet can terminate Spot Instances on your behalf when you cancel its Spot Fleet request using CancelSpotFleetRequests or when the Spot Fleet request expires, if you set TerminateInstancesWithExpiration.",
        "type": "String",
        "required": "yes",
        "values": [
          "notermination",
          "default"
        ]
      },
      "InstanceInterruptionBehavior (request), instanceInterruptionBehavior (response)": {
        "desc": "The behavior when a Spot Instance is interrupted. The default is terminate.",
        "type": "String",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "InstancePoolsToUseCount (request), instancePoolsToUseCount (response)": {
        "desc": "The number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot AllocationStrategy is set to lowest-price. Spot Fleet selects the cheapest Spot pools and evenly allocates your target Spot capacity across the number of Spot pools that you specify.",
        "type": "Integer",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "LaunchSpecifications (request), launchSpecifications (response)": {
        "desc": "The launch specifications for the Spot Fleet request. If you specify LaunchSpecifications, you can't specify LaunchTemplateConfigs. If you include On-Demand capacity in your request, you must use LaunchTemplateConfigs.",
        "type": "Array of SpotFleetLaunchSpecification objects",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "LaunchTemplateConfigs (request), launchTemplateConfigs (response)": {
        "desc": "The launch template and overrides. If you specify LaunchTemplateConfigs, you can't specify LaunchSpecifications. If you include On-Demand capacity in your request, you must use LaunchTemplateConfigs.",
        "type": "Array of LaunchTemplateConfig objects",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "LoadBalancersConfig (request), loadBalancersConfig (response)": {
        "desc": "One or more Classic Load Balancers and target groups to attach to the Spot Fleet request. Spot Fleet registers the running Spot Instances with the specified Classic Load Balancers and target groups.",
        "type": "LoadBalancersConfig object",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "OnDemandAllocationStrategy (request), onDemandAllocationStrategy (response)": {
        "desc": "The order of the launch template overrides to use in fulfilling On-Demand capacity. If you specify lowestPrice, Spot Fleet uses price to determine the order, launching the lowest price first. If you specify prioritized, Spot Fleet uses the priority that you assign to each Spot Fleet launch template override, launching the highest priority first. If you do not specify a value, Spot Fleet defaults to lowestPrice.",
        "type": "String",
        "required": "no",
        "values": [
          "lowestprice",
          "prioritized"
        ]
      },
      "OnDemandFulfilledCapacity (request), onDemandFulfilledCapacity (response)": {
        "desc": "The number of On-Demand units fulfilled by this request compared to the set target On-Demand capacity.",
        "type": "Double",
        "required": "no",
        "values": [
          "lowestprice",
          "prioritized"
        ]
      },
      "OnDemandMaxTotalPrice (request), onDemandMaxTotalPrice (response)": {
        "desc": "The maximum amount per hour for On-Demand Instances that you're willing to pay. You can use the onDemandMaxTotalPrice parameter, the spotMaxTotalPrice parameter, or both parameters to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, Spot Fleet will launch instances until it reaches the maximum amount you're willing to pay. When the maximum amount you're willing to pay is reached, the fleet stops launching instances even if it hasn’t met the target capacity.",
        "type": "String",
        "required": "no",
        "values": [
          "lowestprice",
          "prioritized"
        ]
      },
      "OnDemandTargetCapacity (request), onDemandTargetCapacity (response)": {
        "desc": "The number of On-Demand units to request. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is maintain, you can specify a target capacity of 0 and add capacity later.",
        "type": "Integer",
        "required": "no",
        "values": [
          "lowestprice",
          "prioritized"
        ]
      },
      "ReplaceUnhealthyInstances (request), replaceUnhealthyInstances (response)": {
        "desc": "Indicates whether Spot Fleet should replace unhealthy instances.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "lowestprice",
          "prioritized"
        ]
      },
      "SpotMaxTotalPrice (request), spotMaxTotalPrice (response)": {
        "desc": "The maximum amount per hour for Spot Instances that you're willing to pay. You can use the spotdMaxTotalPrice parameter, the onDemandMaxTotalPrice parameter, or both parameters to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, Spot Fleet will launch instances until it reaches the maximum amount you're willing to pay. When the maximum amount you're willing to pay is reached, the fleet stops launching instances even if it hasn’t met the target capacity.",
        "type": "String",
        "required": "no",
        "values": [
          "lowestprice",
          "prioritized"
        ]
      },
      "SpotPrice (request), spotPrice (response)": {
        "desc": "The maximum price per unit hour that you are willing to pay for a Spot Instance. The default is the On-Demand price.",
        "type": "String",
        "required": "no",
        "values": [
          "lowestprice",
          "prioritized"
        ]
      },
      "TagSpecifications (request), TagSpecification (response)": {
        "desc": "The key-value pair for tagging the Spot Fleet request on creation. The value for ResourceType must be spot-fleet-request, otherwise the Spot Fleet request fails. To tag instances at launch, specify the tags in the launch template (valid only if you use LaunchTemplateConfigs) or in the SpotFleetTagSpecification (valid only if you use LaunchSpecifications). For information about tagging after launch, see Tagging Your Resources.",
        "type": "Array of TagSpecification objects",
        "required": "no",
        "values": [
          "lowestprice",
          "prioritized"
        ]
      },
      "TargetCapacity (request), targetCapacity (response)": {
        "desc": "The number of units to request for the Spot Fleet. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is maintain, you can specify a target capacity of 0 and add capacity later.",
        "type": "Integer",
        "required": "yes",
        "values": [
          "lowestprice",
          "prioritized"
        ]
      },
      "TerminateInstancesWithExpiration (request), terminateInstancesWithExpiration (response)": {
        "desc": "Indicates whether running Spot Instances are terminated when the Spot Fleet request expires.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "lowestprice",
          "prioritized"
        ]
      },
      "Type (request), type (response)": {
        "desc": "The type of request. Indicates whether the Spot Fleet only requests the target capacity or also attempts to maintain it. When this value is request, the Spot Fleet only places the required requests. It does not attempt to replenish Spot Instances if capacity is diminished, nor does it submit requests in alternative Spot pools if capacity is not available. When this value is maintain, the Spot Fleet maintains the target capacity. The Spot Fleet places the required requests to meet capacity and automatically replenishes any interrupted instances. Default: maintain. instant is listed but is not used by Spot Fleet.",
        "type": "String",
        "required": "no",
        "values": [
          "request",
          "maintain",
          "instant"
        ]
      },
      "ValidFrom (request), validFrom (response)": {
        "desc": "The start date and time of the request, in UTC format (YYYY-MM-DDTHH:MM:SSZ). By default, Amazon EC2 starts fulfilling the request immediately.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "request",
          "maintain",
          "instant"
        ]
      },
      "ValidUntil (request), validUntil (response)": {
        "desc": "The end date and time of the request, in UTC format (YYYY-MM-DDTHH:MM:SSZ). After the end date and time, no new Spot Instance requests are placed or able to fulfill the request. If no value is specified, the Spot Fleet request remains until you cancel it.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "request",
          "maintain",
          "instant"
        ]
      }
    }
  },
  {
    "title": "SpotFleetTagSpecification",
    "attrs": {
      "ResourceType (request), resourceType (response)": {
        "desc": "The type of resource. Currently, the only resource type that is supported is instance. To tag the Spot Fleet request on creation, use the TagSpecifications parameter in SpotFleetRequestConfigData .",
        "type": "String",
        "required": "no",
        "values": [
          "client-vpn-endpoint",
          "customer-gateway",
          "dedicated-host",
          "dhcp-options",
          "elastic-ip"
        ]
      },
      "Tags (request), tag (response)": {
        "desc": "The tags.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "client-vpn-endpoint",
          "customer-gateway",
          "dedicated-host",
          "dhcp-options",
          "elastic-ip"
        ]
      }
    }
  },
  {
    "title": "SpotInstanceRequest",
    "attrs": {
      "actualBlockHourlyPrice": {
        "desc": "If you specified a duration and your Spot Instance request was fulfilled, this is the fixed hourly price in effect for the Spot Instance while it runs.",
        "type": "String",
        "required": "no"
      },
      "availabilityZoneGroup": {
        "desc": "The Availability Zone group. If you specify the same Availability Zone group for all Spot Instance requests, all Spot Instances are launched in the same Availability Zone.",
        "type": "String",
        "required": "no"
      },
      "blockDurationMinutes": {
        "desc": "The duration for the Spot Instance, in minutes.",
        "type": "Integer",
        "required": "no"
      },
      "createTime": {
        "desc": "The date and time when the Spot Instance request was created, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ).",
        "type": "Timestamp",
        "required": "no"
      },
      "fault": {
        "desc": "The fault codes for the Spot Instance request, if any.",
        "type": "SpotInstanceStateFault object",
        "required": "no"
      },
      "instanceId": {
        "desc": "The instance ID, if an instance has been launched to fulfill the Spot Instance request.",
        "type": "String",
        "required": "no"
      },
      "instanceInterruptionBehavior": {
        "desc": "The behavior when a Spot Instance is interrupted.",
        "type": "String",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "launchedAvailabilityZone": {
        "desc": "The Availability Zone in which the request is launched.",
        "type": "String",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "launchGroup": {
        "desc": "The instance launch group. Launch groups are Spot Instances that launch together and terminate together.",
        "type": "String",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "launchSpecification": {
        "desc": "Additional information for launching instances.",
        "type": "LaunchSpecification object",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "productDescription": {
        "desc": "The product description associated with the Spot Instance.",
        "type": "String",
        "required": "no",
        "values": [
          "linux/unix",
          "linux/unix (amazon vpc)",
          "windows",
          "windows (amazon vpc)"
        ]
      },
      "spotInstanceRequestId": {
        "desc": "The ID of the Spot Instance request.",
        "type": "String",
        "required": "no",
        "values": [
          "linux/unix",
          "linux/unix (amazon vpc)",
          "windows",
          "windows (amazon vpc)"
        ]
      },
      "spotPrice": {
        "desc": "The maximum price per hour that you are willing to pay for a Spot Instance.",
        "type": "String",
        "required": "no",
        "values": [
          "linux/unix",
          "linux/unix (amazon vpc)",
          "windows",
          "windows (amazon vpc)"
        ]
      },
      "state": {
        "desc": "The state of the Spot Instance request. Spot status information helps track your Spot Instance requests. For more information, see Spot Status in the Amazon EC2 User Guide for Linux Instances.",
        "type": "String",
        "required": "no",
        "values": [
          "open",
          "active",
          "closed",
          "cancelled",
          "failed"
        ]
      },
      "status": {
        "desc": "The status code and status message describing the Spot Instance request.",
        "type": "SpotInstanceStatus object",
        "required": "no",
        "values": [
          "open",
          "active",
          "closed",
          "cancelled",
          "failed"
        ]
      },
      "tagSet": {
        "desc": "Any tags assigned to the resource.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "open",
          "active",
          "closed",
          "cancelled",
          "failed"
        ]
      },
      "type": {
        "desc": "The Spot Instance request type.",
        "type": "String",
        "required": "no",
        "values": [
          "one-time",
          "persistent"
        ]
      },
      "validFrom": {
        "desc": "The start date of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). The request becomes active at this date and time.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "one-time",
          "persistent"
        ]
      },
      "validUntil": {
        "desc": "The end date of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). If this is a one-time request, it remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date is reached. The default end date is 7 days from the current date.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "one-time",
          "persistent"
        ]
      }
    }
  },
  {
    "title": "SpotInstanceStateFault",
    "attrs": {
      "code": {
        "desc": "The reason code for the Spot Instance state change.",
        "type": "String",
        "required": "no"
      },
      "message": {
        "desc": "The message for the Spot Instance state change.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "SpotInstanceStatus",
    "attrs": {
      "code": {
        "desc": "The status code. For a list of status codes, see Spot Status Codes in the Amazon EC2 User Guide for Linux Instances.",
        "type": "String",
        "required": "no"
      },
      "message": {
        "desc": "The description for the status code.",
        "type": "String",
        "required": "no"
      },
      "updateTime": {
        "desc": "The date and time of the most recent status update, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ).",
        "type": "Timestamp",
        "required": "no"
      }
    }
  },
  {
    "title": "SpotMarketOptions",
    "attrs": {
      "BlockDurationMinutes": {
        "desc": "The required duration for the Spot Instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).",
        "type": "Integer",
        "required": "no"
      },
      "InstanceInterruptionBehavior": {
        "desc": "The behavior when a Spot Instance is interrupted. The default is terminate.",
        "type": "String",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "MaxPrice": {
        "desc": "The maximum hourly price you're willing to pay for the Spot Instances. The default is the On-Demand price.",
        "type": "String",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "SpotInstanceType": {
        "desc": "The Spot Instance request type. For RunInstances, persistent Spot Instance requests are only supported when InstanceInterruptionBehavior is set to either hibernate or stop.",
        "type": "String",
        "required": "no",
        "values": [
          "one-time",
          "persistent"
        ]
      },
      "ValidUntil": {
        "desc": "The end date of the request. For a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date and time is reached. The default end date is 7 days from the current date.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "one-time",
          "persistent"
        ]
      }
    }
  },
  {
    "title": "SpotOptions",
    "attrs": {
      "allocationStrategy": {
        "desc": "Indicates how to allocate the target Spot Instance capacity across the Spot Instance pools specified by the EC2 Fleet.",
        "type": "String",
        "required": "no",
        "values": [
          "lowest-price",
          "diversified",
          "capacity-optimized"
        ]
      },
      "instanceInterruptionBehavior": {
        "desc": "The behavior when a Spot Instance is interrupted. The default is terminate.",
        "type": "String",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "instancePoolsToUseCount": {
        "desc": "The number of Spot pools across which to allocate your target Spot capacity. Valid only when AllocationStrategy is set to lowest-price. EC2 Fleet selects the cheapest Spot pools and evenly allocates your target Spot capacity across the number of Spot pools that you specify.",
        "type": "Integer",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "maxTotalPrice": {
        "desc": "The maximum amount per hour for Spot Instances that you're willing to pay.",
        "type": "String",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "minTargetCapacity": {
        "desc": "The minimum target capacity for Spot Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances.",
        "type": "Integer",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "singleAvailabilityZone": {
        "desc": "Indicates that the fleet launches all Spot Instances into a single Availability Zone. Supported only for fleets of type instant.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "singleInstanceType": {
        "desc": "Indicates that the fleet uses a single instance type to launch all Spot Instances in the fleet. Supported only for fleets of type instant.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      }
    }
  },
  {
    "title": "SpotOptionsRequest",
    "attrs": {
      "AllocationStrategy": {
        "desc": "Indicates how to allocate the target Spot Instance capacity across the Spot Instance pools specified by the EC2 Fleet.",
        "type": "String",
        "required": "no",
        "values": [
          "lowest-price",
          "diversified",
          "capacity-optimized"
        ]
      },
      "InstanceInterruptionBehavior": {
        "desc": "The behavior when a Spot Instance is interrupted. The default is terminate.",
        "type": "String",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "InstancePoolsToUseCount": {
        "desc": "The number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot AllocationStrategy is set to lowest-price. EC2 Fleet selects the cheapest Spot pools and evenly allocates your target Spot capacity across the number of Spot pools that you specify.",
        "type": "Integer",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "MaxTotalPrice": {
        "desc": "The maximum amount per hour for Spot Instances that you're willing to pay.",
        "type": "String",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "MinTargetCapacity": {
        "desc": "The minimum target capacity for Spot Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances.",
        "type": "Integer",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "SingleAvailabilityZone": {
        "desc": "Indicates that the fleet launches all Spot Instances into a single Availability Zone. Supported only for fleets of type instant.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "SingleInstanceType": {
        "desc": "Indicates that the fleet uses a single instance type to launch all Spot Instances in the fleet. Supported only for fleets of type instant.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "hibernate",
          "stop",
          "terminate"
        ]
      }
    }
  },
  {
    "title": "SpotPlacement",
    "attrs": {
      "AvailabilityZone (request), availabilityZone (response)": {
        "desc": "The Availability Zone.",
        "type": "String",
        "required": "no"
      },
      "GroupName (request), groupName (response)": {
        "desc": "The name of the placement group.",
        "type": "String",
        "required": "no"
      },
      "Tenancy (request), tenancy (response)": {
        "desc": "The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for Spot Instances.",
        "type": "String",
        "required": "no",
        "values": [
          "default",
          "dedicated",
          "host"
        ]
      }
    }
  },
  {
    "title": "SpotPrice",
    "attrs": {
      "availabilityZone": {
        "desc": "The Availability Zone.",
        "type": "String",
        "required": "no"
      },
      "instanceType": {
        "desc": "The instance type.",
        "type": "String",
        "required": "no",
        "values": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge"
        ]
      },
      "productDescription": {
        "desc": "A general description of the AMI.",
        "type": "String",
        "required": "no",
        "values": [
          "linux/unix",
          "linux/unix (amazon vpc)",
          "windows",
          "windows (amazon vpc)"
        ]
      },
      "spotPrice": {
        "desc": "The maximum price per hour that you are willing to pay for a Spot Instance.",
        "type": "String",
        "required": "no",
        "values": [
          "linux/unix",
          "linux/unix (amazon vpc)",
          "windows",
          "windows (amazon vpc)"
        ]
      },
      "timestamp": {
        "desc": "The date and time the request was created, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ).",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "linux/unix",
          "linux/unix (amazon vpc)",
          "windows",
          "windows (amazon vpc)"
        ]
      }
    }
  },
  {
    "title": "StaleIpPermission",
    "attrs": {
      "fromPort": {
        "desc": "The start of the port range for the TCP and UDP protocols, or an ICMP type number. A value of -1 indicates all ICMP types.",
        "type": "Integer",
        "required": "no"
      },
      "groups": {
        "desc": "The security group pairs. Returns the ID of the referenced security group and VPC, and the ID and status of the VPC peering connection.",
        "type": "Array of UserIdGroupPair objects",
        "required": "no"
      },
      "ipProtocol": {
        "desc": "The IP protocol name (for tcp, udp, and icmp) or number (see Protocol Numbers).",
        "type": "String",
        "required": "no"
      },
      "ipRanges": {
        "desc": "The IP ranges. Not applicable for stale security group rules.",
        "type": "Array of strings",
        "required": "no"
      },
      "prefixListIds": {
        "desc": "The prefix list IDs for an AWS service. Not applicable for stale security group rules.",
        "type": "Array of strings",
        "required": "no"
      },
      "toPort": {
        "desc": "The end of the port range for the TCP and UDP protocols, or an ICMP type number. A value of -1 indicates all ICMP types.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "StaleSecurityGroup",
    "attrs": {
      "description": {
        "desc": "The description of the security group.",
        "type": "String",
        "required": "no"
      },
      "groupId": {
        "desc": "The ID of the security group.",
        "type": "String",
        "required": "no"
      },
      "groupName": {
        "desc": "The name of the security group.",
        "type": "String",
        "required": "no"
      },
      "staleIpPermissions": {
        "desc": "Information about the stale inbound rules in the security group.",
        "type": "Array of StaleIpPermission objects",
        "required": "no"
      },
      "staleIpPermissionsEgress": {
        "desc": "Information about the stale outbound rules in the security group.",
        "type": "Array of StaleIpPermission objects",
        "required": "no"
      },
      "vpcId": {
        "desc": "The ID of the VPC for the security group.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "StateReason",
    "attrs": {
      "code": {
        "desc": "The reason code for the state change.",
        "type": "String",
        "required": "no"
      },
      "message": {
        "desc": "The message for the state change.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "Storage",
    "attrs": {
      "S3 (request), S3 (response)": {
        "desc": "An Amazon S3 storage location.",
        "type": "S3Storage object",
        "required": "no"
      }
    }
  },
  {
    "title": "StorageLocation",
    "attrs": {
      "Bucket": {
        "desc": "The name of the S3 bucket.",
        "type": "String",
        "required": "no"
      },
      "Key": {
        "desc": "The key.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "Subnet",
    "attrs": {
      "assignIpv6AddressOnCreation": {
        "desc": "Indicates whether a network interface created in this subnet (including a network interface created by RunInstances) receives an IPv6 address.",
        "type": "Boolean",
        "required": "no"
      },
      "availabilityZone": {
        "desc": "The Availability Zone of the subnet.",
        "type": "String",
        "required": "no"
      },
      "availabilityZoneId": {
        "desc": "The AZ ID of the subnet.",
        "type": "String",
        "required": "no"
      },
      "availableIpAddressCount": {
        "desc": "The number of unused private IPv4 addresses in the subnet. The IPv4 addresses for any stopped instances are considered unavailable.",
        "type": "Integer",
        "required": "no"
      },
      "cidrBlock": {
        "desc": "The IPv4 CIDR block assigned to the subnet.",
        "type": "String",
        "required": "no"
      },
      "defaultForAz": {
        "desc": "Indicates whether this is the default subnet for the Availability Zone.",
        "type": "Boolean",
        "required": "no"
      },
      "ipv6CidrBlockAssociationSet": {
        "desc": "Information about the IPv6 CIDR blocks associated with the subnet.",
        "type": "Array of SubnetIpv6CidrBlockAssociation objects",
        "required": "no"
      },
      "mapPublicIpOnLaunch": {
        "desc": "Indicates whether instances launched in this subnet receive a public IPv4 address.",
        "type": "Boolean",
        "required": "no"
      },
      "outpostArn": {
        "desc": "The Amazon Resource Name (ARN) of the Outpost.",
        "type": "String",
        "required": "no"
      },
      "ownerId": {
        "desc": "The ID of the AWS account that owns the subnet.",
        "type": "String",
        "required": "no"
      },
      "state": {
        "desc": "The current state of the subnet.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "available"
        ]
      },
      "subnetArn": {
        "desc": "The Amazon Resource Name (ARN) of the subnet.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "available"
        ]
      },
      "subnetId": {
        "desc": "The ID of the subnet.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "available"
        ]
      },
      "tagSet": {
        "desc": "Any tags assigned to the subnet.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "pending",
          "available"
        ]
      },
      "vpcId": {
        "desc": "The ID of the VPC the subnet is in.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "available"
        ]
      }
    }
  },
  {
    "title": "SubnetAssociation",
    "attrs": {
      "state": {
        "desc": "The state of the subnet association.",
        "type": "String",
        "required": "no",
        "values": [
          "associating",
          "associated",
          "disassociating",
          "disassociated"
        ]
      },
      "subnetId": {
        "desc": "The ID of the subnet.",
        "type": "String",
        "required": "no",
        "values": [
          "associating",
          "associated",
          "disassociating",
          "disassociated"
        ]
      }
    }
  },
  {
    "title": "SubnetCidrBlockState",
    "attrs": {
      "state": {
        "desc": "The state of a CIDR block.",
        "type": "String",
        "required": "no",
        "values": [
          "associating",
          "associated",
          "disassociating",
          "disassociated",
          "failing",
          "failed"
        ]
      },
      "statusMessage": {
        "desc": "A message about the status of the CIDR block, if applicable.",
        "type": "String",
        "required": "no",
        "values": [
          "associating",
          "associated",
          "disassociating",
          "disassociated",
          "failing",
          "failed"
        ]
      }
    }
  },
  {
    "title": "SubnetIpv6CidrBlockAssociation",
    "attrs": {
      "associationId": {
        "desc": "The association ID for the CIDR block.",
        "type": "String",
        "required": "no"
      },
      "ipv6CidrBlock": {
        "desc": "The IPv6 CIDR block.",
        "type": "String",
        "required": "no"
      },
      "ipv6CidrBlockState": {
        "desc": "Information about the state of the CIDR block.",
        "type": "SubnetCidrBlockState object",
        "required": "no"
      }
    }
  },
  {
    "title": "SuccessfulInstanceCreditSpecificationItem",
    "attrs": {
      "instanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "SuccessfulQueuedPurchaseDeletion",
    "attrs": {
      "reservedInstancesId": {
        "desc": "The ID of the Reserved Instance.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "Tag",
    "attrs": {
      "Key (request), key (response)": {
        "desc": "The key of the tag.",
        "type": "String",
        "required": "no"
      },
      "Value (request), value (response)": {
        "desc": "The value of the tag.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "TagDescription",
    "attrs": {
      "key": {
        "desc": "The tag key.",
        "type": "String",
        "required": "no"
      },
      "resourceId": {
        "desc": "The ID of the resource.",
        "type": "String",
        "required": "no"
      },
      "resourceType": {
        "desc": "The resource type.",
        "type": "String",
        "required": "no",
        "values": [
          "client-vpn-endpoint",
          "customer-gateway",
          "dedicated-host",
          "dhcp-options",
          "elastic-ip"
        ]
      },
      "value": {
        "desc": "The tag value.",
        "type": "String",
        "required": "no",
        "values": [
          "client-vpn-endpoint",
          "customer-gateway",
          "dedicated-host",
          "dhcp-options",
          "elastic-ip"
        ]
      }
    }
  },
  {
    "title": "TagSpecification",
    "attrs": {
      "ResourceType (request), resourceType (response)": {
        "desc": "The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | key-pair | launch-template | | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log.",
        "type": "String",
        "required": "no",
        "values": [
          "client-vpn-endpoint",
          "customer-gateway",
          "dedicated-host",
          "dhcp-options",
          "elastic-ip"
        ]
      },
      "Tags (request), Tag (response)": {
        "desc": "The tags to apply to the resource.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "client-vpn-endpoint",
          "customer-gateway",
          "dedicated-host",
          "dhcp-options",
          "elastic-ip"
        ]
      }
    }
  },
  {
    "title": "TargetCapacitySpecification",
    "attrs": {
      "defaultTargetCapacityType": {
        "desc": "The default TotalTargetCapacity, which is either Spot or On-Demand.",
        "type": "String",
        "required": "no",
        "values": [
          "spot",
          "on-demand"
        ]
      },
      "onDemandTargetCapacity": {
        "desc": "The number of On-Demand units to request. If you specify a target capacity for Spot units, you cannot specify a target capacity for On-Demand units.",
        "type": "Integer",
        "required": "no",
        "values": [
          "spot",
          "on-demand"
        ]
      },
      "spotTargetCapacity": {
        "desc": "The maximum number of Spot units to launch. If you specify a target capacity for On-Demand units, you cannot specify a target capacity for Spot units.",
        "type": "Integer",
        "required": "no",
        "values": [
          "spot",
          "on-demand"
        ]
      },
      "totalTargetCapacity": {
        "desc": "The number of units to request, filled using DefaultTargetCapacityType.",
        "type": "Integer",
        "required": "no",
        "values": [
          "spot",
          "on-demand"
        ]
      }
    }
  },
  {
    "title": "TargetCapacitySpecificationRequest",
    "attrs": {
      "DefaultTargetCapacityType": {
        "desc": "The default TotalTargetCapacity, which is either Spot or On-Demand.",
        "type": "String",
        "required": "no",
        "values": [
          "spot",
          "on-demand"
        ]
      },
      "OnDemandTargetCapacity": {
        "desc": "The number of On-Demand units to request.",
        "type": "Integer",
        "required": "no",
        "values": [
          "spot",
          "on-demand"
        ]
      },
      "SpotTargetCapacity": {
        "desc": "The number of Spot units to request.",
        "type": "Integer",
        "required": "no",
        "values": [
          "spot",
          "on-demand"
        ]
      },
      "TotalTargetCapacity": {
        "desc": "The number of units to request, filled using DefaultTargetCapacityType.",
        "type": "Integer",
        "required": "yes",
        "values": [
          "spot",
          "on-demand"
        ]
      }
    }
  },
  {
    "title": "TargetConfiguration",
    "attrs": {
      "instanceCount": {
        "desc": "The number of instances the Convertible Reserved Instance offering can be applied to. This parameter is reserved and cannot be specified in a request",
        "type": "Integer",
        "required": "no"
      },
      "offeringId": {
        "desc": "The ID of the Convertible Reserved Instance offering.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "TargetConfigurationRequest",
    "attrs": {
      "InstanceCount": {
        "desc": "The number of instances the Covertible Reserved Instance offering can be applied to. This parameter is reserved and cannot be specified in a request",
        "type": "Integer",
        "required": "no"
      },
      "OfferingId": {
        "desc": "The Convertible Reserved Instance offering ID.",
        "type": "String",
        "required": "yes"
      }
    }
  },
  {
    "title": "TargetGroup",
    "attrs": {
      "Arn (request), arn (response)": {
        "desc": "The Amazon Resource Name (ARN) of the target group.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "TargetGroupsConfig",
    "attrs": {
      "TargetGroups (request), targetGroups (response)": {
        "desc": "One or more target groups.",
        "type": "Array of TargetGroup objects",
        "required": "no"
      }
    }
  },
  {
    "title": "TargetNetwork",
    "attrs": {
      "associationId": {
        "desc": "The ID of the association.",
        "type": "String",
        "required": "no"
      },
      "clientVpnEndpointId": {
        "desc": "The ID of the Client VPN endpoint with which the target network is associated.",
        "type": "String",
        "required": "no"
      },
      "securityGroups": {
        "desc": "The IDs of the security groups applied to the target network association.",
        "type": "Array of strings",
        "required": "no"
      },
      "status": {
        "desc": "The current state of the target network association.",
        "type": "AssociationStatus object",
        "required": "no"
      },
      "targetNetworkId": {
        "desc": "The ID of the subnet specified as the target network.",
        "type": "String",
        "required": "no"
      },
      "vpcId": {
        "desc": "The ID of the VPC in which the target network (subnet) is located.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "TargetReservationValue",
    "attrs": {
      "reservationValue": {
        "desc": "The total value of the Convertible Reserved Instances that make up the exchange. This is the sum of the list value, remaining upfront price, and additional upfront cost of the exchange.",
        "type": "ReservationValue object",
        "required": "no"
      },
      "targetConfiguration": {
        "desc": "The configuration of the Convertible Reserved Instances that make up the exchange.",
        "type": "TargetConfiguration object",
        "required": "no"
      }
    }
  },
  {
    "title": "TerminateConnectionStatus",
    "attrs": {
      "connectionId": {
        "desc": "The ID of the client connection.",
        "type": "String",
        "required": "no"
      },
      "currentStatus": {
        "desc": "A message about the status of the client connection, if applicable.",
        "type": "ClientVpnConnectionStatus object",
        "required": "no"
      },
      "previousStatus": {
        "desc": "The state of the client connection.",
        "type": "ClientVpnConnectionStatus object",
        "required": "no"
      }
    }
  },
  {
    "title": "TrafficMirrorFilter",
    "attrs": {
      "description": {
        "desc": "The description of the Traffic Mirror filter.",
        "type": "String",
        "required": "no"
      },
      "egressFilterRuleSet": {
        "desc": "Information about the egress rules that are associated with the Traffic Mirror filter.",
        "type": "Array of TrafficMirrorFilterRule objects",
        "required": "no"
      },
      "ingressFilterRuleSet": {
        "desc": "Information about the ingress rules that are associated with the Traffic Mirror filter.",
        "type": "Array of TrafficMirrorFilterRule objects",
        "required": "no"
      },
      "networkServiceSet": {
        "desc": "The network service traffic that is associated with the Traffic Mirror filter.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "amazon-dns"
        ]
      },
      "tagSet": {
        "desc": "The tags assigned to the Traffic Mirror filter.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "amazon-dns"
        ]
      },
      "trafficMirrorFilterId": {
        "desc": "The ID of the Traffic Mirror filter.",
        "type": "String",
        "required": "no",
        "values": [
          "amazon-dns"
        ]
      }
    }
  },
  {
    "title": "TrafficMirrorFilterRule",
    "attrs": {
      "description": {
        "desc": "The description of the Traffic Mirror rule.",
        "type": "String",
        "required": "no"
      },
      "destinationCidrBlock": {
        "desc": "The destination CIDR block assigned to the Traffic Mirror rule.",
        "type": "String",
        "required": "no"
      },
      "destinationPortRange": {
        "desc": "The destination port range assigned to the Traffic Mirror rule.",
        "type": "TrafficMirrorPortRange object",
        "required": "no"
      },
      "protocol": {
        "desc": "The protocol assigned to the Traffic Mirror rule.",
        "type": "Integer",
        "required": "no"
      },
      "ruleAction": {
        "desc": "The action assigned to the Traffic Mirror rule.",
        "type": "String",
        "required": "no",
        "values": [
          "accept",
          "reject"
        ]
      },
      "ruleNumber": {
        "desc": "The rule number of the Traffic Mirror rule.",
        "type": "Integer",
        "required": "no",
        "values": [
          "accept",
          "reject"
        ]
      },
      "sourceCidrBlock": {
        "desc": "The source CIDR block assigned to the Traffic Mirror rule.",
        "type": "String",
        "required": "no",
        "values": [
          "accept",
          "reject"
        ]
      },
      "sourcePortRange": {
        "desc": "The source port range assigned to the Traffic Mirror rule.",
        "type": "TrafficMirrorPortRange object",
        "required": "no",
        "values": [
          "accept",
          "reject"
        ]
      },
      "trafficDirection": {
        "desc": "The traffic direction assigned to the Traffic Mirror rule.",
        "type": "String",
        "required": "no",
        "values": [
          "ingress",
          "egress"
        ]
      },
      "trafficMirrorFilterId": {
        "desc": "The ID of the Traffic Mirror filter that the rule is associated with.",
        "type": "String",
        "required": "no",
        "values": [
          "ingress",
          "egress"
        ]
      },
      "trafficMirrorFilterRuleId": {
        "desc": "The ID of the Traffic Mirror rule.",
        "type": "String",
        "required": "no",
        "values": [
          "ingress",
          "egress"
        ]
      }
    }
  },
  {
    "title": "TrafficMirrorPortRange",
    "attrs": {
      "fromPort": {
        "desc": "The start of the Traffic Mirror port range. This applies to the TCP and UDP protocols.",
        "type": "Integer",
        "required": "no"
      },
      "toPort": {
        "desc": "The end of the Traffic Mirror port range. This applies to the TCP and UDP protocols.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "TrafficMirrorPortRangeRequest",
    "attrs": {
      "FromPort": {
        "desc": "The first port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.",
        "type": "Integer",
        "required": "no"
      },
      "ToPort": {
        "desc": "The last port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "TrafficMirrorSession",
    "attrs": {
      "description": {
        "desc": "The description of the Traffic Mirror session.",
        "type": "String",
        "required": "no"
      },
      "networkInterfaceId": {
        "desc": "The ID of the Traffic Mirror session's network interface.",
        "type": "String",
        "required": "no"
      },
      "ownerId": {
        "desc": "The ID of the account that owns the Traffic Mirror session.",
        "type": "String",
        "required": "no"
      },
      "packetLength": {
        "desc": "The number of bytes in each packet to mirror. These are the bytes after the VXLAN header. To mirror a subset, set this to the length (in bytes) to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target. Do not specify this parameter when you want to mirror the entire packet",
        "type": "Integer",
        "required": "no"
      },
      "sessionNumber": {
        "desc": "The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.",
        "type": "Integer",
        "required": "no"
      },
      "tagSet": {
        "desc": "The tags assigned to the Traffic Mirror session.",
        "type": "Array of Tag objects",
        "required": "no"
      },
      "trafficMirrorFilterId": {
        "desc": "The ID of the Traffic Mirror filter.",
        "type": "String",
        "required": "no"
      },
      "trafficMirrorSessionId": {
        "desc": "The ID for the Traffic Mirror session.",
        "type": "String",
        "required": "no"
      },
      "trafficMirrorTargetId": {
        "desc": "The ID of the Traffic Mirror target.",
        "type": "String",
        "required": "no"
      },
      "virtualNetworkId": {
        "desc": "The virtual network ID associated with the Traffic Mirror session.",
        "type": "Integer",
        "required": "no"
      }
    }
  },
  {
    "title": "TrafficMirrorTarget",
    "attrs": {
      "description": {
        "desc": "Information about the Traffic Mirror target.",
        "type": "String",
        "required": "no"
      },
      "networkInterfaceId": {
        "desc": "The network interface ID that is attached to the target.",
        "type": "String",
        "required": "no"
      },
      "networkLoadBalancerArn": {
        "desc": "The Amazon Resource Name (ARN) of the Network Load Balancer.",
        "type": "String",
        "required": "no"
      },
      "ownerId": {
        "desc": "The ID of the account that owns the Traffic Mirror target.",
        "type": "String",
        "required": "no"
      },
      "tagSet": {
        "desc": "The tags assigned to the Traffic Mirror target.",
        "type": "Array of Tag objects",
        "required": "no"
      },
      "trafficMirrorTargetId": {
        "desc": "The ID of the Traffic Mirror target.",
        "type": "String",
        "required": "no"
      },
      "type": {
        "desc": "The type of Traffic Mirror target.",
        "type": "String",
        "required": "no",
        "values": [
          "network-interface",
          "network-load-balancer"
        ]
      }
    }
  },
  {
    "title": "TransitGateway",
    "attrs": {
      "creationTime": {
        "desc": "The creation time.",
        "type": "Timestamp",
        "required": "no"
      },
      "description": {
        "desc": "The description of the transit gateway.",
        "type": "String",
        "required": "no"
      },
      "options": {
        "desc": "The transit gateway options.",
        "type": "TransitGatewayOptions object",
        "required": "no"
      },
      "ownerId": {
        "desc": "The ID of the AWS account ID that owns the transit gateway.",
        "type": "String",
        "required": "no"
      },
      "state": {
        "desc": "The state of the transit gateway.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "available",
          "modifying",
          "deleting",
          "deleted"
        ]
      },
      "tagSet": {
        "desc": "The tags for the transit gateway.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "pending",
          "available",
          "modifying",
          "deleting",
          "deleted"
        ]
      },
      "transitGatewayArn": {
        "desc": "The Amazon Resource Name (ARN) of the transit gateway.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "available",
          "modifying",
          "deleting",
          "deleted"
        ]
      },
      "transitGatewayId": {
        "desc": "The ID of the transit gateway.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "available",
          "modifying",
          "deleting",
          "deleted"
        ]
      }
    }
  },
  {
    "title": "TransitGatewayAssociation",
    "attrs": {
      "resourceId": {
        "desc": "The ID of the resource.",
        "type": "String",
        "required": "no"
      },
      "resourceType": {
        "desc": "The resource type.",
        "type": "String",
        "required": "no",
        "values": [
          "vpc",
          "vpn",
          "direct-connect-gateway",
          "tgw-peering"
        ]
      },
      "state": {
        "desc": "The state of the association.",
        "type": "String",
        "required": "no",
        "values": [
          "associating",
          "associated",
          "disassociating",
          "disassociated"
        ]
      },
      "transitGatewayAttachmentId": {
        "desc": "The ID of the attachment.",
        "type": "String",
        "required": "no",
        "values": [
          "associating",
          "associated",
          "disassociating",
          "disassociated"
        ]
      },
      "transitGatewayRouteTableId": {
        "desc": "The ID of the transit gateway route table.",
        "type": "String",
        "required": "no",
        "values": [
          "associating",
          "associated",
          "disassociating",
          "disassociated"
        ]
      }
    }
  },
  {
    "title": "TransitGatewayAttachment",
    "attrs": {
      "association": {
        "desc": "The association.",
        "type": "TransitGatewayAttachmentAssociation object",
        "required": "no"
      },
      "creationTime": {
        "desc": "The creation time.",
        "type": "Timestamp",
        "required": "no"
      },
      "resourceId": {
        "desc": "The ID of the resource.",
        "type": "String",
        "required": "no"
      },
      "resourceOwnerId": {
        "desc": "The ID of the AWS account that owns the resource.",
        "type": "String",
        "required": "no"
      },
      "resourceType": {
        "desc": "The resource type.",
        "type": "String",
        "required": "no",
        "values": [
          "vpc",
          "vpn",
          "direct-connect-gateway",
          "tgw-peering"
        ]
      },
      "state": {
        "desc": "The attachment state.",
        "type": "String",
        "required": "no",
        "values": [
          "initiating",
          "pendingacceptance",
          "rollingback",
          "pending",
          "available",
          "modifying",
          ""
        ]
      },
      "tagSet": {
        "desc": "The tags for the attachment.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "initiating",
          "pendingacceptance",
          "rollingback",
          "pending",
          "available",
          "modifying",
          ""
        ]
      },
      "transitGatewayAttachmentId": {
        "desc": "The ID of the attachment.",
        "type": "String",
        "required": "no",
        "values": [
          "initiating",
          "pendingacceptance",
          "rollingback",
          "pending",
          "available",
          "modifying",
          ""
        ]
      },
      "transitGatewayId": {
        "desc": "The ID of the transit gateway.",
        "type": "String",
        "required": "no",
        "values": [
          "initiating",
          "pendingacceptance",
          "rollingback",
          "pending",
          "available",
          "modifying",
          ""
        ]
      },
      "transitGatewayOwnerId": {
        "desc": "The ID of the AWS account that owns the transit gateway.",
        "type": "String",
        "required": "no",
        "values": [
          "initiating",
          "pendingacceptance",
          "rollingback",
          "pending",
          "available",
          "modifying",
          ""
        ]
      }
    }
  },
  {
    "title": "TransitGatewayAttachmentAssociation",
    "attrs": {
      "state": {
        "desc": "The state of the association.",
        "type": "String",
        "required": "no",
        "values": [
          "associating",
          "associated",
          "disassociating",
          "disassociated"
        ]
      },
      "transitGatewayRouteTableId": {
        "desc": "The ID of the route table for the transit gateway.",
        "type": "String",
        "required": "no",
        "values": [
          "associating",
          "associated",
          "disassociating",
          "disassociated"
        ]
      }
    }
  },
  {
    "title": "TransitGatewayAttachmentPropagation",
    "attrs": {
      "state": {
        "desc": "The state of the propagation route table.",
        "type": "String",
        "required": "no",
        "values": [
          "enabling",
          "enabled",
          "disabling",
          "disabled"
        ]
      },
      "transitGatewayRouteTableId": {
        "desc": "The ID of the propagation route table.",
        "type": "String",
        "required": "no",
        "values": [
          "enabling",
          "enabled",
          "disabling",
          "disabled"
        ]
      }
    }
  },
  {
    "title": "TransitGatewayMulticastDeregisteredGroupMembers",
    "attrs": {
      "deregisteredNetworkInterfaceIds": {
        "desc": "The network interface IDs of the deregistered members.",
        "type": "Array of strings",
        "required": "no"
      },
      "groupIpAddress": {
        "desc": "The IP address assigned to the transit gateway multicast group.",
        "type": "String",
        "required": "no"
      },
      "transitGatewayMulticastDomainId": {
        "desc": "The ID of the transit gateway multicast domain.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "TransitGatewayMulticastDeregisteredGroupSources",
    "attrs": {
      "deregisteredNetworkInterfaceIds": {
        "desc": "The network interface IDs of the non-registered members.",
        "type": "Array of strings",
        "required": "no"
      },
      "groupIpAddress": {
        "desc": "The IP address assigned to the transit gateway multicast group.",
        "type": "String",
        "required": "no"
      },
      "transitGatewayMulticastDomainId": {
        "desc": "The ID of the transit gateway multicast domain.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "TransitGatewayMulticastDomain",
    "attrs": {
      "creationTime": {
        "desc": "The time the transit gateway multicast domain was created.",
        "type": "Timestamp",
        "required": "no"
      },
      "state": {
        "desc": "The state of the transit gateway multicast domain.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "available",
          "deleting",
          "deleted"
        ]
      },
      "tagSet": {
        "desc": "The tags for the transit gateway multicast domain.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "pending",
          "available",
          "deleting",
          "deleted"
        ]
      },
      "transitGatewayId": {
        "desc": "The ID of the transit gateway.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "available",
          "deleting",
          "deleted"
        ]
      },
      "transitGatewayMulticastDomainId": {
        "desc": "The ID of the transit gateway multicast domain.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "available",
          "deleting",
          "deleted"
        ]
      }
    }
  },
  {
    "title": "TransitGatewayMulticastDomainAssociation",
    "attrs": {
      "resourceId": {
        "desc": "The ID of the resource.",
        "type": "String",
        "required": "no"
      },
      "resourceType": {
        "desc": "The type of resource, for example a VPC attachment.",
        "type": "String",
        "required": "no",
        "values": [
          "vpc",
          "vpn",
          "direct-connect-gateway",
          "tgw-peering"
        ]
      },
      "subnet": {
        "desc": "The subnet associated with the transit gateway multicast domain.",
        "type": "SubnetAssociation object",
        "required": "no",
        "values": [
          "vpc",
          "vpn",
          "direct-connect-gateway",
          "tgw-peering"
        ]
      },
      "transitGatewayAttachmentId": {
        "desc": "The ID of the transit gateway attachment.",
        "type": "String",
        "required": "no",
        "values": [
          "vpc",
          "vpn",
          "direct-connect-gateway",
          "tgw-peering"
        ]
      }
    }
  },
  {
    "title": "TransitGatewayMulticastDomainAssociations",
    "attrs": {
      "resourceId": {
        "desc": "The ID of the resource.",
        "type": "String",
        "required": "no"
      },
      "resourceType": {
        "desc": "The type of resource, for example a VPC attachment.",
        "type": "String",
        "required": "no",
        "values": [
          "vpc",
          "vpn",
          "direct-connect-gateway",
          "tgw-peering"
        ]
      },
      "subnets": {
        "desc": "The subnets associated with the multicast domain.",
        "type": "Array of SubnetAssociation objects",
        "required": "no",
        "values": [
          "vpc",
          "vpn",
          "direct-connect-gateway",
          "tgw-peering"
        ]
      },
      "transitGatewayAttachmentId": {
        "desc": "The ID of the transit gateway attachment.",
        "type": "String",
        "required": "no",
        "values": [
          "vpc",
          "vpn",
          "direct-connect-gateway",
          "tgw-peering"
        ]
      },
      "transitGatewayMulticastDomainId": {
        "desc": "The ID of the transit gateway multicast domain.",
        "type": "String",
        "required": "no",
        "values": [
          "vpc",
          "vpn",
          "direct-connect-gateway",
          "tgw-peering"
        ]
      }
    }
  },
  {
    "title": "TransitGatewayMulticastGroup",
    "attrs": {
      "groupIpAddress": {
        "desc": "The IP address assigned to the transit gateway multicast group.",
        "type": "String",
        "required": "no"
      },
      "groupMember": {
        "desc": "Indicates that the resource is a transit gateway multicast group member.",
        "type": "Boolean",
        "required": "no"
      },
      "groupSource": {
        "desc": "Indicates that the resource is a transit gateway multicast group member.",
        "type": "Boolean",
        "required": "no"
      },
      "memberType": {
        "desc": "The member type (for example, static).",
        "type": "String",
        "required": "no",
        "values": [
          "static",
          "igmp"
        ]
      },
      "networkInterfaceId": {
        "desc": "The ID of the transit gateway attachment.",
        "type": "String",
        "required": "no",
        "values": [
          "static",
          "igmp"
        ]
      },
      "resourceId": {
        "desc": "The ID of the resource.",
        "type": "String",
        "required": "no",
        "values": [
          "static",
          "igmp"
        ]
      },
      "resourceType": {
        "desc": "The type of resource, for example a VPC attachment.",
        "type": "String",
        "required": "no",
        "values": [
          "vpc",
          "vpn",
          "direct-connect-gateway",
          "tgw-peering"
        ]
      },
      "sourceType": {
        "desc": "The source type.",
        "type": "String",
        "required": "no",
        "values": [
          "static",
          "igmp"
        ]
      },
      "subnetId": {
        "desc": "The ID of the subnet.",
        "type": "String",
        "required": "no",
        "values": [
          "static",
          "igmp"
        ]
      },
      "transitGatewayAttachmentId": {
        "desc": "The ID of the transit gateway attachment.",
        "type": "String",
        "required": "no",
        "values": [
          "static",
          "igmp"
        ]
      }
    }
  },
  {
    "title": "TransitGatewayMulticastRegisteredGroupMembers",
    "attrs": {
      "groupIpAddress": {
        "desc": "The IP address assigned to the transit gateway multicast group.",
        "type": "String",
        "required": "no"
      },
      "registeredNetworkInterfaceIds": {
        "desc": "The ID of the registered network interfaces.",
        "type": "Array of strings",
        "required": "no"
      },
      "transitGatewayMulticastDomainId": {
        "desc": "The ID of the transit gateway multicast domain.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "TransitGatewayMulticastRegisteredGroupSources",
    "attrs": {
      "groupIpAddress": {
        "desc": "The IP address assigned to the transit gateway multicast group.",
        "type": "String",
        "required": "no"
      },
      "registeredNetworkInterfaceIds": {
        "desc": "The IDs of the network interfaces members registered with the transit gateway multicast group.",
        "type": "Array of strings",
        "required": "no"
      },
      "transitGatewayMulticastDomainId": {
        "desc": "The ID of the transit gateway multicast domain.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "TransitGatewayOptions",
    "attrs": {
      "amazonSideAsn": {
        "desc": "A private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs.",
        "type": "Long",
        "required": "no"
      },
      "associationDefaultRouteTableId": {
        "desc": "The ID of the default association route table.",
        "type": "String",
        "required": "no"
      },
      "autoAcceptSharedAttachments": {
        "desc": "Indicates whether attachment requests are automatically accepted.",
        "type": "String",
        "required": "no",
        "values": [
          "enable",
          "disable"
        ]
      },
      "defaultRouteTableAssociation": {
        "desc": "Indicates whether resource attachments are automatically associated with the default association route table.",
        "type": "String",
        "required": "no",
        "values": [
          "enable",
          "disable"
        ]
      },
      "defaultRouteTablePropagation": {
        "desc": "Indicates whether resource attachments automatically propagate routes to the default propagation route table.",
        "type": "String",
        "required": "no",
        "values": [
          "enable",
          "disable"
        ]
      },
      "dnsSupport": {
        "desc": "Indicates whether DNS support is enabled.",
        "type": "String",
        "required": "no",
        "values": [
          "enable",
          "disable"
        ]
      },
      "multicastSupport": {
        "desc": "Indicates whether multicast is enabled on the transit gateway",
        "type": "String",
        "required": "no",
        "values": [
          "enable",
          "disable"
        ]
      },
      "propagationDefaultRouteTableId": {
        "desc": "The ID of the default propagation route table.",
        "type": "String",
        "required": "no",
        "values": [
          "enable",
          "disable"
        ]
      },
      "vpnEcmpSupport": {
        "desc": "Indicates whether Equal Cost Multipath Protocol support is enabled.",
        "type": "String",
        "required": "no",
        "values": [
          "enable",
          "disable"
        ]
      }
    }
  },
  {
    "title": "TransitGatewayPeeringAttachment",
    "attrs": {
      "accepterTgwInfo": {
        "desc": "Information about the accepter transit gateway.",
        "type": "PeeringTgwInfo object",
        "required": "no"
      },
      "creationTime": {
        "desc": "The time the transit gateway peering attachment was created.",
        "type": "Timestamp",
        "required": "no"
      },
      "requesterTgwInfo": {
        "desc": "Information about the requester transit gateway.",
        "type": "PeeringTgwInfo object",
        "required": "no"
      },
      "state": {
        "desc": "The state of the transit gateway peering attachment.",
        "type": "String",
        "required": "no",
        "values": [
          "initiating",
          "pendingacceptance",
          "rollingback",
          "pending",
          "available",
          "modifying",
          ""
        ]
      },
      "status": {
        "desc": "The status of the transit gateway peering attachment.",
        "type": "PeeringAttachmentStatus object",
        "required": "no",
        "values": [
          "initiating",
          "pendingacceptance",
          "rollingback",
          "pending",
          "available",
          "modifying",
          ""
        ]
      },
      "tagSet": {
        "desc": "The tags for the transit gateway peering attachment.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "initiating",
          "pendingacceptance",
          "rollingback",
          "pending",
          "available",
          "modifying",
          ""
        ]
      },
      "transitGatewayAttachmentId": {
        "desc": "The ID of the transit gateway peering attachment.",
        "type": "String",
        "required": "no",
        "values": [
          "initiating",
          "pendingacceptance",
          "rollingback",
          "pending",
          "available",
          "modifying",
          ""
        ]
      }
    }
  },
  {
    "title": "TransitGatewayPropagation",
    "attrs": {
      "resourceId": {
        "desc": "The ID of the resource.",
        "type": "String",
        "required": "no"
      },
      "resourceType": {
        "desc": "The resource type.",
        "type": "String",
        "required": "no",
        "values": [
          "vpc",
          "vpn",
          "direct-connect-gateway",
          "tgw-peering"
        ]
      },
      "state": {
        "desc": "The state.",
        "type": "String",
        "required": "no",
        "values": [
          "enabling",
          "enabled",
          "disabling",
          "disabled"
        ]
      },
      "transitGatewayAttachmentId": {
        "desc": "The ID of the attachment.",
        "type": "String",
        "required": "no",
        "values": [
          "enabling",
          "enabled",
          "disabling",
          "disabled"
        ]
      },
      "transitGatewayRouteTableId": {
        "desc": "The ID of the transit gateway route table.",
        "type": "String",
        "required": "no",
        "values": [
          "enabling",
          "enabled",
          "disabling",
          "disabled"
        ]
      }
    }
  },
  {
    "title": "TransitGatewayRequestOptions",
    "attrs": {
      "AmazonSideAsn": {
        "desc": "A private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs. The default is 64512.",
        "type": "Long",
        "required": "no"
      },
      "AutoAcceptSharedAttachments": {
        "desc": "Enable or disable automatic acceptance of attachment requests. Disabled by default.",
        "type": "String",
        "required": "no",
        "values": [
          "enable",
          "disable"
        ]
      },
      "DefaultRouteTableAssociation": {
        "desc": "Enable or disable automatic association with the default association route table. Enabled by default.",
        "type": "String",
        "required": "no",
        "values": [
          "enable",
          "disable"
        ]
      },
      "DefaultRouteTablePropagation": {
        "desc": "Enable or disable automatic propagation of routes to the default propagation route table. Enabled by default.",
        "type": "String",
        "required": "no",
        "values": [
          "enable",
          "disable"
        ]
      },
      "DnsSupport": {
        "desc": "Enable or disable DNS support. Enabled by default.",
        "type": "String",
        "required": "no",
        "values": [
          "enable",
          "disable"
        ]
      },
      "MulticastSupport": {
        "desc": "Indicates whether multicast is enabled on the transit gateway",
        "type": "String",
        "required": "no",
        "values": [
          "enable",
          "disable"
        ]
      },
      "VpnEcmpSupport": {
        "desc": "Enable or disable Equal Cost Multipath Protocol support. Enabled by default.",
        "type": "String",
        "required": "no",
        "values": [
          "enable",
          "disable"
        ]
      }
    }
  },
  {
    "title": "TransitGatewayRoute",
    "attrs": {
      "destinationCidrBlock": {
        "desc": "The CIDR block used for destination matches.",
        "type": "String",
        "required": "no"
      },
      "state": {
        "desc": "The state of the route.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "active",
          "blackhole",
          "deleting",
          "deleted"
        ]
      },
      "transitGatewayAttachments": {
        "desc": "The attachments.",
        "type": "Array of TransitGatewayRouteAttachment objects",
        "required": "no",
        "values": [
          "pending",
          "active",
          "blackhole",
          "deleting",
          "deleted"
        ]
      },
      "type": {
        "desc": "The route type.",
        "type": "String",
        "required": "no",
        "values": [
          "static",
          "propagated"
        ]
      }
    }
  },
  {
    "title": "TransitGatewayRouteAttachment",
    "attrs": {
      "resourceId": {
        "desc": "The ID of the resource.",
        "type": "String",
        "required": "no"
      },
      "resourceType": {
        "desc": "The resource type.",
        "type": "String",
        "required": "no",
        "values": [
          "vpc",
          "vpn",
          "direct-connect-gateway",
          "tgw-peering"
        ]
      },
      "transitGatewayAttachmentId": {
        "desc": "The ID of the attachment.",
        "type": "String",
        "required": "no",
        "values": [
          "vpc",
          "vpn",
          "direct-connect-gateway",
          "tgw-peering"
        ]
      }
    }
  },
  {
    "title": "TransitGatewayRouteTable",
    "attrs": {
      "creationTime": {
        "desc": "The creation time.",
        "type": "Timestamp",
        "required": "no"
      },
      "defaultAssociationRouteTable": {
        "desc": "Indicates whether this is the default association route table for the transit gateway.",
        "type": "Boolean",
        "required": "no"
      },
      "defaultPropagationRouteTable": {
        "desc": "Indicates whether this is the default propagation route table for the transit gateway.",
        "type": "Boolean",
        "required": "no"
      },
      "state": {
        "desc": "The state of the transit gateway route table.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "available",
          "deleting",
          "deleted"
        ]
      },
      "tagSet": {
        "desc": "Any tags assigned to the route table.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "pending",
          "available",
          "deleting",
          "deleted"
        ]
      },
      "transitGatewayId": {
        "desc": "The ID of the transit gateway.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "available",
          "deleting",
          "deleted"
        ]
      },
      "transitGatewayRouteTableId": {
        "desc": "The ID of the transit gateway route table.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "available",
          "deleting",
          "deleted"
        ]
      }
    }
  },
  {
    "title": "TransitGatewayRouteTableAssociation",
    "attrs": {
      "resourceId": {
        "desc": "The ID of the resource.",
        "type": "String",
        "required": "no"
      },
      "resourceType": {
        "desc": "The resource type.",
        "type": "String",
        "required": "no",
        "values": [
          "vpc",
          "vpn",
          "direct-connect-gateway",
          "tgw-peering"
        ]
      },
      "state": {
        "desc": "The state of the association.",
        "type": "String",
        "required": "no",
        "values": [
          "associating",
          "associated",
          "disassociating",
          "disassociated"
        ]
      },
      "transitGatewayAttachmentId": {
        "desc": "The ID of the attachment.",
        "type": "String",
        "required": "no",
        "values": [
          "associating",
          "associated",
          "disassociating",
          "disassociated"
        ]
      }
    }
  },
  {
    "title": "TransitGatewayRouteTablePropagation",
    "attrs": {
      "resourceId": {
        "desc": "The ID of the resource.",
        "type": "String",
        "required": "no"
      },
      "resourceType": {
        "desc": "The type of resource.",
        "type": "String",
        "required": "no",
        "values": [
          "vpc",
          "vpn",
          "direct-connect-gateway",
          "tgw-peering"
        ]
      },
      "state": {
        "desc": "The state of the resource.",
        "type": "String",
        "required": "no",
        "values": [
          "enabling",
          "enabled",
          "disabling",
          "disabled"
        ]
      },
      "transitGatewayAttachmentId": {
        "desc": "The ID of the attachment.",
        "type": "String",
        "required": "no",
        "values": [
          "enabling",
          "enabled",
          "disabling",
          "disabled"
        ]
      }
    }
  },
  {
    "title": "TransitGatewayVpcAttachment",
    "attrs": {
      "creationTime": {
        "desc": "The creation time.",
        "type": "Timestamp",
        "required": "no"
      },
      "options": {
        "desc": "The VPC attachment options.",
        "type": "TransitGatewayVpcAttachmentOptions object",
        "required": "no"
      },
      "state": {
        "desc": "The state of the VPC attachment.",
        "type": "String",
        "required": "no",
        "values": [
          "initiating",
          "pendingacceptance",
          "rollingback",
          "pending",
          "available",
          "modifying",
          ""
        ]
      },
      "subnetIds": {
        "desc": "The IDs of the subnets.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "initiating",
          "pendingacceptance",
          "rollingback",
          "pending",
          "available",
          "modifying",
          ""
        ]
      },
      "tagSet": {
        "desc": "The tags for the VPC attachment.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "initiating",
          "pendingacceptance",
          "rollingback",
          "pending",
          "available",
          "modifying",
          ""
        ]
      },
      "transitGatewayAttachmentId": {
        "desc": "The ID of the attachment.",
        "type": "String",
        "required": "no",
        "values": [
          "initiating",
          "pendingacceptance",
          "rollingback",
          "pending",
          "available",
          "modifying",
          ""
        ]
      },
      "transitGatewayId": {
        "desc": "The ID of the transit gateway.",
        "type": "String",
        "required": "no",
        "values": [
          "initiating",
          "pendingacceptance",
          "rollingback",
          "pending",
          "available",
          "modifying",
          ""
        ]
      },
      "vpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "no",
        "values": [
          "initiating",
          "pendingacceptance",
          "rollingback",
          "pending",
          "available",
          "modifying",
          ""
        ]
      },
      "vpcOwnerId": {
        "desc": "The ID of the AWS account that owns the VPC.",
        "type": "String",
        "required": "no",
        "values": [
          "initiating",
          "pendingacceptance",
          "rollingback",
          "pending",
          "available",
          "modifying",
          ""
        ]
      }
    }
  },
  {
    "title": "TransitGatewayVpcAttachmentOptions",
    "attrs": {
      "dnsSupport": {
        "desc": "Indicates whether DNS support is enabled.",
        "type": "String",
        "required": "no",
        "values": [
          "enable",
          "disable"
        ]
      },
      "ipv6Support": {
        "desc": "Indicates whether IPv6 support is disabled.",
        "type": "String",
        "required": "no",
        "values": [
          "enable",
          "disable"
        ]
      }
    }
  },
  {
    "title": "TunnelOption",
    "attrs": {
      "dpdTimeoutSeconds": {
        "desc": "The number of seconds after which a DPD timeout occurs.",
        "type": "Integer",
        "required": "no"
      },
      "ikeVersionSet": {
        "desc": "The IKE versions that are permitted for the VPN tunnel.",
        "type": "Array of IKEVersionsListValue objects",
        "required": "no"
      },
      "outsideIpAddress": {
        "desc": "The external IP address of the VPN tunnel.",
        "type": "String",
        "required": "no"
      },
      "phase1DHGroupNumberSet": {
        "desc": "The permitted Diffie-Hellman group numbers for the VPN tunnel for phase 1 IKE negotiations.",
        "type": "Array of Phase1DHGroupNumbersListValue objects",
        "required": "no"
      },
      "phase1EncryptionAlgorithmSet": {
        "desc": "The permitted encryption algorithms for the VPN tunnel for phase 1 IKE negotiations.",
        "type": "Array of Phase1EncryptionAlgorithmsListValue objects",
        "required": "no"
      },
      "phase1IntegrityAlgorithmSet": {
        "desc": "The permitted integrity algorithms for the VPN tunnel for phase 1 IKE negotiations.",
        "type": "Array of Phase1IntegrityAlgorithmsListValue objects",
        "required": "no"
      },
      "phase1LifetimeSeconds": {
        "desc": "The lifetime for phase 1 of the IKE negotiation, in seconds.",
        "type": "Integer",
        "required": "no"
      },
      "phase2DHGroupNumberSet": {
        "desc": "The permitted Diffie-Hellman group numbers for the VPN tunnel for phase 2 IKE negotiations.",
        "type": "Array of Phase2DHGroupNumbersListValue objects",
        "required": "no"
      },
      "phase2EncryptionAlgorithmSet": {
        "desc": "The permitted encryption algorithms for the VPN tunnel for phase 2 IKE negotiations.",
        "type": "Array of Phase2EncryptionAlgorithmsListValue objects",
        "required": "no"
      },
      "phase2IntegrityAlgorithmSet": {
        "desc": "The permitted integrity algorithms for the VPN tunnel for phase 2 IKE negotiations.",
        "type": "Array of Phase2IntegrityAlgorithmsListValue objects",
        "required": "no"
      },
      "phase2LifetimeSeconds": {
        "desc": "The lifetime for phase 2 of the IKE negotiation, in seconds.",
        "type": "Integer",
        "required": "no"
      },
      "preSharedKey": {
        "desc": "The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and the customer gateway.",
        "type": "String",
        "required": "no"
      },
      "rekeyFuzzPercentage": {
        "desc": "The percentage of the rekey window determined by RekeyMarginTimeSeconds during which the rekey time is randomly selected.",
        "type": "Integer",
        "required": "no"
      },
      "rekeyMarginTimeSeconds": {
        "desc": "The margin time, in seconds, before the phase 2 lifetime expires, during which the AWS side of the VPN connection performs an IKE rekey.",
        "type": "Integer",
        "required": "no"
      },
      "replayWindowSize": {
        "desc": "The number of packets in an IKE replay window.",
        "type": "Integer",
        "required": "no"
      },
      "tunnelInsideCidr": {
        "desc": "The range of inside IP addresses for the tunnel.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "UnsuccessfulInstanceCreditSpecificationItem",
    "attrs": {
      "error": {
        "desc": "The applicable error for the burstable performance instance whose credit option for CPU usage was not modified.",
        "type": "UnsuccessfulInstanceCreditSpecificationItemError object",
        "required": "no"
      },
      "instanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "UnsuccessfulInstanceCreditSpecificationItemError",
    "attrs": {
      "code": {
        "desc": "The error code.",
        "type": "String",
        "required": "no",
        "values": [
          "invalidinstanceid.malformed",
          "invalidinstanceid.notfound",
          "incorrectinstancestate"
        ]
      },
      "message": {
        "desc": "The applicable error message.",
        "type": "String",
        "required": "no",
        "values": [
          "invalidinstanceid.malformed",
          "invalidinstanceid.notfound",
          "incorrectinstancestate"
        ]
      }
    }
  },
  {
    "title": "UnsuccessfulItem",
    "attrs": {
      "error": {
        "desc": "Information about the error.",
        "type": "UnsuccessfulItemError object",
        "required": "no"
      },
      "resourceId": {
        "desc": "The ID of the resource.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "UnsuccessfulItemError",
    "attrs": {
      "code": {
        "desc": "The error code.",
        "type": "String",
        "required": "no"
      },
      "message": {
        "desc": "The error message accompanying the error code.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "UserBucket",
    "attrs": {
      "S3Bucket": {
        "desc": "The name of the S3 bucket where the disk image is located.",
        "type": "String",
        "required": "no"
      },
      "S3Key": {
        "desc": "The file name of the disk image.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "UserBucketDetails",
    "attrs": {
      "s3Bucket": {
        "desc": "The S3 bucket from which the disk image was created.",
        "type": "String",
        "required": "no"
      },
      "s3Key": {
        "desc": "The file name of the disk image.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "UserData",
    "attrs": {
      "Data": {
        "desc": "The user data. If you are using an AWS SDK or command line tool, Base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide Base64-encoded text.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "UserIdGroupPair",
    "attrs": {
      "Description (request), description (response)": {
        "desc": "A description for the security group rule that references this user ID group pair.",
        "type": "String",
        "required": "no"
      },
      "GroupId (request), groupId (response)": {
        "desc": "The ID of the security group.",
        "type": "String",
        "required": "no"
      },
      "GroupName (request), groupName (response)": {
        "desc": "The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the security group ID.",
        "type": "String",
        "required": "no"
      },
      "PeeringStatus (request), peeringStatus (response)": {
        "desc": "The status of a VPC peering connection, if applicable.",
        "type": "String",
        "required": "no"
      },
      "UserId (request), userId (response)": {
        "desc": "The ID of an AWS account.",
        "type": "String",
        "required": "no"
      },
      "VpcId (request), vpcId (response)": {
        "desc": "The ID of the VPC for the referenced security group, if applicable.",
        "type": "String",
        "required": "no"
      },
      "VpcPeeringConnectionId (request), vpcPeeringConnectionId (response)": {
        "desc": "The ID of the VPC peering connection, if applicable.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "VCpuInfo",
    "attrs": {
      "defaultCores": {
        "desc": "The default number of cores for the instance type.",
        "type": "Integer",
        "required": "no"
      },
      "defaultThreadsPerCore": {
        "desc": "The default number of threads per core for the instance type.",
        "type": "Integer",
        "required": "no"
      },
      "defaultVCpus": {
        "desc": "The default number of vCPUs for the instance type.",
        "type": "Integer",
        "required": "no"
      },
      "validCores": {
        "desc": "List of the valid number of cores that can be configured for the instance type.",
        "type": "Array of integers",
        "required": "no"
      },
      "validThreadsPerCore": {
        "desc": "List of the valid number of threads per core that can be configured for the instance type.",
        "type": "Array of integers",
        "required": "no"
      }
    }
  },
  {
    "title": "VgwTelemetry",
    "attrs": {
      "acceptedRouteCount": {
        "desc": "The number of accepted routes.",
        "type": "Integer",
        "required": "no"
      },
      "certificateArn": {
        "desc": "The Amazon Resource Name (ARN) of the VPN tunnel endpoint certificate.",
        "type": "String",
        "required": "no"
      },
      "lastStatusChange": {
        "desc": "The date and time of the last change in status.",
        "type": "Timestamp",
        "required": "no"
      },
      "outsideIpAddress": {
        "desc": "The Internet-routable IP address of the virtual private gateway's outside interface.",
        "type": "String",
        "required": "no"
      },
      "status": {
        "desc": "The status of the VPN tunnel.",
        "type": "String",
        "required": "no",
        "values": [
          "up",
          "down"
        ]
      },
      "statusMessage": {
        "desc": "If an error occurs, a description of the error.",
        "type": "String",
        "required": "no",
        "values": [
          "up",
          "down"
        ]
      }
    }
  },
  {
    "title": "Volume",
    "attrs": {
      "attachmentSet": {
        "desc": "Information about the volume attachments.",
        "type": "Array of VolumeAttachment objects",
        "required": "no"
      },
      "availabilityZone": {
        "desc": "The Availability Zone for the volume.",
        "type": "String",
        "required": "no"
      },
      "createTime": {
        "desc": "The time stamp when volume creation was initiated.",
        "type": "Timestamp",
        "required": "no"
      },
      "encrypted": {
        "desc": "Indicates whether the volume is encrypted.",
        "type": "Boolean",
        "required": "no"
      },
      "fastRestored": {
        "desc": "Indicates whether the volume was created using fast snapshot restore.",
        "type": "Boolean",
        "required": "no"
      },
      "iops": {
        "desc": "The number of I/O operations per second (IOPS) that the volume supports. For Provisioned IOPS SSD volumes, this represents the number of IOPS that are provisioned for the volume. For General Purpose SSD volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide.",
        "type": "Integer",
        "required": "no"
      },
      "kmsKeyId": {
        "desc": "The Amazon Resource Name (ARN) of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the volume.",
        "type": "String",
        "required": "no"
      },
      "multiAttachEnabled": {
        "desc": "Indicates whether Amazon EBS Multi-Attach is enabled.",
        "type": "Boolean",
        "required": "no"
      },
      "outpostArn": {
        "desc": "The Amazon Resource Name (ARN) of the Outpost.",
        "type": "String",
        "required": "no"
      },
      "size": {
        "desc": "The size of the volume, in GiBs.",
        "type": "Integer",
        "required": "no"
      },
      "snapshotId": {
        "desc": "The snapshot from which the volume was created, if applicable.",
        "type": "String",
        "required": "no"
      },
      "status": {
        "desc": "The volume state.",
        "type": "String",
        "required": "no",
        "values": [
          "creating",
          "available",
          "in-use",
          "deleting",
          "deleted",
          "error"
        ]
      },
      "tagSet": {
        "desc": "Any tags assigned to the volume.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "creating",
          "available",
          "in-use",
          "deleting",
          "deleted",
          "error"
        ]
      },
      "volumeId": {
        "desc": "The ID of the volume.",
        "type": "String",
        "required": "no",
        "values": [
          "creating",
          "available",
          "in-use",
          "deleting",
          "deleted",
          "error"
        ]
      },
      "volumeType": {
        "desc": "The volume type. This can be gp2 for General Purpose SSD, io1 for Provisioned IOPS SSD, st1 for Throughput Optimized HDD, sc1 for Cold HDD, or standard for Magnetic volumes.",
        "type": "String",
        "required": "no",
        "values": [
          "standard",
          "io1",
          "gp2",
          "sc1",
          "st1"
        ]
      }
    }
  },
  {
    "title": "VolumeAttachment",
    "attrs": {
      "attachTime": {
        "desc": "The time stamp when the attachment initiated.",
        "type": "Timestamp",
        "required": "no"
      },
      "deleteOnTermination": {
        "desc": "Indicates whether the EBS volume is deleted on instance termination.",
        "type": "Boolean",
        "required": "no"
      },
      "device": {
        "desc": "The device name.",
        "type": "String",
        "required": "no"
      },
      "instanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "no"
      },
      "status": {
        "desc": "The attachment state of the volume.",
        "type": "String",
        "required": "no",
        "values": [
          "attaching",
          "attached",
          "detaching",
          "detached",
          "busy"
        ]
      },
      "volumeId": {
        "desc": "The ID of the volume.",
        "type": "String",
        "required": "no",
        "values": [
          "attaching",
          "attached",
          "detaching",
          "detached",
          "busy"
        ]
      }
    }
  },
  {
    "title": "VolumeDetail",
    "attrs": {
      "Size": {
        "desc": "The size of the volume, in GiB.",
        "type": "Long",
        "required": "yes"
      }
    }
  },
  {
    "title": "VolumeModification",
    "attrs": {
      "endTime": {
        "desc": "The modification completion or failure time.",
        "type": "Timestamp",
        "required": "no"
      },
      "modificationState": {
        "desc": "The current modification state. The modification state is null for unmodified volumes.",
        "type": "String",
        "required": "no",
        "values": [
          "modifying",
          "optimizing",
          "completed",
          "failed"
        ]
      },
      "originalIops": {
        "desc": "The original IOPS rate of the volume.",
        "type": "Integer",
        "required": "no",
        "values": [
          "modifying",
          "optimizing",
          "completed",
          "failed"
        ]
      },
      "originalSize": {
        "desc": "The original size of the volume.",
        "type": "Integer",
        "required": "no",
        "values": [
          "modifying",
          "optimizing",
          "completed",
          "failed"
        ]
      },
      "originalVolumeType": {
        "desc": "The original EBS volume type of the volume.",
        "type": "String",
        "required": "no",
        "values": [
          "standard",
          "io1",
          "gp2",
          "sc1",
          "st1"
        ]
      },
      "progress": {
        "desc": "The modification progress, from 0 to 100 percent complete.",
        "type": "Long",
        "required": "no",
        "values": [
          "standard",
          "io1",
          "gp2",
          "sc1",
          "st1"
        ]
      },
      "startTime": {
        "desc": "The modification start time.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "standard",
          "io1",
          "gp2",
          "sc1",
          "st1"
        ]
      },
      "statusMessage": {
        "desc": "A status message about the modification progress or failure.",
        "type": "String",
        "required": "no",
        "values": [
          "standard",
          "io1",
          "gp2",
          "sc1",
          "st1"
        ]
      },
      "targetIops": {
        "desc": "The target IOPS rate of the volume.",
        "type": "Integer",
        "required": "no",
        "values": [
          "standard",
          "io1",
          "gp2",
          "sc1",
          "st1"
        ]
      },
      "targetSize": {
        "desc": "The target size of the volume, in GiB.",
        "type": "Integer",
        "required": "no",
        "values": [
          "standard",
          "io1",
          "gp2",
          "sc1",
          "st1"
        ]
      },
      "targetVolumeType": {
        "desc": "The target EBS volume type of the volume.",
        "type": "String",
        "required": "no",
        "values": [
          "standard",
          "io1",
          "gp2",
          "sc1",
          "st1"
        ]
      },
      "volumeId": {
        "desc": "The ID of the volume.",
        "type": "String",
        "required": "no",
        "values": [
          "standard",
          "io1",
          "gp2",
          "sc1",
          "st1"
        ]
      }
    }
  },
  {
    "title": "VolumeStatusAction",
    "attrs": {
      "code": {
        "desc": "The code identifying the operation, for example, enable-volume-io.",
        "type": "String",
        "required": "no"
      },
      "description": {
        "desc": "A description of the operation.",
        "type": "String",
        "required": "no"
      },
      "eventId": {
        "desc": "The ID of the event associated with this operation.",
        "type": "String",
        "required": "no"
      },
      "eventType": {
        "desc": "The event type associated with this operation.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "VolumeStatusAttachmentStatus",
    "attrs": {
      "instanceId": {
        "desc": "The ID of the attached instance.",
        "type": "String",
        "required": "no"
      },
      "ioPerformance": {
        "desc": "The maximum IOPS supported by the attached instance.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "VolumeStatusDetails",
    "attrs": {
      "name": {
        "desc": "The name of the volume status.",
        "type": "String",
        "required": "no",
        "values": [
          "io-enabled",
          "io-performance"
        ]
      },
      "status": {
        "desc": "The intended status of the volume status.",
        "type": "String",
        "required": "no",
        "values": [
          "io-enabled",
          "io-performance"
        ]
      }
    }
  },
  {
    "title": "VolumeStatusEvent",
    "attrs": {
      "description": {
        "desc": "A description of the event.",
        "type": "String",
        "required": "no"
      },
      "eventId": {
        "desc": "The ID of this event.",
        "type": "String",
        "required": "no"
      },
      "eventType": {
        "desc": "The type of this event.",
        "type": "String",
        "required": "no"
      },
      "instanceId": {
        "desc": "The ID of the instance associated with the event.",
        "type": "String",
        "required": "no"
      },
      "notAfter": {
        "desc": "The latest end time of the event.",
        "type": "Timestamp",
        "required": "no"
      },
      "notBefore": {
        "desc": "The earliest start time of the event.",
        "type": "Timestamp",
        "required": "no"
      }
    }
  },
  {
    "title": "VolumeStatusInfo",
    "attrs": {
      "details": {
        "desc": "The details of the volume status.",
        "type": "Array of VolumeStatusDetails objects",
        "required": "no"
      },
      "status": {
        "desc": "The status of the volume.",
        "type": "String",
        "required": "no",
        "values": [
          "ok",
          "impaired",
          "insufficient-data"
        ]
      }
    }
  },
  {
    "title": "VolumeStatusItem",
    "attrs": {
      "actionsSet": {
        "desc": "The details of the operation.",
        "type": "Array of VolumeStatusAction objects",
        "required": "no"
      },
      "attachmentStatuses": {
        "desc": "Information about the instances to which the volume is attached.",
        "type": "Array of VolumeStatusAttachmentStatus objects",
        "required": "no"
      },
      "availabilityZone": {
        "desc": "The Availability Zone of the volume.",
        "type": "String",
        "required": "no"
      },
      "eventsSet": {
        "desc": "A list of events associated with the volume.",
        "type": "Array of VolumeStatusEvent objects",
        "required": "no"
      },
      "outpostArn": {
        "desc": "The Amazon Resource Name (ARN) of the Outpost.",
        "type": "String",
        "required": "no"
      },
      "volumeId": {
        "desc": "The volume ID.",
        "type": "String",
        "required": "no"
      },
      "volumeStatus": {
        "desc": "The volume status.",
        "type": "VolumeStatusInfo object",
        "required": "no"
      }
    }
  },
  {
    "title": "Vpc",
    "attrs": {
      "cidrBlock": {
        "desc": "The primary IPv4 CIDR block for the VPC.",
        "type": "String",
        "required": "no"
      },
      "cidrBlockAssociationSet": {
        "desc": "Information about the IPv4 CIDR blocks associated with the VPC.",
        "type": "Array of VpcCidrBlockAssociation objects",
        "required": "no"
      },
      "dhcpOptionsId": {
        "desc": "The ID of the set of DHCP options you've associated with the VPC (or default if the default options are associated with the VPC).",
        "type": "String",
        "required": "no"
      },
      "instanceTenancy": {
        "desc": "The allowed tenancy of instances launched into the VPC.",
        "type": "String",
        "required": "no",
        "values": [
          "default",
          "dedicated",
          "host"
        ]
      },
      "ipv6CidrBlockAssociationSet": {
        "desc": "Information about the IPv6 CIDR blocks associated with the VPC.",
        "type": "Array of VpcIpv6CidrBlockAssociation objects",
        "required": "no",
        "values": [
          "default",
          "dedicated",
          "host"
        ]
      },
      "isDefault": {
        "desc": "Indicates whether the VPC is the default VPC.",
        "type": "Boolean",
        "required": "no",
        "values": [
          "default",
          "dedicated",
          "host"
        ]
      },
      "ownerId": {
        "desc": "The ID of the AWS account that owns the VPC.",
        "type": "String",
        "required": "no",
        "values": [
          "default",
          "dedicated",
          "host"
        ]
      },
      "state": {
        "desc": "The current state of the VPC.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "available"
        ]
      },
      "tagSet": {
        "desc": "Any tags assigned to the VPC.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "pending",
          "available"
        ]
      },
      "vpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "available"
        ]
      }
    }
  },
  {
    "title": "VpcAttachment",
    "attrs": {
      "state": {
        "desc": "The current state of the attachment.",
        "type": "String",
        "required": "no",
        "values": [
          "attaching",
          "attached",
          "detaching",
          "detached"
        ]
      },
      "vpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "no",
        "values": [
          "attaching",
          "attached",
          "detaching",
          "detached"
        ]
      }
    }
  },
  {
    "title": "VpcCidrBlockAssociation",
    "attrs": {
      "associationId": {
        "desc": "The association ID for the IPv4 CIDR block.",
        "type": "String",
        "required": "no"
      },
      "cidrBlock": {
        "desc": "The IPv4 CIDR block.",
        "type": "String",
        "required": "no"
      },
      "cidrBlockState": {
        "desc": "Information about the state of the CIDR block.",
        "type": "VpcCidrBlockState object",
        "required": "no"
      }
    }
  },
  {
    "title": "VpcCidrBlockState",
    "attrs": {
      "state": {
        "desc": "The state of the CIDR block.",
        "type": "String",
        "required": "no",
        "values": [
          "associating",
          "associated",
          "disassociating",
          "disassociated",
          "failing",
          "failed"
        ]
      },
      "statusMessage": {
        "desc": "A message about the status of the CIDR block, if applicable.",
        "type": "String",
        "required": "no",
        "values": [
          "associating",
          "associated",
          "disassociating",
          "disassociated",
          "failing",
          "failed"
        ]
      }
    }
  },
  {
    "title": "VpcClassicLink",
    "attrs": {
      "classicLinkEnabled": {
        "desc": "Indicates whether the VPC is enabled for ClassicLink.",
        "type": "Boolean",
        "required": "no"
      },
      "tagSet": {
        "desc": "Any tags assigned to the VPC.",
        "type": "Array of Tag objects",
        "required": "no"
      },
      "vpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "VpcEndpoint",
    "attrs": {
      "creationTimestamp": {
        "desc": "The date and time that the VPC endpoint was created.",
        "type": "Timestamp",
        "required": "no"
      },
      "dnsEntrySet": {
        "desc": "(Interface endpoint) The DNS entries for the endpoint.",
        "type": "Array of DnsEntry objects",
        "required": "no"
      },
      "groupSet": {
        "desc": "(Interface endpoint) Information about the security groups that are associated with the network interface.",
        "type": "Array of SecurityGroupIdentifier objects",
        "required": "no"
      },
      "lastError": {
        "desc": "The last error that occurred for VPC endpoint.",
        "type": "LastError object",
        "required": "no"
      },
      "networkInterfaceIdSet": {
        "desc": "(Interface endpoint) One or more network interfaces for the endpoint.",
        "type": "Array of strings",
        "required": "no"
      },
      "ownerId": {
        "desc": "The ID of the AWS account that owns the VPC endpoint.",
        "type": "String",
        "required": "no"
      },
      "policyDocument": {
        "desc": "The policy document associated with the endpoint, if applicable.",
        "type": "String",
        "required": "no"
      },
      "privateDnsEnabled": {
        "desc": "(Interface endpoint) Indicates whether the VPC is associated with a private hosted zone.",
        "type": "Boolean",
        "required": "no"
      },
      "requesterManaged": {
        "desc": "Indicates whether the VPC endpoint is being managed by its service.",
        "type": "Boolean",
        "required": "no"
      },
      "routeTableIdSet": {
        "desc": "(Gateway endpoint) One or more route tables associated with the endpoint.",
        "type": "Array of strings",
        "required": "no"
      },
      "serviceName": {
        "desc": "The name of the service to which the endpoint is associated.",
        "type": "String",
        "required": "no"
      },
      "state": {
        "desc": "The state of the VPC endpoint.",
        "type": "String",
        "required": "no",
        "values": [
          "pendingacceptance",
          "pending",
          "available",
          "deleting",
          "deleted",
          "rejected",
          "failed"
        ]
      },
      "subnetIdSet": {
        "desc": "(Interface endpoint) One or more subnets in which the endpoint is located.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "pendingacceptance",
          "pending",
          "available",
          "deleting",
          "deleted",
          "rejected",
          "failed"
        ]
      },
      "tagSet": {
        "desc": "Any tags assigned to the VPC endpoint.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "pendingacceptance",
          "pending",
          "available",
          "deleting",
          "deleted",
          "rejected",
          "failed"
        ]
      },
      "vpcEndpointId": {
        "desc": "The ID of the VPC endpoint.",
        "type": "String",
        "required": "no",
        "values": [
          "pendingacceptance",
          "pending",
          "available",
          "deleting",
          "deleted",
          "rejected",
          "failed"
        ]
      },
      "vpcEndpointType": {
        "desc": "The type of endpoint.",
        "type": "String",
        "required": "no",
        "values": [
          "interface",
          "gateway"
        ]
      },
      "vpcId": {
        "desc": "The ID of the VPC to which the endpoint is associated.",
        "type": "String",
        "required": "no",
        "values": [
          "interface",
          "gateway"
        ]
      }
    }
  },
  {
    "title": "VpcEndpointConnection",
    "attrs": {
      "creationTimestamp": {
        "desc": "The date and time that the VPC endpoint was created.",
        "type": "Timestamp",
        "required": "no"
      },
      "dnsEntrySet": {
        "desc": "The DNS entries for the VPC endpoint.",
        "type": "Array of DnsEntry objects",
        "required": "no"
      },
      "networkLoadBalancerArnSet": {
        "desc": "The Amazon Resource Names (ARNs) of the network load balancers for the service.",
        "type": "Array of strings",
        "required": "no"
      },
      "serviceId": {
        "desc": "The ID of the service to which the endpoint is connected.",
        "type": "String",
        "required": "no"
      },
      "vpcEndpointId": {
        "desc": "The ID of the VPC endpoint.",
        "type": "String",
        "required": "no"
      },
      "vpcEndpointOwner": {
        "desc": "The AWS account ID of the owner of the VPC endpoint.",
        "type": "String",
        "required": "no"
      },
      "vpcEndpointState": {
        "desc": "The state of the VPC endpoint.",
        "type": "String",
        "required": "no",
        "values": [
          "pendingacceptance",
          "pending",
          "available",
          "deleting",
          "deleted",
          "rejected",
          "failed"
        ]
      }
    }
  },
  {
    "title": "VpcIpv6CidrBlockAssociation",
    "attrs": {
      "associationId": {
        "desc": "The association ID for the IPv6 CIDR block.",
        "type": "String",
        "required": "no"
      },
      "ipv6CidrBlock": {
        "desc": "The IPv6 CIDR block.",
        "type": "String",
        "required": "no"
      },
      "ipv6CidrBlockState": {
        "desc": "Information about the state of the CIDR block.",
        "type": "VpcCidrBlockState object",
        "required": "no"
      },
      "ipv6Pool": {
        "desc": "The ID of the IPv6 address pool from which the IPv6 CIDR block is allocated.",
        "type": "String",
        "required": "no"
      },
      "networkBorderGroup": {
        "desc": "The name of the location from which we advertise the IPV6 CIDR block.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "VpcPeeringConnection",
    "attrs": {
      "accepterVpcInfo": {
        "desc": "Information about the accepter VPC. CIDR block information is only returned when describing an active VPC peering connection.",
        "type": "VpcPeeringConnectionVpcInfo object",
        "required": "no"
      },
      "expirationTime": {
        "desc": "The time that an unaccepted VPC peering connection will expire.",
        "type": "Timestamp",
        "required": "no"
      },
      "requesterVpcInfo": {
        "desc": "Information about the requester VPC. CIDR block information is only returned when describing an active VPC peering connection.",
        "type": "VpcPeeringConnectionVpcInfo object",
        "required": "no"
      },
      "status": {
        "desc": "The status of the VPC peering connection.",
        "type": "VpcPeeringConnectionStateReason object",
        "required": "no"
      },
      "tagSet": {
        "desc": "Any tags assigned to the resource.",
        "type": "Array of Tag objects",
        "required": "no"
      },
      "vpcPeeringConnectionId": {
        "desc": "The ID of the VPC peering connection.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "VpcPeeringConnectionOptionsDescription",
    "attrs": {
      "allowDnsResolutionFromRemoteVpc": {
        "desc": "Indicates whether a local VPC can resolve public DNS hostnames to private IP addresses when queried from instances in a peer VPC.",
        "type": "Boolean",
        "required": "no"
      },
      "allowEgressFromLocalClassicLinkToRemoteVpc": {
        "desc": "Indicates whether a local ClassicLink connection can communicate with the peer VPC over the VPC peering connection.",
        "type": "Boolean",
        "required": "no"
      },
      "allowEgressFromLocalVpcToRemoteClassicLink": {
        "desc": "Indicates whether a local VPC can communicate with a ClassicLink connection in the peer VPC over the VPC peering connection.",
        "type": "Boolean",
        "required": "no"
      }
    }
  },
  {
    "title": "VpcPeeringConnectionStateReason",
    "attrs": {
      "code": {
        "desc": "The status of the VPC peering connection.",
        "type": "String",
        "required": "no",
        "values": [
          "initiating-request",
          "pending-acceptance",
          "active",
          "deleted",
          "rejected",
          "failed",
          ""
        ]
      },
      "message": {
        "desc": "A message that provides more information about the status, if applicable.",
        "type": "String",
        "required": "no",
        "values": [
          "initiating-request",
          "pending-acceptance",
          "active",
          "deleted",
          "rejected",
          "failed",
          ""
        ]
      }
    }
  },
  {
    "title": "VpcPeeringConnectionVpcInfo",
    "attrs": {
      "cidrBlock": {
        "desc": "The IPv4 CIDR block for the VPC.",
        "type": "String",
        "required": "no"
      },
      "cidrBlockSet": {
        "desc": "Information about the IPv4 CIDR blocks for the VPC.",
        "type": "Array of CidrBlock objects",
        "required": "no"
      },
      "ipv6CidrBlockSet": {
        "desc": "The IPv6 CIDR block for the VPC.",
        "type": "Array of Ipv6CidrBlock objects",
        "required": "no"
      },
      "ownerId": {
        "desc": "The AWS account ID of the VPC owner.",
        "type": "String",
        "required": "no"
      },
      "peeringOptions": {
        "desc": "Information about the VPC peering connection options for the accepter or requester VPC.",
        "type": "VpcPeeringConnectionOptionsDescription object",
        "required": "no"
      },
      "region": {
        "desc": "The Region in which the VPC is located.",
        "type": "String",
        "required": "no"
      },
      "vpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "no"
      }
    }
  },
  {
    "title": "VpnConnection",
    "attrs": {
      "category": {
        "desc": "The category of the VPN connection. A value of VPN indicates an AWS VPN connection. A value of VPN-Classic indicates an AWS Classic VPN connection.",
        "type": "String",
        "required": "no"
      },
      "customerGatewayConfiguration": {
        "desc": "The configuration information for the VPN connection's customer gateway (in the native XML format). This element is always present in the CreateVpnConnection response; however, it's present in the DescribeVpnConnections response only if the VPN connection is in the pending or available state.",
        "type": "String",
        "required": "no"
      },
      "customerGatewayId": {
        "desc": "The ID of the customer gateway at your end of the VPN connection.",
        "type": "String",
        "required": "no"
      },
      "options": {
        "desc": "The VPN connection options.",
        "type": "VpnConnectionOptions object",
        "required": "no"
      },
      "routes": {
        "desc": "The static routes associated with the VPN connection.",
        "type": "Array of VpnStaticRoute objects",
        "required": "no"
      },
      "state": {
        "desc": "The current state of the VPN connection.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "available",
          "deleting",
          "deleted"
        ]
      },
      "tagSet": {
        "desc": "Any tags assigned to the VPN connection.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "pending",
          "available",
          "deleting",
          "deleted"
        ]
      },
      "transitGatewayId": {
        "desc": "The ID of the transit gateway associated with the VPN connection.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "available",
          "deleting",
          "deleted"
        ]
      },
      "type": {
        "desc": "The type of VPN connection.",
        "type": "String",
        "required": "no",
        "values": [
          "ipsec.1"
        ]
      },
      "vgwTelemetry": {
        "desc": "Information about the VPN tunnel.",
        "type": "Array of VgwTelemetry objects",
        "required": "no",
        "values": [
          "ipsec.1"
        ]
      },
      "vpnConnectionId": {
        "desc": "The ID of the VPN connection.",
        "type": "String",
        "required": "no",
        "values": [
          "ipsec.1"
        ]
      },
      "vpnGatewayId": {
        "desc": "The ID of the virtual private gateway at the AWS side of the VPN connection.",
        "type": "String",
        "required": "no",
        "values": [
          "ipsec.1"
        ]
      }
    }
  },
  {
    "title": "VpnConnectionOptions",
    "attrs": {
      "enableAcceleration": {
        "desc": "Indicates whether acceleration is enabled for the VPN connection.",
        "type": "Boolean",
        "required": "no"
      },
      "staticRoutesOnly": {
        "desc": "Indicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP.",
        "type": "Boolean",
        "required": "no"
      },
      "tunnelOptionSet": {
        "desc": "Indicates the VPN tunnel options.",
        "type": "Array of TunnelOption objects",
        "required": "no"
      }
    }
  },
  {
    "title": "VpnConnectionOptionsSpecification",
    "attrs": {
      "EnableAcceleration": {
        "desc": "Indicate whether to enable acceleration for the VPN connection.",
        "type": "Boolean",
        "required": "no"
      },
      "StaticRoutesOnly": {
        "desc": "Indicate whether the VPN connection uses static routes only. If you are creating a VPN connection for a device that does not support BGP, you must specify true. Use CreateVpnConnectionRoute to create a static route.",
        "type": "Boolean",
        "required": "no"
      },
      "TunnelOptions": {
        "desc": "The tunnel options for the VPN connection.",
        "type": "Array of VpnTunnelOptionsSpecification objects",
        "required": "no"
      }
    }
  },
  {
    "title": "VpnGateway",
    "attrs": {
      "amazonSideAsn": {
        "desc": "The private Autonomous System Number (ASN) for the Amazon side of a BGP session.",
        "type": "Long",
        "required": "no"
      },
      "attachments": {
        "desc": "Any VPCs attached to the virtual private gateway.",
        "type": "Array of VpcAttachment objects",
        "required": "no"
      },
      "availabilityZone": {
        "desc": "The Availability Zone where the virtual private gateway was created, if applicable. This field may be empty or not returned.",
        "type": "String",
        "required": "no"
      },
      "state": {
        "desc": "The current state of the virtual private gateway.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "available",
          "deleting",
          "deleted"
        ]
      },
      "tagSet": {
        "desc": "Any tags assigned to the virtual private gateway.",
        "type": "Array of Tag objects",
        "required": "no",
        "values": [
          "pending",
          "available",
          "deleting",
          "deleted"
        ]
      },
      "type": {
        "desc": "The type of VPN connection the virtual private gateway supports.",
        "type": "String",
        "required": "no",
        "values": [
          "ipsec.1"
        ]
      },
      "vpnGatewayId": {
        "desc": "The ID of the virtual private gateway.",
        "type": "String",
        "required": "no",
        "values": [
          "ipsec.1"
        ]
      }
    }
  },
  {
    "title": "VpnStaticRoute",
    "attrs": {
      "destinationCidrBlock": {
        "desc": "The CIDR block associated with the local subnet of the customer data center.",
        "type": "String",
        "required": "no"
      },
      "source": {
        "desc": "Indicates how the routes were provided.",
        "type": "String",
        "required": "no",
        "values": [
          "static"
        ]
      },
      "state": {
        "desc": "The current state of the static route.",
        "type": "String",
        "required": "no",
        "values": [
          "pending",
          "available",
          "deleting",
          "deleted"
        ]
      }
    }
  },
  {
    "title": "VpnTunnelOptionsSpecification",
    "attrs": {
      "DPDTimeoutSeconds": {
        "desc": "The number of seconds after which a DPD timeout occurs.",
        "type": "Integer",
        "required": "no"
      },
      "IKEVersions": {
        "desc": "The IKE versions that are permitted for the VPN tunnel.",
        "type": "Array of IKEVersionsRequestListValue objects",
        "required": "no"
      },
      "Phase1DHGroupNumbers": {
        "desc": "One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 1 IKE negotiations.",
        "type": "Array of Phase1DHGroupNumbersRequestListValue objects",
        "required": "no"
      },
      "Phase1EncryptionAlgorithms": {
        "desc": "One or more encryption algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.",
        "type": "Array of Phase1EncryptionAlgorithmsRequestListValue objects",
        "required": "no"
      },
      "Phase1IntegrityAlgorithms": {
        "desc": "One or more integrity algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.",
        "type": "Array of Phase1IntegrityAlgorithmsRequestListValue objects",
        "required": "no"
      },
      "Phase1LifetimeSeconds": {
        "desc": "The lifetime for phase 1 of the IKE negotiation, in seconds.",
        "type": "Integer",
        "required": "no"
      },
      "Phase2DHGroupNumbers": {
        "desc": "One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 2 IKE negotiations.",
        "type": "Array of Phase2DHGroupNumbersRequestListValue objects",
        "required": "no"
      },
      "Phase2EncryptionAlgorithms": {
        "desc": "One or more encryption algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.",
        "type": "Array of Phase2EncryptionAlgorithmsRequestListValue objects",
        "required": "no"
      },
      "Phase2IntegrityAlgorithms": {
        "desc": "One or more integrity algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.",
        "type": "Array of Phase2IntegrityAlgorithmsRequestListValue objects",
        "required": "no"
      },
      "Phase2LifetimeSeconds": {
        "desc": "The lifetime for phase 2 of the IKE negotiation, in seconds.",
        "type": "Integer",
        "required": "no"
      },
      "PreSharedKey": {
        "desc": "The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and customer gateway.",
        "type": "String",
        "required": "no"
      },
      "RekeyFuzzPercentage": {
        "desc": "The percentage of the rekey window (determined by RekeyMarginTimeSeconds) during which the rekey time is randomly selected.",
        "type": "Integer",
        "required": "no"
      },
      "RekeyMarginTimeSeconds": {
        "desc": "The margin time, in seconds, before the phase 2 lifetime expires, during which the AWS side of the VPN connection performs an IKE rekey. The exact time of the rekey is randomly selected based on the value for RekeyFuzzPercentage.",
        "type": "Integer",
        "required": "no"
      },
      "ReplayWindowSize": {
        "desc": "The number of packets in an IKE replay window.",
        "type": "Integer",
        "required": "no"
      },
      "TunnelInsideCidr": {
        "desc": "The range of inside IP addresses for the tunnel. Any specified CIDR blocks must be unique across all VPN connections that use the same virtual private gateway.",
        "type": "String",
        "required": "no"
      }
    }
  }
]
