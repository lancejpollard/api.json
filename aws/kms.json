[
  {
    "title": "CancelKeyDeletion",
    "req": {
      "KeyId": {
        "desc": "The unique identifier for the customer master key (CMK) for which to cancel deletion.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "KeyId": {
        "desc": "The Amazon Resource Name (key ARN) of the CMK whose deletion is canceled.",
        "type": "String"
      }
    }
  },
  {
    "title": "ConnectCustomKeyStore",
    "req": {
      "CustomKeyStoreId": {
        "desc": "Enter the key store ID of the custom key store that you want to connect. To find the ID of a custom key store, use the DescribeCustomKeyStores operation.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "CloudHsmClusterInvalidConfigurationException": {
        "desc": "The request was rejected because the associated AWS CloudHSM cluster did not meet the configuration requirements for a custom key store.",
        "type": "String"
      },
      "CloudHsmClusterNotActiveException": {
        "desc": "The request was rejected because the AWS CloudHSM cluster that is associated with the custom key store is not active. Initialize and activate the cluster and try the command again. For detailed instructions, see Getting Started in the AWS CloudHSM User Guide.",
        "type": "String"
      },
      "CustomKeyStoreInvalidStateException": {
        "desc": "The request was rejected because of the ConnectionState of the custom key store. To get the ConnectionState of a custom key store, use the DescribeCustomKeyStores operation.",
        "type": "String"
      },
      "CustomKeyStoreNotFoundException": {
        "desc": "The request was rejected because AWS KMS cannot find a custom key store with the specified key store name or ID.",
        "type": "String"
      },
      "KMSInternalException": {
        "desc": "The request was rejected because an internal exception occurred. The request can be retried.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateAlias",
    "req": {
      "AliasName": {
        "desc": "Specifies the alias name. This value must begin with alias/ followed by a name, such as alias/ExampleAlias. The alias name cannot begin with alias/aws/. The alias/aws/ prefix is reserved for AWS managed CMKs.",
        "type": "String",
        "required": "yes"
      },
      "TargetKeyId": {
        "desc": "Identifies the CMK to which the alias refers. Specify the key ID or the Amazon Resource Name (ARN) of the CMK. You cannot specify another alias. For help finding the key ID and ARN, see Finding the Key ID and ARN in the AWS Key Management Service Developer Guide.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "AlreadyExistsException": {
        "desc": "The request was rejected because it attempted to create a resource that already exists.",
        "type": "String"
      },
      "DependencyTimeoutException": {
        "desc": "The system timed out while trying to fulfill the request. The request can be retried.",
        "type": "String"
      },
      "InvalidAliasNameException": {
        "desc": "The request was rejected because the specified alias name is not valid.",
        "type": "String"
      },
      "KMSInternalException": {
        "desc": "The request was rejected because an internal exception occurred. The request can be retried.",
        "type": "String"
      },
      "KMSInvalidStateException": {
        "desc": "The request was rejected because the state of the specified resource is not valid for this request.",
        "type": "String"
      },
      "LimitExceededException": {
        "desc": "The request was rejected because a quota was exceeded. For more information, see Quotas in the AWS Key Management Service Developer Guide.",
        "type": "String"
      },
      "NotFoundException": {
        "desc": "The request was rejected because the specified entity or resource could not be found.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateCustomKeyStore",
    "req": {
      "CloudHsmClusterId": {
        "desc": "Identifies the AWS CloudHSM cluster for the custom key store. Enter the cluster ID of any active AWS CloudHSM cluster that is not already associated with a custom key store. To find the cluster ID, use the DescribeClusters operation.",
        "type": "String",
        "required": "yes"
      },
      "CustomKeyStoreName": {
        "desc": "Specifies a friendly name for the custom key store. The name must be unique in your AWS account.",
        "type": "String",
        "required": "yes"
      },
      "KeyStorePassword": {
        "desc": "Enter the password of the kmsuser crypto user (CU) account in the specified AWS CloudHSM cluster. AWS KMS logs into the cluster as this user to manage key material on your behalf.",
        "type": "String",
        "required": "yes"
      },
      "TrustAnchorCertificate": {
        "desc": "Enter the content of the trust anchor certificate for the cluster. This is the content of the customerCA.crt file that you created when you initialized the cluster.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "CustomKeyStoreId": {
        "desc": "A unique identifier for the new custom key store.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateGrant",
    "req": {
      "GranteePrincipal": {
        "desc": "The principal that is given permission to perform the operations that the grant permits.",
        "type": "String",
        "required": "yes"
      },
      "KeyId": {
        "desc": "The unique identifier for the customer master key (CMK) that the grant applies to.",
        "type": "String",
        "required": "yes"
      },
      "Operations": {
        "desc": "A list of operations that the grant permits.",
        "type": "Array of strings",
        "required": "yes",
        "values": [
          "decrypt",
          "encrypt",
          "generatedatakey",
          "generatedatakeywithoutplaintext",
          "reencryptfrom"
        ]
      },
      "Constraints": {
        "desc": "Allows a cryptographic operation only when the encryption context matches or includes the encryption context specified in this structure. For more information about encryption context, see Encryption Context in the AWS Key Management Service Developer Guide .",
        "type": "GrantConstraints object",
        "required": "no",
        "values": [
          "decrypt",
          "encrypt",
          "generatedatakey",
          "generatedatakeywithoutplaintext",
          "reencryptfrom"
        ]
      },
      "GrantTokens": {
        "desc": "A list of grant tokens.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "decrypt",
          "encrypt",
          "generatedatakey",
          "generatedatakeywithoutplaintext",
          "reencryptfrom"
        ]
      },
      "Name": {
        "desc": "A friendly name for identifying the grant. Use this value to prevent the unintended creation of duplicate grants when retrying this request.",
        "type": "String",
        "required": "no",
        "values": [
          "decrypt",
          "encrypt",
          "generatedatakey",
          "generatedatakeywithoutplaintext",
          "reencryptfrom"
        ]
      },
      "RetiringPrincipal": {
        "desc": "The principal that is given permission to retire the grant by using RetireGrant operation.",
        "type": "String",
        "required": "no",
        "values": [
          "decrypt",
          "encrypt",
          "generatedatakey",
          "generatedatakeywithoutplaintext",
          "reencryptfrom"
        ]
      }
    },
    "res": {
      "GrantId": {
        "desc": "The unique identifier for the grant.",
        "type": "String",
        "values": [
          "decrypt",
          "encrypt",
          "generatedatakey",
          "generatedatakeywithoutplaintext",
          "reencryptfrom"
        ]
      },
      "GrantToken": {
        "desc": "The grant token.",
        "type": "String",
        "values": [
          "decrypt",
          "encrypt",
          "generatedatakey",
          "generatedatakeywithoutplaintext",
          "reencryptfrom"
        ]
      }
    }
  },
  {
    "title": "CreateKey",
    "req": {
      "Asymmetric CMKs": {
        "desc": "To create an asymmetric CMK, use the CustomerMasterKeySpec parameter to specify the type of key material in the CMK. Then, use the KeyUsage parameter to determine whether the CMK will be used to encrypt and decrypt or sign and verify. You can't change these properties after the CMK is created."
      },
      "Symmetric CMKs": {
        "desc": "When creating a symmetric CMK, you don't need to specify the CustomerMasterKeySpec or KeyUsage parameters. The default value for CustomerMasterKeySpec, SYMMETRIC_DEFAULT, and the default value for KeyUsage, ENCRYPT_DECRYPT, are the only valid values for symmetric CMKs."
      },
      "Imported Key Material": {
        "desc": "To import your own key material, begin by creating a symmetric CMK with no key material. To do this, use the Origin parameter of CreateKey with a value of EXTERNAL. Next, use GetParametersForImport operation to get a public key and import token, and use the public key to encrypt your key material. Then, use ImportKeyMaterial with your import token to import the key material. For step-by-step instructions, see Importing Key Material in the AWS Key Management Service Developer Guide . You cannot import the key material into an asymmetric CMK."
      },
      "Custom Key Stores": {
        "desc": "To create a symmetric CMK in a custom key store, use the CustomKeyStoreId parameter to specify the custom key store. You must also use the Origin parameter with a value of AWS_CLOUDHSM. The AWS CloudHSM cluster that is associated with the custom key store must have at least two active HSMs in different Availability Zones in the AWS Region."
      }
    },
    "res": {
      "BypassPolicyLockoutSafetyCheck": {
        "desc": "A flag to indicate whether to bypass the key policy lockout safety check.",
        "type": "Boolean"
      },
      "CustomerMasterKeySpec": {
        "desc": "Specifies the type of CMK to create. The default value, SYMMETRIC_DEFAULT, creates a CMK with a 256-bit symmetric key for encryption and decryption. For help choosing a key spec for your CMK, see How to Choose Your CMK Configuration in the AWS Key Management Service Developer Guide.",
        "type": "String",
        "values": [
          "rsa_2048",
          "rsa_3072",
          "rsa_4096",
          "ecc_nist_p256",
          "ecc_nist_p384",
          "ecc_nist_p521",
          ""
        ]
      },
      "CustomKeyStoreId": {
        "desc": "Creates the CMK in the specified custom key store and the key material in its associated AWS CloudHSM cluster. To create a CMK in a custom key store, you must also specify the Origin parameter with a value of AWS_CLOUDHSM. The AWS CloudHSM cluster that is associated with the custom key store must have at least two active HSMs, each in a different Availability Zone in the Region.",
        "type": "String",
        "values": [
          "rsa_2048",
          "rsa_3072",
          "rsa_4096",
          "ecc_nist_p256",
          "ecc_nist_p384",
          "ecc_nist_p521",
          ""
        ]
      },
      "Description": {
        "desc": "A description of the CMK.",
        "type": "String",
        "values": [
          "rsa_2048",
          "rsa_3072",
          "rsa_4096",
          "ecc_nist_p256",
          "ecc_nist_p384",
          "ecc_nist_p521",
          ""
        ]
      },
      "KeyUsage": {
        "desc": "Determines the cryptographic operations for which you can use the CMK. The default value is ENCRYPT_DECRYPT. This parameter is required only for asymmetric CMKs. You can't change the KeyUsage value after the CMK is created.",
        "type": "String",
        "values": [
          "sign_verify",
          "encrypt_decrypt"
        ]
      },
      "Origin": {
        "desc": "The source of the key material for the CMK. You cannot change the origin after you create the CMK. The default is AWS_KMS, which means AWS KMS creates the key material.",
        "type": "String",
        "values": [
          "aws_kms",
          "external",
          "aws_cloudhsm"
        ]
      },
      "Policy": {
        "desc": "The key policy to attach to the CMK.",
        "type": "String",
        "values": [
          "aws_kms",
          "external",
          "aws_cloudhsm"
        ]
      },
      "Tags": {
        "desc": "One or more tags. Each tag consists of a tag key and a tag value. Both the tag key and the tag value are required, but the tag value can be an empty (null) string.",
        "type": "Array of Tag objects",
        "values": [
          "aws_kms",
          "external",
          "aws_cloudhsm"
        ]
      }
    }
  },
  {
    "title": "Decrypt",
    "req": {
      "CiphertextBlob": {
        "desc": "Ciphertext to be decrypted. The blob includes metadata.",
        "type": "Base64-encoded binary data object",
        "required": "yes"
      },
      "EncryptionAlgorithm": {
        "desc": "Specifies the encryption algorithm that will be used to decrypt the ciphertext. Specify the same algorithm that was used to encrypt the data. If you specify a different algorithm, the Decrypt operation fails.",
        "type": "String",
        "required": "no",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      },
      "EncryptionContext": {
        "desc": "Specifies the encryption context to use when decrypting the data. An encryption context is valid only for cryptographic operations with a symmetric CMK. The standard asymmetric encryption algorithms that AWS KMS uses do not support an encryption context.",
        "type": "String to string map",
        "required": "no",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      },
      "GrantTokens": {
        "desc": "A list of grant tokens.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      },
      "KeyId": {
        "desc": "Specifies the customer master key (CMK) that AWS KMS will use to decrypt the ciphertext. Enter a key ID of the CMK that was used to encrypt the ciphertext.",
        "type": "String",
        "required": "no",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      }
    },
    "res": {
      "EncryptionAlgorithm": {
        "desc": "The encryption algorithm that was used to decrypt the ciphertext.",
        "type": "String",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      },
      "KeyId": {
        "desc": "The Amazon Resource Name (key ARN) of the CMK that was used to decrypt the ciphertext.",
        "type": "String",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      },
      "Plaintext": {
        "desc": "Decrypted plaintext data. When you use the HTTP API or the AWS CLI, the value is Base64-encoded. Otherwise, it is not Base64-encoded.",
        "type": "Base64-encoded binary data object",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      }
    }
  },
  {
    "title": "DeleteAlias",
    "req": {
      "AliasName": {
        "desc": "The alias to be deleted. The alias name must begin with alias/ followed by the alias name, such as alias/ExampleAlias.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "DependencyTimeoutException": {
        "desc": "The system timed out while trying to fulfill the request. The request can be retried.",
        "type": "String"
      },
      "KMSInternalException": {
        "desc": "The request was rejected because an internal exception occurred. The request can be retried.",
        "type": "String"
      },
      "KMSInvalidStateException": {
        "desc": "The request was rejected because the state of the specified resource is not valid for this request.",
        "type": "String"
      },
      "NotFoundException": {
        "desc": "The request was rejected because the specified entity or resource could not be found.",
        "type": "String"
      }
    }
  },
  {
    "title": "DeleteCustomKeyStore",
    "req": {
      "CustomKeyStoreId": {
        "desc": "Enter the ID of the custom key store you want to delete. To find the ID of a custom key store, use the DescribeCustomKeyStores operation.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "CustomKeyStoreHasCMKsException": {
        "desc": "The request was rejected because the custom key store contains AWS KMS customer master keys (CMKs). After verifying that you do not need to use the CMKs, use the ScheduleKeyDeletion operation to delete the CMKs. After they are deleted, you can delete the custom key store.",
        "type": "String"
      },
      "CustomKeyStoreInvalidStateException": {
        "desc": "The request was rejected because of the ConnectionState of the custom key store. To get the ConnectionState of a custom key store, use the DescribeCustomKeyStores operation.",
        "type": "String"
      },
      "CustomKeyStoreNotFoundException": {
        "desc": "The request was rejected because AWS KMS cannot find a custom key store with the specified key store name or ID.",
        "type": "String"
      },
      "KMSInternalException": {
        "desc": "The request was rejected because an internal exception occurred. The request can be retried.",
        "type": "String"
      }
    }
  },
  {
    "title": "DeleteImportedKeyMaterial",
    "req": {
      "KeyId": {
        "desc": "Identifies the CMK from which you are deleting imported key material. The Origin of the CMK must be EXTERNAL.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "DependencyTimeoutException": {
        "desc": "The system timed out while trying to fulfill the request. The request can be retried.",
        "type": "String"
      },
      "InvalidArnException": {
        "desc": "The request was rejected because a specified ARN, or an ARN in a key policy, is not valid.",
        "type": "String"
      },
      "KMSInternalException": {
        "desc": "The request was rejected because an internal exception occurred. The request can be retried.",
        "type": "String"
      },
      "KMSInvalidStateException": {
        "desc": "The request was rejected because the state of the specified resource is not valid for this request.",
        "type": "String"
      },
      "NotFoundException": {
        "desc": "The request was rejected because the specified entity or resource could not be found.",
        "type": "String"
      },
      "UnsupportedOperationException": {
        "desc": "The request was rejected because a specified parameter is not supported or a specified resource is not valid for this operation.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeCustomKeyStores",
    "req": {
      "CustomKeyStoreId": {
        "desc": "Gets only information about the specified custom key store. Enter the key store ID.",
        "type": "String",
        "required": "no"
      },
      "CustomKeyStoreName": {
        "desc": "Gets only information about the specified custom key store. Enter the friendly name of the custom key store.",
        "type": "String",
        "required": "no"
      },
      "Limit": {
        "desc": "Use this parameter to specify the maximum number of items to return. When this value is present, AWS KMS does not return more than the specified number of items, but it might return fewer.",
        "type": "Integer",
        "required": "no"
      },
      "Marker": {
        "desc": "Use this parameter in a subsequent request after you receive a response with truncated results. Set it to the value of NextMarker from the truncated response you just received.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "CustomKeyStores": {
        "desc": "Contains metadata about each custom key store.",
        "type": "Array of CustomKeyStoresListEntry objects"
      },
      "NextMarker": {
        "desc": "When Truncated is true, this element is present and contains the value to use for the Marker parameter in a subsequent request.",
        "type": "String"
      },
      "Truncated": {
        "desc": "A flag that indicates whether there are more items in the list. When this value is true, the list in this response is truncated. To get more items, pass the value of the NextMarker element in thisresponse to the Marker parameter in a subsequent request.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DescribeKey",
    "req": {
      "KeyId": {
        "desc": "Describes the specified customer master key (CMK).",
        "type": "String",
        "required": "yes"
      },
      "GrantTokens": {
        "desc": "A list of grant tokens.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "KeyMetadata": {
        "desc": "Metadata associated with the key.",
        "type": "KeyMetadata object"
      }
    }
  },
  {
    "title": "DisableKey",
    "req": {
      "KeyId": {
        "desc": "A unique identifier for the customer master key (CMK).",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "DependencyTimeoutException": {
        "desc": "The system timed out while trying to fulfill the request. The request can be retried.",
        "type": "String"
      },
      "InvalidArnException": {
        "desc": "The request was rejected because a specified ARN, or an ARN in a key policy, is not valid.",
        "type": "String"
      },
      "KMSInternalException": {
        "desc": "The request was rejected because an internal exception occurred. The request can be retried.",
        "type": "String"
      },
      "KMSInvalidStateException": {
        "desc": "The request was rejected because the state of the specified resource is not valid for this request.",
        "type": "String"
      },
      "NotFoundException": {
        "desc": "The request was rejected because the specified entity or resource could not be found.",
        "type": "String"
      }
    }
  },
  {
    "title": "DisableKeyRotation",
    "req": {
      "KeyId": {
        "desc": "Identifies a symmetric customer master key (CMK). You cannot enable automatic rotation of asymmetric CMKs, CMKs with imported key material, or CMKs in a custom key store.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "DependencyTimeoutException": {
        "desc": "The system timed out while trying to fulfill the request. The request can be retried.",
        "type": "String"
      },
      "DisabledException": {
        "desc": "The request was rejected because the specified CMK is not enabled.",
        "type": "String"
      },
      "InvalidArnException": {
        "desc": "The request was rejected because a specified ARN, or an ARN in a key policy, is not valid.",
        "type": "String"
      },
      "KMSInternalException": {
        "desc": "The request was rejected because an internal exception occurred. The request can be retried.",
        "type": "String"
      },
      "KMSInvalidStateException": {
        "desc": "The request was rejected because the state of the specified resource is not valid for this request.",
        "type": "String"
      },
      "NotFoundException": {
        "desc": "The request was rejected because the specified entity or resource could not be found.",
        "type": "String"
      },
      "UnsupportedOperationException": {
        "desc": "The request was rejected because a specified parameter is not supported or a specified resource is not valid for this operation.",
        "type": "String"
      }
    }
  },
  {
    "title": "DisconnectCustomKeyStore",
    "req": {
      "CustomKeyStoreId": {
        "desc": "Enter the ID of the custom key store you want to disconnect. To find the ID of a custom key store, use the DescribeCustomKeyStores operation.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "CustomKeyStoreInvalidStateException": {
        "desc": "The request was rejected because of the ConnectionState of the custom key store. To get the ConnectionState of a custom key store, use the DescribeCustomKeyStores operation.",
        "type": "String"
      },
      "CustomKeyStoreNotFoundException": {
        "desc": "The request was rejected because AWS KMS cannot find a custom key store with the specified key store name or ID.",
        "type": "String"
      },
      "KMSInternalException": {
        "desc": "The request was rejected because an internal exception occurred. The request can be retried.",
        "type": "String"
      }
    }
  },
  {
    "title": "EnableKey",
    "req": {
      "KeyId": {
        "desc": "A unique identifier for the customer master key (CMK).",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "DependencyTimeoutException": {
        "desc": "The system timed out while trying to fulfill the request. The request can be retried.",
        "type": "String"
      },
      "InvalidArnException": {
        "desc": "The request was rejected because a specified ARN, or an ARN in a key policy, is not valid.",
        "type": "String"
      },
      "KMSInternalException": {
        "desc": "The request was rejected because an internal exception occurred. The request can be retried.",
        "type": "String"
      },
      "KMSInvalidStateException": {
        "desc": "The request was rejected because the state of the specified resource is not valid for this request.",
        "type": "String"
      },
      "LimitExceededException": {
        "desc": "The request was rejected because a quota was exceeded. For more information, see Quotas in the AWS Key Management Service Developer Guide.",
        "type": "String"
      },
      "NotFoundException": {
        "desc": "The request was rejected because the specified entity or resource could not be found.",
        "type": "String"
      }
    }
  },
  {
    "title": "EnableKeyRotation",
    "req": {
      "KeyId": {
        "desc": "Identifies a symmetric customer master key (CMK). You cannot enable automatic rotation of asymmetric CMKs, CMKs with imported key material, or CMKs in a custom key store.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "DependencyTimeoutException": {
        "desc": "The system timed out while trying to fulfill the request. The request can be retried.",
        "type": "String"
      },
      "DisabledException": {
        "desc": "The request was rejected because the specified CMK is not enabled.",
        "type": "String"
      },
      "InvalidArnException": {
        "desc": "The request was rejected because a specified ARN, or an ARN in a key policy, is not valid.",
        "type": "String"
      },
      "KMSInternalException": {
        "desc": "The request was rejected because an internal exception occurred. The request can be retried.",
        "type": "String"
      },
      "KMSInvalidStateException": {
        "desc": "The request was rejected because the state of the specified resource is not valid for this request.",
        "type": "String"
      },
      "NotFoundException": {
        "desc": "The request was rejected because the specified entity or resource could not be found.",
        "type": "String"
      },
      "UnsupportedOperationException": {
        "desc": "The request was rejected because a specified parameter is not supported or a specified resource is not valid for this operation.",
        "type": "String"
      }
    }
  },
  {
    "title": "Encrypt",
    "req": {
      "KeyId": {
        "desc": "A unique identifier for the customer master key (CMK).",
        "type": "String",
        "required": "yes"
      },
      "Plaintext": {
        "desc": "Data to be encrypted.",
        "type": "Base64-encoded binary data object",
        "required": "yes"
      },
      "EncryptionAlgorithm": {
        "desc": "Specifies the encryption algorithm that AWS KMS will use to encrypt the plaintext message. The algorithm must be compatible with the CMK that you specify.",
        "type": "String",
        "required": "no",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      },
      "EncryptionContext": {
        "desc": "Specifies the encryption context that will be used to encrypt the data. An encryption context is valid only for cryptographic operations with a symmetric CMK. The standard asymmetric encryption algorithms that AWS KMS uses do not support an encryption context.",
        "type": "String to string map",
        "required": "no",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      },
      "GrantTokens": {
        "desc": "A list of grant tokens.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      }
    },
    "res": {
      "CiphertextBlob": {
        "desc": "The encrypted plaintext. When you use the HTTP API or the AWS CLI, the value is Base64-encoded. Otherwise, it is not Base64-encoded.",
        "type": "Base64-encoded binary data object",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      },
      "EncryptionAlgorithm": {
        "desc": "The encryption algorithm that was used to encrypt the plaintext.",
        "type": "String",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      },
      "KeyId": {
        "desc": "The Amazon Resource Name (key ARN) of the CMK that was used to encrypt the plaintext.",
        "type": "String",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      }
    }
  },
  {
    "title": "GenerateDataKey",
    "req": {
      "KeyId": {
        "desc": "Identifies the symmetric CMK that encrypts the data key.",
        "type": "String",
        "required": "yes"
      },
      "EncryptionContext": {
        "desc": "Specifies the encryption context that will be used when encrypting the data key.",
        "type": "String to string map",
        "required": "no"
      },
      "GrantTokens": {
        "desc": "A list of grant tokens.",
        "type": "Array of strings",
        "required": "no"
      },
      "KeySpec": {
        "desc": "Specifies the length of the data key. Use AES_128 to generate a 128-bit symmetric key, or AES_256 to generate a 256-bit symmetric key.",
        "type": "String",
        "required": "no",
        "values": [
          "aes_256",
          "aes_128"
        ]
      },
      "NumberOfBytes": {
        "desc": "Specifies the length of the data key in bytes. For example, use the value 64 to generate a 512-bit data key (64 bytes is 512 bits). For 128-bit (16-byte) and 256-bit (32-byte) data keys, use the KeySpec parameter.",
        "type": "Integer",
        "required": "no",
        "values": [
          "aes_256",
          "aes_128"
        ]
      }
    },
    "res": {
      "CiphertextBlob": {
        "desc": "The encrypted copy of the data key. When you use the HTTP API or the AWS CLI, the value is Base64-encoded. Otherwise, it is not Base64-encoded.",
        "type": "Base64-encoded binary data object",
        "values": [
          "aes_256",
          "aes_128"
        ]
      },
      "KeyId": {
        "desc": "The Amazon Resource Name (key ARN) of the CMK that encrypted the data key.",
        "type": "String",
        "values": [
          "aes_256",
          "aes_128"
        ]
      },
      "Plaintext": {
        "desc": "The plaintext data key. When you use the HTTP API or the AWS CLI, the value is Base64-encoded. Otherwise, it is not Base64-encoded. Use this data key to encrypt your data outside of KMS. Then, remove it from memory as soon as possible.",
        "type": "Base64-encoded binary data object",
        "values": [
          "aes_256",
          "aes_128"
        ]
      }
    }
  },
  {
    "title": "GenerateDataKeyPair",
    "req": {
      "KeyId": {
        "desc": "Specifies the symmetric CMK that encrypts the private key in the data key pair. You cannot specify an asymmetric CMK or a CMK in a custom key store. To get the type and origin of your CMK, use the DescribeKey operation.",
        "type": "String",
        "required": "yes"
      },
      "KeyPairSpec": {
        "desc": "Determines the type of data key pair that is generated.",
        "type": "String",
        "required": "yes",
        "values": [
          "rsa_2048",
          "rsa_3072",
          "rsa_4096",
          "ecc_nist_p256",
          "ecc_nist_p384",
          "ecc_nist_p521",
          ""
        ]
      },
      "EncryptionContext": {
        "desc": "Specifies the encryption context that will be used when encrypting the private key in the data key pair.",
        "type": "String to string map",
        "required": "no",
        "values": [
          "rsa_2048",
          "rsa_3072",
          "rsa_4096",
          "ecc_nist_p256",
          "ecc_nist_p384",
          "ecc_nist_p521",
          ""
        ]
      },
      "GrantTokens": {
        "desc": "A list of grant tokens.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "rsa_2048",
          "rsa_3072",
          "rsa_4096",
          "ecc_nist_p256",
          "ecc_nist_p384",
          "ecc_nist_p521",
          ""
        ]
      }
    },
    "res": {
      "KeyId": {
        "desc": "The Amazon Resource Name (key ARN) of the CMK that encrypted the private key.",
        "type": "String",
        "values": [
          "rsa_2048",
          "rsa_3072",
          "rsa_4096",
          "ecc_nist_p256",
          "ecc_nist_p384",
          "ecc_nist_p521",
          ""
        ]
      },
      "KeyPairSpec": {
        "desc": "The type of data key pair that was generated.",
        "type": "String",
        "values": [
          "rsa_2048",
          "rsa_3072",
          "rsa_4096",
          "ecc_nist_p256",
          "ecc_nist_p384",
          "ecc_nist_p521",
          ""
        ]
      },
      "PrivateKeyCiphertextBlob": {
        "desc": "The encrypted copy of the private key. When you use the HTTP API or the AWS CLI, the value is Base64-encoded. Otherwise, it is not Base64-encoded.",
        "type": "Base64-encoded binary data object",
        "values": [
          "rsa_2048",
          "rsa_3072",
          "rsa_4096",
          "ecc_nist_p256",
          "ecc_nist_p384",
          "ecc_nist_p521",
          ""
        ]
      },
      "PrivateKeyPlaintext": {
        "desc": "The plaintext copy of the private key. When you use the HTTP API or the AWS CLI, the value is Base64-encoded. Otherwise, it is not Base64-encoded.",
        "type": "Base64-encoded binary data object",
        "values": [
          "rsa_2048",
          "rsa_3072",
          "rsa_4096",
          "ecc_nist_p256",
          "ecc_nist_p384",
          "ecc_nist_p521",
          ""
        ]
      },
      "PublicKey": {
        "desc": "The public key (in plaintext).",
        "type": "Base64-encoded binary data object",
        "values": [
          "rsa_2048",
          "rsa_3072",
          "rsa_4096",
          "ecc_nist_p256",
          "ecc_nist_p384",
          "ecc_nist_p521",
          ""
        ]
      }
    }
  },
  {
    "title": "GenerateDataKeyPairWithoutPlaintext",
    "req": {
      "KeyId": {
        "desc": "Specifies the CMK that encrypts the private key in the data key pair. You must specify a symmetric CMK. You cannot use an asymmetric CMK or a CMK in a custom key store. To get the type and origin of your CMK, use the DescribeKey operation.",
        "type": "String",
        "required": "yes"
      },
      "KeyPairSpec": {
        "desc": "Determines the type of data key pair that is generated.",
        "type": "String",
        "required": "yes",
        "values": [
          "rsa_2048",
          "rsa_3072",
          "rsa_4096",
          "ecc_nist_p256",
          "ecc_nist_p384",
          "ecc_nist_p521",
          ""
        ]
      },
      "EncryptionContext": {
        "desc": "Specifies the encryption context that will be used when encrypting the private key in the data key pair.",
        "type": "String to string map",
        "required": "no",
        "values": [
          "rsa_2048",
          "rsa_3072",
          "rsa_4096",
          "ecc_nist_p256",
          "ecc_nist_p384",
          "ecc_nist_p521",
          ""
        ]
      },
      "GrantTokens": {
        "desc": "A list of grant tokens.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "rsa_2048",
          "rsa_3072",
          "rsa_4096",
          "ecc_nist_p256",
          "ecc_nist_p384",
          "ecc_nist_p521",
          ""
        ]
      }
    },
    "res": {
      "KeyId": {
        "desc": "The Amazon Resource Name (key ARN) of the CMK that encrypted the private key.",
        "type": "String",
        "values": [
          "rsa_2048",
          "rsa_3072",
          "rsa_4096",
          "ecc_nist_p256",
          "ecc_nist_p384",
          "ecc_nist_p521",
          ""
        ]
      },
      "KeyPairSpec": {
        "desc": "The type of data key pair that was generated.",
        "type": "String",
        "values": [
          "rsa_2048",
          "rsa_3072",
          "rsa_4096",
          "ecc_nist_p256",
          "ecc_nist_p384",
          "ecc_nist_p521",
          ""
        ]
      },
      "PrivateKeyCiphertextBlob": {
        "desc": "The encrypted copy of the private key. When you use the HTTP API or the AWS CLI, the value is Base64-encoded. Otherwise, it is not Base64-encoded.",
        "type": "Base64-encoded binary data object",
        "values": [
          "rsa_2048",
          "rsa_3072",
          "rsa_4096",
          "ecc_nist_p256",
          "ecc_nist_p384",
          "ecc_nist_p521",
          ""
        ]
      },
      "PublicKey": {
        "desc": "The public key (in plaintext).",
        "type": "Base64-encoded binary data object",
        "values": [
          "rsa_2048",
          "rsa_3072",
          "rsa_4096",
          "ecc_nist_p256",
          "ecc_nist_p384",
          "ecc_nist_p521",
          ""
        ]
      }
    }
  },
  {
    "title": "GenerateDataKeyWithoutPlaintext",
    "req": {
      "KeyId": {
        "desc": "The identifier of the symmetric customer master key (CMK) that encrypts the data key.",
        "type": "String",
        "required": "yes"
      },
      "EncryptionContext": {
        "desc": "Specifies the encryption context that will be used when encrypting the data key.",
        "type": "String to string map",
        "required": "no"
      },
      "GrantTokens": {
        "desc": "A list of grant tokens.",
        "type": "Array of strings",
        "required": "no"
      },
      "KeySpec": {
        "desc": "The length of the data key. Use AES_128 to generate a 128-bit symmetric key, or AES_256 to generate a 256-bit symmetric key.",
        "type": "String",
        "required": "no",
        "values": [
          "aes_256",
          "aes_128"
        ]
      },
      "NumberOfBytes": {
        "desc": "The length of the data key in bytes. For example, use the value 64 to generate a 512-bit data key (64 bytes is 512 bits). For common key lengths (128-bit and 256-bit symmetric keys), we recommend that you use the KeySpec field instead of this one.",
        "type": "Integer",
        "required": "no",
        "values": [
          "aes_256",
          "aes_128"
        ]
      }
    },
    "res": {
      "CiphertextBlob": {
        "desc": "The encrypted data key. When you use the HTTP API or the AWS CLI, the value is Base64-encoded. Otherwise, it is not Base64-encoded.",
        "type": "Base64-encoded binary data object",
        "values": [
          "aes_256",
          "aes_128"
        ]
      },
      "KeyId": {
        "desc": "The Amazon Resource Name (key ARN) of the CMK that encrypted the data key.",
        "type": "String",
        "values": [
          "aes_256",
          "aes_128"
        ]
      }
    }
  },
  {
    "title": "GenerateRandom",
    "req": {
      "CustomKeyStoreId": {
        "desc": "Generates the random byte string in the AWS CloudHSM cluster that is associated with the specified custom key store. To find the ID of a custom key store, use the DescribeCustomKeyStores operation.",
        "type": "String",
        "required": "no"
      },
      "NumberOfBytes": {
        "desc": "The length of the byte string.",
        "type": "Integer",
        "required": "no"
      }
    },
    "res": {
      "Plaintext": {
        "desc": "The random byte string. When you use the HTTP API or the AWS CLI, the value is Base64-encoded. Otherwise, it is not Base64-encoded.",
        "type": "Base64-encoded binary data object"
      }
    }
  },
  {
    "title": "GetKeyPolicy",
    "req": {
      "KeyId": {
        "desc": "A unique identifier for the customer master key (CMK).",
        "type": "String",
        "required": "yes"
      },
      "PolicyName": {
        "desc": "Specifies the name of the key policy. The only valid name is default. To get the names of key policies, use ListKeyPolicies.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "Policy": {
        "desc": "A key policy document in JSON format.",
        "type": "String"
      }
    }
  },
  {
    "title": "GetKeyRotationStatus",
    "req": {
      "KeyId": {
        "desc": "A unique identifier for the customer master key (CMK).",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "KeyRotationEnabled": {
        "desc": "A Boolean value that specifies whether key rotation is enabled.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "GetParametersForImport",
    "req": {
      "KeyId": {
        "desc": "The identifier of the symmetric CMK into which you will import key material. The Origin of the CMK must be EXTERNAL.",
        "type": "String",
        "required": "yes"
      },
      "WrappingAlgorithm": {
        "desc": "The algorithm you will use to encrypt the key material before importing it with ImportKeyMaterial. For more information, see Encrypt the Key Material in the AWS Key Management Service Developer Guide.",
        "type": "String",
        "required": "yes",
        "values": [
          "rsaes_pkcs1_v1_5",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      },
      "WrappingKeySpec": {
        "desc": "The type of wrapping key (public key) to return in the response. Only 2048-bit RSA public keys are supported.",
        "type": "String",
        "required": "yes",
        "values": [
          "rsa_2048"
        ]
      }
    },
    "res": {
      "ImportToken": {
        "desc": "The import token to send in a subsequent ImportKeyMaterial request.",
        "type": "Base64-encoded binary data object",
        "values": [
          "rsa_2048"
        ]
      },
      "KeyId": {
        "desc": "The Amazon Resource Name (key ARN) of the CMK to use in a subsequent ImportKeyMaterial request. This is the same CMK specified in the GetParametersForImport request.",
        "type": "String",
        "values": [
          "rsa_2048"
        ]
      },
      "ParametersValidTo": {
        "desc": "The time at which the import token and public key are no longer valid. After this time, you cannot use them to make an ImportKeyMaterial request and you must send another GetParametersForImport request to get new ones.",
        "type": "Timestamp",
        "values": [
          "rsa_2048"
        ]
      },
      "PublicKey": {
        "desc": "The public key to use to encrypt the key material before importing it with ImportKeyMaterial.",
        "type": "Base64-encoded binary data object",
        "values": [
          "rsa_2048"
        ]
      }
    }
  },
  {
    "title": "GetPublicKey",
    "req": {
      "KeyId": {
        "desc": "Identifies the asymmetric CMK that includes the public key.",
        "type": "String",
        "required": "yes"
      },
      "GrantTokens": {
        "desc": "A list of grant tokens.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "CustomerMasterKeySpec": {
        "desc": "The type of the of the public key that was downloaded.",
        "type": "String",
        "values": [
          "rsa_2048",
          "rsa_3072",
          "rsa_4096",
          "ecc_nist_p256",
          "ecc_nist_p384",
          "ecc_nist_p521",
          ""
        ]
      },
      "EncryptionAlgorithms": {
        "desc": "The encryption algorithms that AWS KMS supports for this key.",
        "type": "Array of strings",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      },
      "KeyId": {
        "desc": "The Amazon Resource Name (key ARN) of the asymmetric CMK from which the public key was downloaded.",
        "type": "String",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      },
      "KeyUsage": {
        "desc": "The permitted use of the public key. Valid values are ENCRYPT_DECRYPT or SIGN_VERIFY.",
        "type": "String",
        "values": [
          "sign_verify",
          "encrypt_decrypt"
        ]
      },
      "PublicKey": {
        "desc": "The exported public key.",
        "type": "Base64-encoded binary data object",
        "values": [
          "sign_verify",
          "encrypt_decrypt"
        ]
      },
      "SigningAlgorithms": {
        "desc": "The signing algorithms that AWS KMS supports for this key.",
        "type": "Array of strings",
        "values": [
          "rsassa_pss_sha_256",
          "rsassa_pss_sha_384",
          "rsassa_pss_sha_512",
          "rsassa_pkcs1_v1_5_sha_256"
        ]
      }
    }
  },
  {
    "title": "ImportKeyMaterial",
    "req": {
      "EncryptedKeyMaterial": {
        "desc": "The encrypted key material to import. The key material must be encrypted with the public wrapping key that GetParametersForImport returned, using the wrapping algorithm that you specified in the same GetParametersForImport request.",
        "type": "Base64-encoded binary data object",
        "required": "yes"
      },
      "ImportToken": {
        "desc": "The import token that you received in the response to a previous GetParametersForImport request. It must be from the same response that contained the public key that you used to encrypt the key material.",
        "type": "Base64-encoded binary data object",
        "required": "yes"
      },
      "KeyId": {
        "desc": "The identifier of the symmetric CMK that receives the imported key material. The CMK's Origin must be EXTERNAL. This must be the same CMK specified in the KeyID parameter of the corresponding GetParametersForImport request.",
        "type": "String",
        "required": "yes"
      },
      "ExpirationModel": {
        "desc": "Specifies whether the key material expires. The default is KEY_MATERIAL_EXPIRES, in which case you must include the ValidTo parameter. When this parameter is set to KEY_MATERIAL_DOES_NOT_EXPIRE, you must omit the ValidTo parameter.",
        "type": "String",
        "required": "no",
        "values": [
          "key_material_expires",
          "key_material_does_not_expire"
        ]
      },
      "ValidTo": {
        "desc": "The time at which the imported key material expires. When the key material expires, AWS KMS deletes the key material and the CMK becomes unusable. You must omit this parameter when the ExpirationModel parameter is set to KEY_MATERIAL_DOES_NOT_EXPIRE. Otherwise it is required.",
        "type": "Timestamp",
        "required": "no",
        "values": [
          "key_material_expires",
          "key_material_does_not_expire"
        ]
      }
    },
    "res": {
      "DependencyTimeoutException": {
        "desc": "The system timed out while trying to fulfill the request. The request can be retried.",
        "type": "Timestamp",
        "values": [
          "key_material_expires",
          "key_material_does_not_expire"
        ]
      },
      "ExpiredImportTokenException": {
        "desc": "The request was rejected because the specified import token is expired. Use GetParametersForImport to get a new import token and public key, use the new public key to encrypt the key material, and then try the request again.",
        "type": "Timestamp",
        "values": [
          "key_material_expires",
          "key_material_does_not_expire"
        ]
      },
      "IncorrectKeyMaterialException": {
        "desc": "The request was rejected because the key material in the request is, expired, invalid, or is not the same key material that was previously imported into this customer master key (CMK).",
        "type": "Timestamp",
        "values": [
          "key_material_expires",
          "key_material_does_not_expire"
        ]
      },
      "InvalidArnException": {
        "desc": "The request was rejected because a specified ARN, or an ARN in a key policy, is not valid.",
        "type": "Timestamp",
        "values": [
          "key_material_expires",
          "key_material_does_not_expire"
        ]
      },
      "InvalidCiphertextException": {
        "desc": "From the Decrypt or ReEncrypt operation, the request was rejected because the specified ciphertext, or additional authenticated data incorporated into the ciphertext, such as the encryption context, is corrupted, missing, or otherwise invalid.",
        "type": "Timestamp",
        "values": [
          "key_material_expires",
          "key_material_does_not_expire"
        ]
      },
      "InvalidImportTokenException": {
        "desc": "The request was rejected because the provided import token is invalid or is associated with a different customer master key (CMK).",
        "type": "Timestamp",
        "values": [
          "key_material_expires",
          "key_material_does_not_expire"
        ]
      },
      "KMSInternalException": {
        "desc": "The request was rejected because an internal exception occurred. The request can be retried.",
        "type": "Timestamp",
        "values": [
          "key_material_expires",
          "key_material_does_not_expire"
        ]
      },
      "KMSInvalidStateException": {
        "desc": "The request was rejected because the state of the specified resource is not valid for this request.",
        "type": "Timestamp",
        "values": [
          "key_material_expires",
          "key_material_does_not_expire"
        ]
      },
      "NotFoundException": {
        "desc": "The request was rejected because the specified entity or resource could not be found.",
        "type": "Timestamp",
        "values": [
          "key_material_expires",
          "key_material_does_not_expire"
        ]
      },
      "UnsupportedOperationException": {
        "desc": "The request was rejected because a specified parameter is not supported or a specified resource is not valid for this operation.",
        "type": "Timestamp",
        "values": [
          "key_material_expires",
          "key_material_does_not_expire"
        ]
      }
    }
  },
  {
    "title": "ListAliases",
    "req": {
      "KeyId": {
        "desc": "Lists only aliases that refer to the specified CMK. The value of this parameter can be the ID or Amazon Resource Name (ARN) of a CMK in the caller's account and region. You cannot use an alias name or alias ARN in this value.",
        "type": "String",
        "required": "no"
      },
      "Limit": {
        "desc": "Use this parameter to specify the maximum number of items to return. When this value is present, AWS KMS does not return more than the specified number of items, but it might return fewer.",
        "type": "Integer",
        "required": "no"
      },
      "Marker": {
        "desc": "Use this parameter in a subsequent request after you receive a response with truncated results. Set it to the value of NextMarker from the truncated response you just received.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "Aliases": {
        "desc": "A list of aliases.",
        "type": "Array of AliasListEntry objects"
      },
      "NextMarker": {
        "desc": "When Truncated is true, this element is present and contains the value to use for the Marker parameter in a subsequent request.",
        "type": "String"
      },
      "Truncated": {
        "desc": "A flag that indicates whether there are more items in the list. When this value is true, the list in this response is truncated. To get more items, pass the value of the NextMarker element in thisresponse to the Marker parameter in a subsequent request.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ListGrants",
    "req": {
      "KeyId": {
        "desc": "A unique identifier for the customer master key (CMK).",
        "type": "String",
        "required": "yes"
      },
      "Limit": {
        "desc": "Use this parameter to specify the maximum number of items to return. When this value is present, AWS KMS does not return more than the specified number of items, but it might return fewer.",
        "type": "Integer",
        "required": "no"
      },
      "Marker": {
        "desc": "Use this parameter in a subsequent request after you receive a response with truncated results. Set it to the value of NextMarker from the truncated response you just received.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "Grants": {
        "desc": "A list of grants.",
        "type": "Array of GrantListEntry objects"
      },
      "NextMarker": {
        "desc": "When Truncated is true, this element is present and contains the value to use for the Marker parameter in a subsequent request.",
        "type": "String"
      },
      "Truncated": {
        "desc": "A flag that indicates whether there are more items in the list. When this value is true, the list in this response is truncated. To get more items, pass the value of the NextMarker element in thisresponse to the Marker parameter in a subsequent request.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ListKeyPolicies",
    "req": {
      "KeyId": {
        "desc": "A unique identifier for the customer master key (CMK).",
        "type": "String",
        "required": "yes"
      },
      "Limit": {
        "desc": "Use this parameter to specify the maximum number of items to return. When this value is present, AWS KMS does not return more than the specified number of items, but it might return fewer.",
        "type": "Integer",
        "required": "no"
      },
      "Marker": {
        "desc": "Use this parameter in a subsequent request after you receive a response with truncated results. Set it to the value of NextMarker from the truncated response you just received.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "NextMarker": {
        "desc": "When Truncated is true, this element is present and contains the value to use for the Marker parameter in a subsequent request.",
        "type": "String"
      },
      "PolicyNames": {
        "desc": "A list of key policy names. The only valid value is default.",
        "type": "Array of strings"
      },
      "Truncated": {
        "desc": "A flag that indicates whether there are more items in the list. When this value is true, the list in this response is truncated. To get more items, pass the value of the NextMarker element in thisresponse to the Marker parameter in a subsequent request.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ListKeys",
    "req": {
      "Limit": {
        "desc": "Use this parameter to specify the maximum number of items to return. When this value is present, AWS KMS does not return more than the specified number of items, but it might return fewer.",
        "type": "Integer",
        "required": "no"
      },
      "Marker": {
        "desc": "Use this parameter in a subsequent request after you receive a response with truncated results. Set it to the value of NextMarker from the truncated response you just received.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "Keys": {
        "desc": "A list of customer master keys (CMKs).",
        "type": "Array of KeyListEntry objects"
      },
      "NextMarker": {
        "desc": "When Truncated is true, this element is present and contains the value to use for the Marker parameter in a subsequent request.",
        "type": "String"
      },
      "Truncated": {
        "desc": "A flag that indicates whether there are more items in the list. When this value is true, the list in this response is truncated. To get more items, pass the value of the NextMarker element in thisresponse to the Marker parameter in a subsequent request.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ListResourceTags",
    "req": {
      "KeyId": {
        "desc": "A unique identifier for the customer master key (CMK).",
        "type": "String",
        "required": "yes"
      },
      "Limit": {
        "desc": "Use this parameter to specify the maximum number of items to return. When this value is present, AWS KMS does not return more than the specified number of items, but it might return fewer.",
        "type": "Integer",
        "required": "no"
      },
      "Marker": {
        "desc": "Use this parameter in a subsequent request after you receive a response with truncated results. Set it to the value of NextMarker from the truncated response you just received.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "NextMarker": {
        "desc": "When Truncated is true, this element is present and contains the value to use for the Marker parameter in a subsequent request.",
        "type": "String"
      },
      "Tags": {
        "desc": "A list of tags. Each tag consists of a tag key and a tag value.",
        "type": "Array of Tag objects"
      },
      "Truncated": {
        "desc": "A flag that indicates whether there are more items in the list. When this value is true, the list in this response is truncated. To get more items, pass the value of the NextMarker element in thisresponse to the Marker parameter in a subsequent request.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ListRetirableGrants",
    "req": {
      "RetiringPrincipal": {
        "desc": "The retiring principal for which to list grants.",
        "type": "String",
        "required": "yes"
      },
      "Limit": {
        "desc": "Use this parameter to specify the maximum number of items to return. When this value is present, AWS KMS does not return more than the specified number of items, but it might return fewer.",
        "type": "Integer",
        "required": "no"
      },
      "Marker": {
        "desc": "Use this parameter in a subsequent request after you receive a response with truncated results. Set it to the value of NextMarker from the truncated response you just received.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "Grants": {
        "desc": "A list of grants.",
        "type": "Array of GrantListEntry objects"
      },
      "NextMarker": {
        "desc": "When Truncated is true, this element is present and contains the value to use for the Marker parameter in a subsequent request.",
        "type": "String"
      },
      "Truncated": {
        "desc": "A flag that indicates whether there are more items in the list. When this value is true, the list in this response is truncated. To get more items, pass the value of the NextMarker element in thisresponse to the Marker parameter in a subsequent request.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "PutKeyPolicy",
    "req": {
      "KeyId": {
        "desc": "A unique identifier for the customer master key (CMK).",
        "type": "String",
        "required": "yes"
      },
      "Policy": {
        "desc": "The key policy to attach to the CMK.",
        "type": "String",
        "required": "yes"
      },
      "PolicyName": {
        "desc": "The name of the key policy. The only valid value is default.",
        "type": "String",
        "required": "yes"
      },
      "BypassPolicyLockoutSafetyCheck": {
        "desc": "A flag to indicate whether to bypass the key policy lockout safety check.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "DependencyTimeoutException": {
        "desc": "The system timed out while trying to fulfill the request. The request can be retried.",
        "type": "Boolean"
      },
      "InvalidArnException": {
        "desc": "The request was rejected because a specified ARN, or an ARN in a key policy, is not valid.",
        "type": "Boolean"
      },
      "KMSInternalException": {
        "desc": "The request was rejected because an internal exception occurred. The request can be retried.",
        "type": "Boolean"
      },
      "KMSInvalidStateException": {
        "desc": "The request was rejected because the state of the specified resource is not valid for this request.",
        "type": "Boolean"
      },
      "LimitExceededException": {
        "desc": "The request was rejected because a quota was exceeded. For more information, see Quotas in the AWS Key Management Service Developer Guide.",
        "type": "Boolean"
      },
      "MalformedPolicyDocumentException": {
        "desc": "The request was rejected because the specified policy is not syntactically or semantically correct.",
        "type": "Boolean"
      },
      "NotFoundException": {
        "desc": "The request was rejected because the specified entity or resource could not be found.",
        "type": "Boolean"
      },
      "UnsupportedOperationException": {
        "desc": "The request was rejected because a specified parameter is not supported or a specified resource is not valid for this operation.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ReEncrypt",
    "req": {
      "CiphertextBlob": {
        "desc": "Ciphertext of the data to reencrypt.",
        "type": "Base64-encoded binary data object",
        "required": "yes"
      },
      "DestinationKeyId": {
        "desc": "A unique identifier for the CMK that is used to reencrypt the data. Specify a symmetric or asymmetric CMK with a KeyUsage value of ENCRYPT_DECRYPT. To find the KeyUsage value of a CMK, use the DescribeKey operation.",
        "type": "String",
        "required": "yes"
      },
      "DestinationEncryptionAlgorithm": {
        "desc": "Specifies the encryption algorithm that AWS KMS will use to reecrypt the data after it has decrypted it. The default value, SYMMETRIC_DEFAULT, represents the encryption algorithm used for symmetric CMKs.",
        "type": "String",
        "required": "no",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      },
      "DestinationEncryptionContext": {
        "desc": "Specifies that encryption context to use when the reencrypting the data.",
        "type": "String to string map",
        "required": "no",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      },
      "GrantTokens": {
        "desc": "A list of grant tokens.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      },
      "SourceEncryptionAlgorithm": {
        "desc": "Specifies the encryption algorithm that AWS KMS will use to decrypt the ciphertext before it is reencrypted. The default value, SYMMETRIC_DEFAULT, represents the algorithm used for symmetric CMKs.",
        "type": "String",
        "required": "no",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      },
      "SourceEncryptionContext": {
        "desc": "Specifies the encryption context to use to decrypt the ciphertext. Enter the same encryption context that was used to encrypt the ciphertext.",
        "type": "String to string map",
        "required": "no",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      },
      "SourceKeyId": {
        "desc": "A unique identifier for the CMK that is used to decrypt the ciphertext before it reencrypts it using the destination CMK.",
        "type": "String",
        "required": "no",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      }
    },
    "res": {
      "CiphertextBlob": {
        "desc": "The reencrypted data. When you use the HTTP API or the AWS CLI, the value is Base64-encoded. Otherwise, it is not Base64-encoded.",
        "type": "Base64-encoded binary data object",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      },
      "DestinationEncryptionAlgorithm": {
        "desc": "The encryption algorithm that was used to reencrypt the data.",
        "type": "String",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      },
      "KeyId": {
        "desc": "The Amazon Resource Name (key ARN) of the CMK that was used to reencrypt the data.",
        "type": "String",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      },
      "SourceEncryptionAlgorithm": {
        "desc": "The encryption algorithm that was used to decrypt the ciphertext before it was reencrypted.",
        "type": "String",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      },
      "SourceKeyId": {
        "desc": "Unique identifier of the CMK used to originally encrypt the data.",
        "type": "String",
        "values": [
          "symmetric_default",
          "rsaes_oaep_sha_1",
          "rsaes_oaep_sha_256"
        ]
      }
    }
  },
  {
    "title": "RetireGrant",
    "req": {
      "GrantId": {
        "desc": "Unique identifier of the grant to retire. The grant ID is returned in the response to a CreateGrant operation.",
        "type": "String",
        "required": "no"
      },
      "GrantToken": {
        "desc": "Token that identifies the grant to be retired.",
        "type": "String",
        "required": "no"
      },
      "KeyId": {
        "desc": "The Amazon Resource Name (ARN) of the CMK associated with the grant.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "DependencyTimeoutException": {
        "desc": "The system timed out while trying to fulfill the request. The request can be retried.",
        "type": "String"
      },
      "InvalidArnException": {
        "desc": "The request was rejected because a specified ARN, or an ARN in a key policy, is not valid.",
        "type": "String"
      },
      "InvalidGrantIdException": {
        "desc": "The request was rejected because the specified GrantId is not valid.",
        "type": "String"
      },
      "InvalidGrantTokenException": {
        "desc": "The request was rejected because the specified grant token is not valid.",
        "type": "String"
      },
      "KMSInternalException": {
        "desc": "The request was rejected because an internal exception occurred. The request can be retried.",
        "type": "String"
      },
      "KMSInvalidStateException": {
        "desc": "The request was rejected because the state of the specified resource is not valid for this request.",
        "type": "String"
      },
      "NotFoundException": {
        "desc": "The request was rejected because the specified entity or resource could not be found.",
        "type": "String"
      }
    }
  },
  {
    "title": "RevokeGrant",
    "req": {
      "GrantId": {
        "desc": "Identifier of the grant to be revoked.",
        "type": "String",
        "required": "yes"
      },
      "KeyId": {
        "desc": "A unique identifier for the customer master key associated with the grant.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "DependencyTimeoutException": {
        "desc": "The system timed out while trying to fulfill the request. The request can be retried.",
        "type": "String"
      },
      "InvalidArnException": {
        "desc": "The request was rejected because a specified ARN, or an ARN in a key policy, is not valid.",
        "type": "String"
      },
      "InvalidGrantIdException": {
        "desc": "The request was rejected because the specified GrantId is not valid.",
        "type": "String"
      },
      "KMSInternalException": {
        "desc": "The request was rejected because an internal exception occurred. The request can be retried.",
        "type": "String"
      },
      "KMSInvalidStateException": {
        "desc": "The request was rejected because the state of the specified resource is not valid for this request.",
        "type": "String"
      },
      "NotFoundException": {
        "desc": "The request was rejected because the specified entity or resource could not be found.",
        "type": "String"
      }
    }
  },
  {
    "title": "ScheduleKeyDeletion",
    "req": {
      "KeyId": {
        "desc": "The unique identifier of the customer master key (CMK) to delete.",
        "type": "String",
        "required": "yes"
      },
      "PendingWindowInDays": {
        "desc": "The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the customer master key (CMK).",
        "type": "Integer",
        "required": "no"
      }
    },
    "res": {
      "DeletionDate": {
        "desc": "The date and time after which AWS KMS deletes the customer master key (CMK).",
        "type": "Timestamp"
      },
      "KeyId": {
        "desc": "The Amazon Resource Name (key ARN) of the CMK whose deletion is scheduled.",
        "type": "String"
      }
    }
  },
  {
    "title": "Sign",
    "req": {
      "KeyId": {
        "desc": "Identifies an asymmetric CMK. AWS KMS uses the private key in the asymmetric CMK to sign the message. The KeyUsage type of the CMK must be SIGN_VERIFY. To find the KeyUsage of a CMK, use the DescribeKey operation.",
        "type": "String",
        "required": "yes"
      },
      "Message": {
        "desc": "Specifies the message or message digest to sign. Messages can be 0-4096 bytes. To sign a larger message, provide the message digest.",
        "type": "Base64-encoded binary data object",
        "required": "yes"
      },
      "SigningAlgorithm": {
        "desc": "Specifies the signing algorithm to use when signing the message.",
        "type": "String",
        "required": "yes",
        "values": [
          "rsassa_pss_sha_256",
          "rsassa_pss_sha_384",
          "rsassa_pss_sha_512",
          "rsassa_pkcs1_v1_5_sha_256"
        ]
      },
      "GrantTokens": {
        "desc": "A list of grant tokens.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "rsassa_pss_sha_256",
          "rsassa_pss_sha_384",
          "rsassa_pss_sha_512",
          "rsassa_pkcs1_v1_5_sha_256"
        ]
      },
      "MessageType": {
        "desc": "Tells AWS KMS whether the value of the Message parameter is a message or message digest. The default value, RAW, indicates a message. To indicate a message digest, enter DIGEST.",
        "type": "String",
        "required": "no",
        "values": [
          "raw",
          "digest"
        ]
      }
    },
    "res": {
      "KeyId": {
        "desc": "The Amazon Resource Name (key ARN) of the asymmetric CMK that was used to sign the message.",
        "type": "String",
        "values": [
          "raw",
          "digest"
        ]
      },
      "Signature": {
        "desc": "The cryptographic signature that was generated for the message.",
        "type": "Base64-encoded binary data object",
        "values": [
          "raw",
          "digest"
        ]
      },
      "SigningAlgorithm": {
        "desc": "The signing algorithm that was used to sign the message.",
        "type": "String",
        "values": [
          "rsassa_pss_sha_256",
          "rsassa_pss_sha_384",
          "rsassa_pss_sha_512",
          "rsassa_pkcs1_v1_5_sha_256"
        ]
      }
    }
  },
  {
    "title": "TagResource",
    "req": {
      "KeyId": {
        "desc": "A unique identifier for the CMK you are tagging.",
        "type": "String",
        "required": "yes"
      },
      "Tags": {
        "desc": "One or more tags. Each tag consists of a tag key and a tag value.",
        "type": "Array of Tag objects",
        "required": "yes"
      }
    },
    "res": {
      "InvalidArnException": {
        "desc": "The request was rejected because a specified ARN, or an ARN in a key policy, is not valid.",
        "type": "Array of Tag objects"
      },
      "KMSInternalException": {
        "desc": "The request was rejected because an internal exception occurred. The request can be retried.",
        "type": "Array of Tag objects"
      },
      "KMSInvalidStateException": {
        "desc": "The request was rejected because the state of the specified resource is not valid for this request.",
        "type": "Array of Tag objects"
      },
      "LimitExceededException": {
        "desc": "The request was rejected because a quota was exceeded. For more information, see Quotas in the AWS Key Management Service Developer Guide.",
        "type": "Array of Tag objects"
      },
      "NotFoundException": {
        "desc": "The request was rejected because the specified entity or resource could not be found.",
        "type": "Array of Tag objects"
      },
      "TagException": {
        "desc": "The request was rejected because one or more tags are not valid.",
        "type": "Array of Tag objects"
      }
    }
  },
  {
    "title": "UntagResource",
    "req": {
      "KeyId": {
        "desc": "A unique identifier for the CMK from which you are removing tags.",
        "type": "String",
        "required": "yes"
      },
      "TagKeys": {
        "desc": "One or more tag keys. Specify only the tag keys, not the tag values.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "InvalidArnException": {
        "desc": "The request was rejected because a specified ARN, or an ARN in a key policy, is not valid.",
        "type": "Array of strings"
      },
      "KMSInternalException": {
        "desc": "The request was rejected because an internal exception occurred. The request can be retried.",
        "type": "Array of strings"
      },
      "KMSInvalidStateException": {
        "desc": "The request was rejected because the state of the specified resource is not valid for this request.",
        "type": "Array of strings"
      },
      "NotFoundException": {
        "desc": "The request was rejected because the specified entity or resource could not be found.",
        "type": "Array of strings"
      },
      "TagException": {
        "desc": "The request was rejected because one or more tags are not valid.",
        "type": "Array of strings"
      }
    }
  },
  {
    "title": "UpdateAlias",
    "req": {
      "AliasName": {
        "desc": "Identifies the alias that is changing its CMK. This value must begin with alias/ followed by the alias name, such as alias/ExampleAlias. You cannot use UpdateAlias to change the alias name.",
        "type": "String",
        "required": "yes"
      },
      "TargetKeyId": {
        "desc": "Identifies the CMK to associate with the alias. When the update operation completes, the alias will point to this CMK.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "DependencyTimeoutException": {
        "desc": "The system timed out while trying to fulfill the request. The request can be retried.",
        "type": "String"
      },
      "KMSInternalException": {
        "desc": "The request was rejected because an internal exception occurred. The request can be retried.",
        "type": "String"
      },
      "KMSInvalidStateException": {
        "desc": "The request was rejected because the state of the specified resource is not valid for this request.",
        "type": "String"
      },
      "NotFoundException": {
        "desc": "The request was rejected because the specified entity or resource could not be found.",
        "type": "String"
      }
    }
  },
  {
    "title": "UpdateCustomKeyStore",
    "req": {
      "CustomKeyStoreId": {
        "desc": "Identifies the custom key store that you want to update. Enter the ID of the custom key store. To find the ID of a custom key store, use the DescribeCustomKeyStores operation.",
        "type": "String",
        "required": "yes"
      },
      "CloudHsmClusterId": {
        "desc": "Associates the custom key store with a related AWS CloudHSM cluster.",
        "type": "String",
        "required": "no"
      },
      "KeyStorePassword": {
        "desc": "Enter the current password of the kmsuser crypto user (CU) in the AWS CloudHSM cluster that is associated with the custom key store.",
        "type": "String",
        "required": "no"
      },
      "NewCustomKeyStoreName": {
        "desc": "Changes the friendly name of the custom key store to the value that you specify. The custom key store name must be unique in the AWS account.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "CloudHsmClusterInvalidConfigurationException": {
        "desc": "The request was rejected because the associated AWS CloudHSM cluster did not meet the configuration requirements for a custom key store.",
        "type": "String"
      },
      "CloudHsmClusterNotActiveException": {
        "desc": "The request was rejected because the AWS CloudHSM cluster that is associated with the custom key store is not active. Initialize and activate the cluster and try the command again. For detailed instructions, see Getting Started in the AWS CloudHSM User Guide.",
        "type": "String"
      },
      "CloudHsmClusterNotFoundException": {
        "desc": "The request was rejected because AWS KMS cannot find the AWS CloudHSM cluster with the specified cluster ID. Retry the request with a different cluster ID.",
        "type": "String"
      },
      "CloudHsmClusterNotRelatedException": {
        "desc": "The request was rejected because the specified AWS CloudHSM cluster has a different cluster certificate than the original cluster. You cannot use the operation to specify an unrelated cluster.",
        "type": "String"
      },
      "CustomKeyStoreInvalidStateException": {
        "desc": "The request was rejected because of the ConnectionState of the custom key store. To get the ConnectionState of a custom key store, use the DescribeCustomKeyStores operation.",
        "type": "String"
      },
      "CustomKeyStoreNameInUseException": {
        "desc": "The request was rejected because the specified custom key store name is already assigned to another custom key store in the account. Try again with a custom key store name that is unique in the account.",
        "type": "String"
      },
      "CustomKeyStoreNotFoundException": {
        "desc": "The request was rejected because AWS KMS cannot find a custom key store with the specified key store name or ID.",
        "type": "String"
      },
      "KMSInternalException": {
        "desc": "The request was rejected because an internal exception occurred. The request can be retried.",
        "type": "String"
      }
    }
  },
  {
    "title": "UpdateKeyDescription",
    "req": {
      "Description": {
        "desc": "New description for the CMK.",
        "type": "String",
        "required": "yes"
      },
      "KeyId": {
        "desc": "A unique identifier for the customer master key (CMK).",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "DependencyTimeoutException": {
        "desc": "The system timed out while trying to fulfill the request. The request can be retried.",
        "type": "String"
      },
      "InvalidArnException": {
        "desc": "The request was rejected because a specified ARN, or an ARN in a key policy, is not valid.",
        "type": "String"
      },
      "KMSInternalException": {
        "desc": "The request was rejected because an internal exception occurred. The request can be retried.",
        "type": "String"
      },
      "KMSInvalidStateException": {
        "desc": "The request was rejected because the state of the specified resource is not valid for this request.",
        "type": "String"
      },
      "NotFoundException": {
        "desc": "The request was rejected because the specified entity or resource could not be found.",
        "type": "String"
      }
    }
  },
  {
    "title": "Verify",
    "req": {
      "KeyId": {
        "desc": "Identifies the asymmetric CMK that will be used to verify the signature. This must be the same CMK that was used to generate the signature. If you specify a different CMK, the signature verification fails.",
        "type": "String",
        "required": "yes"
      },
      "Message": {
        "desc": "Specifies the message that was signed. You can submit a raw message of up to 4096 bytes, or a hash digest of the message. If you submit a digest, use the MessageType parameter with a value of DIGEST.",
        "type": "Base64-encoded binary data object",
        "required": "yes"
      },
      "Signature": {
        "desc": "The signature that the Sign operation generated.",
        "type": "Base64-encoded binary data object",
        "required": "yes"
      },
      "SigningAlgorithm": {
        "desc": "The signing algorithm that was used to sign the message. If you submit a different algorithm, the signature verification fails.",
        "type": "String",
        "required": "yes",
        "values": [
          "rsassa_pss_sha_256",
          "rsassa_pss_sha_384",
          "rsassa_pss_sha_512",
          "rsassa_pkcs1_v1_5_sha_256"
        ]
      },
      "GrantTokens": {
        "desc": "A list of grant tokens.",
        "type": "Array of strings",
        "required": "no",
        "values": [
          "rsassa_pss_sha_256",
          "rsassa_pss_sha_384",
          "rsassa_pss_sha_512",
          "rsassa_pkcs1_v1_5_sha_256"
        ]
      },
      "MessageType": {
        "desc": "Tells AWS KMS whether the value of the Message parameter is a message or message digest. The default value, RAW, indicates a message. To indicate a message digest, enter DIGEST.",
        "type": "String",
        "required": "no",
        "values": [
          "raw",
          "digest"
        ]
      }
    },
    "res": {
      "KeyId": {
        "desc": "The Amazon Resource Name (key ARN) of the asymmetric CMK that was used to verify the signature.",
        "type": "String",
        "values": [
          "raw",
          "digest"
        ]
      },
      "SignatureValid": {
        "desc": "A Boolean value that indicates whether the signature was verified. A value of True indicates that the Signature was produced by signing the Message with the specified KeyID and SigningAlgorithm. If the signature is not verified, the Verify operation fails with a KMSInvalidSignatureException exception.",
        "type": "Boolean",
        "values": [
          "raw",
          "digest"
        ]
      },
      "SigningAlgorithm": {
        "desc": "The signing algorithm that was used to verify the signature.",
        "type": "String",
        "values": [
          "rsassa_pss_sha_256",
          "rsassa_pss_sha_384",
          "rsassa_pss_sha_512",
          "rsassa_pkcs1_v1_5_sha_256"
        ]
      }
    }
  }
]
