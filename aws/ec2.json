[
  {
    "title": "AcceptReservedInstancesExchangeQuote",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "ReservedInstanceId.N": {
        "desc": "The IDs of the Convertible Reserved Instances to exchange for another Convertible Reserved Instance of the same or higher value.",
        "type": "Array of strings",
        "required": "yes"
      },
      "TargetConfiguration.N": {
        "desc": "The configuration of the target Convertible Reserved Instance to exchange for your current Convertible Reserved Instances.",
        "type": "Array of TargetConfigurationRequest objects",
        "required": "no"
      }
    },
    "res": {
      "exchangeId": {
        "desc": "The ID of the successful exchange.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "AcceptTransitGatewayPeeringAttachment",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TransitGatewayAttachmentId": {
        "desc": "The ID of the transit gateway attachment.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "transitGatewayPeeringAttachment": {
        "desc": "The transit gateway peering attachment.",
        "type": "TransitGatewayPeeringAttachment object"
      }
    }
  },
  {
    "title": "AcceptTransitGatewayVpcAttachment",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TransitGatewayAttachmentId": {
        "desc": "The ID of the attachment.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "transitGatewayVpcAttachment": {
        "desc": "The VPC attachment.",
        "type": "TransitGatewayVpcAttachment object"
      }
    }
  },
  {
    "title": "AcceptVpcEndpointConnections",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "ServiceId": {
        "desc": "The ID of the VPC endpoint service.",
        "type": "String",
        "required": "yes"
      },
      "VpcEndpointId.N": {
        "desc": "The IDs of one or more interface VPC endpoints.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "unsuccessful": {
        "desc": "Information about the interface endpoints that were not accepted, if applicable.",
        "type": "Array of UnsuccessfulItem objects"
      }
    }
  },
  {
    "title": "AcceptVpcPeeringConnection",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "VpcPeeringConnectionId": {
        "desc": "The ID of the VPC peering connection. You must specify this parameter in the request.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "vpcPeeringConnection": {
        "desc": "Information about the VPC peering connection.",
        "type": "VpcPeeringConnection object"
      }
    }
  },
  {
    "title": "AdvertiseByoipCidr",
    "req": {
      "Cidr": {
        "desc": "The address range, in CIDR notation. This must be the exact range that you provisioned. You can't advertise only a portion of the provisioned range.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "byoipCidr": {
        "desc": "Information about the address range.",
        "type": "ByoipCidr object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "AllocateAddress",
    "req": {
      "Address": {
        "desc": "[EC2-VPC] The Elastic IP address to recover or an IPv4 address from an address pool.",
        "type": "String",
        "required": "no"
      },
      "CustomerOwnedIpv4Pool": {
        "desc": "The ID of a customer-owned address pool. Use this parameter to let Amazon EC2 select an address from the address pool. Alternatively, specify a specific address from the address pool.",
        "type": "String",
        "required": "no"
      },
      "Domain": {
        "desc": "Set to vpc to allocate the address for use with instances in a VPC.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "NetworkBorderGroup": {
        "desc": "The location from which the IP address is advertised. Use this parameter to limit the address to this location.",
        "type": "String",
        "required": "no"
      },
      "PublicIpv4Pool": {
        "desc": "The ID of an address pool that you own. Use this parameter to let Amazon EC2 select an address from the address pool. To specify a specific address from the address pool, use the Address parameter instead.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "allocationId": {
        "desc": "[EC2-VPC] The ID that AWS assigns to represent the allocation of the Elastic IP address for use with instances in a VPC.",
        "type": "String"
      },
      "customerOwnedIp": {
        "desc": "The customer-owned IP address.",
        "type": "String"
      },
      "customerOwnedIpv4Pool": {
        "desc": "The ID of the customer-owned address pool.",
        "type": "String"
      },
      "domain": {
        "desc": "Indicates whether this Elastic IP address is for use with instances in EC2-Classic (standard) or instances in a VPC (vpc).",
        "type": "String"
      },
      "networkBorderGroup": {
        "desc": "The location from which the IP address is advertised.",
        "type": "String"
      },
      "publicIp": {
        "desc": "The Elastic IP address.",
        "type": "String"
      },
      "publicIpv4Pool": {
        "desc": "The ID of an address pool.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "AllocateHosts",
    "req": {
      "AutoPlacement": {
        "desc": "Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID. For more information, see Understanding Instance Placement and Host Affinity in the Amazon EC2 User Guide for Linux Instances.",
        "type": "String",
        "required": "no"
      },
      "AvailabilityZone": {
        "desc": "The Availability Zone in which to allocate the Dedicated Host.",
        "type": "String",
        "required": "yes"
      },
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency.",
        "type": "String",
        "required": "no"
      },
      "HostRecovery": {
        "desc": "Indicates whether to enable or disable host recovery for the Dedicated Host. Host recovery is disabled by default. For more information, see Host Recovery in the Amazon Elastic Compute Cloud User Guide.",
        "type": "String",
        "required": "no"
      },
      "InstanceFamily": {
        "desc": "Specifies the instance family to be supported by the Dedicated Hosts. If you specify an instance family, the Dedicated Hosts support multiple instance types within that instance family.",
        "type": "String",
        "required": "no"
      },
      "InstanceType": {
        "desc": "Specifies the instance type to be supported by the Dedicated Hosts. If you specify an instance type, the Dedicated Hosts support instances of the specified instance type only.",
        "type": "String",
        "required": "no"
      },
      "Quantity": {
        "desc": "The number of Dedicated Hosts to allocate to your account with these parameters.",
        "type": "Integer",
        "required": "yes"
      },
      "TagSpecification.N": {
        "desc": "The tags to apply to the Dedicated Host during creation.",
        "type": "Array of TagSpecification objects",
        "required": "no"
      }
    },
    "res": {
      "hostIdSet": {
        "desc": "The ID of the allocated Dedicated Host. This is used to launch an instance onto a specific host.",
        "type": "Array of strings"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "ApplySecurityGroupsToClientVpnTargetNetwork",
    "req": {
      "ClientVpnEndpointId": {
        "desc": "The ID of the Client VPN endpoint.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "SecurityGroupId.N": {
        "desc": "The IDs of the security groups to apply to the associated target network. Up to 5 security groups can be applied to an associated target network.",
        "type": "Array of strings",
        "required": "yes"
      },
      "VpcId": {
        "desc": "The ID of the VPC in which the associated target network is located.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "securityGroupIds": {
        "desc": "The IDs of the applied security groups.",
        "type": "Array of strings"
      }
    }
  },
  {
    "title": "AssignIpv6Addresses",
    "req": {
      "Ipv6AddressCount": {
        "desc": "The number of IPv6 addresses to assign to the network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can't use this option if specifying specific IPv6 addresses.",
        "type": "Integer",
        "required": "no"
      },
      "Ipv6Addresses.N": {
        "desc": "One or more specific IPv6 addresses to be assigned to the network interface. You can't use this option if you're specifying a number of IPv6 addresses.",
        "type": "Array of strings",
        "required": "no"
      },
      "NetworkInterfaceId": {
        "desc": "The ID of the network interface.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "assignedIpv6Addresses": {
        "desc": "The IPv6 addresses assigned to the network interface.",
        "type": "Array of strings"
      },
      "networkInterfaceId": {
        "desc": "The ID of the network interface.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "AssignPrivateIpAddresses",
    "req": {
      "AllowReassignment": {
        "desc": "Indicates whether to allow an IP address that is already assigned to another network interface or instance to be reassigned to the specified network interface.",
        "type": "Boolean",
        "required": "no"
      },
      "NetworkInterfaceId": {
        "desc": "The ID of the network interface.",
        "type": "String",
        "required": "yes"
      },
      "PrivateIpAddress.N": {
        "desc": "One or more IP addresses to be assigned as a secondary private IP address to the network interface. You can't specify this parameter when also specifying a number of secondary IP addresses.",
        "type": "Array of strings",
        "required": "no"
      },
      "SecondaryPrivateIpAddressCount": {
        "desc": "The number of secondary IP addresses to assign to the network interface. You can't specify this parameter when also specifying private IP addresses.",
        "type": "Integer",
        "required": "no"
      }
    },
    "res": {
      "assignedPrivateIpAddressesSet": {
        "desc": "The private IP addresses assigned to the network interface.",
        "type": "Array of AssignedPrivateIpAddress objects"
      },
      "networkInterfaceId": {
        "desc": "The ID of the network interface.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "AssociateAddress",
    "req": {
      "AllocationId": {
        "desc": "[EC2-VPC] The allocation ID. This is required for EC2-VPC.",
        "type": "String",
        "required": "no"
      },
      "AllowReassociation": {
        "desc": "[EC2-VPC] For a VPC in an EC2-Classic account, specify true to allow an Elastic IP address that is already associated with an instance or network interface to be reassociated with the specified instance or network interface. Otherwise, the operation fails. In a VPC in an EC2-VPC-only account, reassociation is automatic, therefore you can specify false to ensure the operation fails if the Elastic IP address is already associated with another resource.",
        "type": "Boolean",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of the instance. This is required for EC2-Classic. For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both. The operation fails if you specify an instance ID unless exactly one network interface is attached.",
        "type": "String",
        "required": "no"
      },
      "NetworkInterfaceId": {
        "desc": "[EC2-VPC] The ID of the network interface. If the instance has more than one network interface, you must specify a network interface ID.",
        "type": "String",
        "required": "no"
      },
      "PrivateIpAddress": {
        "desc": "[EC2-VPC] The primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.",
        "type": "String",
        "required": "no"
      },
      "PublicIp": {
        "desc": "The Elastic IP address to associate with the instance. This is required for EC2-Classic.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "associationId": {
        "desc": "[EC2-VPC] The ID that represents the association of the Elastic IP address with an instance.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "AssociateClientVpnTargetNetwork",
    "req": {
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency.",
        "type": "String",
        "required": "no"
      },
      "ClientVpnEndpointId": {
        "desc": "The ID of the Client VPN endpoint.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "SubnetId": {
        "desc": "The ID of the subnet to associate with the Client VPN endpoint.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "associationId": {
        "desc": "The unique ID of the target network association.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "status": {
        "desc": "The current state of the target network association.",
        "type": "AssociationStatus object"
      }
    }
  },
  {
    "title": "AssociateDhcpOptions",
    "req": {
      "DhcpOptionsId": {
        "desc": "The ID of the DHCP options set, or default to associate no DHCP options with the VPC.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "VpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "AssociateIamInstanceProfile",
    "req": {
      "IamInstanceProfile": {
        "desc": "The IAM instance profile.",
        "type": "IamInstanceProfileSpecification object",
        "required": "yes"
      },
      "InstanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "iamInstanceProfileAssociation": {
        "desc": "Information about the IAM instance profile association.",
        "type": "IamInstanceProfileAssociation object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "AssociateRouteTable",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "GatewayId": {
        "desc": "The ID of the internet gateway or virtual private gateway.",
        "type": "String",
        "required": "no"
      },
      "RouteTableId": {
        "desc": "The ID of the route table.",
        "type": "String",
        "required": "yes"
      },
      "SubnetId": {
        "desc": "The ID of the subnet.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "associationId": {
        "desc": "The route table association ID. This ID is required for disassociating the route table.",
        "type": "String"
      },
      "associationState": {
        "desc": "The state of the association.",
        "type": "RouteTableAssociationState object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "AssociateSubnetCidrBlock",
    "req": {
      "Ipv6CidrBlock": {
        "desc": "The IPv6 CIDR block for your subnet. The subnet must have a /64 prefix length.",
        "type": "String",
        "required": "yes"
      },
      "SubnetId": {
        "desc": "The ID of your subnet.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "ipv6CidrBlockAssociation": {
        "desc": "Information about the IPv6 CIDR block association.",
        "type": "SubnetIpv6CidrBlockAssociation object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "subnetId": {
        "desc": "The ID of the subnet.",
        "type": "String"
      }
    }
  },
  {
    "title": "AssociateTransitGatewayMulticastDomain",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "SubnetIds.N": {
        "desc": "The IDs of the subnets to associate with the transit gateway multicast domain.",
        "type": "Array of strings",
        "required": "no"
      },
      "TransitGatewayAttachmentId": {
        "desc": "The ID of the transit gateway attachment to associate with the transit gateway multicast domain.",
        "type": "String",
        "required": "no"
      },
      "TransitGatewayMulticastDomainId": {
        "desc": "The ID of the transit gateway multicast domain.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "associations": {
        "desc": "Information about the transit gateway multicast domain associations.",
        "type": "TransitGatewayMulticastDomainAssociations object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "AssociateTransitGatewayRouteTable",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TransitGatewayAttachmentId": {
        "desc": "The ID of the attachment.",
        "type": "String",
        "required": "yes"
      },
      "TransitGatewayRouteTableId": {
        "desc": "The ID of the transit gateway route table.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "association": {
        "desc": "The ID of the association.",
        "type": "TransitGatewayAssociation object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "AssociateVpcCidrBlock",
    "req": {
      "AmazonProvidedIpv6CidrBlock": {
        "desc": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IPv6 addresses, or the size of the CIDR block.",
        "type": "Boolean",
        "required": "no"
      },
      "CidrBlock": {
        "desc": "An IPv4 CIDR block to associate with the VPC.",
        "type": "String",
        "required": "no"
      },
      "Ipv6CidrBlock": {
        "desc": "An IPv6 CIDR block from the IPv6 address pool. You must also specify Ipv6Pool in the request.",
        "type": "String",
        "required": "no"
      },
      "Ipv6CidrBlockNetworkBorderGroup": {
        "desc": "The name of the location from which we advertise the IPV6 CIDR block. Use this parameter to limit the CiDR block to this location.",
        "type": "String",
        "required": "no"
      },
      "Ipv6Pool": {
        "desc": "The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.",
        "type": "String",
        "required": "no"
      },
      "VpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "cidrBlockAssociation": {
        "desc": "Information about the IPv4 CIDR block association.",
        "type": "VpcCidrBlockAssociation object"
      },
      "ipv6CidrBlockAssociation": {
        "desc": "Information about the IPv6 CIDR block association.",
        "type": "VpcIpv6CidrBlockAssociation object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "vpcId": {
        "desc": "The ID of the VPC.",
        "type": "String"
      }
    }
  },
  {
    "title": "AttachClassicLinkVpc",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of an EC2-Classic instance to link to the ClassicLink-enabled VPC.",
        "type": "String",
        "required": "yes"
      },
      "SecurityGroupId.N": {
        "desc": "The ID of one or more of the VPC's security groups. You cannot specify security groups from a different VPC.",
        "type": "Array of strings",
        "required": "yes"
      },
      "VpcId": {
        "desc": "The ID of a ClassicLink-enabled VPC.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Returns true if the request succeeds; otherwise, it returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "AttachInternetGateway",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InternetGatewayId": {
        "desc": "The ID of the internet gateway.",
        "type": "String",
        "required": "yes"
      },
      "VpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "AttachNetworkInterface",
    "req": {
      "DeviceIndex": {
        "desc": "The index of the device for the network interface attachment.",
        "type": "Integer",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "yes"
      },
      "NetworkInterfaceId": {
        "desc": "The ID of the network interface.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "attachmentId": {
        "desc": "The ID of the network interface attachment.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "AttachVolume",
    "req": {
      "Device": {
        "desc": "The device name (for example, /dev/sdh or xvdh).",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "yes"
      },
      "VolumeId": {
        "desc": "The ID of the EBS volume. The volume and instance must be within the same Availability Zone.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "attachTime": {
        "desc": "The time stamp when the attachment initiated.",
        "type": "Timestamp"
      },
      "deleteOnTermination": {
        "desc": "Indicates whether the EBS volume is deleted on instance termination.",
        "type": "Boolean"
      },
      "device": {
        "desc": "The device name.",
        "type": "String"
      },
      "instanceId": {
        "desc": "The ID of the instance.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "status": {
        "desc": "The attachment state of the volume.",
        "type": "String"
      },
      "volumeId": {
        "desc": "The ID of the volume.",
        "type": "String"
      }
    }
  },
  {
    "title": "AttachVpnGateway",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "VpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "yes"
      },
      "VpnGatewayId": {
        "desc": "The ID of the virtual private gateway.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "attachment": {
        "desc": "Information about the attachment.",
        "type": "VpcAttachment object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "AuthorizeClientVpnIngress",
    "req": {
      "AccessGroupId": {
        "desc": "The ID of the Active Directory group to grant access.",
        "type": "String",
        "required": "no"
      },
      "AuthorizeAllGroups": {
        "desc": "Indicates whether to grant access to all clients. Use true to grant all clients who successfully establish a VPN connection access to the network.",
        "type": "Boolean",
        "required": "no"
      },
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency.",
        "type": "String",
        "required": "no"
      },
      "ClientVpnEndpointId": {
        "desc": "The ID of the Client VPN endpoint.",
        "type": "String",
        "required": "yes"
      },
      "Description": {
        "desc": "A brief description of the authorization rule.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TargetNetworkCidr": {
        "desc": "The IPv4 address range, in CIDR notation, of the network for which access is being authorized.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "status": {
        "desc": "The current state of the authorization rule.",
        "type": "ClientVpnAuthorizationRuleStatus object"
      }
    }
  },
  {
    "title": "AuthorizeSecurityGroupEgress",
    "req": {
      "CidrIp": {
        "desc": "Not supported. Use a set of IP permissions to specify the CIDR.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "FromPort": {
        "desc": "Not supported. Use a set of IP permissions to specify the port.",
        "type": "Integer",
        "required": "no"
      },
      "GroupId": {
        "desc": "The ID of the security group.",
        "type": "String",
        "required": "yes"
      },
      "IpPermissions.N": {
        "desc": "The sets of IP permissions. You can't specify a destination security group and a CIDR IP address range in the same set of permissions.",
        "type": "Array of IpPermission objects",
        "required": "no"
      },
      "IpProtocol": {
        "desc": "Not supported. Use a set of IP permissions to specify the protocol name or number.",
        "type": "String",
        "required": "no"
      },
      "SourceSecurityGroupName": {
        "desc": "Not supported. Use a set of IP permissions to specify a destination security group.",
        "type": "String",
        "required": "no"
      },
      "SourceSecurityGroupOwnerId": {
        "desc": "Not supported. Use a set of IP permissions to specify a destination security group.",
        "type": "String",
        "required": "no"
      },
      "ToPort": {
        "desc": "Not supported. Use a set of IP permissions to specify the port.",
        "type": "Integer",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "AuthorizeSecurityGroupIngress",
    "req": {
      "CidrIp": {
        "desc": "The IPv4 address range, in CIDR format. You can't specify this parameter when specifying a source security group. To specify an IPv6 address range, use a set of IP permissions.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "FromPort": {
        "desc": "The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use -1 to specify all types. If you specify all ICMP types, you must specify all codes.",
        "type": "Integer",
        "required": "no"
      },
      "GroupId": {
        "desc": "The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.",
        "type": "String",
        "required": "no"
      },
      "GroupName": {
        "desc": "[EC2-Classic, default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request.",
        "type": "String",
        "required": "no"
      },
      "IpPermissions.N": {
        "desc": "The sets of IP permissions.",
        "type": "Array of IpPermission objects",
        "required": "no"
      },
      "IpProtocol": {
        "desc": "The IP protocol name (tcp, udp, icmp) or number (see Protocol Numbers). To specify icmpv6, use a set of IP permissions.",
        "type": "String",
        "required": "no"
      },
      "SourceSecurityGroupName": {
        "desc": "[EC2-Classic, default VPC] The name of the source security group. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the start of the port range, the IP protocol, and the end of the port range. Creates rules that grant full ICMP, UDP, and TCP access. To create a rule with a specific IP protocol and port range, use a set of IP permissions instead. For EC2-VPC, the source security group must be in the same VPC.",
        "type": "String",
        "required": "no"
      },
      "SourceSecurityGroupOwnerId": {
        "desc": "[nondefault VPC] The AWS account ID for the source security group, if the source security group is in a different account. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the IP protocol, the start of the port range, and the end of the port range. Creates rules that grant full ICMP, UDP, and TCP access. To create a rule with a specific IP protocol and port range, use a set of IP permissions instead.",
        "type": "String",
        "required": "no"
      },
      "ToPort": {
        "desc": "The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use -1 to specify all codes. If you specify all ICMP types, you must specify all codes.",
        "type": "Integer",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "BundleInstance",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of the instance to bundle.",
        "type": "String",
        "required": "yes"
      },
      "Storage": {
        "desc": "The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.",
        "type": "Storage object",
        "required": "yes"
      }
    },
    "res": {
      "bundleInstanceTask": {
        "desc": "Information about the bundle task.",
        "type": "BundleTask object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "CancelBundleTask",
    "req": {
      "BundleId": {
        "desc": "The ID of the bundle task.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "bundleInstanceTask": {
        "desc": "Information about the bundle task.",
        "type": "BundleTask object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "CancelCapacityReservation",
    "req": {
      "CapacityReservationId": {
        "desc": "The ID of the Capacity Reservation to be cancelled.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Returns true if the request succeeds; otherwise, it returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "CancelConversionTask",
    "req": {
      "ConversionTaskId": {
        "desc": "The ID of the conversion task.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "ReasonMessage": {
        "desc": "The reason for canceling the conversion task.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "CancelExportTask",
    "req": {
      "ExportTaskId": {
        "desc": "The ID of the export task. This is the ID returned by CreateInstanceExportTask.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "CancelImportTask",
    "req": {
      "CancelReason": {
        "desc": "The reason for canceling the task.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "ImportTaskId": {
        "desc": "The ID of the import image or import snapshot task to be canceled.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "importTaskId": {
        "desc": "The ID of the task being canceled.",
        "type": "String"
      },
      "previousState": {
        "desc": "The current state of the task being canceled.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "state": {
        "desc": "The current state of the task being canceled.",
        "type": "String"
      }
    }
  },
  {
    "title": "CancelReservedInstancesListing",
    "req": {
      "ReservedInstancesListingId": {
        "desc": "The ID of the Reserved Instance listing.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "reservedInstancesListingsSet": {
        "desc": "The Reserved Instance listing.",
        "type": "Array of ReservedInstancesListing objects"
      }
    }
  },
  {
    "title": "CancelSpotFleetRequests",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "SpotFleetRequestId.N": {
        "desc": "The IDs of the Spot Fleet requests.",
        "type": "Array of strings",
        "required": "yes"
      },
      "TerminateInstances": {
        "desc": "Indicates whether to terminate instances for a Spot Fleet request if it is canceled successfully.",
        "type": "Boolean",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "successfulFleetRequestSet": {
        "desc": "Information about the Spot Fleet requests that are successfully canceled.",
        "type": "Array of CancelSpotFleetRequestsSuccessItem objects"
      },
      "unsuccessfulFleetRequestSet": {
        "desc": "Information about the Spot Fleet requests that are not successfully canceled.",
        "type": "Array of CancelSpotFleetRequestsErrorItem objects"
      }
    }
  },
  {
    "title": "CancelSpotInstanceRequests",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "SpotInstanceRequestId.N": {
        "desc": "One or more Spot Instance request IDs.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "spotInstanceRequestSet": {
        "desc": "One or more Spot Instance requests.",
        "type": "Array of CancelledSpotInstanceRequest objects"
      }
    }
  },
  {
    "title": "ConfirmProductInstance",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "yes"
      },
      "ProductCode": {
        "desc": "The product code. This must be a product code that you own.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "ownerId": {
        "desc": "The AWS account ID of the instance owner. This is only present if the product code is attached to the instance.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "The return value of the request. Returns true if the specified product code is owned by the requester and associated with the specified instance.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "CopyFpgaImage",
    "req": {
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see Ensuring Idempotency.",
        "type": "String",
        "required": "no"
      },
      "Description": {
        "desc": "The description for the new AFI.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Name": {
        "desc": "The name for the new AFI. The default is the name of the source AFI.",
        "type": "String",
        "required": "no"
      },
      "SourceFpgaImageId": {
        "desc": "The ID of the source AFI.",
        "type": "String",
        "required": "yes"
      },
      "SourceRegion": {
        "desc": "The Region that contains the source AFI.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "fpgaImageId": {
        "desc": "The ID of the new AFI.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "CopyImage",
    "req": {
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see How to Ensure Idempotency in the Amazon Elastic Compute Cloud User Guide.",
        "type": "String",
        "required": "no"
      },
      "Description": {
        "desc": "A description for the new AMI in the destination Region.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Encrypted": {
        "desc": "Specifies whether the destination snapshots of the copied image should be encrypted. You can encrypt a copy of an unencrypted snapshot, but you cannot create an unencrypted copy of an encrypted snapshot. The default CMK for EBS is used unless you specify a non-default AWS Key Management Service (AWS KMS) CMK using KmsKeyId. For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide.",
        "type": "Boolean",
        "required": "no"
      },
      "KmsKeyId": {
        "desc": "An identifier for the symmetric AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume. This parameter is only required if you want to use a non-default CMK; if this parameter is not specified, the default CMK for EBS is used. If a KmsKeyId is specified, the Encrypted flag must also be set.",
        "type": "String",
        "required": "no"
      },
      "Name": {
        "desc": "The name of the new AMI in the destination Region.",
        "type": "String",
        "required": "yes"
      },
      "SourceImageId": {
        "desc": "The ID of the AMI to copy.",
        "type": "String",
        "required": "yes"
      },
      "SourceRegion": {
        "desc": "The name of the Region that contains the AMI to copy.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "imageId": {
        "desc": "The ID of the new AMI.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "CopySnapshot",
    "req": {
      "Description": {
        "desc": "A description for the EBS snapshot.",
        "type": "String",
        "required": "no"
      },
      "DestinationRegion": {
        "desc": "The destination Region to use in the PresignedUrl parameter of a snapshot copy operation. This parameter is only valid for specifying the destination Region in a PresignedUrl parameter, where it is required.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Encrypted": {
        "desc": "To encrypt a copy of an unencrypted snapshot if encryption by default is not enabled, enable encryption using this parameter. Otherwise, omit this parameter. Encrypted snapshots are encrypted, even if you omit this parameter and encryption by default is not enabled. You cannot set this parameter to false. For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide.",
        "type": "Boolean",
        "required": "no"
      },
      "KmsKeyId": {
        "desc": "The identifier of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use for Amazon EBS encryption. If this parameter is not specified, your AWS managed CMK for EBS is used. If KmsKeyId is specified, the encrypted state must be true.",
        "type": "String",
        "required": "no"
      },
      "PresignedUrl": {
        "desc": "When you copy an encrypted source snapshot using the Amazon EC2 Query API, you must supply a pre-signed URL. This parameter is optional for unencrypted snapshots. For more information, see Query Requests.",
        "type": "String",
        "required": "no"
      },
      "SourceRegion": {
        "desc": "The ID of the Region that contains the snapshot to be copied.",
        "type": "String",
        "required": "yes"
      },
      "SourceSnapshotId": {
        "desc": "The ID of the EBS snapshot to copy.",
        "type": "String",
        "required": "yes"
      },
      "TagSpecification.N": {
        "desc": "The tags to apply to the new snapshot.",
        "type": "Array of TagSpecification objects",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "snapshotId": {
        "desc": "The ID of the new snapshot.",
        "type": "String"
      },
      "tagSet": {
        "desc": "Any tags applied to the new snapshot.",
        "type": "Array of Tag objects"
      }
    }
  },
  {
    "title": "CreateCapacityReservation",
    "req": {
      "AvailabilityZone": {
        "desc": "The Availability Zone in which to create the Capacity Reservation.",
        "type": "String",
        "required": "no"
      },
      "AvailabilityZoneId": {
        "desc": "The ID of the Availability Zone in which to create the Capacity Reservation.",
        "type": "String",
        "required": "no"
      },
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "EbsOptimized": {
        "desc": "Indicates whether the Capacity Reservation supports EBS-optimized instances. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS- optimized instance.",
        "type": "Boolean",
        "required": "no"
      },
      "EndDate": {
        "desc": "The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation's state changes to expired when it reaches its end date and time.",
        "type": "Timestamp",
        "required": "no"
      },
      "EndDateType": {
        "desc": "Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:",
        "type": "String",
        "required": "no"
      },
      "EphemeralStorage": {
        "desc": "Indicates whether the Capacity Reservation supports instances with temporary, block-level storage.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceCount": {
        "desc": "The number of instances for which to reserve capacity.",
        "type": "Integer",
        "required": "yes"
      },
      "InstanceMatchCriteria": {
        "desc": "Indicates the type of instance launches that the Capacity Reservation accepts. The options include:",
        "type": "String",
        "required": "no"
      },
      "InstancePlatform": {
        "desc": "The type of operating system for which to reserve capacity.",
        "type": "String",
        "required": "yes"
      },
      "InstanceType": {
        "desc": "The instance type for which to reserve capacity. For more information, see Instance Types in the Amazon Elastic Compute Cloud User Guide.",
        "type": "String",
        "required": "yes"
      },
      "TagSpecifications.N": {
        "desc": "The tags to apply to the Capacity Reservation during launch.",
        "type": "Array of TagSpecification objects",
        "required": "no"
      },
      "Tenancy": {
        "desc": "Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "capacityReservation": {
        "desc": "Information about the Capacity Reservation.",
        "type": "CapacityReservation object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateClientVpnEndpoint",
    "req": {
      "Authentication.N": {
        "desc": "Information about the authentication method to be used to authenticate clients.",
        "type": "Array of ClientVpnAuthenticationRequest objects",
        "required": "yes"
      },
      "ClientCidrBlock": {
        "desc": "The IPv4 address range, in CIDR notation, from which to assign client IP addresses. The address range cannot overlap with the local CIDR of the VPC in which the associated subnet is located, or the routes that you add manually. The address range cannot be changed after the Client VPN endpoint has been created. The CIDR block should be /22 or greater.",
        "type": "String",
        "required": "yes"
      },
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency.",
        "type": "String",
        "required": "no"
      },
      "ConnectionLogOptions": {
        "desc": "Information about the client connection logging options.",
        "type": "ConnectionLogOptions object",
        "required": "yes"
      },
      "Description": {
        "desc": "A brief description of the Client VPN endpoint.",
        "type": "String",
        "required": "no"
      },
      "DnsServers.N": {
        "desc": "Information about the DNS servers to be used for DNS resolution. A Client VPN endpoint can have up to two DNS servers. If no DNS server is specified, the DNS address configured on the device is used for the DNS server.",
        "type": "Array of strings",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "SecurityGroupId.N": {
        "desc": "The IDs of one or more security groups to apply to the target network. You must also specify the ID of the VPC that contains the security groups.",
        "type": "Array of strings",
        "required": "no"
      },
      "ServerCertificateArn": {
        "desc": "The ARN of the server certificate. For more information, see the AWS Certificate Manager User Guide.",
        "type": "String",
        "required": "yes"
      },
      "SplitTunnel": {
        "desc": "Indicates whether split-tunnel is enabled on the AWS Client VPN endpoint.",
        "type": "Boolean",
        "required": "no"
      },
      "TagSpecification.N": {
        "desc": "The tags to apply to the Client VPN endpoint during creation.",
        "type": "Array of TagSpecification objects",
        "required": "no"
      },
      "TransportProtocol": {
        "desc": "The transport protocol to be used by the VPN session.",
        "type": "String",
        "required": "no"
      },
      "VpcId": {
        "desc": "The ID of the VPC to associate with the Client VPN endpoint. If no security group IDs are specified in the request, the default security group for the VPC is applied.",
        "type": "String",
        "required": "no"
      },
      "VpnPort": {
        "desc": "The port number to assign to the Client VPN endpoint for TCP and UDP traffic.",
        "type": "Integer",
        "required": "no"
      }
    },
    "res": {
      "clientVpnEndpointId": {
        "desc": "The ID of the Client VPN endpoint.",
        "type": "String"
      },
      "dnsName": {
        "desc": "The DNS name to be used by clients when establishing their VPN session.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "status": {
        "desc": "The current state of the Client VPN endpoint.",
        "type": "ClientVpnEndpointStatus object"
      }
    }
  },
  {
    "title": "CreateClientVpnRoute",
    "req": {
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency.",
        "type": "String",
        "required": "no"
      },
      "ClientVpnEndpointId": {
        "desc": "The ID of the Client VPN endpoint to which to add the route.",
        "type": "String",
        "required": "yes"
      },
      "Description": {
        "desc": "A brief description of the route.",
        "type": "String",
        "required": "no"
      },
      "DestinationCidrBlock": {
        "desc": "The IPv4 address range, in CIDR notation, of the route destination. For example:",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TargetVpcSubnetId": {
        "desc": "The ID of the subnet through which you want to route traffic. The specified subnet must be an existing target network of the Client VPN endpoint.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "status": {
        "desc": "The current state of the route.",
        "type": "ClientVpnRouteStatus object"
      }
    }
  },
  {
    "title": "CreateCustomerGateway",
    "req": {
      "BgpAsn": {
        "desc": "For devices that support BGP, the customer gateway's BGP ASN.",
        "type": "Integer",
        "required": "yes"
      },
      "CertificateArn": {
        "desc": "The Amazon Resource Name (ARN) for the customer gateway certificate.",
        "type": "String",
        "required": "no"
      },
      "DeviceName": {
        "desc": "A name for the customer gateway device.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "IpAddress": {
        "desc": "The Internet-routable IP address for the customer gateway's outside interface. The address must be static.",
        "type": "String",
        "required": "no"
      },
      "Type": {
        "desc": "The type of VPN connection that this customer gateway supports (ipsec.1).",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "customerGateway": {
        "desc": "Information about the customer gateway.",
        "type": "CustomerGateway object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateDefaultSubnet",
    "req": {
      "AvailabilityZone": {
        "desc": "The Availability Zone in which to create the default subnet.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "subnet": {
        "desc": "Information about the subnet.",
        "type": "Subnet object"
      }
    }
  },
  {
    "title": "CreateDefaultVpc",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "vpc": {
        "desc": "Information about the VPC.",
        "type": "Vpc object"
      }
    }
  },
  {
    "title": "CreateDhcpOptions",
    "req": {
      "DhcpConfiguration.N": {
        "desc": "A DHCP configuration option.",
        "type": "Array of NewDhcpConfiguration objects",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "dhcpOptions": {
        "desc": "A set of DHCP options.",
        "type": "DhcpOptions object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateEgressOnlyInternetGateway",
    "req": {
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "VpcId": {
        "desc": "The ID of the VPC for which to create the egress-only internet gateway.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "clientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.",
        "type": "String"
      },
      "egressOnlyInternetGateway": {
        "desc": "Information about the egress-only internet gateway.",
        "type": "EgressOnlyInternetGateway object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateFleet",
    "req": {
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see Ensuring Idempotency.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "ExcessCapacityTerminationPolicy": {
        "desc": "Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.",
        "type": "String",
        "required": "no"
      },
      "LaunchTemplateConfigs.N": {
        "desc": "The configuration for the EC2 Fleet.",
        "type": "Array of FleetLaunchTemplateConfigRequest objects",
        "required": "yes"
      },
      "OnDemandOptions": {
        "desc": "Describes the configuration of On-Demand Instances in an EC2 Fleet.",
        "type": "OnDemandOptionsRequest object",
        "required": "no"
      },
      "ReplaceUnhealthyInstances": {
        "desc": "Indicates whether EC2 Fleet should replace unhealthy instances.",
        "type": "Boolean",
        "required": "no"
      },
      "SpotOptions": {
        "desc": "Describes the configuration of Spot Instances in an EC2 Fleet.",
        "type": "SpotOptionsRequest object",
        "required": "no"
      },
      "TagSpecification.N": {
        "desc": "The key-value pair for tagging the EC2 Fleet request on creation. The value for ResourceType must be fleet, otherwise the fleet request fails. To tag instances at launch, specify the tags in the launch template. For information about tagging after launch, see Tagging Your Resources.",
        "type": "Array of TagSpecification objects",
        "required": "no"
      },
      "TargetCapacitySpecification": {
        "desc": "The number of units to request.",
        "type": "TargetCapacitySpecificationRequest object",
        "required": "yes"
      },
      "TerminateInstancesWithExpiration": {
        "desc": "Indicates whether running instances should be terminated when the EC2 Fleet expires.",
        "type": "Boolean",
        "required": "no"
      },
      "Type": {
        "desc": "The type of the request. By default, the EC2 Fleet places an asynchronous request for your desired capacity, and maintains it by replenishing interrupted Spot Instances (maintain). A value of instant places a synchronous one-time request, and returns errors for any instances that could not be launched. A value of request places an asynchronous one-time request without maintaining capacity or submitting requests in alternative capacity pools if capacity is unavailable. For more information, see EC2 Fleet Request Types in the Amazon Elastic Compute Cloud User Guide.",
        "type": "String",
        "required": "no"
      },
      "ValidFrom": {
        "desc": "The start date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.",
        "type": "Timestamp",
        "required": "no"
      },
      "ValidUntil": {
        "desc": "The end date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.",
        "type": "Timestamp",
        "required": "no"
      }
    },
    "res": {
      "errorSet": {
        "desc": "Information about the instances that could not be launched by the fleet. Valid only when Type is set to instant.",
        "type": "Array of CreateFleetError objects"
      },
      "fleetId": {
        "desc": "The ID of the EC2 Fleet.",
        "type": "String"
      },
      "fleetInstanceSet": {
        "desc": "Information about the instances that were launched by the fleet. Valid only when Type is set to instant.",
        "type": "Array of CreateFleetInstance objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateFlowLogs",
    "req": {
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency.",
        "type": "String",
        "required": "no"
      },
      "DeliverLogsPermissionArn": {
        "desc": "The ARN for the IAM role that permits Amazon EC2 to publish flow logs to a CloudWatch Logs log group in your account.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "LogDestination": {
        "desc": "Specifies the destination to which the flow log data is to be published. Flow log data can be published to a CloudWatch Logs log group or an Amazon S3 bucket. The value specified for this parameter depends on the value specified for LogDestinationType.",
        "type": "String",
        "required": "no"
      },
      "LogDestinationType": {
        "desc": "Specifies the type of destination to which the flow log data is to be published. Flow log data can be published to CloudWatch Logs or Amazon S3. To publish flow log data to CloudWatch Logs, specify cloud-watch-logs. To publish flow log data to Amazon S3, specify s3.",
        "type": "String",
        "required": "no"
      },
      "LogFormat": {
        "desc": "The fields to include in the flow log record, in the order in which they should appear. For a list of available fields, see Flow Log Records. If you omit this parameter, the flow log is created using the default format. If you specify this parameter, you must specify at least one field.",
        "type": "String",
        "required": "no"
      },
      "LogGroupName": {
        "desc": "The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs.",
        "type": "String",
        "required": "no"
      },
      "MaxAggregationInterval": {
        "desc": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. You can specify 60 seconds (1 minute) or 600 seconds (10 minutes).",
        "type": "Integer",
        "required": "no"
      },
      "ResourceId.N": {
        "desc": "The ID of the subnet, network interface, or VPC for which you want to create a flow log.",
        "type": "Array of strings",
        "required": "yes"
      },
      "ResourceType": {
        "desc": "The type of resource for which to create the flow log. For example, if you specified a VPC ID for the ResourceId property, specify VPC for this property.",
        "type": "String",
        "required": "yes"
      },
      "TagSpecification.N": {
        "desc": "The tags to apply to the flow logs.",
        "type": "Array of TagSpecification objects",
        "required": "no"
      },
      "TrafficType": {
        "desc": "The type of traffic to log. You can log traffic that the resource accepts or rejects, or all traffic.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "clientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.",
        "type": "String"
      },
      "flowLogIdSet": {
        "desc": "The IDs of the flow logs.",
        "type": "Array of strings"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "unsuccessful": {
        "desc": "Information about the flow logs that could not be created successfully.",
        "type": "Array of UnsuccessfulItem objects"
      }
    }
  },
  {
    "title": "CreateFpgaImage",
    "req": {
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see Ensuring Idempotency.",
        "type": "String",
        "required": "no"
      },
      "Description": {
        "desc": "A description for the AFI.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InputStorageLocation": {
        "desc": "The location of the encrypted design checkpoint in Amazon S3. The input must be a tarball.",
        "type": "StorageLocation object",
        "required": "yes"
      },
      "LogsStorageLocation": {
        "desc": "The location in Amazon S3 for the output logs.",
        "type": "StorageLocation object",
        "required": "no"
      },
      "Name": {
        "desc": "A name for the AFI.",
        "type": "String",
        "required": "no"
      },
      "TagSpecification.N": {
        "desc": "The tags to apply to the FPGA image during creation.",
        "type": "Array of TagSpecification objects",
        "required": "no"
      }
    },
    "res": {
      "fpgaImageGlobalId": {
        "desc": "The global FPGA image identifier (AGFI ID).",
        "type": "String"
      },
      "fpgaImageId": {
        "desc": "The FPGA image identifier (AFI ID).",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateImage",
    "req": {
      "BlockDeviceMapping.N": {
        "desc": "The block device mappings. This parameter cannot be used to modify the encryption status of existing volumes or snapshots. To create an AMI with encrypted snapshots, use the CopyImage action.",
        "type": "Array of BlockDeviceMapping objects",
        "required": "no"
      },
      "Description": {
        "desc": "A description for the new image.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "yes"
      },
      "Name": {
        "desc": "A name for the new image.",
        "type": "String",
        "required": "yes"
      },
      "NoReboot": {
        "desc": "By default, Amazon EC2 attempts to shut down and reboot the instance before creating the image. If the 'No Reboot' option is set, Amazon EC2 doesn't shut down the instance before creating the image. When this option is used, file system integrity on the created image can't be guaranteed.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "imageId": {
        "desc": "The ID of the new AMI.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateInstanceExportTask",
    "req": {
      "Description": {
        "desc": "A description for the conversion task or the resource being exported. The maximum length is 255 bytes.",
        "type": "String",
        "required": "no"
      },
      "ExportToS3": {
        "desc": "The format and location for an instance export task.",
        "type": "ExportToS3TaskSpecification object",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "yes"
      },
      "TargetEnvironment": {
        "desc": "The target virtualization environment.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "exportTask": {
        "desc": "Information about the instance export task.",
        "type": "ExportTask object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateInternetGateway",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "internetGateway": {
        "desc": "Information about the internet gateway.",
        "type": "InternetGateway object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateKeyPair",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "KeyName": {
        "desc": "A unique name for the key pair.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "keyFingerprint": {
        "desc": "The SHA-1 digest of the DER encoded private key.",
        "type": "String"
      },
      "keyMaterial": {
        "desc": "An unencrypted PEM encoded RSA private key.",
        "type": "String"
      },
      "keyName": {
        "desc": "The name of the key pair.",
        "type": "String"
      },
      "keyPairId": {
        "desc": "The ID of the key pair.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateLaunchTemplate",
    "req": {
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see Ensuring Idempotency.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "LaunchTemplateData": {
        "desc": "The information for the launch template.",
        "type": "RequestLaunchTemplateData object",
        "required": "yes"
      },
      "LaunchTemplateName": {
        "desc": "A name for the launch template.",
        "type": "String",
        "required": "yes"
      },
      "TagSpecification.N": {
        "desc": "The tags to apply to the launch template during creation.",
        "type": "Array of TagSpecification objects",
        "required": "no"
      },
      "VersionDescription": {
        "desc": "A description for the first version of the launch template.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "launchTemplate": {
        "desc": "Information about the launch template.",
        "type": "LaunchTemplate object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateLaunchTemplateVersion",
    "req": {
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see Ensuring Idempotency.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "LaunchTemplateData": {
        "desc": "The information for the launch template.",
        "type": "RequestLaunchTemplateData object",
        "required": "yes"
      },
      "LaunchTemplateId": {
        "desc": "The ID of the launch template. You must specify either the launch template ID or launch template name in the request.",
        "type": "String",
        "required": "no"
      },
      "LaunchTemplateName": {
        "desc": "The name of the launch template. You must specify either the launch template ID or launch template name in the request.",
        "type": "String",
        "required": "no"
      },
      "SourceVersion": {
        "desc": "The version number of the launch template version on which to base the new version. The new version inherits the same launch parameters as the source version, except for parameters that you specify in LaunchTemplateData. Snapshots applied to the block device mapping are ignored when creating a new version unless they are explicitly included.",
        "type": "String",
        "required": "no"
      },
      "VersionDescription": {
        "desc": "A description for the version of the launch template.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "launchTemplateVersion": {
        "desc": "Information about the launch template version.",
        "type": "LaunchTemplateVersion object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateLocalGatewayRoute",
    "req": {
      "DestinationCidrBlock": {
        "desc": "The CIDR range used for destination matches. Routing decisions are based on the most specific match.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "LocalGatewayRouteTableId": {
        "desc": "The ID of the local gateway route table.",
        "type": "String",
        "required": "yes"
      },
      "LocalGatewayVirtualInterfaceGroupId": {
        "desc": "The ID of the virtual interface group.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "route": {
        "desc": "Information about the route.",
        "type": "LocalGatewayRoute object"
      }
    }
  },
  {
    "title": "CreateLocalGatewayRouteTableVpcAssociation",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "LocalGatewayRouteTableId": {
        "desc": "The ID of the local gateway route table.",
        "type": "String",
        "required": "yes"
      },
      "VpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "localGatewayRouteTableVpcAssociation": {
        "desc": "Information about the association.",
        "type": "LocalGatewayRouteTableVpcAssociation object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateNatGateway",
    "req": {
      "AllocationId": {
        "desc": "The allocation ID of an Elastic IP address to associate with the NAT gateway. If the Elastic IP address is associated with another resource, you must first disassociate it.",
        "type": "String",
        "required": "yes"
      },
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "SubnetId": {
        "desc": "The subnet in which to create the NAT gateway.",
        "type": "String",
        "required": "yes"
      },
      "TagSpecification.N": {
        "desc": "The tags to assign to the NAT gateway.",
        "type": "Array of TagSpecification objects",
        "required": "no"
      }
    },
    "res": {
      "clientToken": {
        "desc": "Unique, case-sensitive identifier to ensure the idempotency of the request. Only returned if a client token was provided in the request.",
        "type": "String"
      },
      "natGateway": {
        "desc": "Information about the NAT gateway.",
        "type": "NatGateway object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateNetworkAcl",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "VpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "networkAcl": {
        "desc": "Information about the network ACL.",
        "type": "NetworkAcl object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateNetworkAclEntry",
    "req": {
      "CidrBlock": {
        "desc": "The IPv4 network range to allow or deny, in CIDR notation (for example 172.16.0.0/24).",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Egress": {
        "desc": "Indicates whether this is an egress rule (rule is applied to traffic leaving the subnet).",
        "type": "Boolean",
        "required": "yes"
      },
      "Icmp": {
        "desc": "ICMP protocol: The ICMP or ICMPv6 type and code. Required if specifying protocol 1 (ICMP) or protocol 58 (ICMPv6) with an IPv6 CIDR block.",
        "type": "IcmpTypeCode object",
        "required": "no"
      },
      "Ipv6CidrBlock": {
        "desc": "The IPv6 network range to allow or deny, in CIDR notation (for example 2001:db8:1234:1a00::/64).",
        "type": "String",
        "required": "no"
      },
      "NetworkAclId": {
        "desc": "The ID of the network ACL.",
        "type": "String",
        "required": "yes"
      },
      "PortRange": {
        "desc": "TCP or UDP protocols: The range of ports the rule applies to. Required if specifying protocol 6 (TCP) or 17 (UDP).",
        "type": "PortRange object",
        "required": "no"
      },
      "Protocol": {
        "desc": "The protocol number. A value of \"-1\" means all protocols. If you specify \"-1\" or a protocol number other than \"6\" (TCP), \"17\" (UDP), or \"1\" (ICMP), traffic on all ports is allowed, regardless of any ports or ICMP types or codes that you specify. If you specify protocol \"58\" (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and codes allowed, regardless of any that you specify. If you specify protocol \"58\" (ICMPv6) and specify an IPv6 CIDR block, you must specify an ICMP type and code.",
        "type": "String",
        "required": "yes"
      },
      "RuleAction": {
        "desc": "Indicates whether to allow or deny the traffic that matches the rule.",
        "type": "String",
        "required": "yes"
      },
      "RuleNumber": {
        "desc": "The rule number for the entry (for example, 100). ACL entries are processed in ascending order by rule number.",
        "type": "Integer",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "CreateNetworkInterface",
    "req": {
      "Description": {
        "desc": "A description for the network interface.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InterfaceType": {
        "desc": "Indicates the type of network interface. To create an Elastic Fabric Adapter (EFA), specify efa. For more information, see Elastic Fabric Adapter in the Amazon Elastic Compute Cloud User Guide.",
        "type": "String",
        "required": "no"
      },
      "Ipv6AddressCount": {
        "desc": "The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can't use this option if specifying specific IPv6 addresses. If your subnet has the AssignIpv6AddressOnCreation attribute set to true, you can specify 0 to override this setting.",
        "type": "Integer",
        "required": "no"
      },
      "Ipv6Addresses.N": {
        "desc": "One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. You can't use this option if you're specifying a number of IPv6 addresses.",
        "type": "Array of InstanceIpv6Address objects",
        "required": "no"
      },
      "PrivateIpAddress": {
        "desc": "The primary private IPv4 address of the network interface. If you don't specify an IPv4 address, Amazon EC2 selects one for you from the subnet's IPv4 CIDR range. If you specify an IP address, you cannot indicate any IP addresses specified in privateIpAddresses as primary (only one IP address can be designated as primary).",
        "type": "String",
        "required": "no"
      },
      "PrivateIpAddresses.N": {
        "desc": "One or more private IPv4 addresses.",
        "type": "Array of PrivateIpAddressSpecification objects",
        "required": "no"
      },
      "SecondaryPrivateIpAddressCount": {
        "desc": "The number of secondary private IPv4 addresses to assign to a network interface. When you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet's IPv4 CIDR range. You can't specify this option and specify more than one private IP address using privateIpAddresses.",
        "type": "Integer",
        "required": "no"
      },
      "SecurityGroupId.N": {
        "desc": "The IDs of one or more security groups.",
        "type": "Array of strings",
        "required": "no"
      },
      "SubnetId": {
        "desc": "The ID of the subnet to associate with the network interface.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "networkInterface": {
        "desc": "Information about the network interface.",
        "type": "NetworkInterface object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateNetworkInterfacePermission",
    "req": {
      "AwsAccountId": {
        "desc": "The AWS account ID.",
        "type": "String",
        "required": "no"
      },
      "AwsService": {
        "desc": "The AWS service. Currently not supported.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "NetworkInterfaceId": {
        "desc": "The ID of the network interface.",
        "type": "String",
        "required": "yes"
      },
      "Permission": {
        "desc": "The type of permission to grant.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "interfacePermission": {
        "desc": "Information about the permission for the network interface.",
        "type": "NetworkInterfacePermission object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreatePlacementGroup",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "GroupName": {
        "desc": "A name for the placement group. Must be unique within the scope of your account for the Region.",
        "type": "String",
        "required": "no"
      },
      "PartitionCount": {
        "desc": "The number of partitions. Valid only when Strategy is set to partition.",
        "type": "Integer",
        "required": "no"
      },
      "Strategy": {
        "desc": "The placement strategy.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "CreateReservedInstancesListing",
    "req": {
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier you provide to ensure idempotency of your listings. This helps avoid duplicate listings. For more information, see Ensuring Idempotency.",
        "type": "String",
        "required": "yes"
      },
      "InstanceCount": {
        "desc": "The number of instances that are a part of a Reserved Instance account to be listed in the Reserved Instance Marketplace. This number should be less than or equal to the instance count associated with the Reserved Instance ID specified in this call.",
        "type": "Integer",
        "required": "yes"
      },
      "PriceSchedules.N": {
        "desc": "A list specifying the price of the Standard Reserved Instance for each month remaining in the Reserved Instance term.",
        "type": "Array of PriceScheduleSpecification objects",
        "required": "yes"
      },
      "ReservedInstancesId": {
        "desc": "The ID of the active Standard Reserved Instance.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "reservedInstancesListingsSet": {
        "desc": "Information about the Standard Reserved Instance listing.",
        "type": "Array of ReservedInstancesListing objects"
      }
    }
  },
  {
    "title": "CreateRoute",
    "req": {
      "DestinationCidrBlock": {
        "desc": "The IPv4 CIDR address block used for the destination match. Routing decisions are based on the most specific match.",
        "type": "String",
        "required": "no"
      },
      "DestinationIpv6CidrBlock": {
        "desc": "The IPv6 CIDR block used for the destination match. Routing decisions are based on the most specific match.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "EgressOnlyInternetGatewayId": {
        "desc": "[IPv6 traffic only] The ID of an egress-only internet gateway.",
        "type": "String",
        "required": "no"
      },
      "GatewayId": {
        "desc": "The ID of an internet gateway or virtual private gateway attached to your VPC.",
        "type": "String",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of a NAT instance in your VPC. The operation fails if you specify an instance ID unless exactly one network interface is attached.",
        "type": "String",
        "required": "no"
      },
      "LocalGatewayId": {
        "desc": "The ID of the local gateway.",
        "type": "String",
        "required": "no"
      },
      "NatGatewayId": {
        "desc": "[IPv4 traffic only] The ID of a NAT gateway.",
        "type": "String",
        "required": "no"
      },
      "NetworkInterfaceId": {
        "desc": "The ID of a network interface.",
        "type": "String",
        "required": "no"
      },
      "RouteTableId": {
        "desc": "The ID of the route table for the route.",
        "type": "String",
        "required": "yes"
      },
      "TransitGatewayId": {
        "desc": "The ID of a transit gateway.",
        "type": "String",
        "required": "no"
      },
      "VpcPeeringConnectionId": {
        "desc": "The ID of a VPC peering connection.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Returns true if the request succeeds; otherwise, it returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "CreateRouteTable",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "VpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "routeTable": {
        "desc": "Information about the route table.",
        "type": "RouteTable object"
      }
    }
  },
  {
    "title": "CreateSecurityGroup",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "GroupDescription": {
        "desc": "A description for the security group. This is informational only.",
        "type": "String",
        "required": "yes"
      },
      "GroupName": {
        "desc": "The name of the security group.",
        "type": "String",
        "required": "yes"
      },
      "VpcId": {
        "desc": "[EC2-VPC] The ID of the VPC. Required for EC2-VPC.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "groupId": {
        "desc": "The ID of the security group.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateSnapshot",
    "req": {
      "Description": {
        "desc": "A description for the snapshot.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TagSpecification.N": {
        "desc": "The tags to apply to the snapshot during creation.",
        "type": "Array of TagSpecification objects",
        "required": "no"
      },
      "VolumeId": {
        "desc": "The ID of the EBS volume.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "dataEncryptionKeyId": {
        "desc": "The data encryption key identifier for the snapshot. This value is a unique identifier that corresponds to the data encryption key that was used to encrypt the original volume or snapshot copy. Because data encryption keys are inherited by volumes created from snapshots, and vice versa, if snapshots share the same data encryption key identifier, then they belong to the same volume/snapshot lineage. This parameter is only returned by DescribeSnapshots.",
        "type": "String"
      },
      "description": {
        "desc": "The description for the snapshot.",
        "type": "String"
      },
      "encrypted": {
        "desc": "Indicates whether the snapshot is encrypted.",
        "type": "Boolean"
      },
      "kmsKeyId": {
        "desc": "The Amazon Resource Name (ARN) of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the parent volume.",
        "type": "String"
      },
      "ownerAlias": {
        "desc": "Value from an Amazon-maintained list (amazon | self | all | aws-marketplace | microsoft) of snapshot owners. Not to be confused with the user-configured AWS account alias, which is set from the IAM console.",
        "type": "String"
      },
      "ownerId": {
        "desc": "The AWS account ID of the EBS snapshot owner.",
        "type": "String"
      },
      "progress": {
        "desc": "The progress of the snapshot, as a percentage.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "snapshotId": {
        "desc": "The ID of the snapshot. Each snapshot receives a unique identifier when it is created.",
        "type": "String"
      },
      "startTime": {
        "desc": "The time stamp when the snapshot was initiated.",
        "type": "Timestamp"
      },
      "status": {
        "desc": "The snapshot state.",
        "type": "String"
      },
      "statusMessage": {
        "desc": "Encrypted Amazon EBS snapshots are copied asynchronously. If a snapshot copy operation fails (for example, if the proper AWS Key Management Service (AWS KMS) permissions are not obtained) this field displays error state details to help you diagnose why the error occurred. This parameter is only returned by DescribeSnapshots.",
        "type": "String"
      },
      "tagSet": {
        "desc": "Any tags assigned to the snapshot.",
        "type": "Array of Tag objects"
      },
      "volumeId": {
        "desc": "The ID of the volume that was used to create the snapshot. Snapshots created by the CopySnapshot action have an arbitrary volume ID that should not be used for any purpose.",
        "type": "String"
      },
      "volumeSize": {
        "desc": "The size of the volume, in GiB.",
        "type": "Integer"
      }
    }
  },
  {
    "title": "CreateSnapshots",
    "req": {
      "CopyTagsFromSource": {
        "desc": "Copies the tags from the specified volume to corresponding snapshot.",
        "type": "String",
        "required": "no"
      },
      "Description": {
        "desc": "A description propagated to every snapshot specified by the instance.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceSpecification": {
        "desc": "The instance to specify which volumes should be included in the snapshots.",
        "type": "InstanceSpecification object",
        "required": "yes"
      },
      "TagSpecification.N": {
        "desc": "Tags to apply to every snapshot specified by the instance.",
        "type": "Array of TagSpecification objects",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "snapshotSet": {
        "desc": "List of snapshots.",
        "type": "Array of SnapshotInfo objects"
      }
    }
  },
  {
    "title": "CreateSpotDatafeedSubscription",
    "req": {
      "Bucket": {
        "desc": "The Amazon S3 bucket in which to store the Spot Instance data feed.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Prefix": {
        "desc": "A prefix for the data feed file names.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "spotDatafeedSubscription": {
        "desc": "The Spot Instance data feed subscription.",
        "type": "SpotDatafeedSubscription object"
      }
    }
  },
  {
    "title": "CreateSubnet",
    "req": {
      "AvailabilityZone": {
        "desc": "The Availability Zone or Local Zone for the subnet.",
        "type": "String",
        "required": "no"
      },
      "AvailabilityZoneId": {
        "desc": "The AZ ID or the Local Zone ID of the subnet.",
        "type": "String",
        "required": "no"
      },
      "CidrBlock": {
        "desc": "The IPv4 network range for the subnet, in CIDR notation. For example, 10.0.0.0/24.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Ipv6CidrBlock": {
        "desc": "The IPv6 network range for the subnet, in CIDR notation. The subnet size must use a /64 prefix length.",
        "type": "String",
        "required": "no"
      },
      "OutpostArn": {
        "desc": "The Amazon Resource Name (ARN) of the Outpost.",
        "type": "String",
        "required": "no"
      },
      "VpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "subnet": {
        "desc": "Information about the subnet.",
        "type": "Subnet object"
      }
    }
  },
  {
    "title": "CreateTags",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "ResourceId.N": {
        "desc": "The IDs of the resources, separated by spaces.",
        "type": "Array of strings",
        "required": "yes"
      },
      "Tag.N": {
        "desc": "The tags. The value parameter is required, but if you don't want the tag to have a value, specify the parameter with no value, and we set the value to an empty string.",
        "type": "Array of Tag objects",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "CreateTrafficMirrorFilter",
    "req": {
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency.",
        "type": "String",
        "required": "no"
      },
      "Description": {
        "desc": "The description of the Traffic Mirror filter.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TagSpecification.N": {
        "desc": "The tags to assign to a Traffic Mirror filter.",
        "type": "Array of TagSpecification objects",
        "required": "no"
      }
    },
    "res": {
      "clientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "trafficMirrorFilter": {
        "desc": "Information about the Traffic Mirror filter.",
        "type": "TrafficMirrorFilter object"
      }
    }
  },
  {
    "title": "CreateTrafficMirrorFilterRule",
    "req": {
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency.",
        "type": "String",
        "required": "no"
      },
      "Description": {
        "desc": "The description of the Traffic Mirror rule.",
        "type": "String",
        "required": "no"
      },
      "DestinationCidrBlock": {
        "desc": "The destination CIDR block to assign to the Traffic Mirror rule.",
        "type": "String",
        "required": "yes"
      },
      "DestinationPortRange": {
        "desc": "The destination port range.",
        "type": "TrafficMirrorPortRangeRequest object",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Protocol": {
        "desc": "The protocol, for example UDP, to assign to the Traffic Mirror rule.",
        "type": "Integer",
        "required": "no"
      },
      "RuleAction": {
        "desc": "The action to take (accept | reject) on the filtered traffic.",
        "type": "String",
        "required": "yes"
      },
      "RuleNumber": {
        "desc": "The number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.",
        "type": "Integer",
        "required": "yes"
      },
      "SourceCidrBlock": {
        "desc": "The source CIDR block to assign to the Traffic Mirror rule.",
        "type": "String",
        "required": "yes"
      },
      "SourcePortRange": {
        "desc": "The source port range.",
        "type": "TrafficMirrorPortRangeRequest object",
        "required": "no"
      },
      "TrafficDirection": {
        "desc": "The type of traffic (ingress | egress).",
        "type": "String",
        "required": "yes"
      },
      "TrafficMirrorFilterId": {
        "desc": "The ID of the filter that this rule is associated with.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "clientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "trafficMirrorFilterRule": {
        "desc": "The Traffic Mirror rule.",
        "type": "TrafficMirrorFilterRule object"
      }
    }
  },
  {
    "title": "CreateTrafficMirrorSession",
    "req": {
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency.",
        "type": "String",
        "required": "no"
      },
      "Description": {
        "desc": "The description of the Traffic Mirror session.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "NetworkInterfaceId": {
        "desc": "The ID of the source network interface.",
        "type": "String",
        "required": "yes"
      },
      "PacketLength": {
        "desc": "The number of bytes in each packet to mirror. These are bytes after the VXLAN header. Do not specify this parameter when you want to mirror the entire packet. To mirror a subset of the packet, set this to the length (in bytes) that you want to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target.",
        "type": "Integer",
        "required": "no"
      },
      "SessionNumber": {
        "desc": "The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.",
        "type": "Integer",
        "required": "yes"
      },
      "TagSpecification.N": {
        "desc": "The tags to assign to a Traffic Mirror session.",
        "type": "Array of TagSpecification objects",
        "required": "no"
      },
      "TrafficMirrorFilterId": {
        "desc": "The ID of the Traffic Mirror filter.",
        "type": "String",
        "required": "yes"
      },
      "TrafficMirrorTargetId": {
        "desc": "The ID of the Traffic Mirror target.",
        "type": "String",
        "required": "yes"
      },
      "VirtualNetworkId": {
        "desc": "The VXLAN ID for the Traffic Mirror session. For more information about the VXLAN protocol, see RFC 7348. If you do not specify a VirtualNetworkId, an account-wide unique id is chosen at random.",
        "type": "Integer",
        "required": "no"
      }
    },
    "res": {
      "clientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "trafficMirrorSession": {
        "desc": "Information about the Traffic Mirror session.",
        "type": "TrafficMirrorSession object"
      }
    }
  },
  {
    "title": "CreateTrafficMirrorTarget",
    "req": {
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency.",
        "type": "String",
        "required": "no"
      },
      "Description": {
        "desc": "The description of the Traffic Mirror target.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "NetworkInterfaceId": {
        "desc": "The network interface ID that is associated with the target.",
        "type": "String",
        "required": "no"
      },
      "NetworkLoadBalancerArn": {
        "desc": "The Amazon Resource Name (ARN) of the Network Load Balancer that is associated with the target.",
        "type": "String",
        "required": "no"
      },
      "TagSpecification.N": {
        "desc": "The tags to assign to the Traffic Mirror target.",
        "type": "Array of TagSpecification objects",
        "required": "no"
      }
    },
    "res": {
      "clientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "trafficMirrorTarget": {
        "desc": "Information about the Traffic Mirror target.",
        "type": "TrafficMirrorTarget object"
      }
    }
  },
  {
    "title": "CreateTransitGateway",
    "req": {
      "Description": {
        "desc": "A description of the transit gateway.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Options": {
        "desc": "The transit gateway options.",
        "type": "TransitGatewayRequestOptions object",
        "required": "no"
      },
      "TagSpecification.N": {
        "desc": "The tags to apply to the transit gateway.",
        "type": "Array of TagSpecification objects",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "transitGateway": {
        "desc": "Information about the transit gateway.",
        "type": "TransitGateway object"
      }
    }
  },
  {
    "title": "CreateTransitGatewayMulticastDomain",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TagSpecification.N": {
        "desc": "The tags for the transit gateway multicast domain.",
        "type": "Array of TagSpecification objects",
        "required": "no"
      },
      "TransitGatewayId": {
        "desc": "The ID of the transit gateway.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "transitGatewayMulticastDomain": {
        "desc": "Information about the transit gateway multicast domain.",
        "type": "TransitGatewayMulticastDomain object"
      }
    }
  },
  {
    "title": "CreateTransitGatewayPeeringAttachment",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "PeerAccountId": {
        "desc": "The AWS account ID of the owner of the peer transit gateway.",
        "type": "String",
        "required": "yes"
      },
      "PeerRegion": {
        "desc": "The Region where the peer transit gateway is located.",
        "type": "String",
        "required": "yes"
      },
      "PeerTransitGatewayId": {
        "desc": "The ID of the peer transit gateway with which to create the peering attachment.",
        "type": "String",
        "required": "yes"
      },
      "TagSpecification.N": {
        "desc": "The tags to apply to the transit gateway peering attachment.",
        "type": "Array of TagSpecification objects",
        "required": "no"
      },
      "TransitGatewayId": {
        "desc": "The ID of the transit gateway.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "transitGatewayPeeringAttachment": {
        "desc": "The transit gateway peering attachment.",
        "type": "TransitGatewayPeeringAttachment object"
      }
    }
  },
  {
    "title": "CreateTransitGatewayRoute",
    "req": {
      "Blackhole": {
        "desc": "Indicates whether to drop traffic that matches this route.",
        "type": "Boolean",
        "required": "no"
      },
      "DestinationCidrBlock": {
        "desc": "The CIDR range used for destination matches. Routing decisions are based on the most specific match.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TransitGatewayAttachmentId": {
        "desc": "The ID of the attachment.",
        "type": "String",
        "required": "no"
      },
      "TransitGatewayRouteTableId": {
        "desc": "The ID of the transit gateway route table.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "route": {
        "desc": "Information about the route.",
        "type": "TransitGatewayRoute object"
      }
    }
  },
  {
    "title": "CreateTransitGatewayRouteTable",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TagSpecifications.N": {
        "desc": "The tags to apply to the transit gateway route table.",
        "type": "Array of TagSpecification objects",
        "required": "no"
      },
      "TransitGatewayId": {
        "desc": "The ID of the transit gateway.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "transitGatewayRouteTable": {
        "desc": "Information about the transit gateway route table.",
        "type": "TransitGatewayRouteTable object"
      }
    }
  },
  {
    "title": "CreateTransitGatewayVpcAttachment",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Options": {
        "desc": "The VPC attachment options.",
        "type": "CreateTransitGatewayVpcAttachmentRequestOptions object",
        "required": "no"
      },
      "SubnetIds.N": {
        "desc": "The IDs of one or more subnets. You can specify only one subnet per Availability Zone. You must specify at least one subnet, but we recommend that you specify two subnets for better availability. The transit gateway uses one IP address from each specified subnet.",
        "type": "Array of strings",
        "required": "yes"
      },
      "TagSpecifications.N": {
        "desc": "The tags to apply to the VPC attachment.",
        "type": "Array of TagSpecification objects",
        "required": "no"
      },
      "TransitGatewayId": {
        "desc": "The ID of the transit gateway.",
        "type": "String",
        "required": "yes"
      },
      "VpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "transitGatewayVpcAttachment": {
        "desc": "Information about the VPC attachment.",
        "type": "TransitGatewayVpcAttachment object"
      }
    }
  },
  {
    "title": "CreateVolume",
    "req": {
      "AvailabilityZone": {
        "desc": "The Availability Zone in which to create the volume.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Encrypted": {
        "desc": "Specifies whether the volume should be encrypted. The effect of setting the encryption state to true depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see Encryption by Default in the Amazon Elastic Compute Cloud User Guide.",
        "type": "Boolean",
        "required": "no"
      },
      "Iops": {
        "desc": "The number of I/O operations per second (IOPS) to provision for the volume, with a maximum ratio of 50 IOPS/GiB. Range is 100 to 64,000 IOPS for volumes in most Regions. Maximum IOPS of 64,000 is guaranteed only on Nitro-based instances. Other instance families guarantee performance up to 32,000 IOPS. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide.",
        "type": "Integer",
        "required": "no"
      },
      "KmsKeyId": {
        "desc": "The identifier of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use for Amazon EBS encryption. If this parameter is not specified, your AWS managed CMK for EBS is used. If KmsKeyId is specified, the encrypted state must be true.",
        "type": "String",
        "required": "no"
      },
      "MultiAttachEnabled": {
        "desc": "Specifies whether to enable Amazon EBS Multi-Attach. If you enable Multi-Attach, you can attach the volume to up to 16 Nitro-based instances in the same Availability Zone. For more information, see Amazon EBS Multi-Attach in the Amazon Elastic Compute Cloud User Guide.",
        "type": "Boolean",
        "required": "no"
      },
      "OutpostArn": {
        "desc": "The Amazon Resource Name (ARN) of the Outpost.",
        "type": "String",
        "required": "no"
      },
      "Size": {
        "desc": "The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size.",
        "type": "Integer",
        "required": "no"
      },
      "SnapshotId": {
        "desc": "The snapshot from which to create the volume. You must specify either a snapshot ID or a volume size.",
        "type": "String",
        "required": "no"
      },
      "TagSpecification.N": {
        "desc": "The tags to apply to the volume during creation.",
        "type": "Array of TagSpecification objects",
        "required": "no"
      },
      "VolumeType": {
        "desc": "The volume type. This can be gp2 for General Purpose SSD, io1 for Provisioned IOPS SSD, st1 for Throughput Optimized HDD, sc1 for Cold HDD, or standard for Magnetic volumes.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "attachmentSet": {
        "desc": "Information about the volume attachments.",
        "type": "Array of VolumeAttachment objects"
      },
      "availabilityZone": {
        "desc": "The Availability Zone for the volume.",
        "type": "String"
      },
      "createTime": {
        "desc": "The time stamp when volume creation was initiated.",
        "type": "Timestamp"
      },
      "encrypted": {
        "desc": "Indicates whether the volume is encrypted.",
        "type": "Boolean"
      },
      "fastRestored": {
        "desc": "Indicates whether the volume was created using fast snapshot restore.",
        "type": "Boolean"
      },
      "iops": {
        "desc": "The number of I/O operations per second (IOPS) that the volume supports. For Provisioned IOPS SSD volumes, this represents the number of IOPS that are provisioned for the volume. For General Purpose SSD volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide.",
        "type": "Integer"
      },
      "kmsKeyId": {
        "desc": "The Amazon Resource Name (ARN) of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the volume.",
        "type": "String"
      },
      "multiAttachEnabled": {
        "desc": "Indicates whether Amazon EBS Multi-Attach is enabled.",
        "type": "Boolean"
      },
      "outpostArn": {
        "desc": "The Amazon Resource Name (ARN) of the Outpost.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "size": {
        "desc": "The size of the volume, in GiBs.",
        "type": "Integer"
      },
      "snapshotId": {
        "desc": "The snapshot from which the volume was created, if applicable.",
        "type": "String"
      },
      "status": {
        "desc": "The volume state.",
        "type": "String"
      },
      "tagSet": {
        "desc": "Any tags assigned to the volume.",
        "type": "Array of Tag objects"
      },
      "volumeId": {
        "desc": "The ID of the volume.",
        "type": "String"
      },
      "volumeType": {
        "desc": "The volume type. This can be gp2 for General Purpose SSD, io1 for Provisioned IOPS SSD, st1 for Throughput Optimized HDD, sc1 for Cold HDD, or standard for Magnetic volumes.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateVpc",
    "req": {
      "AmazonProvidedIpv6CidrBlock": {
        "desc": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block.",
        "type": "Boolean",
        "required": "no"
      },
      "CidrBlock": {
        "desc": "The IPv4 network range for the VPC, in CIDR notation. For example, 10.0.0.0/16.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceTenancy": {
        "desc": "The tenancy options for instances launched into the VPC. For default, instances are launched with shared tenancy by default. You can launch instances with any tenancy into a shared tenancy VPC. For dedicated, instances are launched as dedicated tenancy instances by default. You can only launch instances with a tenancy of dedicated or host into a dedicated tenancy VPC.",
        "type": "String",
        "required": "no"
      },
      "Ipv6CidrBlock": {
        "desc": "The IPv6 CIDR block from the IPv6 address pool. You must also specify Ipv6Pool in the request.",
        "type": "String",
        "required": "no"
      },
      "Ipv6CidrBlockNetworkBorderGroup": {
        "desc": "The name of the location from which we advertise the IPV6 CIDR block. Use this parameter to limit the address to this location.",
        "type": "String",
        "required": "no"
      },
      "Ipv6Pool": {
        "desc": "The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "vpc": {
        "desc": "Information about the VPC.",
        "type": "Vpc object"
      }
    }
  },
  {
    "title": "CreateVpcEndpoint",
    "req": {
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "PolicyDocument": {
        "desc": "A policy to attach to the endpoint that controls access to the service. The policy must be in valid JSON format. If this parameter is not specified, we attach a default policy that allows full access to the service.",
        "type": "String",
        "required": "no"
      },
      "PrivateDnsEnabled": {
        "desc": "(Interface endpoint) Indicates whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record set for the default public DNS name for the service for the Region (for example, kinesis.us-east-1.amazonaws.com), which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests to the default public DNS name for the service instead of the public DNS names that are automatically generated by the VPC endpoint service.",
        "type": "Boolean",
        "required": "no"
      },
      "RouteTableId.N": {
        "desc": "(Gateway endpoint) One or more route table IDs.",
        "type": "Array of strings",
        "required": "no"
      },
      "SecurityGroupId.N": {
        "desc": "(Interface endpoint) The ID of one or more security groups to associate with the endpoint network interface.",
        "type": "Array of strings",
        "required": "no"
      },
      "ServiceName": {
        "desc": "The service name. To get a list of available services, use the DescribeVpcEndpointServices request, or get the name from the service provider.",
        "type": "String",
        "required": "yes"
      },
      "SubnetId.N": {
        "desc": "(Interface endpoint) The ID of one or more subnets in which to create an endpoint network interface.",
        "type": "Array of strings",
        "required": "no"
      },
      "TagSpecification.N": {
        "desc": "The tags to associate with the endpoint.",
        "type": "Array of TagSpecification objects",
        "required": "no"
      },
      "VpcEndpointType": {
        "desc": "The type of endpoint.",
        "type": "String",
        "required": "no"
      },
      "VpcId": {
        "desc": "The ID of the VPC in which the endpoint will be used.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "clientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "vpcEndpoint": {
        "desc": "Information about the endpoint.",
        "type": "VpcEndpoint object"
      }
    }
  },
  {
    "title": "CreateVpcEndpointConnectionNotification",
    "req": {
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency.",
        "type": "String",
        "required": "no"
      },
      "ConnectionEvents.N": {
        "desc": "One or more endpoint events for which to receive notifications. Valid values are Accept, Connect, Delete, and Reject.",
        "type": "Array of strings",
        "required": "yes"
      },
      "ConnectionNotificationArn": {
        "desc": "The ARN of the SNS topic for the notifications.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "ServiceId": {
        "desc": "The ID of the endpoint service.",
        "type": "String",
        "required": "no"
      },
      "VpcEndpointId": {
        "desc": "The ID of the endpoint.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "clientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.",
        "type": "String"
      },
      "connectionNotification": {
        "desc": "Information about the notification.",
        "type": "ConnectionNotification object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateVpcEndpointServiceConfiguration",
    "req": {
      "AcceptanceRequired": {
        "desc": "Indicates whether requests from service consumers to create an endpoint to your service must be accepted. To accept a request, use AcceptVpcEndpointConnections.",
        "type": "Boolean",
        "required": "no"
      },
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "NetworkLoadBalancerArn.N": {
        "desc": "The Amazon Resource Names (ARNs) of one or more Network Load Balancers for your service.",
        "type": "Array of strings",
        "required": "yes"
      },
      "PrivateDnsName": {
        "desc": "The private DNS name to assign to the VPC endpoint service.",
        "type": "String",
        "required": "no"
      },
      "TagSpecification.N": {
        "desc": "The tags to associate with the service.",
        "type": "Array of TagSpecification objects",
        "required": "no"
      }
    },
    "res": {
      "clientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "serviceConfiguration": {
        "desc": "Information about the service configuration.",
        "type": "ServiceConfiguration object"
      }
    }
  },
  {
    "title": "CreateVpcPeeringConnection",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "PeerOwnerId": {
        "desc": "The AWS account ID of the owner of the accepter VPC.",
        "type": "String",
        "required": "no"
      },
      "PeerRegion": {
        "desc": "The Region code for the accepter VPC, if the accepter VPC is located in a Region other than the Region in which you make the request.",
        "type": "String",
        "required": "no"
      },
      "PeerVpcId": {
        "desc": "The ID of the VPC with which you are creating the VPC peering connection. You must specify this parameter in the request.",
        "type": "String",
        "required": "no"
      },
      "VpcId": {
        "desc": "The ID of the requester VPC. You must specify this parameter in the request.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "vpcPeeringConnection": {
        "desc": "Information about the VPC peering connection.",
        "type": "VpcPeeringConnection object"
      }
    }
  },
  {
    "title": "CreateVpnConnection",
    "req": {
      "CustomerGatewayId": {
        "desc": "The ID of the customer gateway.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Options": {
        "desc": "The options for the VPN connection.",
        "type": "VpnConnectionOptionsSpecification object",
        "required": "no"
      },
      "TransitGatewayId": {
        "desc": "The ID of the transit gateway. If you specify a transit gateway, you cannot specify a virtual private gateway.",
        "type": "String",
        "required": "no"
      },
      "Type": {
        "desc": "The type of VPN connection (ipsec.1).",
        "type": "String",
        "required": "yes"
      },
      "VpnGatewayId": {
        "desc": "The ID of the virtual private gateway. If you specify a virtual private gateway, you cannot specify a transit gateway.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "vpnConnection": {
        "desc": "Information about the VPN connection.",
        "type": "VpnConnection object"
      }
    }
  },
  {
    "title": "CreateVpnConnectionRoute",
    "req": {
      "DestinationCidrBlock": {
        "desc": "The CIDR block associated with the local subnet of the customer network.",
        "type": "String",
        "required": "yes"
      },
      "VpnConnectionId": {
        "desc": "The ID of the VPN connection.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "CreateVpnGateway",
    "req": {
      "AmazonSideAsn": {
        "desc": "A private Autonomous System Number (ASN) for the Amazon side of a BGP session. If you're using a 16-bit ASN, it must be in the 64512 to 65534 range. If you're using a 32-bit ASN, it must be in the 4200000000 to 4294967294 range.",
        "type": "Long",
        "required": "no"
      },
      "AvailabilityZone": {
        "desc": "The Availability Zone for the virtual private gateway.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Type": {
        "desc": "The type of VPN connection this virtual private gateway supports.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "vpnGateway": {
        "desc": "Information about the virtual private gateway.",
        "type": "VpnGateway object"
      }
    }
  },
  {
    "title": "DeleteClientVpnEndpoint",
    "req": {
      "ClientVpnEndpointId": {
        "desc": "The ID of the Client VPN to be deleted.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "status": {
        "desc": "The current state of the Client VPN endpoint.",
        "type": "ClientVpnEndpointStatus object"
      }
    }
  },
  {
    "title": "DeleteClientVpnRoute",
    "req": {
      "ClientVpnEndpointId": {
        "desc": "The ID of the Client VPN endpoint from which the route is to be deleted.",
        "type": "String",
        "required": "yes"
      },
      "DestinationCidrBlock": {
        "desc": "The IPv4 address range, in CIDR notation, of the route to be deleted.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TargetVpcSubnetId": {
        "desc": "The ID of the target subnet used by the route.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "status": {
        "desc": "The current state of the route.",
        "type": "ClientVpnRouteStatus object"
      }
    }
  },
  {
    "title": "DeleteCustomerGateway",
    "req": {
      "CustomerGatewayId": {
        "desc": "The ID of the customer gateway.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeleteDhcpOptions",
    "req": {
      "DhcpOptionsId": {
        "desc": "The ID of the DHCP options set.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeleteEgressOnlyInternetGateway",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "EgressOnlyInternetGatewayId": {
        "desc": "The ID of the egress-only internet gateway.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "returnCode": {
        "desc": "Returns true if the request succeeds; otherwise, it returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeleteFleets",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "FleetId.N": {
        "desc": "The IDs of the EC2 Fleets.",
        "type": "Array of strings",
        "required": "yes"
      },
      "TerminateInstances": {
        "desc": "Indicates whether to terminate instances for an EC2 Fleet if it is deleted successfully.",
        "type": "Boolean",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "successfulFleetDeletionSet": {
        "desc": "Information about the EC2 Fleets that are successfully deleted.",
        "type": "Array of DeleteFleetSuccessItem objects"
      },
      "unsuccessfulFleetDeletionSet": {
        "desc": "Information about the EC2 Fleets that are not successfully deleted.",
        "type": "Array of DeleteFleetErrorItem objects"
      }
    }
  },
  {
    "title": "DeleteFlowLogs",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "FlowLogId.N": {
        "desc": "One or more flow log IDs.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "unsuccessful": {
        "desc": "Information about the flow logs that could not be deleted successfully.",
        "type": "Array of UnsuccessfulItem objects"
      }
    }
  },
  {
    "title": "DeleteFpgaImage",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "FpgaImageId": {
        "desc": "The ID of the AFI.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeleteInternetGateway",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InternetGatewayId": {
        "desc": "The ID of the internet gateway.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeleteKeyPair",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "KeyName": {
        "desc": "The name of the key pair.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeleteLaunchTemplate",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "LaunchTemplateId": {
        "desc": "The ID of the launch template. You must specify either the launch template ID or launch template name in the request.",
        "type": "String",
        "required": "no"
      },
      "LaunchTemplateName": {
        "desc": "The name of the launch template. You must specify either the launch template ID or launch template name in the request.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "launchTemplate": {
        "desc": "Information about the launch template.",
        "type": "LaunchTemplate object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DeleteLaunchTemplateVersions",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "LaunchTemplateId": {
        "desc": "The ID of the launch template. You must specify either the launch template ID or launch template name in the request.",
        "type": "String",
        "required": "no"
      },
      "LaunchTemplateName": {
        "desc": "The name of the launch template. You must specify either the launch template ID or launch template name in the request.",
        "type": "String",
        "required": "no"
      },
      "LaunchTemplateVersion.N": {
        "desc": "The version numbers of one or more launch template versions to delete.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "successfullyDeletedLaunchTemplateVersionSet": {
        "desc": "Information about the launch template versions that were successfully deleted.",
        "type": "Array of DeleteLaunchTemplateVersionsResponseSuccessItem objects"
      },
      "unsuccessfullyDeletedLaunchTemplateVersionSet": {
        "desc": "Information about the launch template versions that could not be deleted.",
        "type": "Array of DeleteLaunchTemplateVersionsResponseErrorItem objects"
      }
    }
  },
  {
    "title": "DeleteLocalGatewayRoute",
    "req": {
      "DestinationCidrBlock": {
        "desc": "The CIDR range for the route. This must match the CIDR for the route exactly.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "LocalGatewayRouteTableId": {
        "desc": "The ID of the local gateway route table.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "route": {
        "desc": "Information about the route.",
        "type": "LocalGatewayRoute object"
      }
    }
  },
  {
    "title": "DeleteLocalGatewayRouteTableVpcAssociation",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "LocalGatewayRouteTableVpcAssociationId": {
        "desc": "The ID of the association.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "localGatewayRouteTableVpcAssociation": {
        "desc": "Information about the association.",
        "type": "LocalGatewayRouteTableVpcAssociation object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DeleteNatGateway",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "NatGatewayId": {
        "desc": "The ID of the NAT gateway.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "natGatewayId": {
        "desc": "The ID of the NAT gateway.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DeleteNetworkAcl",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "NetworkAclId": {
        "desc": "The ID of the network ACL.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeleteNetworkAclEntry",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Egress": {
        "desc": "Indicates whether the rule is an egress rule.",
        "type": "Boolean",
        "required": "yes"
      },
      "NetworkAclId": {
        "desc": "The ID of the network ACL.",
        "type": "String",
        "required": "yes"
      },
      "RuleNumber": {
        "desc": "The rule number of the entry to delete.",
        "type": "Integer",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeleteNetworkInterface",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "NetworkInterfaceId": {
        "desc": "The ID of the network interface.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeleteNetworkInterfacePermission",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Force": {
        "desc": "Specify true to remove the permission even if the network interface is attached to an instance.",
        "type": "Boolean",
        "required": "no"
      },
      "NetworkInterfacePermissionId": {
        "desc": "The ID of the network interface permission.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Returns true if the request succeeds, otherwise returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeletePlacementGroup",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "GroupName": {
        "desc": "The name of the placement group.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeleteQueuedReservedInstances",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "ReservedInstancesId.N": {
        "desc": "The IDs of the Reserved Instances.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "failedQueuedPurchaseDeletionSet": {
        "desc": "Information about the queued purchases that could not be deleted.",
        "type": "Array of FailedQueuedPurchaseDeletion objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "successfulQueuedPurchaseDeletionSet": {
        "desc": "Information about the queued purchases that were successfully deleted.",
        "type": "Array of SuccessfulQueuedPurchaseDeletion objects"
      }
    }
  },
  {
    "title": "DeleteRoute",
    "req": {
      "DestinationCidrBlock": {
        "desc": "The IPv4 CIDR range for the route. The value you specify must match the CIDR for the route exactly.",
        "type": "String",
        "required": "no"
      },
      "DestinationIpv6CidrBlock": {
        "desc": "The IPv6 CIDR range for the route. The value you specify must match the CIDR for the route exactly.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "RouteTableId": {
        "desc": "The ID of the route table.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeleteRouteTable",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "RouteTableId": {
        "desc": "The ID of the route table.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeleteSecurityGroup",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "GroupId": {
        "desc": "The ID of the security group. Required for a nondefault VPC.",
        "type": "String",
        "required": "no"
      },
      "GroupName": {
        "desc": "[EC2-Classic, default VPC] The name of the security group. You can specify either the security group name or the security group ID.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeleteSnapshot",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "SnapshotId": {
        "desc": "The ID of the EBS snapshot.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeleteSpotDatafeedSubscription",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeleteSubnet",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "SubnetId": {
        "desc": "The ID of the subnet.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeleteTags",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "ResourceId.N": {
        "desc": "The IDs of the resources, separated by spaces.",
        "type": "Array of strings",
        "required": "yes"
      },
      "Tag.N": {
        "desc": "The tags to delete. Specify a tag key and an optional tag value to delete specific tags. If you specify a tag key without a tag value, we delete any tag with this key regardless of its value. If you specify a tag key with an empty string as the tag value, we delete the tag only if its value is an empty string.",
        "type": "Array of Tag objects",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeleteTrafficMirrorFilter",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TrafficMirrorFilterId": {
        "desc": "The ID of the Traffic Mirror filter.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "trafficMirrorFilterId": {
        "desc": "The ID of the Traffic Mirror filter.",
        "type": "String"
      }
    }
  },
  {
    "title": "DeleteTrafficMirrorFilterRule",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TrafficMirrorFilterRuleId": {
        "desc": "The ID of the Traffic Mirror rule.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "trafficMirrorFilterRuleId": {
        "desc": "The ID of the deleted Traffic Mirror rule.",
        "type": "String"
      }
    }
  },
  {
    "title": "DeleteTrafficMirrorSession",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TrafficMirrorSessionId": {
        "desc": "The ID of the Traffic Mirror session.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "trafficMirrorSessionId": {
        "desc": "The ID of the deleted Traffic Mirror session.",
        "type": "String"
      }
    }
  },
  {
    "title": "DeleteTrafficMirrorTarget",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TrafficMirrorTargetId": {
        "desc": "The ID of the Traffic Mirror target.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "trafficMirrorTargetId": {
        "desc": "The ID of the deleted Traffic Mirror target.",
        "type": "String"
      }
    }
  },
  {
    "title": "DeleteTransitGateway",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TransitGatewayId": {
        "desc": "The ID of the transit gateway.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "transitGateway": {
        "desc": "Information about the deleted transit gateway.",
        "type": "TransitGateway object"
      }
    }
  },
  {
    "title": "DeleteTransitGatewayMulticastDomain",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TransitGatewayMulticastDomainId": {
        "desc": "The ID of the transit gateway multicast domain.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "transitGatewayMulticastDomain": {
        "desc": "Information about the deleted transit gateway multicast domain.",
        "type": "TransitGatewayMulticastDomain object"
      }
    }
  },
  {
    "title": "DeleteTransitGatewayPeeringAttachment",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TransitGatewayAttachmentId": {
        "desc": "The ID of the transit gateway peering attachment.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "transitGatewayPeeringAttachment": {
        "desc": "The transit gateway peering attachment.",
        "type": "TransitGatewayPeeringAttachment object"
      }
    }
  },
  {
    "title": "DeleteTransitGatewayRoute",
    "req": {
      "DestinationCidrBlock": {
        "desc": "The CIDR range for the route. This must match the CIDR for the route exactly.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TransitGatewayRouteTableId": {
        "desc": "The ID of the transit gateway route table.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "route": {
        "desc": "Information about the route.",
        "type": "TransitGatewayRoute object"
      }
    }
  },
  {
    "title": "DeleteTransitGatewayRouteTable",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TransitGatewayRouteTableId": {
        "desc": "The ID of the transit gateway route table.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "transitGatewayRouteTable": {
        "desc": "Information about the deleted transit gateway route table.",
        "type": "TransitGatewayRouteTable object"
      }
    }
  },
  {
    "title": "DeleteTransitGatewayVpcAttachment",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TransitGatewayAttachmentId": {
        "desc": "The ID of the attachment.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "transitGatewayVpcAttachment": {
        "desc": "Information about the deleted VPC attachment.",
        "type": "TransitGatewayVpcAttachment object"
      }
    }
  },
  {
    "title": "DeleteVolume",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "VolumeId": {
        "desc": "The ID of the volume.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeleteVpc",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "VpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeleteVpcEndpointConnectionNotifications",
    "req": {
      "ConnectionNotificationId.N": {
        "desc": "One or more notification IDs.",
        "type": "Array of strings",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "unsuccessful": {
        "desc": "Information about the notifications that could not be deleted successfully.",
        "type": "Array of UnsuccessfulItem objects"
      }
    }
  },
  {
    "title": "DeleteVpcEndpoints",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "VpcEndpointId.N": {
        "desc": "One or more VPC endpoint IDs.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "unsuccessful": {
        "desc": "Information about the VPC endpoints that were not successfully deleted.",
        "type": "Array of UnsuccessfulItem objects"
      }
    }
  },
  {
    "title": "DeleteVpcEndpointServiceConfigurations",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "ServiceId.N": {
        "desc": "The IDs of one or more services.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "unsuccessful": {
        "desc": "Information about the service configurations that were not deleted, if applicable.",
        "type": "Array of UnsuccessfulItem objects"
      }
    }
  },
  {
    "title": "DeleteVpcPeeringConnection",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "VpcPeeringConnectionId": {
        "desc": "The ID of the VPC peering connection.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Returns true if the request succeeds; otherwise, it returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeleteVpnConnection",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "VpnConnectionId": {
        "desc": "The ID of the VPN connection.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeleteVpnConnectionRoute",
    "req": {
      "DestinationCidrBlock": {
        "desc": "The CIDR block associated with the local subnet of the customer network.",
        "type": "String",
        "required": "yes"
      },
      "VpnConnectionId": {
        "desc": "The ID of the VPN connection.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeleteVpnGateway",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "VpnGatewayId": {
        "desc": "The ID of the virtual private gateway.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeprovisionByoipCidr",
    "req": {
      "Cidr": {
        "desc": "The address range, in CIDR notation. The prefix must be the same prefix that you specified when you provisioned the address range.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "byoipCidr": {
        "desc": "Information about the address range.",
        "type": "ByoipCidr object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DeregisterImage",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "ImageId": {
        "desc": "The ID of the AMI.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DeregisterTransitGatewayMulticastGroupMembers",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "GroupIpAddress": {
        "desc": "The IP address assigned to the transit gateway multicast group.",
        "type": "String",
        "required": "no"
      },
      "NetworkInterfaceIds.N": {
        "desc": "The IDs of the group members' network interfaces.",
        "type": "Array of strings",
        "required": "no"
      },
      "TransitGatewayMulticastDomainId": {
        "desc": "The ID of the transit gateway multicast domain.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "deregisteredMulticastGroupMembers": {
        "desc": "Information about the deregistered members.",
        "type": "TransitGatewayMulticastDeregisteredGroupMembers object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DeregisterTransitGatewayMulticastGroupSources",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "GroupIpAddress": {
        "desc": "The IP address assigned to the transit gateway multicast group.",
        "type": "String",
        "required": "no"
      },
      "NetworkInterfaceIds.N": {
        "desc": "The IDs of the group sources' network interfaces.",
        "type": "Array of strings",
        "required": "no"
      },
      "TransitGatewayMulticastDomainId": {
        "desc": "The ID of the transit gateway multicast domain.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "deregisteredMulticastGroupSources": {
        "desc": "Information about the deregistered group sources.",
        "type": "TransitGatewayMulticastDeregisteredGroupSources object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeAccountAttributes",
    "req": {
      "AttributeName.N": {
        "desc": "The account attribute names.",
        "type": "Array of strings",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "accountAttributeSet": {
        "desc": "Information about the account attributes.",
        "type": "Array of AccountAttribute objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeAddresses",
    "req": {
      "AllocationId.N": {
        "desc": "[EC2-VPC] Information about the allocation IDs.",
        "type": "Array of strings",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. Filter names and values are case-sensitive.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "PublicIp.N": {
        "desc": "One or more Elastic IP addresses.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "addressesSet": {
        "desc": "Information about the Elastic IP addresses.",
        "type": "Array of Address objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeAggregateIdFormat",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "statusSet": {
        "desc": "Information about each resource's ID format.",
        "type": "Array of IdFormat objects"
      },
      "useLongIdsAggregated": {
        "desc": "Indicates whether all resource types in the Region are configured to use longer IDs. This value is only true if all users are configured to use longer IDs for all resources types in the Region.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DescribeAvailabilityZones",
    "req": {
      "AllAvailabilityZones": {
        "desc": "Include all Availability Zones and Local Zones regardless of your opt in status.",
        "type": "Boolean",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "ZoneId.N": {
        "desc": "The IDs of the Availability Zones and Local Zones.",
        "type": "Array of strings",
        "required": "no"
      },
      "ZoneName.N": {
        "desc": "The names of the Availability Zones and Local Zones.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "availabilityZoneInfo": {
        "desc": "Information about the Availability Zones and Local Zones.",
        "type": "Array of AvailabilityZone objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeBundleTasks",
    "req": {
      "BundleId.N": {
        "desc": "The bundle task IDs.",
        "type": "Array of strings",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      }
    },
    "res": {
      "bundleInstanceTasksSet": {
        "desc": "Information about the bundle tasks.",
        "type": "Array of BundleTask objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeByoipCidrs",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "yes"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "byoipCidrSet": {
        "desc": "Information about your address ranges.",
        "type": "Array of ByoipCidr objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeCapacityReservations",
    "req": {
      "CapacityReservationId.N": {
        "desc": "The ID of the Capacity Reservation.",
        "type": "Array of strings",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to retrieve the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "capacityReservationSet": {
        "desc": "Information about the Capacity Reservations.",
        "type": "Array of CapacityReservation objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeClassicLinkInstances",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "InstanceId.N": {
        "desc": "One or more instance IDs. Must be instances linked to a VPC through ClassicLink.",
        "type": "Array of strings",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "instancesSet": {
        "desc": "Information about one or more linked EC2-Classic instances.",
        "type": "Array of ClassicLinkInstance objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeClientVpnAuthorizationRules",
    "req": {
      "ClientVpnEndpointId": {
        "desc": "The ID of the Client VPN endpoint.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. Filter names and values are case-sensitive.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to retrieve the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "authorizationRule": {
        "desc": "Information about the authorization rules.",
        "type": "Array of AuthorizationRule objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeClientVpnConnections",
    "req": {
      "ClientVpnEndpointId": {
        "desc": "The ID of the Client VPN endpoint.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. Filter names and values are case-sensitive.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to retrieve the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "connections": {
        "desc": "Information about the active and terminated client connections.",
        "type": "Array of ClientVpnConnection objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeClientVpnEndpoints",
    "req": {
      "ClientVpnEndpointId.N": {
        "desc": "The ID of the Client VPN endpoint.",
        "type": "Array of strings",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. Filter names and values are case-sensitive.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to retrieve the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "clientVpnEndpoint": {
        "desc": "Information about the Client VPN endpoints.",
        "type": "Array of ClientVpnEndpoint objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeClientVpnRoutes",
    "req": {
      "ClientVpnEndpointId": {
        "desc": "The ID of the Client VPN endpoint.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. Filter names and values are case-sensitive.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to retrieve the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "routes": {
        "desc": "Information about the Client VPN endpoint routes.",
        "type": "Array of ClientVpnRoute objects"
      }
    }
  },
  {
    "title": "DescribeClientVpnTargetNetworks",
    "req": {
      "AssociationIds.N": {
        "desc": "The IDs of the target network associations.",
        "type": "Array of strings",
        "required": "no"
      },
      "ClientVpnEndpointId": {
        "desc": "The ID of the Client VPN endpoint.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. Filter names and values are case-sensitive.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to retrieve the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "clientVpnTargetNetworks": {
        "desc": "Information about the associated target networks.",
        "type": "Array of TargetNetwork objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeCoipPools",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters. The following are the possible values:",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "PoolId.N": {
        "desc": "The IDs of the address pools.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "coipPoolSet": {
        "desc": "Information about the address pools.",
        "type": "Array of CoipPool objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeConversionTasks",
    "req": {
      "ConversionTaskId.N": {
        "desc": "The conversion task IDs.",
        "type": "Array of strings",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "conversionTasks": {
        "desc": "Information about the conversion tasks.",
        "type": "Array of ConversionTask objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeCustomerGateways",
    "req": {
      "CustomerGatewayId.N": {
        "desc": "One or more customer gateway IDs.",
        "type": "Array of strings",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      }
    },
    "res": {
      "customerGatewaySet": {
        "desc": "Information about one or more customer gateways.",
        "type": "Array of CustomerGateway objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeDhcpOptions",
    "req": {
      "DhcpOptionsId.N": {
        "desc": "The IDs of one or more DHCP options sets.",
        "type": "Array of strings",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "dhcpOptionsSet": {
        "desc": "Information about one or more DHCP options sets.",
        "type": "Array of DhcpOptions objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeEgressOnlyInternetGateways",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "EgressOnlyInternetGatewayId.N": {
        "desc": "One or more egress-only internet gateway IDs.",
        "type": "Array of strings",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "egressOnlyInternetGatewaySet": {
        "desc": "Information about the egress-only internet gateways.",
        "type": "Array of EgressOnlyInternetGateway objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeElasticGpus",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "ElasticGpuId.N": {
        "desc": "The Elastic Graphics accelerator IDs.",
        "type": "Array of strings",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 5 and 1000.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to request the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "elasticGpuSet": {
        "desc": "Information about the Elastic Graphics accelerators.",
        "type": "Array of ElasticGpus objects"
      },
      "maxResults": {
        "desc": "The total number of items to return. If the total number of items available is more than the value specified in max-items then a Next-Token will be provided in the output that you can use to resume pagination.",
        "type": "Integer"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeExportImageTasks",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "ExportImageTaskId.N": {
        "desc": "The IDs of the export image tasks.",
        "type": "Array of strings",
        "required": "no"
      },
      "Filter.N": {
        "desc": "Filter tasks using the task-state filter and one of the following values: active, completed, deleting, or deleted.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "A token that indicates the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "exportImageTaskSet": {
        "desc": "Information about the export image tasks.",
        "type": "Array of ExportImageTask objects"
      },
      "nextToken": {
        "desc": "The token to use to get the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeExportTasks",
    "req": {
      "ExportTaskId.N": {
        "desc": "The export task IDs.",
        "type": "Array of strings",
        "required": "no"
      },
      "Filter.N": {
        "desc": "the filters for the export tasks.",
        "type": "Array of Filter objects",
        "required": "no"
      }
    },
    "res": {
      "exportTaskSet": {
        "desc": "Information about the export tasks.",
        "type": "Array of ExportTask objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeFastSnapshotRestores",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters. The possible values are:",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "fastSnapshotRestoreSet": {
        "desc": "Information about the state of fast snapshot restores.",
        "type": "Array of DescribeFastSnapshotRestoreSuccessItem objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeFleetHistory",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "EventType": {
        "desc": "The type of events to describe. By default, all events are described.",
        "type": "String",
        "required": "no"
      },
      "FleetId": {
        "desc": "The ID of the EC2 Fleet.",
        "type": "String",
        "required": "yes"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned NextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next set of results.",
        "type": "String",
        "required": "no"
      },
      "StartTime": {
        "desc": "The start date and time for the events, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ).",
        "type": "Timestamp",
        "required": "yes"
      }
    },
    "res": {
      "fleetId": {
        "desc": "The ID of the EC Fleet.",
        "type": "String"
      },
      "historyRecordSet": {
        "desc": "Information about the events in the history of the EC2 Fleet.",
        "type": "Array of HistoryRecordEntry objects"
      },
      "lastEvaluatedTime": {
        "desc": "The last date and time for the events, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). All records up to this time were retrieved.",
        "type": "Timestamp"
      },
      "nextToken": {
        "desc": "The token for the next set of results.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "startTime": {
        "desc": "The start date and time for the events, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ).",
        "type": "Timestamp"
      }
    }
  },
  {
    "title": "DescribeFleetInstances",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "FleetId": {
        "desc": "The ID of the EC2 Fleet.",
        "type": "String",
        "required": "yes"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned NextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next set of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "activeInstanceSet": {
        "desc": "The running instances. This list is refreshed periodically and might be out of date.",
        "type": "Array of ActiveInstance objects"
      },
      "fleetId": {
        "desc": "The ID of the EC2 Fleet.",
        "type": "String"
      },
      "nextToken": {
        "desc": "The token for the next set of results.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeFleets",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "FleetId.N": {
        "desc": "The ID of the EC2 Fleets.",
        "type": "Array of strings",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned NextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next set of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "fleetSet": {
        "desc": "Information about the EC2 Fleets.",
        "type": "Array of FleetData objects"
      },
      "nextToken": {
        "desc": "The token for the next set of results.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeFlowLogs",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "FlowLogId.N": {
        "desc": "One or more flow log IDs.",
        "type": "Array of strings",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "flowLogSet": {
        "desc": "Information about the flow logs.",
        "type": "Array of FlowLog objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeFpgaImageAttribute",
    "req": {
      "Attribute": {
        "desc": "The AFI attribute.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "FpgaImageId": {
        "desc": "The ID of the AFI.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "fpgaImageAttribute": {
        "desc": "Information about the attribute.",
        "type": "FpgaImageAttribute object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeFpgaImages",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "FpgaImageId.N": {
        "desc": "The AFI IDs.",
        "type": "Array of strings",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to retrieve the next page of results.",
        "type": "String",
        "required": "no"
      },
      "Owner.N": {
        "desc": "Filters the AFI by owner. Specify an AWS account ID, self (owner is the sender of the request), or an AWS owner alias (valid values are amazon | aws-marketplace).",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "fpgaImageSet": {
        "desc": "Information about the FPGA images.",
        "type": "Array of FpgaImage objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeHostReservationOfferings",
    "req": {
      "Filter.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxDuration": {
        "desc": "This is the maximum duration of the reservation to purchase, specified in seconds. Reservations are available in one-year and three-year terms. The number of seconds specified must be the number of seconds in a year (365x24x60x60) times one of the supported durations (1 or 3). For example, specify 94608000 for three years.",
        "type": "Integer",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned nextToken value. This value can be between 5 and 500. If maxResults is given a larger value than 500, you receive an error.",
        "type": "Integer",
        "required": "no"
      },
      "MinDuration": {
        "desc": "This is the minimum duration of the reservation you'd like to purchase, specified in seconds. Reservations are available in one-year and three-year terms. The number of seconds specified must be the number of seconds in a year (365x24x60x60) times one of the supported durations (1 or 3). For example, specify 31536000 for one year.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to use to retrieve the next page of results.",
        "type": "String",
        "required": "no"
      },
      "OfferingId": {
        "desc": "The ID of the reservation offering.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "offeringSet": {
        "desc": "Information about the offerings.",
        "type": "Array of HostOffering objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeHostReservations",
    "req": {
      "Filter.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "HostReservationIdSet.N": {
        "desc": "The host reservation IDs.",
        "type": "Array of strings",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned nextToken value. This value can be between 5 and 500. If maxResults is given a larger value than 500, you receive an error.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to use to retrieve the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "hostReservationSet": {
        "desc": "Details about the reservation's configuration.",
        "type": "Array of HostReservation objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeHosts",
    "req": {
      "Filter.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "HostId.N": {
        "desc": "The IDs of the Dedicated Hosts. The IDs are used for targeted instance launches.",
        "type": "Array of strings",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned nextToken value. This value can be between 5 and 500. If maxResults is given a larger value than 500, you receive an error.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to use to retrieve the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "hostSet": {
        "desc": "Information about the Dedicated Hosts.",
        "type": "Array of Host objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeIamInstanceProfileAssociations",
    "req": {
      "AssociationId.N": {
        "desc": "The IAM instance profile associations.",
        "type": "Array of strings",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to request the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "iamInstanceProfileAssociationSet": {
        "desc": "Information about the IAM instance profile associations.",
        "type": "Array of IamInstanceProfileAssociation objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeIdentityIdFormat",
    "req": {
      "PrincipalArn": {
        "desc": "The ARN of the principal, which can be an IAM role, IAM user, or the root user.",
        "type": "String",
        "required": "yes"
      },
      "Resource": {
        "desc": "The type of resource: bundle | conversion-task | customer-gateway | dhcp-options | elastic-ip-allocation | elastic-ip-association | export-task | flow-log | image | import-task | instance | internet-gateway | network-acl | network-acl-association | network-interface | network-interface-attachment | prefix-list | reservation | route-table | route-table-association | security-group | snapshot | subnet | subnet-cidr-block-association | volume | vpc | vpc-cidr-block-association | vpc-endpoint | vpc-peering-connection | vpn-connection | vpn-gateway",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "statusSet": {
        "desc": "Information about the ID format for the resources.",
        "type": "Array of IdFormat objects"
      }
    }
  },
  {
    "title": "DescribeIdFormat",
    "req": {
      "Resource": {
        "desc": "The type of resource: bundle | conversion-task | customer-gateway | dhcp-options | elastic-ip-allocation | elastic-ip-association | export-task | flow-log | image | import-task | instance | internet-gateway | network-acl | network-acl-association | network-interface | network-interface-attachment | prefix-list | reservation | route-table | route-table-association | security-group | snapshot | subnet | subnet-cidr-block-association | volume | vpc | vpc-cidr-block-association | vpc-endpoint | vpc-peering-connection | vpn-connection | vpn-gateway",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "statusSet": {
        "desc": "Information about the ID format for the resource.",
        "type": "Array of IdFormat objects"
      }
    }
  },
  {
    "title": "DescribeImageAttribute",
    "req": {
      "Attribute": {
        "desc": "The AMI attribute.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "ImageId": {
        "desc": "The ID of the AMI.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "blockDeviceMapping": {
        "desc": "The block device mapping entries.",
        "type": "Array of BlockDeviceMapping objects"
      },
      "description": {
        "desc": "A description for the AMI.",
        "type": "AttributeValue object"
      },
      "imageId": {
        "desc": "The ID of the AMI.",
        "type": "String"
      },
      "kernel": {
        "desc": "The kernel ID.",
        "type": "AttributeValue object"
      },
      "launchPermission": {
        "desc": "The launch permissions.",
        "type": "Array of LaunchPermission objects"
      },
      "productCodes": {
        "desc": "The product codes.",
        "type": "Array of ProductCode objects"
      },
      "ramdisk": {
        "desc": "The RAM disk ID.",
        "type": "AttributeValue object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "sriovNetSupport": {
        "desc": "Indicates whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.",
        "type": "AttributeValue object"
      }
    }
  },
  {
    "title": "DescribeImages",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "ExecutableBy.N": {
        "desc": "Scopes the images by users with explicit launch permissions. Specify an AWS account ID, self (the sender of the request), or all (public AMIs).",
        "type": "Array of strings",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "ImageId.N": {
        "desc": "The image IDs.",
        "type": "Array of strings",
        "required": "no"
      },
      "Owner.N": {
        "desc": "Filters the images by the owner. Specify an AWS account ID, self (owner is the sender of the request), or an AWS owner alias (valid values are amazon | aws-marketplace | microsoft). Omitting this option returns all images for which you have launch permissions, regardless of ownership.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "imagesSet": {
        "desc": "Information about the images.",
        "type": "Array of Image objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeImportImageTasks",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filters.N": {
        "desc": "Filter tasks using the task-state filter and one of the following values: active, completed, deleting, or deleted.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "ImportTaskId.N": {
        "desc": "The IDs of the import image tasks.",
        "type": "Array of strings",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "A token that indicates the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "importImageTaskSet": {
        "desc": "A list of zero or more import image tasks that are currently active or were completed or canceled in the previous 7 days.",
        "type": "Array of ImportImageTask objects"
      },
      "nextToken": {
        "desc": "The token to use to get the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeImportSnapshotTasks",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filters.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "ImportTaskId.N": {
        "desc": "A list of import snapshot task IDs.",
        "type": "Array of strings",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "A token that indicates the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "importSnapshotTaskSet": {
        "desc": "A list of zero or more import snapshot tasks that are currently active or were completed or canceled in the previous 7 days.",
        "type": "Array of ImportSnapshotTask objects"
      },
      "nextToken": {
        "desc": "The token to use to get the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeInstanceAttribute",
    "req": {
      "Attribute": {
        "desc": "The instance attribute.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "blockDeviceMapping": {
        "desc": "The block device mapping of the instance.",
        "type": "Array of InstanceBlockDeviceMapping objects"
      },
      "disableApiTermination": {
        "desc": "If the value is true, you can't terminate the instance through the Amazon EC2 console, CLI, or API; otherwise, you can.",
        "type": "AttributeBooleanValue object"
      },
      "ebsOptimized": {
        "desc": "Indicates whether the instance is optimized for Amazon EBS I/O.",
        "type": "AttributeBooleanValue object"
      },
      "enaSupport": {
        "desc": "Indicates whether enhanced networking with ENA is enabled.",
        "type": "AttributeBooleanValue object"
      },
      "groupSet": {
        "desc": "The security groups associated with the instance.",
        "type": "Array of GroupIdentifier objects"
      },
      "instanceId": {
        "desc": "The ID of the instance.",
        "type": "String"
      },
      "instanceInitiatedShutdownBehavior": {
        "desc": "Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).",
        "type": "AttributeValue object"
      },
      "instanceType": {
        "desc": "The instance type.",
        "type": "AttributeValue object"
      },
      "kernel": {
        "desc": "The kernel ID.",
        "type": "AttributeValue object"
      },
      "productCodes": {
        "desc": "A list of product codes.",
        "type": "Array of ProductCode objects"
      },
      "ramdisk": {
        "desc": "The RAM disk ID.",
        "type": "AttributeValue object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "rootDeviceName": {
        "desc": "The device name of the root device volume (for example, /dev/sda1).",
        "type": "AttributeValue object"
      },
      "sourceDestCheck": {
        "desc": "Indicates whether source/destination checking is enabled. A value of true means that checking is enabled, and false means that checking is disabled. This value must be false for a NAT instance to perform NAT.",
        "type": "AttributeBooleanValue object"
      },
      "sriovNetSupport": {
        "desc": "Indicates whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.",
        "type": "AttributeValue object"
      },
      "userData": {
        "desc": "The user data.",
        "type": "AttributeValue object"
      }
    }
  },
  {
    "title": "DescribeInstanceCreditSpecifications",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "InstanceId.N": {
        "desc": "The instance IDs.",
        "type": "Array of strings",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to retrieve the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "instanceCreditSpecificationSet": {
        "desc": "Information about the credit option for CPU usage of an instance.",
        "type": "Array of InstanceCreditSpecification objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeInstances",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "InstanceId.N": {
        "desc": "The instance IDs.",
        "type": "Array of strings",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to request the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "reservationSet": {
        "desc": "Information about the reservations.",
        "type": "Array of Reservation objects"
      }
    }
  },
  {
    "title": "DescribeInstanceStatus",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "IncludeAllInstances": {
        "desc": "When true, includes the health status for all instances. When false, includes the health status for running instances only.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId.N": {
        "desc": "The instance IDs.",
        "type": "Array of strings",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to retrieve the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "instanceStatusSet": {
        "desc": "Information about the status of the instances.",
        "type": "Array of InstanceStatus objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeInstanceTypeOfferings",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. Filter names and values are case-sensitive.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "LocationType": {
        "desc": "The location type.",
        "type": "String",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the next token value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to retrieve the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "instanceTypeOfferingSet": {
        "desc": "The instance types offered.",
        "type": "Array of InstanceTypeOffering objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeInstanceTypes",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. Filter names and values are case-sensitive.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "InstanceType.N": {
        "desc": "The instance types. For more information, see Instance Types in the Amazon Elastic Compute Cloud User Guide.",
        "type": "Array of strings",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the next token value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to retrieve the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "instanceTypeSet": {
        "desc": "The instance type. For more information, see Instance Types in the Amazon Elastic Compute Cloud User Guide.",
        "type": "Array of InstanceTypeInfo objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeInternetGateways",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "InternetGatewayId.N": {
        "desc": "One or more internet gateway IDs.",
        "type": "Array of strings",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "internetGatewaySet": {
        "desc": "Information about one or more internet gateways.",
        "type": "Array of InternetGateway objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeIpv6Pools",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "PoolId.N": {
        "desc": "The IDs of the IPv6 address pools.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "ipv6PoolSet": {
        "desc": "Information about the IPv6 address pools.",
        "type": "Array of Ipv6Pool objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeKeyPairs",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "KeyName.N": {
        "desc": "The key pair names.",
        "type": "Array of strings",
        "required": "no"
      },
      "KeyPairId.N": {
        "desc": "The IDs of the key pairs.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "keySet": {
        "desc": "Information about the key pairs.",
        "type": "Array of KeyPairInfo objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeLaunchTemplates",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "LaunchTemplateId.N": {
        "desc": "One or more launch template IDs.",
        "type": "Array of strings",
        "required": "no"
      },
      "LaunchTemplateName.N": {
        "desc": "One or more launch template names.",
        "type": "Array of strings",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 1 and 200.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to request the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "launchTemplates": {
        "desc": "Information about the launch templates.",
        "type": "Array of LaunchTemplate objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeLaunchTemplateVersions",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "LaunchTemplateId": {
        "desc": "The ID of the launch template. You must specify either the launch template ID or launch template name in the request.",
        "type": "String",
        "required": "no"
      },
      "LaunchTemplateName": {
        "desc": "The name of the launch template. You must specify either the launch template ID or launch template name in the request.",
        "type": "String",
        "required": "no"
      },
      "LaunchTemplateVersion.N": {
        "desc": "One or more versions of the launch template.",
        "type": "Array of strings",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 1 and 200.",
        "type": "Integer",
        "required": "no"
      },
      "MaxVersion": {
        "desc": "The version number up to which to describe launch template versions.",
        "type": "String",
        "required": "no"
      },
      "MinVersion": {
        "desc": "The version number after which to describe launch template versions.",
        "type": "String",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to request the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "launchTemplateVersionSet": {
        "desc": "Information about the launch template versions.",
        "type": "Array of LaunchTemplateVersion objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeLocalGatewayRouteTables",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "LocalGatewayRouteTableId.N": {
        "desc": "The IDs of the local gateway route tables.",
        "type": "Array of strings",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "localGatewayRouteTableSet": {
        "desc": "Information about the local gateway route tables.",
        "type": "Array of LocalGatewayRouteTable objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId.N": {
        "desc": "The IDs of the associations.",
        "type": "Array of strings",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "localGatewayRouteTableVirtualInterfaceGroupAssociationSet": {
        "desc": "Information about the associations.",
        "type": "Array of LocalGatewayRouteTableVirtualInterfaceGroupAssociation objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeLocalGatewayRouteTableVpcAssociations",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "LocalGatewayRouteTableVpcAssociationId.N": {
        "desc": "The IDs of the associations.",
        "type": "Array of strings",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "localGatewayRouteTableVpcAssociationSet": {
        "desc": "Information about the associations.",
        "type": "Array of LocalGatewayRouteTableVpcAssociation objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeLocalGateways",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "LocalGatewayId.N": {
        "desc": "The IDs of the local gateways.",
        "type": "Array of strings",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "localGatewaySet": {
        "desc": "Information about the local gateways.",
        "type": "Array of LocalGateway objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeLocalGatewayVirtualInterfaceGroups",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "LocalGatewayVirtualInterfaceGroupId.N": {
        "desc": "The IDs of the virtual interface groups.",
        "type": "Array of strings",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "localGatewayVirtualInterfaceGroupSet": {
        "desc": "The virtual interface groups.",
        "type": "Array of LocalGatewayVirtualInterfaceGroup objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeLocalGatewayVirtualInterfaces",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "LocalGatewayVirtualInterfaceId.N": {
        "desc": "The IDs of the virtual interfaces.",
        "type": "Array of strings",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "localGatewayVirtualInterfaceSet": {
        "desc": "Information about the virtual interfaces.",
        "type": "Array of LocalGatewayVirtualInterface objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeMovingAddresses",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned NextToken value. This value can be between 5 and 1000; if MaxResults is given a value outside of this range, an error is returned.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "PublicIp.N": {
        "desc": "One or more Elastic IP addresses.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "movingAddressStatusSet": {
        "desc": "The status for each Elastic IP address.",
        "type": "Array of MovingAddressStatus objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeNatGateways",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NatGatewayId.N": {
        "desc": "One or more NAT gateway IDs.",
        "type": "Array of strings",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "natGatewaySet": {
        "desc": "Information about the NAT gateways.",
        "type": "Array of NatGateway objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeNetworkAcls",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NetworkAclId.N": {
        "desc": "One or more network ACL IDs.",
        "type": "Array of strings",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "networkAclSet": {
        "desc": "Information about one or more network ACLs.",
        "type": "Array of NetworkAcl objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeNetworkInterfaceAttribute",
    "req": {
      "Attribute": {
        "desc": "The attribute of the network interface. This parameter is required.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "NetworkInterfaceId": {
        "desc": "The ID of the network interface.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "attachment": {
        "desc": "The attachment (if any) of the network interface.",
        "type": "NetworkInterfaceAttachment object"
      },
      "description": {
        "desc": "The description of the network interface.",
        "type": "AttributeValue object"
      },
      "groupSet": {
        "desc": "The security groups associated with the network interface.",
        "type": "Array of GroupIdentifier objects"
      },
      "networkInterfaceId": {
        "desc": "The ID of the network interface.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "sourceDestCheck": {
        "desc": "Indicates whether source/destination checking is enabled.",
        "type": "AttributeBooleanValue object"
      }
    }
  },
  {
    "title": "DescribeNetworkInterfacePermissions",
    "req": {
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. If this parameter is not specified, up to 50 results are returned by default.",
        "type": "Integer",
        "required": "no"
      },
      "NetworkInterfacePermissionId.N": {
        "desc": "One or more network interface permission IDs.",
        "type": "Array of strings",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to request the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "networkInterfacePermissions": {
        "desc": "The network interface permissions.",
        "type": "Array of NetworkInterfacePermission objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeNetworkInterfaces",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results. You cannot specify this parameter and the network interface IDs parameter in the same request.",
        "type": "Integer",
        "required": "no"
      },
      "NetworkInterfaceId.N": {
        "desc": "One or more network interface IDs.",
        "type": "Array of strings",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to retrieve the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "networkInterfaceSet": {
        "desc": "Information about one or more network interfaces.",
        "type": "Array of NetworkInterface objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribePlacementGroups",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "GroupId.N": {
        "desc": "The IDs of the placement groups.",
        "type": "Array of strings",
        "required": "no"
      },
      "GroupName.N": {
        "desc": "The names of the placement groups.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "placementGroupSet": {
        "desc": "Information about the placement groups.",
        "type": "Array of PlacementGroup objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribePrefixLists",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "PrefixListId.N": {
        "desc": "One or more prefix list IDs.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "prefixListSet": {
        "desc": "All available prefix lists.",
        "type": "Array of PrefixList objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribePrincipalIdFormat",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to request the next page of results.",
        "type": "String",
        "required": "no"
      },
      "Resource.N": {
        "desc": "The type of resource: bundle | conversion-task | customer-gateway | dhcp-options | elastic-ip-allocation | elastic-ip-association | export-task | flow-log | image | import-task | instance | internet-gateway | network-acl | network-acl-association | network-interface | network-interface-attachment | prefix-list | reservation | route-table | route-table-association | security-group | snapshot | subnet | subnet-cidr-block-association | volume | vpc | vpc-cidr-block-association | vpc-endpoint | vpc-peering-connection | vpn-connection | vpn-gateway",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "principalSet": {
        "desc": "Information about the ID format settings for the ARN.",
        "type": "Array of PrincipalIdFormat objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribePublicIpv4Pools",
    "req": {
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "PoolId.N": {
        "desc": "The IDs of the address pools.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "publicIpv4PoolSet": {
        "desc": "Information about the address pools.",
        "type": "Array of PublicIpv4Pool objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeRegions",
    "req": {
      "AllRegions": {
        "desc": "Indicates whether to display all Regions, including Regions that are disabled for your account.",
        "type": "Boolean",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "RegionName.N": {
        "desc": "The names of the Regions. You can specify any Regions, whether they are enabled and disabled for your account.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "regionInfo": {
        "desc": "Information about the Regions.",
        "type": "Array of Region objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeReservedInstances",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "OfferingClass": {
        "desc": "Describes whether the Reserved Instance is Standard or Convertible.",
        "type": "String",
        "required": "no"
      },
      "OfferingType": {
        "desc": "The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the Medium Utilization Reserved Instance offering type.",
        "type": "String",
        "required": "no"
      },
      "ReservedInstancesId.N": {
        "desc": "One or more Reserved Instance IDs.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "reservedInstancesSet": {
        "desc": "A list of Reserved Instances.",
        "type": "Array of ReservedInstances objects"
      }
    }
  },
  {
    "title": "DescribeReservedInstancesListings",
    "req": {
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "ReservedInstancesId": {
        "desc": "One or more Reserved Instance IDs.",
        "type": "String",
        "required": "no"
      },
      "ReservedInstancesListingId": {
        "desc": "One or more Reserved Instance listing IDs.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "reservedInstancesListingsSet": {
        "desc": "Information about the Reserved Instance listing.",
        "type": "Array of ReservedInstancesListing objects"
      }
    }
  },
  {
    "title": "DescribeReservedInstancesModifications",
    "req": {
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to retrieve the next page of results.",
        "type": "String",
        "required": "no"
      },
      "ReservedInstancesModificationId.N": {
        "desc": "IDs for the submitted modification request.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "reservedInstancesModificationsSet": {
        "desc": "The Reserved Instance modification information.",
        "type": "Array of ReservedInstancesModification objects"
      }
    }
  },
  {
    "title": "DescribeReservedInstancesOfferings",
    "req": {
      "AvailabilityZone": {
        "desc": "The Availability Zone in which the Reserved Instance can be used.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "IncludeMarketplace": {
        "desc": "Include Reserved Instance Marketplace offerings in the response.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceTenancy": {
        "desc": "The tenancy of the instances covered by the reservation. A Reserved Instance with a tenancy of dedicated is applied to instances that run in a VPC on single-tenant hardware (i.e., Dedicated Instances).",
        "type": "String",
        "required": "no"
      },
      "InstanceType": {
        "desc": "The instance type that the reservation will cover (for example, m1.small). For more information, see Instance Types in the Amazon Elastic Compute Cloud User Guide.",
        "type": "String",
        "required": "no"
      },
      "MaxDuration": {
        "desc": "The maximum duration (in seconds) to filter when searching for offerings.",
        "type": "Long",
        "required": "no"
      },
      "MaxInstanceCount": {
        "desc": "The maximum number of instances to filter when searching for offerings.",
        "type": "Integer",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned NextToken value. The maximum is 100.",
        "type": "Integer",
        "required": "no"
      },
      "MinDuration": {
        "desc": "The minimum duration (in seconds) to filter when searching for offerings.",
        "type": "Long",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to retrieve the next page of results.",
        "type": "String",
        "required": "no"
      },
      "OfferingClass": {
        "desc": "The offering class of the Reserved Instance. Can be standard or convertible.",
        "type": "String",
        "required": "no"
      },
      "OfferingType": {
        "desc": "The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the Medium Utilization Reserved Instance offering type.",
        "type": "String",
        "required": "no"
      },
      "ProductDescription": {
        "desc": "The Reserved Instance product platform description. Instances that include (Amazon VPC) in the description are for use with Amazon VPC.",
        "type": "String",
        "required": "no"
      },
      "ReservedInstancesOfferingId.N": {
        "desc": "One or more Reserved Instances offering IDs.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "reservedInstancesOfferingsSet": {
        "desc": "A list of Reserved Instances offerings.",
        "type": "Array of ReservedInstancesOffering objects"
      }
    }
  },
  {
    "title": "DescribeRouteTables",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "RouteTableId.N": {
        "desc": "One or more route table IDs.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "routeTableSet": {
        "desc": "Information about one or more route tables.",
        "type": "Array of RouteTable objects"
      }
    }
  },
  {
    "title": "DescribeScheduledInstanceAvailability",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "FirstSlotStartTimeRange": {
        "desc": "The time period for the first schedule to start.",
        "type": "SlotDateTimeRangeRequest object",
        "required": "yes"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call. This value can be between 5 and 300. The default value is 300. To retrieve the remaining results, make another call with the returned NextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "MaxSlotDurationInHours": {
        "desc": "The maximum available duration, in hours. This value must be greater than MinSlotDurationInHours and less than 1,720.",
        "type": "Integer",
        "required": "no"
      },
      "MinSlotDurationInHours": {
        "desc": "The minimum available duration, in hours. The minimum required duration is 1,200 hours per year. For example, the minimum daily schedule is 4 hours, the minimum weekly schedule is 24 hours, and the minimum monthly schedule is 100 hours.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next set of results.",
        "type": "String",
        "required": "no"
      },
      "Recurrence": {
        "desc": "The schedule recurrence.",
        "type": "ScheduledInstanceRecurrenceRequest object",
        "required": "yes"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token required to retrieve the next set of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "scheduledInstanceAvailabilitySet": {
        "desc": "Information about the available Scheduled Instances.",
        "type": "Array of ScheduledInstanceAvailability objects"
      }
    }
  },
  {
    "title": "DescribeScheduledInstances",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call. This value can be between 5 and 300. The default value is 100. To retrieve the remaining results, make another call with the returned NextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next set of results.",
        "type": "String",
        "required": "no"
      },
      "ScheduledInstanceId.N": {
        "desc": "The Scheduled Instance IDs.",
        "type": "Array of strings",
        "required": "no"
      },
      "SlotStartTimeRange": {
        "desc": "The time period for the first schedule to start.",
        "type": "SlotStartTimeRangeRequest object",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token required to retrieve the next set of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "scheduledInstanceSet": {
        "desc": "Information about the Scheduled Instances.",
        "type": "Array of ScheduledInstance objects"
      }
    }
  },
  {
    "title": "DescribeSecurityGroupReferences",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "GroupId.N": {
        "desc": "The IDs of the security groups in your account.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "securityGroupReferenceSet": {
        "desc": "Information about the VPCs with the referencing security groups.",
        "type": "Array of SecurityGroupReference objects"
      }
    }
  },
  {
    "title": "DescribeSecurityGroups",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters. If using multiple filters for rules, the results include security groups for which any combination of rules - not necessarily a single rule - match all filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "GroupId.N": {
        "desc": "The IDs of the security groups. Required for security groups in a nondefault VPC.",
        "type": "Array of strings",
        "required": "no"
      },
      "GroupName.N": {
        "desc": "[EC2-Classic and default VPC only] The names of the security groups. You can specify either the security group name or the security group ID. For security groups in a nondefault VPC, use the group-name filter to describe security groups by name.",
        "type": "Array of strings",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call. To retrieve the remaining results, make another request with the returned NextToken value. This value can be between 5 and 1000. If this parameter is not specified, then all results are returned.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to request the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "securityGroupInfo": {
        "desc": "Information about the security groups.",
        "type": "Array of SecurityGroup objects"
      }
    }
  },
  {
    "title": "DescribeSnapshotAttribute",
    "req": {
      "Attribute": {
        "desc": "The snapshot attribute you would like to view.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "SnapshotId": {
        "desc": "The ID of the EBS snapshot.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "createVolumePermission": {
        "desc": "The users and groups that have the permissions for creating volumes from the snapshot.",
        "type": "Array of CreateVolumePermission objects"
      },
      "productCodes": {
        "desc": "The product codes.",
        "type": "Array of ProductCode objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "snapshotId": {
        "desc": "The ID of the EBS snapshot.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeSnapshots",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of snapshot results returned by DescribeSnapshots in paginated output. When this parameter is used, DescribeSnapshots only returns MaxResults results in a single page along with a NextToken response element. The remaining results of the initial request can be seen by sending another DescribeSnapshots request with the returned NextToken value. This value can be between 5 and 1000; if MaxResults is given a value larger than 1000, only 1000 results are returned. If this parameter is not used, then DescribeSnapshots returns all results. You cannot specify this parameter and the snapshot IDs parameter in the same request.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The NextToken value returned from a previous paginated DescribeSnapshots request where MaxResults was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the NextToken value. This value is null when there are no more results to return.",
        "type": "String",
        "required": "no"
      },
      "Owner.N": {
        "desc": "Describes the snapshots owned by these owners.",
        "type": "Array of strings",
        "required": "no"
      },
      "RestorableBy.N": {
        "desc": "The IDs of the AWS accounts that can create volumes from the snapshot.",
        "type": "Array of strings",
        "required": "no"
      },
      "SnapshotId.N": {
        "desc": "The snapshot IDs.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The NextToken value to include in a future DescribeSnapshots request. When the results of a DescribeSnapshots request exceed MaxResults, this value can be used to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "snapshotSet": {
        "desc": "Information about the snapshots.",
        "type": "Array of Snapshot objects"
      }
    }
  },
  {
    "title": "DescribeSpotDatafeedSubscription",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "spotDatafeedSubscription": {
        "desc": "The Spot Instance data feed subscription.",
        "type": "SpotDatafeedSubscription object"
      }
    }
  },
  {
    "title": "DescribeSpotFleetInstances",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned NextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next set of results.",
        "type": "String",
        "required": "no"
      },
      "SpotFleetRequestId": {
        "desc": "The ID of the Spot Fleet request.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "activeInstanceSet": {
        "desc": "The running instances. This list is refreshed periodically and might be out of date.",
        "type": "Array of ActiveInstance objects"
      },
      "nextToken": {
        "desc": "The token required to retrieve the next set of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "spotFleetRequestId": {
        "desc": "The ID of the Spot Fleet request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeSpotFleetRequestHistory",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "EventType": {
        "desc": "The type of events to describe. By default, all events are described.",
        "type": "String",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned NextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next set of results.",
        "type": "String",
        "required": "no"
      },
      "SpotFleetRequestId": {
        "desc": "The ID of the Spot Fleet request.",
        "type": "String",
        "required": "yes"
      },
      "StartTime": {
        "desc": "The starting date and time for the events, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ).",
        "type": "Timestamp",
        "required": "yes"
      }
    },
    "res": {
      "historyRecordSet": {
        "desc": "Information about the events in the history of the Spot Fleet request.",
        "type": "Array of HistoryRecord objects"
      },
      "lastEvaluatedTime": {
        "desc": "The last date and time for the events, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). All records up to this time were retrieved.",
        "type": "Timestamp"
      },
      "nextToken": {
        "desc": "The token required to retrieve the next set of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "spotFleetRequestId": {
        "desc": "The ID of the Spot Fleet request.",
        "type": "String"
      },
      "startTime": {
        "desc": "The starting date and time for the events, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ).",
        "type": "Timestamp"
      }
    }
  },
  {
    "title": "DescribeSpotFleetRequests",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned NextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next set of results.",
        "type": "String",
        "required": "no"
      },
      "SpotFleetRequestId.N": {
        "desc": "The IDs of the Spot Fleet requests.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token required to retrieve the next set of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "spotFleetRequestConfigSet": {
        "desc": "Information about the configuration of your Spot Fleet.",
        "type": "Array of SpotFleetRequestConfig objects"
      }
    }
  },
  {
    "title": "DescribeSpotInstanceRequests",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call. Specify a value between 5 and 1000. To retrieve the remaining results, make another call with the returned NextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to request the next set of results. This value is null when there are no more results to return.",
        "type": "String",
        "required": "no"
      },
      "SpotInstanceRequestId.N": {
        "desc": "One or more Spot Instance request IDs.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next set of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "spotInstanceRequestSet": {
        "desc": "One or more Spot Instance requests.",
        "type": "Array of SpotInstanceRequest objects"
      }
    }
  },
  {
    "title": "DescribeSpotPriceHistory",
    "req": {
      "AvailabilityZone": {
        "desc": "Filters the results by the specified Availability Zone.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "EndTime": {
        "desc": "The date and time, up to the current date, from which to stop retrieving the price history data, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ).",
        "type": "Timestamp",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "InstanceType.N": {
        "desc": "Filters the results by the specified instance types.",
        "type": "Array of strings",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned NextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next set of results.",
        "type": "String",
        "required": "no"
      },
      "ProductDescription.N": {
        "desc": "Filters the results by the specified basic product descriptions.",
        "type": "Array of strings",
        "required": "no"
      },
      "StartTime": {
        "desc": "The date and time, up to the past 90 days, from which to start retrieving the price history data, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ).",
        "type": "Timestamp",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token required to retrieve the next set of results. This value is null or an empty string when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "spotPriceHistorySet": {
        "desc": "The historical Spot prices.",
        "type": "Array of SpotPrice objects"
      }
    }
  },
  {
    "title": "DescribeStaleSecurityGroups",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next set of items to return. (You received this token from a prior call.)",
        "type": "String",
        "required": "no"
      },
      "VpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "staleSecurityGroupSet": {
        "desc": "Information about the stale security groups.",
        "type": "Array of StaleSecurityGroup objects"
      }
    }
  },
  {
    "title": "DescribeSubnets",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "SubnetId.N": {
        "desc": "One or more subnet IDs.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "subnetSet": {
        "desc": "Information about one or more subnets.",
        "type": "Array of Subnet objects"
      }
    }
  },
  {
    "title": "DescribeTags",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call. This value can be between 5 and 1000. To retrieve the remaining results, make another call with the returned NextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to retrieve the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "tagSet": {
        "desc": "The tags.",
        "type": "Array of TagDescription objects"
      }
    }
  },
  {
    "title": "DescribeTrafficMirrorFilters",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. The possible values are:",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "TrafficMirrorFilterId.N": {
        "desc": "The ID of the Traffic Mirror filter.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. The value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "trafficMirrorFilterSet": {
        "desc": "Information about one or more Traffic Mirror filters.",
        "type": "Array of TrafficMirrorFilter objects"
      }
    }
  },
  {
    "title": "DescribeTrafficMirrorSessions",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. The possible values are:",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "TrafficMirrorSessionId.N": {
        "desc": "The ID of the Traffic Mirror session.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. The value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "trafficMirrorSessionSet": {
        "desc": "Describes one or more Traffic Mirror sessions. By default, all Traffic Mirror sessions are described. Alternatively, you can filter the results.",
        "type": "Array of TrafficMirrorSession objects"
      }
    }
  },
  {
    "title": "DescribeTrafficMirrorTargets",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. The possible values are:",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "TrafficMirrorTargetId.N": {
        "desc": "The ID of the Traffic Mirror targets.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. The value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "trafficMirrorTargetSet": {
        "desc": "Information about one or more Traffic Mirror targets.",
        "type": "Array of TrafficMirrorTarget objects"
      }
    }
  },
  {
    "title": "DescribeTransitGatewayAttachments",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. The possible values are:",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "TransitGatewayAttachmentIds.N": {
        "desc": "The IDs of the attachments.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "transitGatewayAttachments": {
        "desc": "Information about the attachments.",
        "type": "Array of TransitGatewayAttachment objects"
      }
    }
  },
  {
    "title": "DescribeTransitGatewayMulticastDomains",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. The possible values are:",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "TransitGatewayMulticastDomainIds.N": {
        "desc": "The ID of the transit gateway multicast domain.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "transitGatewayMulticastDomains": {
        "desc": "Information about the transit gateway multicast domains.",
        "type": "Array of TransitGatewayMulticastDomain objects"
      }
    }
  },
  {
    "title": "DescribeTransitGatewayPeeringAttachments",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. The possible values are:",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "TransitGatewayAttachmentIds.N": {
        "desc": "One or more IDs of the transit gateway peering attachments.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "transitGatewayPeeringAttachments": {
        "desc": "The transit gateway peering attachments.",
        "type": "Array of TransitGatewayPeeringAttachment objects"
      }
    }
  },
  {
    "title": "DescribeTransitGatewayRouteTables",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. The possible values are:",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "TransitGatewayRouteTableIds.N": {
        "desc": "The IDs of the transit gateway route tables.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "transitGatewayRouteTables": {
        "desc": "Information about the transit gateway route tables.",
        "type": "Array of TransitGatewayRouteTable objects"
      }
    }
  },
  {
    "title": "DescribeTransitGateways",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. The possible values are:",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "TransitGatewayIds.N": {
        "desc": "The IDs of the transit gateways.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "transitGatewaySet": {
        "desc": "Information about the transit gateways.",
        "type": "Array of TransitGateway objects"
      }
    }
  },
  {
    "title": "DescribeTransitGatewayVpcAttachments",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. The possible values are:",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "TransitGatewayAttachmentIds.N": {
        "desc": "The IDs of the attachments.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "transitGatewayVpcAttachments": {
        "desc": "Information about the VPC attachments.",
        "type": "Array of TransitGatewayVpcAttachment objects"
      }
    }
  },
  {
    "title": "DescribeVolumeAttribute",
    "req": {
      "Attribute": {
        "desc": "The attribute of the volume. This parameter is required.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "VolumeId": {
        "desc": "The ID of the volume.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "autoEnableIO": {
        "desc": "The state of autoEnableIO attribute.",
        "type": "AttributeBooleanValue object"
      },
      "productCodes": {
        "desc": "A list of product codes.",
        "type": "Array of ProductCode objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "volumeId": {
        "desc": "The ID of the volume.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeVolumes",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of volume results returned by DescribeVolumes in paginated output. When this parameter is used, DescribeVolumes only returns MaxResults results in a single page along with a NextToken response element. The remaining results of the initial request can be seen by sending another DescribeVolumes request with the returned NextToken value. This value can be between 5 and 500; if MaxResults is given a value larger than 500, only 500 results are returned. If this parameter is not used, then DescribeVolumes returns all results. You cannot specify this parameter and the volume IDs parameter in the same request.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The NextToken value returned from a previous paginated DescribeVolumes request where MaxResults was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the NextToken value. This value is null when there are no more results to return.",
        "type": "String",
        "required": "no"
      },
      "VolumeId.N": {
        "desc": "The volume IDs.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The NextToken value to include in a future DescribeVolumes request. When the results of a DescribeVolumes request exceed MaxResults, this value can be used to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "volumeSet": {
        "desc": "Information about the volumes.",
        "type": "Array of Volume objects"
      }
    }
  },
  {
    "title": "DescribeVolumesModifications",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters. Supported filters: volume-id | modification-state | target-size | target-iops | target-volume-type | original-size | original-iops | original-volume-type | start-time | originalMultiAttachEnabled | targetMultiAttachEnabled.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results (up to a limit of 500) to be returned in a paginated request.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The nextToken value returned by a previous paginated request.",
        "type": "String",
        "required": "no"
      },
      "VolumeId.N": {
        "desc": "The IDs of the volumes for which in-progress modifications will be described.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "Token for pagination, null if there are no more results",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "volumeModificationSet": {
        "desc": "Information about the volume modifications.",
        "type": "Array of VolumeModification objects"
      }
    }
  },
  {
    "title": "DescribeVolumeStatus",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of volume results returned by DescribeVolumeStatus in paginated output. When this parameter is used, the request only returns MaxResults results in a single page along with a NextToken response element. The remaining results of the initial request can be seen by sending another request with the returned NextToken value. This value can be between 5 and 1000; if MaxResults is given a value larger than 1000, only 1000 results are returned. If this parameter is not used, then DescribeVolumeStatus returns all results. You cannot specify this parameter and the volume IDs parameter in the same request.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The NextToken value to include in a future DescribeVolumeStatus request. When the results of the request exceed MaxResults, this value can be used to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String",
        "required": "no"
      },
      "VolumeId.N": {
        "desc": "The IDs of the volumes.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "volumeStatusSet": {
        "desc": "Information about the status of the volumes.",
        "type": "Array of VolumeStatusItem objects"
      }
    }
  },
  {
    "title": "DescribeVpcAttribute",
    "req": {
      "Attribute": {
        "desc": "The VPC attribute.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "VpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "enableDnsHostnames": {
        "desc": "Indicates whether the instances launched in the VPC get DNS hostnames. If this attribute is true, instances in the VPC get DNS hostnames; otherwise, they do not.",
        "type": "AttributeBooleanValue object"
      },
      "enableDnsSupport": {
        "desc": "Indicates whether DNS resolution is enabled for the VPC. If this attribute is true, the Amazon DNS server resolves DNS hostnames for your instances to their corresponding IP addresses; otherwise, it does not.",
        "type": "AttributeBooleanValue object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "vpcId": {
        "desc": "The ID of the VPC.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeVpcClassicLink",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "VpcId.N": {
        "desc": "One or more VPCs for which you want to describe the ClassicLink status.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "vpcSet": {
        "desc": "The ClassicLink status of one or more VPCs.",
        "type": "Array of VpcClassicLink objects"
      }
    }
  },
  {
    "title": "DescribeVpcClassicLinkDnsSupport",
    "req": {
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "VpcIds.N": {
        "desc": "One or more VPC IDs.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "vpcs": {
        "desc": "Information about the ClassicLink DNS support status of the VPCs.",
        "type": "Array of ClassicLinkDnsSupport objects"
      }
    }
  },
  {
    "title": "DescribeVpcEndpointConnectionNotifications",
    "req": {
      "ConnectionNotificationId": {
        "desc": "The ID of the notification.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return in a single call. To retrieve the remaining results, make another request with the returned NextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to request the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "connectionNotificationSet": {
        "desc": "One or more notifications.",
        "type": "Array of ConnectionNotification objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeVpcEndpointConnections",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned NextToken value. This value can be between 5 and 1,000; if MaxResults is given a value larger than 1,000, only 1,000 results are returned.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to retrieve the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "vpcEndpointConnectionSet": {
        "desc": "Information about one or more VPC endpoint connections.",
        "type": "Array of VpcEndpointConnection objects"
      }
    }
  },
  {
    "title": "DescribeVpcEndpoints",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next set of items to return. (You received this token from a prior call.)",
        "type": "String",
        "required": "no"
      },
      "VpcEndpointId.N": {
        "desc": "One or more endpoint IDs.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "vpcEndpointSet": {
        "desc": "Information about the endpoints.",
        "type": "Array of VpcEndpoint objects"
      }
    }
  },
  {
    "title": "DescribeVpcEndpointServiceConfigurations",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned NextToken value. This value can be between 5 and 1,000; if MaxResults is given a value larger than 1,000, only 1,000 results are returned.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to retrieve the next page of results.",
        "type": "String",
        "required": "no"
      },
      "ServiceId.N": {
        "desc": "The IDs of one or more services.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "serviceConfigurationSet": {
        "desc": "Information about one or more services.",
        "type": "Array of ServiceConfiguration objects"
      }
    }
  },
  {
    "title": "DescribeVpcEndpointServicePermissions",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned NextToken value. This value can be between 5 and 1,000; if MaxResults is given a value larger than 1,000, only 1,000 results are returned.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to retrieve the next page of results.",
        "type": "String",
        "required": "no"
      },
      "ServiceId": {
        "desc": "The ID of the service.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "allowedPrincipals": {
        "desc": "Information about one or more allowed principals.",
        "type": "Array of AllowedPrincipal objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DescribeVpcEndpointServices",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next set of items to return. (You received this token from a prior call.)",
        "type": "String",
        "required": "no"
      },
      "ServiceName.N": {
        "desc": "One or more service names.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "serviceDetailSet": {
        "desc": "Information about the service.",
        "type": "Array of ServiceDetail objects"
      },
      "serviceNameSet": {
        "desc": "A list of supported services.",
        "type": "Array of strings"
      }
    }
  },
  {
    "title": "DescribeVpcPeeringConnections",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "VpcPeeringConnectionId.N": {
        "desc": "One or more VPC peering connection IDs.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "vpcPeeringConnectionSet": {
        "desc": "Information about the VPC peering connections.",
        "type": "Array of VpcPeeringConnection objects"
      }
    }
  },
  {
    "title": "DescribeVpcs",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "VpcId.N": {
        "desc": "One or more VPC IDs.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "vpcSet": {
        "desc": "Information about one or more VPCs.",
        "type": "Array of Vpc objects"
      }
    }
  },
  {
    "title": "DescribeVpnConnections",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "VpnConnectionId.N": {
        "desc": "One or more VPN connection IDs.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "vpnConnectionSet": {
        "desc": "Information about one or more VPN connections.",
        "type": "Array of VpnConnection objects"
      }
    }
  },
  {
    "title": "DescribeVpnGateways",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "VpnGatewayId.N": {
        "desc": "One or more virtual private gateway IDs.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "vpnGatewaySet": {
        "desc": "Information about one or more virtual private gateways.",
        "type": "Array of VpnGateway objects"
      }
    }
  },
  {
    "title": "DetachClassicLinkVpc",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of the instance to unlink from the VPC.",
        "type": "String",
        "required": "yes"
      },
      "VpcId": {
        "desc": "The ID of the VPC to which the instance is linked.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Returns true if the request succeeds; otherwise, it returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DetachInternetGateway",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InternetGatewayId": {
        "desc": "The ID of the internet gateway.",
        "type": "String",
        "required": "yes"
      },
      "VpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DetachNetworkInterface",
    "req": {
      "AttachmentId": {
        "desc": "The ID of the attachment.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Force": {
        "desc": "Specifies whether to force a detachment.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DetachVolume",
    "req": {
      "Device": {
        "desc": "The device name.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Force": {
        "desc": "Forces detachment if the previous detachment attempt did not occur cleanly (for example, logging into an instance, unmounting the volume, and detaching normally). This option can lead to data loss or a corrupted file system. Use this option only as a last resort to detach a volume from a failed instance. The instance won't have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of the instance. If you are detaching a Multi-Attach enabled volume, you must specify an instance ID.",
        "type": "String",
        "required": "no"
      },
      "VolumeId": {
        "desc": "The ID of the volume.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "attachTime": {
        "desc": "The time stamp when the attachment initiated.",
        "type": "Timestamp"
      },
      "deleteOnTermination": {
        "desc": "Indicates whether the EBS volume is deleted on instance termination.",
        "type": "Boolean"
      },
      "device": {
        "desc": "The device name.",
        "type": "String"
      },
      "instanceId": {
        "desc": "The ID of the instance.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "status": {
        "desc": "The attachment state of the volume.",
        "type": "String"
      },
      "volumeId": {
        "desc": "The ID of the volume.",
        "type": "String"
      }
    }
  },
  {
    "title": "DetachVpnGateway",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "VpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "yes"
      },
      "VpnGatewayId": {
        "desc": "The ID of the virtual private gateway.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DisableEbsEncryptionByDefault",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "ebsEncryptionByDefault": {
        "desc": "The updated status of encryption by default.",
        "type": "Boolean"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DisableFastSnapshotRestores",
    "req": {
      "AvailabilityZone.N": {
        "desc": "One or more Availability Zones. For example, us-east-2a.",
        "type": "Array of strings",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "SourceSnapshotId.N": {
        "desc": "The IDs of one or more snapshots. For example, snap-1234567890abcdef0.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "successful": {
        "desc": "Information about the snapshots for which fast snapshot restores were successfully disabled.",
        "type": "Array of DisableFastSnapshotRestoreSuccessItem objects"
      },
      "unsuccessful": {
        "desc": "Information about the snapshots for which fast snapshot restores could not be disabled.",
        "type": "Array of DisableFastSnapshotRestoreErrorItem objects"
      }
    }
  },
  {
    "title": "DisableTransitGatewayRouteTablePropagation",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TransitGatewayAttachmentId": {
        "desc": "The ID of the attachment.",
        "type": "String",
        "required": "yes"
      },
      "TransitGatewayRouteTableId": {
        "desc": "The ID of the propagation route table.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "propagation": {
        "desc": "Information about route propagation.",
        "type": "TransitGatewayPropagation object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DisableVgwRoutePropagation",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "GatewayId": {
        "desc": "The ID of the virtual private gateway.",
        "type": "String",
        "required": "yes"
      },
      "RouteTableId": {
        "desc": "The ID of the route table.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DisableVpcClassicLink",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "VpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Returns true if the request succeeds; otherwise, it returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DisableVpcClassicLinkDnsSupport",
    "req": {
      "VpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Returns true if the request succeeds; otherwise, it returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DisassociateAddress",
    "req": {
      "AssociationId": {
        "desc": "[EC2-VPC] The association ID. Required for EC2-VPC.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "PublicIp": {
        "desc": "[EC2-Classic] The Elastic IP address. Required for EC2-Classic.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DisassociateClientVpnTargetNetwork",
    "req": {
      "AssociationId": {
        "desc": "The ID of the target network association.",
        "type": "String",
        "required": "yes"
      },
      "ClientVpnEndpointId": {
        "desc": "The ID of the Client VPN endpoint from which to disassociate the target network.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "associationId": {
        "desc": "The ID of the target network association.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "status": {
        "desc": "The current state of the target network association.",
        "type": "AssociationStatus object"
      }
    }
  },
  {
    "title": "DisassociateIamInstanceProfile",
    "req": {
      "AssociationId": {
        "desc": "The ID of the IAM instance profile association.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "iamInstanceProfileAssociation": {
        "desc": "Information about the IAM instance profile association.",
        "type": "IamInstanceProfileAssociation object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DisassociateRouteTable",
    "req": {
      "AssociationId": {
        "desc": "The association ID representing the current association between the route table and subnet.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "DisassociateSubnetCidrBlock",
    "req": {
      "AssociationId": {
        "desc": "The association ID for the CIDR block.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "ipv6CidrBlockAssociation": {
        "desc": "Information about the IPv6 CIDR block association.",
        "type": "SubnetIpv6CidrBlockAssociation object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "subnetId": {
        "desc": "The ID of the subnet.",
        "type": "String"
      }
    }
  },
  {
    "title": "DisassociateTransitGatewayMulticastDomain",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "SubnetIds.N": {
        "desc": "The IDs of the subnets;",
        "type": "Array of strings",
        "required": "no"
      },
      "TransitGatewayAttachmentId": {
        "desc": "The ID of the attachment.",
        "type": "String",
        "required": "no"
      },
      "TransitGatewayMulticastDomainId": {
        "desc": "The ID of the transit gateway multicast domain.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "associations": {
        "desc": "Information about the association.",
        "type": "TransitGatewayMulticastDomainAssociations object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DisassociateTransitGatewayRouteTable",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TransitGatewayAttachmentId": {
        "desc": "The ID of the attachment.",
        "type": "String",
        "required": "yes"
      },
      "TransitGatewayRouteTableId": {
        "desc": "The ID of the transit gateway route table.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "association": {
        "desc": "Information about the association.",
        "type": "TransitGatewayAssociation object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "DisassociateVpcCidrBlock",
    "req": {
      "AssociationId": {
        "desc": "The association ID for the CIDR block.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "cidrBlockAssociation": {
        "desc": "Information about the IPv4 CIDR block association.",
        "type": "VpcCidrBlockAssociation object"
      },
      "ipv6CidrBlockAssociation": {
        "desc": "Information about the IPv6 CIDR block association.",
        "type": "VpcIpv6CidrBlockAssociation object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "vpcId": {
        "desc": "The ID of the VPC.",
        "type": "String"
      }
    }
  },
  {
    "title": "EnableEbsEncryptionByDefault",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "ebsEncryptionByDefault": {
        "desc": "The updated status of encryption by default.",
        "type": "Boolean"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "EnableFastSnapshotRestores",
    "req": {
      "AvailabilityZone.N": {
        "desc": "One or more Availability Zones. For example, us-east-2a.",
        "type": "Array of strings",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "SourceSnapshotId.N": {
        "desc": "The IDs of one or more snapshots. For example, snap-1234567890abcdef0. You can specify a snapshot that was shared with you from another AWS account.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "successful": {
        "desc": "Information about the snapshots for which fast snapshot restores were successfully enabled.",
        "type": "Array of EnableFastSnapshotRestoreSuccessItem objects"
      },
      "unsuccessful": {
        "desc": "Information about the snapshots for which fast snapshot restores could not be enabled.",
        "type": "Array of EnableFastSnapshotRestoreErrorItem objects"
      }
    }
  },
  {
    "title": "EnableTransitGatewayRouteTablePropagation",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TransitGatewayAttachmentId": {
        "desc": "The ID of the attachment.",
        "type": "String",
        "required": "yes"
      },
      "TransitGatewayRouteTableId": {
        "desc": "The ID of the propagation route table.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "propagation": {
        "desc": "Information about route propagation.",
        "type": "TransitGatewayPropagation object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "EnableVgwRoutePropagation",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "GatewayId": {
        "desc": "The ID of the virtual private gateway that is attached to a VPC. The virtual private gateway must be attached to the same VPC that the routing tables are associated with.",
        "type": "String",
        "required": "yes"
      },
      "RouteTableId": {
        "desc": "The ID of the route table. The routing table must be associated with the same VPC that the virtual private gateway is attached to.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "EnableVolumeIO",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "VolumeId": {
        "desc": "The ID of the volume.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "EnableVpcClassicLink",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "VpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Returns true if the request succeeds; otherwise, it returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "EnableVpcClassicLinkDnsSupport",
    "req": {
      "VpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Returns true if the request succeeds; otherwise, it returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ExportClientVpnClientCertificateRevocationList",
    "req": {
      "ClientVpnEndpointId": {
        "desc": "The ID of the Client VPN endpoint.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "certificateRevocationList": {
        "desc": "Information about the client certificate revocation list.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "status": {
        "desc": "The current state of the client certificate revocation list.",
        "type": "ClientCertificateRevocationListStatus object"
      }
    }
  },
  {
    "title": "ExportClientVpnClientConfiguration",
    "req": {
      "ClientVpnEndpointId": {
        "desc": "The ID of the Client VPN endpoint.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "clientConfiguration": {
        "desc": "The contents of the Client VPN endpoint configuration file.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "ExportImage",
    "req": {
      "ClientToken": {
        "desc": "Token to enable idempotency for export image requests.",
        "type": "String",
        "required": "no"
      },
      "Description": {
        "desc": "A description of the image being exported. The maximum length is 255 bytes.",
        "type": "String",
        "required": "no"
      },
      "DiskImageFormat": {
        "desc": "The disk image format.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "ImageId": {
        "desc": "The ID of the image.",
        "type": "String",
        "required": "yes"
      },
      "RoleName": {
        "desc": "The name of the role that grants VM Import/Export permission to export images to your S3 bucket. If this parameter is not specified, the default role is named 'vmimport'.",
        "type": "String",
        "required": "no"
      },
      "S3ExportLocation": {
        "desc": "Information about the destination S3 bucket. The bucket must exist and grant WRITE and READ_ACP permissions to the AWS account vm-import-export@amazon.com.",
        "type": "ExportTaskS3LocationRequest object",
        "required": "yes"
      }
    },
    "res": {
      "description": {
        "desc": "A description of the image being exported.",
        "type": "String"
      },
      "diskImageFormat": {
        "desc": "The disk image format for the exported image.",
        "type": "String"
      },
      "exportImageTaskId": {
        "desc": "The ID of the export image task.",
        "type": "String"
      },
      "imageId": {
        "desc": "The ID of the image.",
        "type": "String"
      },
      "progress": {
        "desc": "The percent complete of the export image task.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "roleName": {
        "desc": "The name of the role that grants VM Import/Export permission to export images to your S3 bucket.",
        "type": "String"
      },
      "s3ExportLocation": {
        "desc": "Information about the destination S3 bucket.",
        "type": "ExportTaskS3Location object"
      },
      "status": {
        "desc": "The status of the export image task. The possible values are active, completed, deleting, and deleted.",
        "type": "String"
      },
      "statusMessage": {
        "desc": "The status message for the export image task.",
        "type": "String"
      }
    }
  },
  {
    "title": "ExportTransitGatewayRoutes",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. The possible values are:",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "S3Bucket": {
        "desc": "The name of the S3 bucket.",
        "type": "String",
        "required": "yes"
      },
      "TransitGatewayRouteTableId": {
        "desc": "The ID of the route table.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "s3Location": {
        "desc": "The URL of the exported file in Amazon S3. For example, s3://bucket_name/VPCTransitGateway/TransitGatewayRouteTables/file_name.",
        "type": "String"
      }
    }
  },
  {
    "title": "GetAssociatedIpv6PoolCidrs",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "PoolId": {
        "desc": "The ID of the IPv6 address pool.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "ipv6CidrAssociationSet": {
        "desc": "Information about the IPv6 CIDR block associations.",
        "type": "Array of Ipv6CidrAssociation objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "GetCapacityReservationUsage",
    "req": {
      "CapacityReservationId": {
        "desc": "The ID of the Capacity Reservation.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token to retrieve the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "availableInstanceCount": {
        "desc": "The remaining capacity. Indicates the number of instances that can be launched in the Capacity Reservation.",
        "type": "Integer"
      },
      "capacityReservationId": {
        "desc": "The ID of the Capacity Reservation.",
        "type": "String"
      },
      "instanceType": {
        "desc": "The type of instance for which the Capacity Reservation reserves capacity.",
        "type": "String"
      },
      "instanceUsageSet": {
        "desc": "Information about the Capacity Reservation usage.",
        "type": "Array of InstanceUsage objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "state": {
        "desc": "The current state of the Capacity Reservation. A Capacity Reservation can be in one of the following states:",
        "type": "String"
      },
      "totalInstanceCount": {
        "desc": "The number of instances for which the Capacity Reservation reserves capacity.",
        "type": "Integer"
      }
    }
  },
  {
    "title": "GetCoipPoolUsage",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "The filters. The following are the possible values:",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "PoolId": {
        "desc": "The ID of the address pool.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "coipAddressUsageSet": {
        "desc": "Information about the address usage.",
        "type": "Array of CoipAddressUsage objects"
      },
      "coipPoolId": {
        "desc": "The ID of the customer-owned address pool.",
        "type": "String"
      },
      "localGatewayRouteTableId": {
        "desc": "The ID of the local gateway route table.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "GetConsoleOutput",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "yes"
      },
      "Latest": {
        "desc": "When enabled, retrieves the latest console output for the instance.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "instanceId": {
        "desc": "The ID of the instance.",
        "type": "String"
      },
      "output": {
        "desc": "The console output, base64-encoded. If you are using a command line tool, the tool decodes the output for you.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "timestamp": {
        "desc": "The time at which the output was last updated.",
        "type": "Timestamp"
      }
    }
  },
  {
    "title": "GetConsoleScreenshot",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "yes"
      },
      "WakeUp": {
        "desc": "When set to true, acts as keystroke input and wakes up an instance that's in standby or \"sleep\" mode.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "imageData": {
        "desc": "The data that comprises the image.",
        "type": "String"
      },
      "instanceId": {
        "desc": "The ID of the instance.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "GetDefaultCreditSpecification",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceFamily": {
        "desc": "The instance family.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "instanceFamilyCreditSpecification": {
        "desc": "The default credit option for CPU usage of the instance family.",
        "type": "InstanceFamilyCreditSpecification object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "GetEbsDefaultKmsKeyId",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "kmsKeyId": {
        "desc": "The Amazon Resource Name (ARN) of the default CMK for encryption by default.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "GetEbsEncryptionByDefault",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "ebsEncryptionByDefault": {
        "desc": "Indicates whether encryption by default is enabled.",
        "type": "Boolean"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "GetHostReservationPurchasePreview",
    "req": {
      "HostIdSet.N": {
        "desc": "The IDs of the Dedicated Hosts with which the reservation is associated.",
        "type": "Array of strings",
        "required": "yes"
      },
      "OfferingId": {
        "desc": "The offering ID of the reservation.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "currencyCode": {
        "desc": "The currency in which the totalUpfrontPrice and totalHourlyPrice amounts are specified. At this time, the only supported currency is USD.",
        "type": "String"
      },
      "purchase": {
        "desc": "The purchase information of the Dedicated Host reservation and the Dedicated Hosts associated with it.",
        "type": "Array of Purchase objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "totalHourlyPrice": {
        "desc": "The potential total hourly price of the reservation per hour.",
        "type": "String"
      },
      "totalUpfrontPrice": {
        "desc": "The potential total upfront price. This is billed immediately.",
        "type": "String"
      }
    }
  },
  {
    "title": "GetLaunchTemplateData",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "launchTemplateData": {
        "desc": "The instance data.",
        "type": "ResponseLaunchTemplateData object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "GetPasswordData",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of the Windows instance.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "instanceId": {
        "desc": "The ID of the Windows instance.",
        "type": "String"
      },
      "passwordData": {
        "desc": "The password of the instance. Returns an empty string if the password is not available.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "timestamp": {
        "desc": "The time the data was last updated.",
        "type": "Timestamp"
      }
    }
  },
  {
    "title": "GetReservedInstancesExchangeQuote",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "ReservedInstanceId.N": {
        "desc": "The IDs of the Convertible Reserved Instances to exchange.",
        "type": "Array of strings",
        "required": "yes"
      },
      "TargetConfiguration.N": {
        "desc": "The configuration of the target Convertible Reserved Instance to exchange for your current Convertible Reserved Instances.",
        "type": "Array of TargetConfigurationRequest objects",
        "required": "no"
      }
    },
    "res": {
      "currencyCode": {
        "desc": "The currency of the transaction.",
        "type": "String"
      },
      "isValidExchange": {
        "desc": "If true, the exchange is valid. If false, the exchange cannot be completed.",
        "type": "Boolean"
      },
      "outputReservedInstancesWillExpireAt": {
        "desc": "The new end date of the reservation term.",
        "type": "Timestamp"
      },
      "paymentDue": {
        "desc": "The total true upfront charge for the exchange.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "reservedInstanceValueRollup": {
        "desc": "The cost associated with the Reserved Instance.",
        "type": "ReservationValue object"
      },
      "reservedInstanceValueSet": {
        "desc": "The configuration of your Convertible Reserved Instances.",
        "type": "Array of ReservedInstanceReservationValue objects"
      },
      "targetConfigurationValueRollup": {
        "desc": "The cost associated with the Reserved Instance.",
        "type": "ReservationValue object"
      },
      "targetConfigurationValueSet": {
        "desc": "The values of the target Convertible Reserved Instances.",
        "type": "Array of TargetReservationValue objects"
      },
      "validationFailureReason": {
        "desc": "Describes the reason why the exchange cannot be completed.",
        "type": "String"
      }
    }
  },
  {
    "title": "GetTransitGatewayAttachmentPropagations",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. The possible values are:",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "TransitGatewayAttachmentId": {
        "desc": "The ID of the attachment.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "transitGatewayAttachmentPropagations": {
        "desc": "Information about the propagation route tables.",
        "type": "Array of TransitGatewayAttachmentPropagation objects"
      }
    }
  },
  {
    "title": "GetTransitGatewayMulticastDomainAssociations",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. The possible values are:",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "TransitGatewayMulticastDomainId": {
        "desc": "The ID of the transit gateway multicast domain.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "multicastDomainAssociations": {
        "desc": "Information about the multicast domain associations.",
        "type": "Array of TransitGatewayMulticastDomainAssociation objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "GetTransitGatewayRouteTableAssociations",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. The possible values are:",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "TransitGatewayRouteTableId": {
        "desc": "The ID of the transit gateway route table.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "associations": {
        "desc": "Information about the associations.",
        "type": "Array of TransitGatewayRouteTableAssociation objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "GetTransitGatewayRouteTablePropagations",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. The possible values are:",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "TransitGatewayRouteTableId": {
        "desc": "The ID of the transit gateway route table.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "transitGatewayRouteTablePropagations": {
        "desc": "Information about the route table propagations.",
        "type": "Array of TransitGatewayRouteTablePropagation objects"
      }
    }
  },
  {
    "title": "ImportClientVpnClientCertificateRevocationList",
    "req": {
      "CertificateRevocationList": {
        "desc": "The client certificate revocation list file. For more information, see Generate a Client Certificate Revocation List in the AWS Client VPN Administrator Guide.",
        "type": "String",
        "required": "yes"
      },
      "ClientVpnEndpointId": {
        "desc": "The ID of the Client VPN endpoint to which the client certificate revocation list applies.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Returns true if the request succeeds; otherwise, it returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ImportImage",
    "req": {
      "Architecture": {
        "desc": "The architecture of the virtual machine.",
        "type": "String",
        "required": "no"
      },
      "ClientData": {
        "desc": "The client-specific data.",
        "type": "ClientData object",
        "required": "no"
      },
      "ClientToken": {
        "desc": "The token to enable idempotency for VM import requests.",
        "type": "String",
        "required": "no"
      },
      "Description": {
        "desc": "A description string for the import image task.",
        "type": "String",
        "required": "no"
      },
      "DiskContainer.N": {
        "desc": "Information about the disk containers.",
        "type": "Array of ImageDiskContainer objects",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Encrypted": {
        "desc": "Specifies whether the destination AMI of the imported image should be encrypted. The default CMK for EBS is used unless you specify a non-default AWS Key Management Service (AWS KMS) CMK using KmsKeyId. For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide.",
        "type": "Boolean",
        "required": "no"
      },
      "Hypervisor": {
        "desc": "The target hypervisor platform.",
        "type": "String",
        "required": "no"
      },
      "KmsKeyId": {
        "desc": "An identifier for the symmetric AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted AMI. This parameter is only required if you want to use a non-default CMK; if this parameter is not specified, the default CMK for EBS is used. If a KmsKeyId is specified, the Encrypted flag must also be set.",
        "type": "String",
        "required": "no"
      },
      "LicenseSpecifications.N": {
        "desc": "The ARNs of the license configurations.",
        "type": "Array of ImportImageLicenseConfigurationRequest objects",
        "required": "no"
      },
      "LicenseType": {
        "desc": "The license type to be used for the Amazon Machine Image (AMI) after importing.",
        "type": "String",
        "required": "no"
      },
      "Platform": {
        "desc": "The operating system of the virtual machine.",
        "type": "String",
        "required": "no"
      },
      "RoleName": {
        "desc": "The name of the role to use when not using the default role, 'vmimport'.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "architecture": {
        "desc": "The architecture of the virtual machine.",
        "type": "String"
      },
      "description": {
        "desc": "A description of the import task.",
        "type": "String"
      },
      "encrypted": {
        "desc": "Indicates whether the AMI is encypted.",
        "type": "Boolean"
      },
      "hypervisor": {
        "desc": "The target hypervisor of the import task.",
        "type": "String"
      },
      "imageId": {
        "desc": "The ID of the Amazon Machine Image (AMI) created by the import task.",
        "type": "String"
      },
      "importTaskId": {
        "desc": "The task ID of the import image task.",
        "type": "String"
      },
      "kmsKeyId": {
        "desc": "The identifier for the symmetric AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to create the encrypted AMI.",
        "type": "String"
      },
      "licenseSpecifications": {
        "desc": "The ARNs of the license configurations.",
        "type": "Array of ImportImageLicenseConfigurationResponse objects"
      },
      "licenseType": {
        "desc": "The license type of the virtual machine.",
        "type": "String"
      },
      "platform": {
        "desc": "The operating system of the virtual machine.",
        "type": "String"
      },
      "progress": {
        "desc": "The progress of the task.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "snapshotDetailSet": {
        "desc": "Information about the snapshots.",
        "type": "Array of SnapshotDetail objects"
      },
      "status": {
        "desc": "A brief status of the task.",
        "type": "String"
      },
      "statusMessage": {
        "desc": "A detailed status message of the import task.",
        "type": "String"
      }
    }
  },
  {
    "title": "ImportInstance",
    "req": {
      "Description": {
        "desc": "A description for the instance being imported.",
        "type": "String",
        "required": "no"
      },
      "DiskImage.N": {
        "desc": "The disk image.",
        "type": "Array of DiskImage objects",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "LaunchSpecification": {
        "desc": "The launch specification.",
        "type": "ImportInstanceLaunchSpecification object",
        "required": "no"
      },
      "Platform": {
        "desc": "The instance operating system.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "conversionTask": {
        "desc": "Information about the conversion task.",
        "type": "ConversionTask object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "ImportKeyPair",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "KeyName": {
        "desc": "A unique name for the key pair.",
        "type": "String",
        "required": "yes"
      },
      "PublicKeyMaterial": {
        "desc": "The public key. For API calls, the text must be base64-encoded. For command line tools, base64 encoding is performed for you.",
        "type": "Base64-encoded binary data object",
        "required": "yes"
      }
    },
    "res": {
      "keyFingerprint": {
        "desc": "The MD5 public key fingerprint as specified in section 4 of RFC 4716.",
        "type": "String"
      },
      "keyName": {
        "desc": "The key pair name you provided.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "ImportSnapshot",
    "req": {
      "ClientData": {
        "desc": "The client-specific data.",
        "type": "ClientData object",
        "required": "no"
      },
      "ClientToken": {
        "desc": "Token to enable idempotency for VM import requests.",
        "type": "String",
        "required": "no"
      },
      "Description": {
        "desc": "The description string for the import snapshot task.",
        "type": "String",
        "required": "no"
      },
      "DiskContainer": {
        "desc": "Information about the disk container.",
        "type": "SnapshotDiskContainer object",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Encrypted": {
        "desc": "Specifies whether the destination snapshot of the imported image should be encrypted. The default CMK for EBS is used unless you specify a non-default AWS Key Management Service (AWS KMS) CMK using KmsKeyId. For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide.",
        "type": "Boolean",
        "required": "no"
      },
      "KmsKeyId": {
        "desc": "An identifier for the symmetric AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted snapshot. This parameter is only required if you want to use a non-default CMK; if this parameter is not specified, the default CMK for EBS is used. If a KmsKeyId is specified, the Encrypted flag must also be set.",
        "type": "String",
        "required": "no"
      },
      "RoleName": {
        "desc": "The name of the role to use when not using the default role, 'vmimport'.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "description": {
        "desc": "A description of the import snapshot task.",
        "type": "String"
      },
      "importTaskId": {
        "desc": "The ID of the import snapshot task.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "snapshotTaskDetail": {
        "desc": "Information about the import snapshot task.",
        "type": "SnapshotTaskDetail object"
      }
    }
  },
  {
    "title": "ImportVolume",
    "req": {
      "AvailabilityZone": {
        "desc": "The Availability Zone for the resulting EBS volume.",
        "type": "String",
        "required": "yes"
      },
      "Description": {
        "desc": "A description of the volume.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Image": {
        "desc": "The disk image.",
        "type": "DiskImageDetail object",
        "required": "yes"
      },
      "Volume": {
        "desc": "The volume size.",
        "type": "VolumeDetail object",
        "required": "yes"
      }
    },
    "res": {
      "conversionTask": {
        "desc": "Information about the conversion task.",
        "type": "ConversionTask object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "ModifyAvailabilityZoneGroup",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "GroupName": {
        "desc": "The name of the Availability Zone Group.",
        "type": "String",
        "required": "yes"
      },
      "OptInStatus": {
        "desc": "Indicates whether to enable or disable membership. The valid values are opted-in. You must contact AWS Support to disable an Availability Zone group.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ModifyCapacityReservation",
    "req": {
      "CapacityReservationId": {
        "desc": "The ID of the Capacity Reservation.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "EndDate": {
        "desc": "The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation's state changes to expired when it reaches its end date and time.",
        "type": "Timestamp",
        "required": "no"
      },
      "EndDateType": {
        "desc": "Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:",
        "type": "String",
        "required": "no"
      },
      "InstanceCount": {
        "desc": "The number of instances for which to reserve capacity.",
        "type": "Integer",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Returns true if the request succeeds; otherwise, it returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ModifyClientVpnEndpoint",
    "req": {
      "ClientVpnEndpointId": {
        "desc": "The ID of the Client VPN endpoint to modify.",
        "type": "String",
        "required": "yes"
      },
      "ConnectionLogOptions": {
        "desc": "Information about the client connection logging options.",
        "type": "ConnectionLogOptions object",
        "required": "no"
      },
      "Description": {
        "desc": "A brief description of the Client VPN endpoint.",
        "type": "String",
        "required": "no"
      },
      "DnsServers": {
        "desc": "Information about the DNS servers to be used by Client VPN connections. A Client VPN endpoint can have up to two DNS servers.",
        "type": "DnsServersOptionsModifyStructure object",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "SecurityGroupId.N": {
        "desc": "The IDs of one or more security groups to apply to the target network.",
        "type": "Array of strings",
        "required": "no"
      },
      "ServerCertificateArn": {
        "desc": "The ARN of the server certificate to be used. The server certificate must be provisioned in AWS Certificate Manager (ACM).",
        "type": "String",
        "required": "no"
      },
      "SplitTunnel": {
        "desc": "Indicates whether the VPN is split-tunnel.",
        "type": "Boolean",
        "required": "no"
      },
      "VpcId": {
        "desc": "The ID of the VPC to associate with the Client VPN endpoint.",
        "type": "String",
        "required": "no"
      },
      "VpnPort": {
        "desc": "The port number to assign to the Client VPN endpoint for TCP and UDP traffic.",
        "type": "Integer",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Returns true if the request succeeds; otherwise, it returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ModifyDefaultCreditSpecification",
    "req": {
      "CpuCredits": {
        "desc": "The credit option for CPU usage of the instance family.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceFamily": {
        "desc": "The instance family.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "instanceFamilyCreditSpecification": {
        "desc": "The default credit option for CPU usage of the instance family.",
        "type": "InstanceFamilyCreditSpecification object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "ModifyEbsDefaultKmsKeyId",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "KmsKeyId": {
        "desc": "The identifier of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use for Amazon EBS encryption. If this parameter is not specified, your AWS managed CMK for EBS is used. If KmsKeyId is specified, the encrypted state must be true.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "kmsKeyId": {
        "desc": "The Amazon Resource Name (ARN) of the default CMK for encryption by default.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "ModifyFleet",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "ExcessCapacityTerminationPolicy": {
        "desc": "Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.",
        "type": "String",
        "required": "no"
      },
      "FleetId": {
        "desc": "The ID of the EC2 Fleet.",
        "type": "String",
        "required": "yes"
      },
      "TargetCapacitySpecification": {
        "desc": "The size of the EC2 Fleet.",
        "type": "TargetCapacitySpecificationRequest object",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ModifyFpgaImageAttribute",
    "req": {
      "Attribute": {
        "desc": "The name of the attribute.",
        "type": "String",
        "required": "no"
      },
      "Description": {
        "desc": "A description for the AFI.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "FpgaImageId": {
        "desc": "The ID of the AFI.",
        "type": "String",
        "required": "yes"
      },
      "LoadPermission": {
        "desc": "The load permission for the AFI.",
        "type": "LoadPermissionModifications object",
        "required": "no"
      },
      "Name": {
        "desc": "A name for the AFI.",
        "type": "String",
        "required": "no"
      },
      "OperationType": {
        "desc": "The operation type.",
        "type": "String",
        "required": "no"
      },
      "ProductCode.N": {
        "desc": "The product codes. After you add a product code to an AFI, it can't be removed. This parameter is valid only when modifying the productCodes attribute.",
        "type": "Array of strings",
        "required": "no"
      },
      "UserGroup.N": {
        "desc": "The user groups. This parameter is valid only when modifying the loadPermission attribute.",
        "type": "Array of strings",
        "required": "no"
      },
      "UserId.N": {
        "desc": "The AWS account IDs. This parameter is valid only when modifying the loadPermission attribute.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "fpgaImageAttribute": {
        "desc": "Information about the attribute.",
        "type": "FpgaImageAttribute object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "ModifyHosts",
    "req": {
      "AutoPlacement": {
        "desc": "Specify whether to enable or disable auto-placement.",
        "type": "String",
        "required": "no"
      },
      "HostId.N": {
        "desc": "The IDs of the Dedicated Hosts to modify.",
        "type": "Array of strings",
        "required": "yes"
      },
      "HostRecovery": {
        "desc": "Indicates whether to enable or disable host recovery for the Dedicated Host. For more information, see Host Recovery in the Amazon Elastic Compute Cloud User Guide.",
        "type": "String",
        "required": "no"
      },
      "InstanceFamily": {
        "desc": "Specifies the instance family to be supported by the Dedicated Host. Specify this parameter to modify a Dedicated Host to support multiple instance types within its current instance family.",
        "type": "String",
        "required": "no"
      },
      "InstanceType": {
        "desc": "Specifies the instance type to be supported by the Dedicated Host. Specify this parameter to modify a Dedicated Host to support only a specific instance type.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "successful": {
        "desc": "The IDs of the Dedicated Hosts that were successfully modified.",
        "type": "Array of strings"
      },
      "unsuccessful": {
        "desc": "The IDs of the Dedicated Hosts that could not be modified. Check whether the setting you requested can be used.",
        "type": "Array of UnsuccessfulItem objects"
      }
    }
  },
  {
    "title": "ModifyIdentityIdFormat",
    "req": {
      "PrincipalArn": {
        "desc": "The ARN of the principal, which can be an IAM user, IAM role, or the root user. Specify all to modify the ID format for all IAM users, IAM roles, and the root user of the account.",
        "type": "String",
        "required": "yes"
      },
      "Resource": {
        "desc": "The type of resource: bundle | conversion-task | customer-gateway | dhcp-options | elastic-ip-allocation | elastic-ip-association | export-task | flow-log | image | import-task | internet-gateway | network-acl | network-acl-association | network-interface | network-interface-attachment | prefix-list | route-table | route-table-association | security-group | subnet | subnet-cidr-block-association | vpc | vpc-cidr-block-association | vpc-endpoint | vpc-peering-connection | vpn-connection | vpn-gateway.",
        "type": "String",
        "required": "yes"
      },
      "UseLongIds": {
        "desc": "Indicates whether the resource should use longer IDs (17-character IDs)",
        "type": "Boolean",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ModifyIdFormat",
    "req": {
      "Resource": {
        "desc": "The type of resource: bundle | conversion-task | customer-gateway | dhcp-options | elastic-ip-allocation | elastic-ip-association | export-task | flow-log | image | import-task | internet-gateway | network-acl | network-acl-association | network-interface | network-interface-attachment | prefix-list | route-table | route-table-association | security-group | subnet | subnet-cidr-block-association | vpc | vpc-cidr-block-association | vpc-endpoint | vpc-peering-connection | vpn-connection | vpn-gateway.",
        "type": "String",
        "required": "yes"
      },
      "UseLongIds": {
        "desc": "Indicate whether the resource should use longer IDs (17-character IDs).",
        "type": "Boolean",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ModifyImageAttribute",
    "req": {
      "Attribute": {
        "desc": "The name of the attribute to modify. The valid values are description, launchPermission, and productCodes.",
        "type": "String",
        "required": "no"
      },
      "Description": {
        "desc": "A new description for the AMI.",
        "type": "AttributeValue object",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "ImageId": {
        "desc": "The ID of the AMI.",
        "type": "String",
        "required": "yes"
      },
      "LaunchPermission": {
        "desc": "A new launch permission for the AMI.",
        "type": "LaunchPermissionModifications object",
        "required": "no"
      },
      "OperationType": {
        "desc": "The operation type. This parameter can be used only when the Attribute parameter is launchPermission.",
        "type": "String",
        "required": "no"
      },
      "ProductCode.N": {
        "desc": "The DevPay product codes. After you add a product code to an AMI, it can't be removed.",
        "type": "Array of strings",
        "required": "no"
      },
      "UserGroup.N": {
        "desc": "The user groups. This parameter can be used only when the Attribute parameter is launchPermission.",
        "type": "Array of strings",
        "required": "no"
      },
      "UserId.N": {
        "desc": "The AWS account IDs. This parameter can be used only when the Attribute parameter is launchPermission.",
        "type": "Array of strings",
        "required": "no"
      },
      "Value": {
        "desc": "The value of the attribute being modified. This parameter can be used only when the Attribute parameter is description or productCodes.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ModifyInstanceAttribute",
    "req": {
      "Attribute": {
        "desc": "The name of the attribute.",
        "type": "String",
        "required": "no"
      },
      "BlockDeviceMapping.N": {
        "desc": "Modifies the DeleteOnTermination attribute for volumes that are currently attached. The volume must be owned by the caller. If no value is specified for DeleteOnTermination, the default is true and the volume is deleted when the instance is terminated.",
        "type": "Array of InstanceBlockDeviceMappingSpecification objects",
        "required": "no"
      },
      "DisableApiTermination": {
        "desc": "If the value is true, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. You cannot use this parameter for Spot Instances.",
        "type": "AttributeBooleanValue object",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "EbsOptimized": {
        "desc": "Specifies whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.",
        "type": "AttributeBooleanValue object",
        "required": "no"
      },
      "EnaSupport": {
        "desc": "Set to true to enable enhanced networking with ENA for the instance.",
        "type": "AttributeBooleanValue object",
        "required": "no"
      },
      "GroupId.N": {
        "desc": "[EC2-VPC] Changes the security groups of the instance. You must specify at least one security group, even if it's just the default security group for the VPC. You must specify the security group ID, not the security group name.",
        "type": "Array of strings",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "yes"
      },
      "InstanceInitiatedShutdownBehavior": {
        "desc": "Specifies whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).",
        "type": "AttributeValue object",
        "required": "no"
      },
      "InstanceType": {
        "desc": "Changes the instance type to the specified value. For more information, see Instance Types. If the instance type is not valid, the error returned is InvalidInstanceAttributeValue.",
        "type": "AttributeValue object",
        "required": "no"
      },
      "Kernel": {
        "desc": "Changes the instance's kernel to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see PV-GRUB.",
        "type": "AttributeValue object",
        "required": "no"
      },
      "Ramdisk": {
        "desc": "Changes the instance's RAM disk to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see PV-GRUB.",
        "type": "AttributeValue object",
        "required": "no"
      },
      "SourceDestCheck": {
        "desc": "Specifies whether source/destination checking is enabled. A value of true means that checking is enabled, and false means that checking is disabled. This value must be false for a NAT instance to perform NAT.",
        "type": "AttributeBooleanValue object",
        "required": "no"
      },
      "SriovNetSupport": {
        "desc": "Set to simple to enable enhanced networking with the Intel 82599 Virtual Function interface for the instance.",
        "type": "AttributeValue object",
        "required": "no"
      },
      "UserData": {
        "desc": "Changes the instance's user data to the specified value. If you are using an AWS SDK or command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text.",
        "type": "BlobAttributeValue object",
        "required": "no"
      },
      "Value": {
        "desc": "A new value for the attribute. Use only with the kernel, ramdisk, userData, disableApiTermination, or instanceInitiatedShutdownBehavior attribute.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ModifyInstanceCapacityReservationAttributes",
    "req": {
      "CapacityReservationSpecification": {
        "desc": "Information about the Capacity Reservation targeting option.",
        "type": "CapacityReservationSpecification object",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of the instance to be modified.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Returns true if the request succeeds; otherwise, it returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ModifyInstanceCreditSpecification",
    "req": {
      "ClientToken": {
        "desc": "A unique, case-sensitive token that you provide to ensure idempotency of your modification request. For more information, see Ensuring Idempotency.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceCreditSpecification.N": {
        "desc": "Information about the credit option for CPU usage.",
        "type": "Array of InstanceCreditSpecificationRequest objects",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "successfulInstanceCreditSpecificationSet": {
        "desc": "Information about the instances whose credit option for CPU usage was successfully modified.",
        "type": "Array of SuccessfulInstanceCreditSpecificationItem objects"
      },
      "unsuccessfulInstanceCreditSpecificationSet": {
        "desc": "Information about the instances whose credit option for CPU usage was not modified.",
        "type": "Array of UnsuccessfulInstanceCreditSpecificationItem objects"
      }
    }
  },
  {
    "title": "ModifyInstanceEventStartTime",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceEventId": {
        "desc": "The ID of the event whose date and time you are modifying.",
        "type": "String",
        "required": "yes"
      },
      "InstanceId": {
        "desc": "The ID of the instance with the scheduled event.",
        "type": "String",
        "required": "yes"
      },
      "NotBefore": {
        "desc": "The new date and time when the event will take place.",
        "type": "Timestamp",
        "required": "yes"
      }
    },
    "res": {
      "event": {
        "desc": "Describes a scheduled event for an instance.",
        "type": "InstanceStatusEvent object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "ModifyInstanceMetadataOptions",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "HttpEndpoint": {
        "desc": "This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the existing state is maintained.",
        "type": "String",
        "required": "no"
      },
      "HttpPutResponseHopLimit": {
        "desc": "The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. If no parameter is specified, the existing state is maintained.",
        "type": "Integer",
        "required": "no"
      },
      "HttpTokens": {
        "desc": "The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is optional.",
        "type": "String",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "instanceId": {
        "desc": "The ID of the instance.",
        "type": "String"
      },
      "instanceMetadataOptions": {
        "desc": "The metadata options for the instance.",
        "type": "InstanceMetadataOptionsResponse object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "ModifyInstancePlacement",
    "req": {
      "Affinity": {
        "desc": "The affinity setting for the instance.",
        "type": "String",
        "required": "no"
      },
      "GroupName": {
        "desc": "The name of the placement group in which to place the instance. For spread placement groups, the instance must have a tenancy of default. For cluster and partition placement groups, the instance must have a tenancy of default or dedicated.",
        "type": "String",
        "required": "no"
      },
      "HostId": {
        "desc": "The ID of the Dedicated Host with which to associate the instance.",
        "type": "String",
        "required": "no"
      },
      "HostResourceGroupArn": {
        "desc": "The ARN of the host resource group in which to place the instance.",
        "type": "String",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of the instance that you are modifying.",
        "type": "String",
        "required": "yes"
      },
      "PartitionNumber": {
        "desc": "Reserved for future use.",
        "type": "Integer",
        "required": "no"
      },
      "Tenancy": {
        "desc": "The tenancy for the instance.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ModifyLaunchTemplate",
    "req": {
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see Ensuring Idempotency.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "LaunchTemplateId": {
        "desc": "The ID of the launch template. You must specify either the launch template ID or launch template name in the request.",
        "type": "String",
        "required": "no"
      },
      "LaunchTemplateName": {
        "desc": "The name of the launch template. You must specify either the launch template ID or launch template name in the request.",
        "type": "String",
        "required": "no"
      },
      "SetDefaultVersion": {
        "desc": "The version number of the launch template to set as the default version.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "launchTemplate": {
        "desc": "Information about the launch template.",
        "type": "LaunchTemplate object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "ModifyNetworkInterfaceAttribute",
    "req": {
      "Attachment": {
        "desc": "Information about the interface attachment. If modifying the 'delete on termination' attribute, you must specify the ID of the interface attachment.",
        "type": "NetworkInterfaceAttachmentChanges object",
        "required": "no"
      },
      "Description": {
        "desc": "A description for the network interface.",
        "type": "AttributeValue object",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "NetworkInterfaceId": {
        "desc": "The ID of the network interface.",
        "type": "String",
        "required": "yes"
      },
      "SecurityGroupId.N": {
        "desc": "Changes the security groups for the network interface. The new set of groups you specify replaces the current set. You must specify at least one group, even if it's just the default security group in the VPC. You must specify the ID of the security group, not the name.",
        "type": "Array of strings",
        "required": "no"
      },
      "SourceDestCheck": {
        "desc": "Indicates whether source/destination checking is enabled. A value of true means checking is enabled, and false means checking is disabled. This value must be false for a NAT instance to perform NAT. For more information, see NAT Instances in the Amazon Virtual Private Cloud User Guide.",
        "type": "AttributeBooleanValue object",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ModifyReservedInstances",
    "req": {
      "ClientToken": {
        "desc": "A unique, case-sensitive token you provide to ensure idempotency of your modification request. For more information, see Ensuring Idempotency.",
        "type": "String",
        "required": "no"
      },
      "ReservedInstancesConfigurationSetItemType.N": {
        "desc": "The configuration settings for the Reserved Instances to modify.",
        "type": "Array of ReservedInstancesConfiguration objects",
        "required": "yes"
      },
      "ReservedInstancesId.N": {
        "desc": "The IDs of the Reserved Instances to modify.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "reservedInstancesModificationId": {
        "desc": "The ID for the modification.",
        "type": "String"
      }
    }
  },
  {
    "title": "ModifySnapshotAttribute",
    "req": {
      "Attribute": {
        "desc": "The snapshot attribute to modify. Only volume creation permissions can be modified.",
        "type": "String",
        "required": "no"
      },
      "CreateVolumePermission": {
        "desc": "A JSON representation of the snapshot attribute modification.",
        "type": "CreateVolumePermissionModifications object",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "OperationType": {
        "desc": "The type of operation to perform to the attribute.",
        "type": "String",
        "required": "no"
      },
      "SnapshotId": {
        "desc": "The ID of the snapshot.",
        "type": "String",
        "required": "yes"
      },
      "UserGroup.N": {
        "desc": "The group to modify for the snapshot.",
        "type": "Array of strings",
        "required": "no"
      },
      "UserId.N": {
        "desc": "The account ID to modify for the snapshot.",
        "type": "Array of strings",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ModifySpotFleetRequest",
    "req": {
      "ExcessCapacityTerminationPolicy": {
        "desc": "Indicates whether running Spot Instances should be terminated if the target capacity of the Spot Fleet request is decreased below the current size of the Spot Fleet.",
        "type": "String",
        "required": "no"
      },
      "OnDemandTargetCapacity": {
        "desc": "The number of On-Demand Instances in the fleet.",
        "type": "Integer",
        "required": "no"
      },
      "SpotFleetRequestId": {
        "desc": "The ID of the Spot Fleet request.",
        "type": "String",
        "required": "yes"
      },
      "TargetCapacity": {
        "desc": "The size of the fleet.",
        "type": "Integer",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ModifySubnetAttribute",
    "req": {
      "AssignIpv6AddressOnCreation": {
        "desc": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. This includes a network interface that's created when launching an instance into the subnet (the instance therefore receives an IPv6 address).",
        "type": "AttributeBooleanValue object",
        "required": "no"
      },
      "MapPublicIpOnLaunch": {
        "desc": "Specify true to indicate that ENIs attached to instances created in the specified subnet should be assigned a public IPv4 address.",
        "type": "AttributeBooleanValue object",
        "required": "no"
      },
      "SubnetId": {
        "desc": "The ID of the subnet.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ModifyTrafficMirrorFilterNetworkServices",
    "req": {
      "AddNetworkService.N": {
        "desc": "The network service, for example Amazon DNS, that you want to mirror.",
        "type": "Array of strings",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "RemoveNetworkService.N": {
        "desc": "The network service, for example Amazon DNS, that you no longer want to mirror.",
        "type": "Array of strings",
        "required": "no"
      },
      "TrafficMirrorFilterId": {
        "desc": "The ID of the Traffic Mirror filter.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "trafficMirrorFilter": {
        "desc": "The Traffic Mirror filter that the network service is associated with.",
        "type": "TrafficMirrorFilter object"
      }
    }
  },
  {
    "title": "ModifyTrafficMirrorFilterRule",
    "req": {
      "Description": {
        "desc": "The description to assign to the Traffic Mirror rule.",
        "type": "String",
        "required": "no"
      },
      "DestinationCidrBlock": {
        "desc": "The destination CIDR block to assign to the Traffic Mirror rule.",
        "type": "String",
        "required": "no"
      },
      "DestinationPortRange": {
        "desc": "The destination ports that are associated with the Traffic Mirror rule.",
        "type": "TrafficMirrorPortRangeRequest object",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Protocol": {
        "desc": "The protocol, for example TCP, to assign to the Traffic Mirror rule.",
        "type": "Integer",
        "required": "no"
      },
      "RemoveField.N": {
        "desc": "The properties that you want to remove from the Traffic Mirror filter rule.",
        "type": "Array of strings",
        "required": "no"
      },
      "RuleAction": {
        "desc": "The action to assign to the rule.",
        "type": "String",
        "required": "no"
      },
      "RuleNumber": {
        "desc": "The number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.",
        "type": "Integer",
        "required": "no"
      },
      "SourceCidrBlock": {
        "desc": "The source CIDR block to assign to the Traffic Mirror rule.",
        "type": "String",
        "required": "no"
      },
      "SourcePortRange": {
        "desc": "The port range to assign to the Traffic Mirror rule.",
        "type": "TrafficMirrorPortRangeRequest object",
        "required": "no"
      },
      "TrafficDirection": {
        "desc": "The type of traffic (ingress | egress) to assign to the rule.",
        "type": "String",
        "required": "no"
      },
      "TrafficMirrorFilterRuleId": {
        "desc": "The ID of the Traffic Mirror rule.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "trafficMirrorFilterRule": {
        "desc": "Modifies a Traffic Mirror rule.",
        "type": "TrafficMirrorFilterRule object"
      }
    }
  },
  {
    "title": "ModifyTrafficMirrorSession",
    "req": {
      "Description": {
        "desc": "The description to assign to the Traffic Mirror session.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "PacketLength": {
        "desc": "The number of bytes in each packet to mirror. These are bytes after the VXLAN header. To mirror a subset, set this to the length (in bytes) to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target. Do not specify this parameter when you want to mirror the entire packet.",
        "type": "Integer",
        "required": "no"
      },
      "RemoveField.N": {
        "desc": "The properties that you want to remove from the Traffic Mirror session.",
        "type": "Array of strings",
        "required": "no"
      },
      "SessionNumber": {
        "desc": "The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.",
        "type": "Integer",
        "required": "no"
      },
      "TrafficMirrorFilterId": {
        "desc": "The ID of the Traffic Mirror filter.",
        "type": "String",
        "required": "no"
      },
      "TrafficMirrorSessionId": {
        "desc": "The ID of the Traffic Mirror session.",
        "type": "String",
        "required": "yes"
      },
      "TrafficMirrorTargetId": {
        "desc": "The Traffic Mirror target. The target must be in the same VPC as the source, or have a VPC peering connection with the source.",
        "type": "String",
        "required": "no"
      },
      "VirtualNetworkId": {
        "desc": "The virtual network ID of the Traffic Mirror session.",
        "type": "Integer",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "trafficMirrorSession": {
        "desc": "Information about the Traffic Mirror session.",
        "type": "TrafficMirrorSession object"
      }
    }
  },
  {
    "title": "ModifyTransitGatewayVpcAttachment",
    "req": {
      "AddSubnetIds.N": {
        "desc": "The IDs of one or more subnets to add. You can specify at most one subnet per Availability Zone.",
        "type": "Array of strings",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Options": {
        "desc": "The new VPC attachment options.",
        "type": "ModifyTransitGatewayVpcAttachmentRequestOptions object",
        "required": "no"
      },
      "RemoveSubnetIds.N": {
        "desc": "The IDs of one or more subnets to remove.",
        "type": "Array of strings",
        "required": "no"
      },
      "TransitGatewayAttachmentId": {
        "desc": "The ID of the attachment.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "transitGatewayVpcAttachment": {
        "desc": "Information about the modified attachment.",
        "type": "TransitGatewayVpcAttachment object"
      }
    }
  },
  {
    "title": "ModifyVolume",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Iops": {
        "desc": "The target IOPS rate of the volume.",
        "type": "Integer",
        "required": "no"
      },
      "Size": {
        "desc": "The target size of the volume, in GiB. The target volume size must be greater than or equal to than the existing size of the volume. For information about available EBS volume sizes, see Amazon EBS Volume Types.",
        "type": "Integer",
        "required": "no"
      },
      "VolumeId": {
        "desc": "The ID of the volume.",
        "type": "String",
        "required": "yes"
      },
      "VolumeType": {
        "desc": "The target EBS volume type of the volume.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "volumeModification": {
        "desc": "Information about the volume modification.",
        "type": "VolumeModification object"
      }
    }
  },
  {
    "title": "ModifyVolumeAttribute",
    "req": {
      "AutoEnableIO": {
        "desc": "Indicates whether the volume should be auto-enabled for I/O operations.",
        "type": "AttributeBooleanValue object",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "VolumeId": {
        "desc": "The ID of the volume.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ModifyVpcAttribute",
    "req": {
      "EnableDnsHostnames": {
        "desc": "Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not.",
        "type": "AttributeBooleanValue object",
        "required": "no"
      },
      "EnableDnsSupport": {
        "desc": "Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range \"plus two\" succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled.",
        "type": "AttributeBooleanValue object",
        "required": "no"
      },
      "VpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ModifyVpcEndpoint",
    "req": {
      "AddRouteTableId.N": {
        "desc": "(Gateway endpoint) One or more route tables IDs to associate with the endpoint.",
        "type": "Array of strings",
        "required": "no"
      },
      "AddSecurityGroupId.N": {
        "desc": "(Interface endpoint) One or more security group IDs to associate with the network interface.",
        "type": "Array of strings",
        "required": "no"
      },
      "AddSubnetId.N": {
        "desc": "(Interface endpoint) One or more subnet IDs in which to serve the endpoint.",
        "type": "Array of strings",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "PolicyDocument": {
        "desc": "A policy to attach to the endpoint that controls access to the service. The policy must be in valid JSON format.",
        "type": "String",
        "required": "no"
      },
      "PrivateDnsEnabled": {
        "desc": "(Interface endpoint) Indicates whether a private hosted zone is associated with the VPC.",
        "type": "Boolean",
        "required": "no"
      },
      "RemoveRouteTableId.N": {
        "desc": "(Gateway endpoint) One or more route table IDs to disassociate from the endpoint.",
        "type": "Array of strings",
        "required": "no"
      },
      "RemoveSecurityGroupId.N": {
        "desc": "(Interface endpoint) One or more security group IDs to disassociate from the network interface.",
        "type": "Array of strings",
        "required": "no"
      },
      "RemoveSubnetId.N": {
        "desc": "(Interface endpoint) One or more subnets IDs in which to remove the endpoint.",
        "type": "Array of strings",
        "required": "no"
      },
      "ResetPolicy": {
        "desc": "(Gateway endpoint) Specify true to reset the policy document to the default policy. The default policy allows full access to the service.",
        "type": "Boolean",
        "required": "no"
      },
      "VpcEndpointId": {
        "desc": "The ID of the endpoint.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Returns true if the request succeeds; otherwise, it returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ModifyVpcEndpointConnectionNotification",
    "req": {
      "ConnectionEvents.N": {
        "desc": "One or more events for the endpoint. Valid values are Accept, Connect, Delete, and Reject.",
        "type": "Array of strings",
        "required": "no"
      },
      "ConnectionNotificationArn": {
        "desc": "The ARN for the SNS topic for the notification.",
        "type": "String",
        "required": "no"
      },
      "ConnectionNotificationId": {
        "desc": "The ID of the notification.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Returns true if the request succeeds; otherwise, it returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ModifyVpcEndpointServiceConfiguration",
    "req": {
      "AcceptanceRequired": {
        "desc": "Indicates whether requests to create an endpoint to your service must be accepted.",
        "type": "Boolean",
        "required": "no"
      },
      "AddNetworkLoadBalancerArn.N": {
        "desc": "The Amazon Resource Names (ARNs) of Network Load Balancers to add to your service configuration.",
        "type": "Array of strings",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "PrivateDnsName": {
        "desc": "The private DNS name to assign to the endpoint service.",
        "type": "String",
        "required": "no"
      },
      "RemoveNetworkLoadBalancerArn.N": {
        "desc": "The Amazon Resource Names (ARNs) of Network Load Balancers to remove from your service configuration.",
        "type": "Array of strings",
        "required": "no"
      },
      "RemovePrivateDnsName": {
        "desc": "Removes the private DNS name of the endpoint service.",
        "type": "Boolean",
        "required": "no"
      },
      "ServiceId": {
        "desc": "The ID of the service.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Returns true if the request succeeds; otherwise, it returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ModifyVpcEndpointServicePermissions",
    "req": {
      "AddAllowedPrincipals.N": {
        "desc": "The Amazon Resource Names (ARN) of one or more principals. Permissions are granted to the principals in this list. To grant permissions to all principals, specify an asterisk (*).",
        "type": "Array of strings",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "RemoveAllowedPrincipals.N": {
        "desc": "The Amazon Resource Names (ARN) of one or more principals. Permissions are revoked for principals in this list.",
        "type": "Array of strings",
        "required": "no"
      },
      "ServiceId": {
        "desc": "The ID of the service.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Returns true if the request succeeds; otherwise, it returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ModifyVpcPeeringConnectionOptions",
    "req": {
      "AccepterPeeringConnectionOptions": {
        "desc": "The VPC peering connection options for the accepter VPC.",
        "type": "PeeringConnectionOptionsRequest object",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "RequesterPeeringConnectionOptions": {
        "desc": "The VPC peering connection options for the requester VPC.",
        "type": "PeeringConnectionOptionsRequest object",
        "required": "no"
      },
      "VpcPeeringConnectionId": {
        "desc": "The ID of the VPC peering connection.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "accepterPeeringConnectionOptions": {
        "desc": "Information about the VPC peering connection options for the accepter VPC.",
        "type": "PeeringConnectionOptions object"
      },
      "requesterPeeringConnectionOptions": {
        "desc": "Information about the VPC peering connection options for the requester VPC.",
        "type": "PeeringConnectionOptions object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "ModifyVpcTenancy",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceTenancy": {
        "desc": "The instance tenancy attribute for the VPC.",
        "type": "String",
        "required": "yes"
      },
      "VpcId": {
        "desc": "The ID of the VPC.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Returns true if the request succeeds; otherwise, returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ModifyVpnConnection",
    "req": {
      "CustomerGatewayId": {
        "desc": "The ID of the customer gateway at your end of the VPN connection.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TransitGatewayId": {
        "desc": "The ID of the transit gateway.",
        "type": "String",
        "required": "no"
      },
      "VpnConnectionId": {
        "desc": "The ID of the VPN connection.",
        "type": "String",
        "required": "yes"
      },
      "VpnGatewayId": {
        "desc": "The ID of the virtual private gateway at the AWS side of the VPN connection.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "vpnConnection": {
        "desc": "Describes a VPN connection.",
        "type": "VpnConnection object"
      }
    }
  },
  {
    "title": "ModifyVpnTunnelCertificate",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "VpnConnectionId": {
        "desc": "The ID of the AWS Site-to-Site VPN connection.",
        "type": "String",
        "required": "yes"
      },
      "VpnTunnelOutsideIpAddress": {
        "desc": "The external IP address of the VPN tunnel.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "vpnConnection": {
        "desc": "Describes a VPN connection.",
        "type": "VpnConnection object"
      }
    }
  },
  {
    "title": "ModifyVpnTunnelOptions",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TunnelOptions": {
        "desc": "The tunnel options to modify.",
        "type": "ModifyVpnTunnelOptionsSpecification object",
        "required": "yes"
      },
      "VpnConnectionId": {
        "desc": "The ID of the AWS Site-to-Site VPN connection.",
        "type": "String",
        "required": "yes"
      },
      "VpnTunnelOutsideIpAddress": {
        "desc": "The external IP address of the VPN tunnel.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "vpnConnection": {
        "desc": "Describes a VPN connection.",
        "type": "VpnConnection object"
      }
    }
  },
  {
    "title": "MonitorInstances",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId.N": {
        "desc": "The IDs of the instances.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "instancesSet": {
        "desc": "The monitoring information.",
        "type": "Array of InstanceMonitoring objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "MoveAddressToVpc",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "PublicIp": {
        "desc": "The Elastic IP address.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "allocationId": {
        "desc": "The allocation ID for the Elastic IP address.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "status": {
        "desc": "The status of the move of the IP address.",
        "type": "String"
      }
    }
  },
  {
    "title": "ProvisionByoipCidr",
    "req": {
      "Cidr": {
        "desc": "The public IPv4 or IPv6 address range, in CIDR notation. The most specific IPv4 prefix that you can specify is /24. The most specific IPv6 prefix you can specify is /56. The address range cannot overlap with another address range that you've brought to this or another Region.",
        "type": "String",
        "required": "yes"
      },
      "CidrAuthorizationContext": {
        "desc": "A signed document that proves that you are authorized to bring the specified IP address range to Amazon using BYOIP.",
        "type": "CidrAuthorizationContext object",
        "required": "no"
      },
      "Description": {
        "desc": "A description for the address range and the address pool.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "PubliclyAdvertisable": {
        "desc": "(IPv6 only) Indicate whether the address range will be publicly advertised to the internet.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "byoipCidr": {
        "desc": "Information about the address range.",
        "type": "ByoipCidr object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "PurchaseHostReservation",
    "req": {
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency.",
        "type": "String",
        "required": "no"
      },
      "CurrencyCode": {
        "desc": "The currency in which the totalUpfrontPrice, LimitPrice, and totalHourlyPrice amounts are specified. At this time, the only supported currency is USD.",
        "type": "String",
        "required": "no"
      },
      "HostIdSet.N": {
        "desc": "The IDs of the Dedicated Hosts with which the reservation will be associated.",
        "type": "Array of strings",
        "required": "yes"
      },
      "LimitPrice": {
        "desc": "The specified limit is checked against the total upfront cost of the reservation (calculated as the offering's upfront cost multiplied by the host count). If the total upfront cost is greater than the specified price limit, the request fails. This is used to ensure that the purchase does not exceed the expected upfront cost of the purchase. At this time, the only supported currency is USD. For example, to indicate a limit price of USD 100, specify 100.00.",
        "type": "String",
        "required": "no"
      },
      "OfferingId": {
        "desc": "The ID of the offering.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "clientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency.",
        "type": "String"
      },
      "currencyCode": {
        "desc": "The currency in which the totalUpfrontPrice and totalHourlyPrice amounts are specified. At this time, the only supported currency is USD.",
        "type": "String"
      },
      "purchase": {
        "desc": "Describes the details of the purchase.",
        "type": "Array of Purchase objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "totalHourlyPrice": {
        "desc": "The total hourly price of the reservation calculated per hour.",
        "type": "String"
      },
      "totalUpfrontPrice": {
        "desc": "The total amount charged to your account when you purchase the reservation.",
        "type": "String"
      }
    }
  },
  {
    "title": "PurchaseReservedInstancesOffering",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceCount": {
        "desc": "The number of Reserved Instances to purchase.",
        "type": "Integer",
        "required": "yes"
      },
      "LimitPrice": {
        "desc": "Specified for Reserved Instance Marketplace offerings to limit the total order and ensure that the Reserved Instances are not purchased at unexpected prices.",
        "type": "ReservedInstanceLimitPrice object",
        "required": "no"
      },
      "PurchaseTime": {
        "desc": "The time at which to purchase the Reserved Instance, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ).",
        "type": "Timestamp",
        "required": "no"
      },
      "ReservedInstancesOfferingId": {
        "desc": "The ID of the Reserved Instance offering to purchase.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "reservedInstancesId": {
        "desc": "The IDs of the purchased Reserved Instances.",
        "type": "String"
      }
    }
  },
  {
    "title": "PurchaseScheduledInstances",
    "req": {
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see Ensuring Idempotency.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "PurchaseRequest.N": {
        "desc": "The purchase requests.",
        "type": "Array of PurchaseRequest objects",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "scheduledInstanceSet": {
        "desc": "Information about the Scheduled Instances.",
        "type": "Array of ScheduledInstance objects"
      }
    }
  },
  {
    "title": "RebootInstances",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId.N": {
        "desc": "The instance IDs.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "RegisterImage",
    "req": {
      "Architecture": {
        "desc": "The architecture of the AMI.",
        "type": "String",
        "required": "no"
      },
      "BillingProduct.N": {
        "desc": "The billing product codes. Your account must be authorized to specify billing product codes. Otherwise, you can use the AWS Marketplace to bill for the use of an AMI.",
        "type": "Array of strings",
        "required": "no"
      },
      "BlockDeviceMapping.N": {
        "desc": "The block device mapping entries.",
        "type": "Array of BlockDeviceMapping objects",
        "required": "no"
      },
      "Description": {
        "desc": "A description for your AMI.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "EnaSupport": {
        "desc": "Set to true to enable enhanced networking with ENA for the AMI and any instances that you launch from the AMI.",
        "type": "Boolean",
        "required": "no"
      },
      "ImageLocation": {
        "desc": "The full path to your AMI manifest in Amazon S3 storage. The specified bucket must have the aws-exec-read canned access control list (ACL) to ensure that it can be accessed by Amazon EC2. For more information, see Canned ACLs in the Amazon S3 Service Developer Guide.",
        "type": "String",
        "required": "no"
      },
      "KernelId": {
        "desc": "The ID of the kernel.",
        "type": "String",
        "required": "no"
      },
      "Name": {
        "desc": "A name for your AMI.",
        "type": "String",
        "required": "yes"
      },
      "RamdiskId": {
        "desc": "The ID of the RAM disk.",
        "type": "String",
        "required": "no"
      },
      "RootDeviceName": {
        "desc": "The device name of the root device volume (for example, /dev/sda1).",
        "type": "String",
        "required": "no"
      },
      "SriovNetSupport": {
        "desc": "Set to simple to enable enhanced networking with the Intel 82599 Virtual Function interface for the AMI and any instances that you launch from the AMI.",
        "type": "String",
        "required": "no"
      },
      "VirtualizationType": {
        "desc": "The type of virtualization (hvm | paravirtual).",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "imageId": {
        "desc": "The ID of the newly registered AMI.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "RegisterTransitGatewayMulticastGroupMembers",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "GroupIpAddress": {
        "desc": "The IP address assigned to the transit gateway multicast group.",
        "type": "String",
        "required": "no"
      },
      "NetworkInterfaceIds.N": {
        "desc": "The group members' network interface IDs to register with the transit gateway multicast group.",
        "type": "Array of strings",
        "required": "no"
      },
      "TransitGatewayMulticastDomainId": {
        "desc": "The ID of the transit gateway multicast domain.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "registeredMulticastGroupMembers": {
        "desc": "Information about the registered transit gateway multicast group members.",
        "type": "TransitGatewayMulticastRegisteredGroupMembers object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "RegisterTransitGatewayMulticastGroupSources",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "GroupIpAddress": {
        "desc": "The IP address assigned to the transit gateway multicast group.",
        "type": "String",
        "required": "no"
      },
      "NetworkInterfaceIds.N": {
        "desc": "The group sources' network interface IDs to register with the transit gateway multicast group.",
        "type": "Array of strings",
        "required": "no"
      },
      "TransitGatewayMulticastDomainId": {
        "desc": "The ID of the transit gateway multicast domain.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "registeredMulticastGroupSources": {
        "desc": "Information about the transit gateway multicast group sources.",
        "type": "TransitGatewayMulticastRegisteredGroupSources object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "RejectTransitGatewayPeeringAttachment",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TransitGatewayAttachmentId": {
        "desc": "The ID of the transit gateway peering attachment.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "transitGatewayPeeringAttachment": {
        "desc": "The transit gateway peering attachment.",
        "type": "TransitGatewayPeeringAttachment object"
      }
    }
  },
  {
    "title": "RejectTransitGatewayVpcAttachment",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TransitGatewayAttachmentId": {
        "desc": "The ID of the attachment.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "transitGatewayVpcAttachment": {
        "desc": "Information about the attachment.",
        "type": "TransitGatewayVpcAttachment object"
      }
    }
  },
  {
    "title": "RejectVpcEndpointConnections",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "ServiceId": {
        "desc": "The ID of the service.",
        "type": "String",
        "required": "yes"
      },
      "VpcEndpointId.N": {
        "desc": "The IDs of one or more VPC endpoints.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "unsuccessful": {
        "desc": "Information about the endpoints that were not rejected, if applicable.",
        "type": "Array of UnsuccessfulItem objects"
      }
    }
  },
  {
    "title": "RejectVpcPeeringConnection",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "VpcPeeringConnectionId": {
        "desc": "The ID of the VPC peering connection.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Returns true if the request succeeds; otherwise, it returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ReleaseAddress",
    "req": {
      "AllocationId": {
        "desc": "[EC2-VPC] The allocation ID. Required for EC2-VPC.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "NetworkBorderGroup": {
        "desc": "The location that the IP address is released from.",
        "type": "String",
        "required": "no"
      },
      "PublicIp": {
        "desc": "[EC2-Classic] The Elastic IP address. Required for EC2-Classic.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ReleaseHosts",
    "req": {
      "HostId.N": {
        "desc": "The IDs of the Dedicated Hosts to release.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "successful": {
        "desc": "The IDs of the Dedicated Hosts that were successfully released.",
        "type": "Array of strings"
      },
      "unsuccessful": {
        "desc": "The IDs of the Dedicated Hosts that could not be released, including an error message.",
        "type": "Array of UnsuccessfulItem objects"
      }
    }
  },
  {
    "title": "ReplaceIamInstanceProfileAssociation",
    "req": {
      "AssociationId": {
        "desc": "The ID of the existing IAM instance profile association.",
        "type": "String",
        "required": "yes"
      },
      "IamInstanceProfile": {
        "desc": "The IAM instance profile.",
        "type": "IamInstanceProfileSpecification object",
        "required": "yes"
      }
    },
    "res": {
      "iamInstanceProfileAssociation": {
        "desc": "Information about the IAM instance profile association.",
        "type": "IamInstanceProfileAssociation object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "ReplaceNetworkAclAssociation",
    "req": {
      "AssociationId": {
        "desc": "The ID of the current association between the original network ACL and the subnet.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "NetworkAclId": {
        "desc": "The ID of the new network ACL to associate with the subnet.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "newAssociationId": {
        "desc": "The ID of the new association.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "ReplaceNetworkAclEntry",
    "req": {
      "CidrBlock": {
        "desc": "The IPv4 network range to allow or deny, in CIDR notation (for example 172.16.0.0/24).",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Egress": {
        "desc": "Indicates whether to replace the egress rule.",
        "type": "Boolean",
        "required": "yes"
      },
      "Icmp": {
        "desc": "ICMP protocol: The ICMP or ICMPv6 type and code. Required if specifying protocol 1 (ICMP) or protocol 58 (ICMPv6) with an IPv6 CIDR block.",
        "type": "IcmpTypeCode object",
        "required": "no"
      },
      "Ipv6CidrBlock": {
        "desc": "The IPv6 network range to allow or deny, in CIDR notation (for example 2001:bd8:1234:1a00::/64).",
        "type": "String",
        "required": "no"
      },
      "NetworkAclId": {
        "desc": "The ID of the ACL.",
        "type": "String",
        "required": "yes"
      },
      "PortRange": {
        "desc": "TCP or UDP protocols: The range of ports the rule applies to. Required if specifying protocol 6 (TCP) or 17 (UDP).",
        "type": "PortRange object",
        "required": "no"
      },
      "Protocol": {
        "desc": "The protocol number. A value of \"-1\" means all protocols. If you specify \"-1\" or a protocol number other than \"6\" (TCP), \"17\" (UDP), or \"1\" (ICMP), traffic on all ports is allowed, regardless of any ports or ICMP types or codes that you specify. If you specify protocol \"58\" (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and codes allowed, regardless of any that you specify. If you specify protocol \"58\" (ICMPv6) and specify an IPv6 CIDR block, you must specify an ICMP type and code.",
        "type": "String",
        "required": "yes"
      },
      "RuleAction": {
        "desc": "Indicates whether to allow or deny the traffic that matches the rule.",
        "type": "String",
        "required": "yes"
      },
      "RuleNumber": {
        "desc": "The rule number of the entry to replace.",
        "type": "Integer",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ReplaceRoute",
    "req": {
      "DestinationCidrBlock": {
        "desc": "The IPv4 CIDR address block used for the destination match. The value that you provide must match the CIDR of an existing route in the table.",
        "type": "String",
        "required": "no"
      },
      "DestinationIpv6CidrBlock": {
        "desc": "The IPv6 CIDR address block used for the destination match. The value that you provide must match the CIDR of an existing route in the table.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "EgressOnlyInternetGatewayId": {
        "desc": "[IPv6 traffic only] The ID of an egress-only internet gateway.",
        "type": "String",
        "required": "no"
      },
      "GatewayId": {
        "desc": "The ID of an internet gateway or virtual private gateway.",
        "type": "String",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of a NAT instance in your VPC.",
        "type": "String",
        "required": "no"
      },
      "LocalGatewayId": {
        "desc": "The ID of the local gateway.",
        "type": "String",
        "required": "no"
      },
      "LocalTarget": {
        "desc": "Specifies whether to reset the local route to its default target (local).",
        "type": "Boolean",
        "required": "no"
      },
      "NatGatewayId": {
        "desc": "[IPv4 traffic only] The ID of a NAT gateway.",
        "type": "String",
        "required": "no"
      },
      "NetworkInterfaceId": {
        "desc": "The ID of a network interface.",
        "type": "String",
        "required": "no"
      },
      "RouteTableId": {
        "desc": "The ID of the route table.",
        "type": "String",
        "required": "yes"
      },
      "TransitGatewayId": {
        "desc": "The ID of a transit gateway.",
        "type": "String",
        "required": "no"
      },
      "VpcPeeringConnectionId": {
        "desc": "The ID of a VPC peering connection.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ReplaceRouteTableAssociation",
    "req": {
      "AssociationId": {
        "desc": "The association ID.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "RouteTableId": {
        "desc": "The ID of the new route table to associate with the subnet.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "associationState": {
        "desc": "The state of the association.",
        "type": "RouteTableAssociationState object"
      },
      "newAssociationId": {
        "desc": "The ID of the new association.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "ReplaceTransitGatewayRoute",
    "req": {
      "Blackhole": {
        "desc": "Indicates whether traffic matching this route is to be dropped.",
        "type": "Boolean",
        "required": "no"
      },
      "DestinationCidrBlock": {
        "desc": "The CIDR range used for the destination match. Routing decisions are based on the most specific match.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "TransitGatewayAttachmentId": {
        "desc": "The ID of the attachment.",
        "type": "String",
        "required": "no"
      },
      "TransitGatewayRouteTableId": {
        "desc": "The ID of the route table.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "route": {
        "desc": "Information about the modified route.",
        "type": "TransitGatewayRoute object"
      }
    }
  },
  {
    "title": "ReportInstanceStatus",
    "req": {
      "Description": {
        "desc": "Descriptive text about the health state of your instance.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "EndTime": {
        "desc": "The time at which the reported instance health state ended.",
        "type": "Timestamp",
        "required": "no"
      },
      "InstanceId.N": {
        "desc": "The instances.",
        "type": "Array of strings",
        "required": "yes"
      },
      "ReasonCode.N": {
        "desc": "The reason codes that describe the health state of your instance.",
        "type": "Array of strings",
        "required": "yes"
      },
      "StartTime": {
        "desc": "The time at which the reported instance health state began.",
        "type": "Timestamp",
        "required": "no"
      },
      "Status": {
        "desc": "The status of all instances listed.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "RequestSpotFleet",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "SpotFleetRequestConfig": {
        "desc": "The configuration for the Spot Fleet request.",
        "type": "SpotFleetRequestConfigData object",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "spotFleetRequestId": {
        "desc": "The ID of the Spot Fleet request.",
        "type": "String"
      }
    }
  },
  {
    "title": "RequestSpotInstances",
    "req": {
      "AvailabilityZoneGroup": {
        "desc": "The user-specified name for a logical grouping of requests.",
        "type": "String",
        "required": "no"
      },
      "BlockDurationMinutes": {
        "desc": "The required duration for the Spot Instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).",
        "type": "Integer",
        "required": "no"
      },
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency in the Amazon EC2 User Guide for Linux Instances.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceCount": {
        "desc": "The maximum number of Spot Instances to launch.",
        "type": "Integer",
        "required": "no"
      },
      "InstanceInterruptionBehavior": {
        "desc": "The behavior when a Spot Instance is interrupted. The default is terminate.",
        "type": "String",
        "required": "no"
      },
      "LaunchGroup": {
        "desc": "The instance launch group. Launch groups are Spot Instances that launch together and terminate together.",
        "type": "String",
        "required": "no"
      },
      "LaunchSpecification": {
        "desc": "The launch specification.",
        "type": "RequestSpotLaunchSpecification object",
        "required": "no"
      },
      "SpotPrice": {
        "desc": "The maximum price per hour that you are willing to pay for a Spot Instance. The default is the On-Demand price.",
        "type": "String",
        "required": "no"
      },
      "Type": {
        "desc": "The Spot Instance request type.",
        "type": "String",
        "required": "no"
      },
      "ValidFrom": {
        "desc": "The start date of the request. If this is a one-time request, the request becomes active at this date and time and remains active until all instances launch, the request expires, or the request is canceled. If the request is persistent, the request becomes active at this date and time and remains active until it expires or is canceled.",
        "type": "Timestamp",
        "required": "no"
      },
      "ValidUntil": {
        "desc": "The end date of the request. If this is a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date is reached. The default end date is 7 days from the current date.",
        "type": "Timestamp",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "spotInstanceRequestSet": {
        "desc": "One or more Spot Instance requests.",
        "type": "Array of SpotInstanceRequest objects"
      }
    }
  },
  {
    "title": "ResetEbsDefaultKmsKeyId",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "kmsKeyId": {
        "desc": "The Amazon Resource Name (ARN) of the default CMK for EBS encryption by default.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "ResetFpgaImageAttribute",
    "req": {
      "Attribute": {
        "desc": "The attribute.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "FpgaImageId": {
        "desc": "The ID of the AFI.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ResetImageAttribute",
    "req": {
      "Attribute": {
        "desc": "The attribute to reset (currently you can only reset the launch permission attribute).",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "ImageId": {
        "desc": "The ID of the AMI.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ResetInstanceAttribute",
    "req": {
      "Attribute": {
        "desc": "The attribute to reset.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ResetNetworkInterfaceAttribute",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "NetworkInterfaceId": {
        "desc": "The ID of the network interface.",
        "type": "String",
        "required": "yes"
      },
      "SourceDestCheck": {
        "desc": "The source/destination checking attribute. Resets the value to true.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "ResetSnapshotAttribute",
    "req": {
      "Attribute": {
        "desc": "The attribute to reset. Currently, only the attribute for permission to create volumes can be reset.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "SnapshotId": {
        "desc": "The ID of the snapshot.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "RestoreAddressToClassic",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "PublicIp": {
        "desc": "The Elastic IP address.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "publicIp": {
        "desc": "The Elastic IP address.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "status": {
        "desc": "The move status for the IP address.",
        "type": "String"
      }
    }
  },
  {
    "title": "RevokeClientVpnIngress",
    "req": {
      "AccessGroupId": {
        "desc": "The ID of the Active Directory group for which to revoke access.",
        "type": "String",
        "required": "no"
      },
      "ClientVpnEndpointId": {
        "desc": "The ID of the Client VPN endpoint with which the authorization rule is associated.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "RevokeAllGroups": {
        "desc": "Indicates whether access should be revoked for all clients.",
        "type": "Boolean",
        "required": "no"
      },
      "TargetNetworkCidr": {
        "desc": "The IPv4 address range, in CIDR notation, of the network for which access is being removed.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "status": {
        "desc": "The current state of the authorization rule.",
        "type": "ClientVpnAuthorizationRuleStatus object"
      }
    }
  },
  {
    "title": "RevokeSecurityGroupEgress",
    "req": {
      "CidrIp": {
        "desc": "Not supported. Use a set of IP permissions to specify the CIDR.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "FromPort": {
        "desc": "Not supported. Use a set of IP permissions to specify the port.",
        "type": "Integer",
        "required": "no"
      },
      "GroupId": {
        "desc": "The ID of the security group.",
        "type": "String",
        "required": "yes"
      },
      "IpPermissions.N": {
        "desc": "The sets of IP permissions. You can't specify a destination security group and a CIDR IP address range in the same set of permissions.",
        "type": "Array of IpPermission objects",
        "required": "no"
      },
      "IpProtocol": {
        "desc": "Not supported. Use a set of IP permissions to specify the protocol name or number.",
        "type": "String",
        "required": "no"
      },
      "SourceSecurityGroupName": {
        "desc": "Not supported. Use a set of IP permissions to specify a destination security group.",
        "type": "String",
        "required": "no"
      },
      "SourceSecurityGroupOwnerId": {
        "desc": "Not supported. Use a set of IP permissions to specify a destination security group.",
        "type": "String",
        "required": "no"
      },
      "ToPort": {
        "desc": "Not supported. Use a set of IP permissions to specify the port.",
        "type": "Integer",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "RevokeSecurityGroupIngress",
    "req": {
      "CidrIp": {
        "desc": "The CIDR IP address range. You can't specify this parameter when specifying a source security group.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "FromPort": {
        "desc": "The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use -1 to specify all ICMP types.",
        "type": "Integer",
        "required": "no"
      },
      "GroupId": {
        "desc": "The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.",
        "type": "String",
        "required": "no"
      },
      "GroupName": {
        "desc": "[EC2-Classic, default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request.",
        "type": "String",
        "required": "no"
      },
      "IpPermissions.N": {
        "desc": "The sets of IP permissions. You can't specify a source security group and a CIDR IP address range in the same set of permissions.",
        "type": "Array of IpPermission objects",
        "required": "no"
      },
      "IpProtocol": {
        "desc": "The IP protocol name (tcp, udp, icmp) or number (see Protocol Numbers). Use -1 to specify all.",
        "type": "String",
        "required": "no"
      },
      "SourceSecurityGroupName": {
        "desc": "[EC2-Classic, default VPC] The name of the source security group. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the start of the port range, the IP protocol, and the end of the port range. For EC2-VPC, the source security group must be in the same VPC. To revoke a specific rule for an IP protocol and port range, use a set of IP permissions instead.",
        "type": "String",
        "required": "no"
      },
      "SourceSecurityGroupOwnerId": {
        "desc": "[EC2-Classic] The AWS account ID of the source security group, if the source security group is in a different account. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the IP protocol, the start of the port range, and the end of the port range. To revoke a specific rule for an IP protocol and port range, use a set of IP permissions instead.",
        "type": "String",
        "required": "no"
      },
      "ToPort": {
        "desc": "The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use -1 to specify all ICMP codes for the ICMP type.",
        "type": "Integer",
        "required": "no"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "RunInstances",
    "req": {
      "AdditionalInfo": {
        "desc": "Reserved.",
        "type": "String",
        "required": "no"
      },
      "BlockDeviceMapping.N": {
        "desc": "The block device mapping entries.",
        "type": "Array of BlockDeviceMapping objects",
        "required": "no"
      },
      "CapacityReservationSpecification": {
        "desc": "Information about the Capacity Reservation targeting option. If you do not specify this parameter, the instance's Capacity Reservation preference defaults to open, which enables it to run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).",
        "type": "CapacityReservationSpecification object",
        "required": "no"
      },
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If you do not specify a client token, a randomly generated token is used for the request to ensure idempotency.",
        "type": "String",
        "required": "no"
      },
      "CpuOptions": {
        "desc": "The CPU options for the instance. For more information, see Optimizing CPU Options in the Amazon Elastic Compute Cloud User Guide.",
        "type": "CpuOptionsRequest object",
        "required": "no"
      },
      "CreditSpecification": {
        "desc": "The credit option for CPU usage of the burstable performance instance. Valid values are standard and unlimited. To change this attribute after launch, use ModifyInstanceCreditSpecification. For more information, see Burstable Performance Instances in the Amazon Elastic Compute Cloud User Guide.",
        "type": "CreditSpecificationRequest object",
        "required": "no"
      },
      "DisableApiTermination": {
        "desc": "If you set this parameter to true, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute after launch, use ModifyInstanceAttribute. Alternatively, if you set InstanceInitiatedShutdownBehavior to terminate, you can terminate the instance by running the shutdown command from the instance.",
        "type": "Boolean",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "EbsOptimized": {
        "desc": "Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.",
        "type": "Boolean",
        "required": "no"
      },
      "ElasticGpuSpecification.N": {
        "desc": "An elastic GPU to associate with the instance. An Elastic GPU is a GPU resource that you can attach to your Windows instance to accelerate the graphics performance of your applications. For more information, see Amazon EC2 Elastic GPUs in the Amazon Elastic Compute Cloud User Guide.",
        "type": "Array of ElasticGpuSpecification objects",
        "required": "no"
      },
      "ElasticInferenceAccelerator.N": {
        "desc": "An elastic inference accelerator to associate with the instance. Elastic inference accelerators are a resource you can attach to your Amazon EC2 instances to accelerate your Deep Learning (DL) inference workloads.",
        "type": "Array of ElasticInferenceAccelerator objects",
        "required": "no"
      },
      "HibernationOptions": {
        "desc": "Indicates whether an instance is enabled for hibernation. For more information, see Hibernate Your Instance in the Amazon Elastic Compute Cloud User Guide.",
        "type": "HibernationOptionsRequest object",
        "required": "no"
      },
      "IamInstanceProfile": {
        "desc": "The IAM instance profile.",
        "type": "IamInstanceProfileSpecification object",
        "required": "no"
      },
      "ImageId": {
        "desc": "The ID of the AMI. An AMI ID is required to launch an instance and must be specified here or in a launch template.",
        "type": "String",
        "required": "no"
      },
      "InstanceInitiatedShutdownBehavior": {
        "desc": "Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).",
        "type": "String",
        "required": "no"
      },
      "InstanceMarketOptions": {
        "desc": "The market (purchasing) option for the instances.",
        "type": "InstanceMarketOptionsRequest object",
        "required": "no"
      },
      "InstanceType": {
        "desc": "The instance type. For more information, see Instance Types in the Amazon Elastic Compute Cloud User Guide.",
        "type": "String",
        "required": "no"
      },
      "Ipv6Address.N": {
        "desc": "[EC2-VPC] The IPv6 addresses from the range of the subnet to associate with the primary network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch.",
        "type": "Array of InstanceIpv6Address objects",
        "required": "no"
      },
      "Ipv6AddressCount": {
        "desc": "[EC2-VPC] The number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch.",
        "type": "Integer",
        "required": "no"
      },
      "KernelId": {
        "desc": "The ID of the kernel.",
        "type": "String",
        "required": "no"
      },
      "KeyName": {
        "desc": "The name of the key pair. You can create a key pair using CreateKeyPair or ImportKeyPair.",
        "type": "String",
        "required": "no"
      },
      "LaunchTemplate": {
        "desc": "The launch template to use to launch the instances. Any parameters that you specify in RunInstances override the same parameters in the launch template. You can specify either the name or ID of a launch template, but not both.",
        "type": "LaunchTemplateSpecification object",
        "required": "no"
      },
      "LicenseSpecification.N": {
        "desc": "The license configurations.",
        "type": "Array of LicenseConfigurationRequest objects",
        "required": "no"
      },
      "MaxCount": {
        "desc": "The maximum number of instances to launch. If you specify more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches the largest possible number of instances above MinCount.",
        "type": "Integer",
        "required": "yes"
      },
      "MetadataOptions": {
        "desc": "The metadata options for the instance. For more information, see Instance Metadata and User Data.",
        "type": "InstanceMetadataOptionsRequest object",
        "required": "no"
      },
      "MinCount": {
        "desc": "The minimum number of instances to launch. If you specify a minimum that is more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches no instances.",
        "type": "Integer",
        "required": "yes"
      },
      "Monitoring": {
        "desc": "Specifies whether detailed monitoring is enabled for the instance.",
        "type": "RunInstancesMonitoringEnabled object",
        "required": "no"
      },
      "NetworkInterface.N": {
        "desc": "The network interfaces to associate with the instance. If you specify a network interface, you must specify any security groups and subnets as part of the network interface.",
        "type": "Array of InstanceNetworkInterfaceSpecification objects",
        "required": "no"
      },
      "Placement": {
        "desc": "The placement for the instance.",
        "type": "Placement object",
        "required": "no"
      },
      "PrivateIpAddress": {
        "desc": "[EC2-VPC] The primary IPv4 address. You must specify a value from the IPv4 address range of the subnet.",
        "type": "String",
        "required": "no"
      },
      "RamdiskId": {
        "desc": "The ID of the RAM disk to select. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, go to the AWS Resource Center and search for the kernel ID.",
        "type": "String",
        "required": "no"
      },
      "SecurityGroup.N": {
        "desc": "[EC2-Classic, default VPC] The names of the security groups. For a nondefault VPC, you must use security group IDs instead.",
        "type": "Array of strings",
        "required": "no"
      },
      "SecurityGroupId.N": {
        "desc": "The IDs of the security groups. You can create a security group using CreateSecurityGroup.",
        "type": "Array of strings",
        "required": "no"
      },
      "SubnetId": {
        "desc": "[EC2-VPC] The ID of the subnet to launch the instance into.",
        "type": "String",
        "required": "no"
      },
      "TagSpecification.N": {
        "desc": "The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags.",
        "type": "Array of TagSpecification objects",
        "required": "no"
      },
      "UserData": {
        "desc": "The user data to make available to the instance. For more information, see Running Commands on Your Linux Instance at Launch (Linux) and Adding User Data (Windows). If you are using a command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text. User data is limited to 16 KB.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "groupSet": {
        "desc": "[EC2-Classic only] The security groups.",
        "type": "Array of GroupIdentifier objects"
      },
      "instancesSet": {
        "desc": "The instances.",
        "type": "Array of Instance objects"
      },
      "ownerId": {
        "desc": "The ID of the AWS account that owns the reservation.",
        "type": "String"
      },
      "requesterId": {
        "desc": "The ID of the requester that launched the instances on your behalf (for example, AWS Management Console or Auto Scaling).",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "reservationId": {
        "desc": "The ID of the reservation.",
        "type": "String"
      }
    }
  },
  {
    "title": "RunScheduledInstances",
    "req": {
      "ClientToken": {
        "desc": "Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see Ensuring Idempotency.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceCount": {
        "desc": "The number of instances.",
        "type": "Integer",
        "required": "no"
      },
      "LaunchSpecification": {
        "desc": "The launch specification. You must match the instance type, Availability Zone, network, and platform of the schedule that you purchased.",
        "type": "ScheduledInstancesLaunchSpecification object",
        "required": "yes"
      },
      "ScheduledInstanceId": {
        "desc": "The Scheduled Instance ID.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "instanceIdSet": {
        "desc": "The IDs of the newly launched instances.",
        "type": "Array of strings"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "SearchLocalGatewayRoutes",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters.",
        "type": "Array of Filter objects",
        "required": "yes"
      },
      "LocalGatewayRouteTableId": {
        "desc": "The ID of the local gateway route table.",
        "type": "String",
        "required": "yes"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "routeSet": {
        "desc": "Information about the routes.",
        "type": "Array of LocalGatewayRoute objects"
      }
    }
  },
  {
    "title": "SearchTransitGatewayMulticastGroups",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. The possible values are:",
        "type": "Array of Filter objects",
        "required": "no"
      },
      "MaxResults": {
        "desc": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
        "type": "Integer",
        "required": "no"
      },
      "NextToken": {
        "desc": "The token for the next page of results.",
        "type": "String",
        "required": "no"
      },
      "TransitGatewayMulticastDomainId": {
        "desc": "The ID of the transit gateway multicast domain.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "multicastGroups": {
        "desc": "Information about the transit gateway multicast group.",
        "type": "Array of TransitGatewayMulticastGroup objects"
      },
      "nextToken": {
        "desc": "The token to use to retrieve the next page of results. This value is null when there are no more results to return.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "SearchTransitGatewayRoutes",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Filter.N": {
        "desc": "One or more filters. The possible values are:",
        "type": "Array of Filter objects",
        "required": "yes"
      },
      "MaxResults": {
        "desc": "The maximum number of routes to return.",
        "type": "Integer",
        "required": "no"
      },
      "TransitGatewayRouteTableId": {
        "desc": "The ID of the transit gateway route table.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "additionalRoutesAvailable": {
        "desc": "Indicates whether there are additional routes available.",
        "type": "Boolean"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "routeSet": {
        "desc": "Information about the routes.",
        "type": "Array of TransitGatewayRoute objects"
      }
    }
  },
  {
    "title": "SendDiagnosticInterrupt",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId": {
        "desc": "The ID of the instance.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "StartInstances",
    "req": {
      "AdditionalInfo": {
        "desc": "Reserved.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId.N": {
        "desc": "The IDs of the instances.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "instancesSet": {
        "desc": "Information about the started instances.",
        "type": "Array of InstanceStateChange objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "StartVpcEndpointServicePrivateDnsVerification",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "ServiceId": {
        "desc": "The ID of the endpoint service.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Returns true if the request succeeds; otherwise, it returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "StopInstances",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Force": {
        "desc": "Forces the instances to stop. The instances do not have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures. This option is not recommended for Windows instances.",
        "type": "Boolean",
        "required": "no"
      },
      "Hibernate": {
        "desc": "Hibernates the instance if the instance was enabled for hibernation at launch. If the instance cannot hibernate successfully, a normal shutdown occurs. For more information, see Hibernate Your Instance in the Amazon Elastic Compute Cloud User Guide.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId.N": {
        "desc": "The IDs of the instances.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "instancesSet": {
        "desc": "Information about the stopped instances.",
        "type": "Array of InstanceStateChange objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "TerminateClientVpnConnections",
    "req": {
      "ClientVpnEndpointId": {
        "desc": "The ID of the Client VPN endpoint to which the client is connected.",
        "type": "String",
        "required": "yes"
      },
      "ConnectionId": {
        "desc": "The ID of the client connection to be terminated.",
        "type": "String",
        "required": "no"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "Username": {
        "desc": "The name of the user who initiated the connection. Use this option to terminate all active connections for the specified user. This option can only be used if the user has established up to five connections.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "clientVpnEndpointId": {
        "desc": "The ID of the Client VPN endpoint.",
        "type": "String"
      },
      "connectionStatuses": {
        "desc": "The current state of the client connections.",
        "type": "Array of TerminateConnectionStatus objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "username": {
        "desc": "The user who established the terminated client connections.",
        "type": "String"
      }
    }
  },
  {
    "title": "TerminateInstances",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId.N": {
        "desc": "The IDs of the instances.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "instancesSet": {
        "desc": "Information about the terminated instances.",
        "type": "Array of InstanceStateChange objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "UnassignIpv6Addresses",
    "req": {
      "Ipv6Addresses.N": {
        "desc": "The IPv6 addresses to unassign from the network interface.",
        "type": "Array of strings",
        "required": "yes"
      },
      "NetworkInterfaceId": {
        "desc": "The ID of the network interface.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "networkInterfaceId": {
        "desc": "The ID of the network interface.",
        "type": "String"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "unassignedIpv6Addresses": {
        "desc": "The IPv6 addresses that have been unassigned from the network interface.",
        "type": "Array of strings"
      }
    }
  },
  {
    "title": "UnassignPrivateIpAddresses",
    "req": {
      "NetworkInterfaceId": {
        "desc": "The ID of the network interface.",
        "type": "String",
        "required": "yes"
      },
      "PrivateIpAddress.N": {
        "desc": "The secondary private IP addresses to unassign from the network interface. You can specify this option multiple times to unassign more than one IP address.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Is true if the request succeeds, and an error otherwise.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "UnmonitorInstances",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "InstanceId.N": {
        "desc": "The IDs of the instances.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {
      "instancesSet": {
        "desc": "The monitoring information.",
        "type": "Array of InstanceMonitoring objects"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  },
  {
    "title": "UpdateSecurityGroupRuleDescriptionsEgress",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "GroupId": {
        "desc": "The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.",
        "type": "String",
        "required": "no"
      },
      "GroupName": {
        "desc": "[Default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request.",
        "type": "String",
        "required": "no"
      },
      "IpPermissions.N": {
        "desc": "The IP permissions for the security group rule.",
        "type": "Array of IpPermission objects",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Returns true if the request succeeds; otherwise, returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "UpdateSecurityGroupRuleDescriptionsIngress",
    "req": {
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      },
      "GroupId": {
        "desc": "The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.",
        "type": "String",
        "required": "no"
      },
      "GroupName": {
        "desc": "[EC2-Classic, default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request.",
        "type": "String",
        "required": "no"
      },
      "IpPermissions.N": {
        "desc": "The IP permissions for the security group rule.",
        "type": "Array of IpPermission objects",
        "required": "yes"
      }
    },
    "res": {
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      },
      "return": {
        "desc": "Returns true if the request succeeds; otherwise, returns an error.",
        "type": "Boolean"
      }
    }
  },
  {
    "title": "WithdrawByoipCidr",
    "req": {
      "Cidr": {
        "desc": "The address range, in CIDR notation.",
        "type": "String",
        "required": "yes"
      },
      "DryRun": {
        "desc": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.",
        "type": "Boolean",
        "required": "no"
      }
    },
    "res": {
      "byoipCidr": {
        "desc": "Information about the address pool.",
        "type": "ByoipCidr object"
      },
      "requestId": {
        "desc": "The ID of the request.",
        "type": "String"
      }
    }
  }
]
