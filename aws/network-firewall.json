[
  {
    "title": "AssociateFirewallPolicy",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "FirewallArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "No",
        "desc": "The Amazon Resource Name (ARN) of the firewall. You must specify the ARN or the name, and you can specify both."
      },
      "FirewallName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "required": "No",
        "desc": "The descriptive name of the firewall. You can't change the name of a firewall after you create it. You must specify the ARN or the name, and you can specify both."
      },
      "FirewallPolicyArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "Yes",
        "desc": "The Amazon Resource Name (ARN) of the firewall policy."
      },
      "UpdateToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 1024.",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "required": "No",
        "desc": "An optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request. To make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it. To make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn't changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException. If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token."
      }
    },
    "res": {
      "FirewallArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "desc": "The Amazon Resource Name (ARN) of the firewall."
      },
      "FirewallName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "desc": "The descriptive name of the firewall. You can't change the name of a firewall after you create it."
      },
      "FirewallPolicyArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "desc": "The Amazon Resource Name (ARN) of the firewall policy."
      },
      "UpdateToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 1024.",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "desc": "An optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request. To make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it. To make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn't changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException. If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidOperationException": {
        "statusCode": "400",
        "desc": "The operation failed because it's not valid. For example, you might have tried to delete a rule group or firewall policy that's in use."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      },
      "InvalidTokenException": {
        "statusCode": "400",
        "desc": "The token you provided is stale or isn't valid for the operation."
      },
      "ResourceNotFoundException": {
        "statusCode": "400",
        "desc": "Unable to locate a resource using the parameters that you provided."
      }
    }
  },
  {
    "title": "AssociateSubnets",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "FirewallArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "No",
        "desc": "The Amazon Resource Name (ARN) of the firewall. You must specify the ARN or the name, and you can specify both."
      },
      "FirewallName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "required": "No",
        "desc": "The descriptive name of the firewall. You can't change the name of a firewall after you create it. You must specify the ARN or the name, and you can specify both."
      },
      "SubnetMappings": {
        "type": "Array of SubnetMapping objects",
        "required": "Yes",
        "desc": "The IDs of the subnets that you want to associate with the firewall."
      },
      "UpdateToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 1024.",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "required": "No",
        "desc": "An optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request. To make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it. To make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn't changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException. If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token."
      }
    },
    "res": {
      "FirewallArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "desc": "The Amazon Resource Name (ARN) of the firewall."
      },
      "FirewallName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "desc": "The descriptive name of the firewall. You can't change the name of a firewall after you create it."
      },
      "SubnetMappings": {
        "type": "Array of SubnetMapping objects",
        "desc": "The IDs of the subnets that are associated with the firewall."
      },
      "UpdateToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 1024.",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "desc": "An optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request. To make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it. To make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn't changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException. If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidOperationException": {
        "statusCode": "400",
        "desc": "The operation failed because it's not valid. For example, you might have tried to delete a rule group or firewall policy that's in use."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      },
      "InvalidTokenException": {
        "statusCode": "400",
        "desc": "The token you provided is stale or isn't valid for the operation."
      },
      "ResourceNotFoundException": {
        "statusCode": "400",
        "desc": "Unable to locate a resource using the parameters that you provided."
      }
    }
  },
  {
    "title": "CreateFirewall",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "DeleteProtection": {
        "type": "Boolean",
        "required": "No",
        "desc": "A flag indicating whether it is possible to delete the firewall. A setting of TRUE indicates that the firewall is protected against deletion. Use this setting to protect against accidentally deleting a firewall that is in use. When you create a firewall, the operation initializes this flag to TRUE."
      },
      "Description": {
        "type": "String",
        "length": "Maximum length of 512.",
        "pattern": "^.*$",
        "required": "No",
        "desc": "A description of the firewall."
      },
      "FirewallName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "required": "Yes",
        "desc": "The descriptive name of the firewall. You can't change the name of a firewall after you create it."
      },
      "FirewallPolicyArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "Yes",
        "desc": "The Amazon Resource Name (ARN) of the FirewallPolicy that you want to use for the firewall."
      },
      "FirewallPolicyChangeProtection": {
        "type": "Boolean",
        "required": "No",
        "desc": "A setting indicating whether the firewall is protected against a change to the firewall policy association. Use this setting to protect against accidentally modifying the firewall policy for a firewall that is in use. When you create a firewall, the operation initializes this setting to TRUE."
      },
      "SubnetChangeProtection": {
        "type": "Boolean",
        "required": "No",
        "desc": "A setting indicating whether the firewall is protected against changes to the subnet associations. Use this setting to protect against accidentally modifying the subnet associations for a firewall that is in use. When you create a firewall, the operation initializes this setting to TRUE."
      },
      "SubnetMappings": {
        "type": "Array of SubnetMapping objects",
        "required": "Yes",
        "desc": "The public subnets to use for your Network Firewall firewalls. Each subnet must belong to a different Availability Zone in the VPC. Network Firewall creates a firewall endpoint in each subnet."
      },
      "Tags": {
        "type": "Array of Tag objects",
        "required": "No",
        "desc": "The key:value pairs to associate with the resource."
      },
      "VpcId": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^vpc-[0-9a-f]+$",
        "required": "Yes",
        "desc": "The unique identifier of the VPC where Network Firewall should create the firewall. You can't change this setting after you create the firewall."
      }
    },
    "res": {
      "Firewall": {
        "type": "Firewall object",
        "desc": "The configuration settings for the firewall. These settings include the firewall policy and the subnets in your VPC to use for the firewall endpoints."
      },
      "FirewallStatus": {
        "type": "FirewallStatus object",
        "desc": "Detailed information about the current status of a Firewall. You can retrieve this for a firewall by calling DescribeFirewall and providing the firewall name and ARN."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InsufficientCapacityException": {
        "statusCode": "500",
        "desc": "AWS doesn't currently have enough available capacity to fulfill your request. Try your request later."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidOperationException": {
        "statusCode": "400",
        "desc": "The operation failed because it's not valid. For example, you might have tried to delete a rule group or firewall policy that's in use."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      },
      "LimitExceededException": {
        "statusCode": "400",
        "desc": "Unable to perform the operation because doing so would violate a limit setting."
      }
    }
  },
  {
    "title": "CreateFirewallPolicy",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "Description": {
        "type": "String",
        "length": "Maximum length of 512.",
        "pattern": "^.*$",
        "required": "No",
        "desc": "A description of the firewall policy."
      },
      "DryRun": {
        "type": "Boolean",
        "required": "No",
        "desc": "Indicates whether you want Network Firewall to just check the validity of the request, rather than run the request. If set to TRUE, Network Firewall checks whether the request can run successfully, but doesn't actually make the requested changes. The call returns the value that the request would return if you ran it with dry run set to FALSE, but doesn't make additions or changes to your resources. This option allows you to make sure that you have the required permissions to run the request and that your request parameters are valid. If set to FALSE, Network Firewall makes the requested changes to your resources."
      },
      "FirewallPolicy": {
        "type": "FirewallPolicy object",
        "required": "Yes",
        "desc": "The rule groups and policy actions to use in the firewall policy."
      },
      "FirewallPolicyName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "required": "Yes",
        "desc": "The descriptive name of the firewall policy. You can't change the name of a firewall policy after you create it."
      },
      "Tags": {
        "type": "Array of Tag objects",
        "required": "No",
        "desc": "The key:value pairs to associate with the resource."
      }
    },
    "res": {
      "FirewallPolicyResponse": {
        "type": "FirewallPolicyResponse object",
        "desc": "The high-level properties of a firewall policy. This, along with the FirewallPolicy, define the policy. You can retrieve all objects for a firewall policy by calling DescribeFirewallPolicy."
      },
      "UpdateToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 1024.",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "desc": "A token used for optimistic locking. Network Firewall returns a token to your requests that access the firewall policy. The token marks the state of the policy resource at the time of the request. To make changes to the policy, you provide the token in your request. Network Firewall uses the token to ensure that the policy hasn't changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException. If this happens, retrieve the firewall policy again to get a current copy of it with current token. Reapply your changes as needed, then try the operation again using the new token."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InsufficientCapacityException": {
        "statusCode": "500",
        "desc": "AWS doesn't currently have enough available capacity to fulfill your request. Try your request later."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      },
      "LimitExceededException": {
        "statusCode": "400",
        "desc": "Unable to perform the operation because doing so would violate a limit setting."
      }
    }
  },
  {
    "title": "CreateRuleGroup",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "Capacity": {
        "type": "Integer",
        "required": "Yes",
        "desc": "The maximum operating resources that this rule group can use. Rule group capacity is fixed at creation. When you update a rule group, you are limited to this capacity. When you reference a rule group from a firewall policy, Network Firewall reserves this capacity for the rule group. You can retrieve the capacity that would be required for a rule group before you create the rule group by calling CreateRuleGroup with DryRun set to TRUE. Capacity for a stateless rule group For a stateless rule group, the capacity required is the sum of the capacity requirements of the individual rules that you expect to have in the rule group. To calculate the capacity requirement of a single rule, multiply the capacity requirement values of each of the rule's match settings: A rule with no criteria specified in any of its match settings has a capacity requirement of 1. A rule with protocol setting [\"UDP\",\"TCP\"], source setting [\"10.0.0.0/24\",\"10.0.0.1/24\",\"10.0.0.2/24\"], and a single specification or no specification for each of the other match settings has a capacity requirement of 6. Capacity for a stateful rule group For a stateful rule group, the minimum capacity required is the number of individual rules that you expect to have in the rule group."
      },
      "Description": {
        "type": "String",
        "length": "Maximum length of 512.",
        "pattern": "^.*$",
        "required": "No",
        "desc": "A description of the rule group."
      },
      "DryRun": {
        "type": "Boolean",
        "required": "No",
        "desc": "Indicates whether you want Network Firewall to just check the validity of the request, rather than run the request. If set to TRUE, Network Firewall checks whether the request can run successfully, but doesn't actually make the requested changes. The call returns the value that the request would return if you ran it with dry run set to FALSE, but doesn't make additions or changes to your resources. This option allows you to make sure that you have the required permissions to run the request and that your request parameters are valid. If set to FALSE, Network Firewall makes the requested changes to your resources."
      },
      "RuleGroup": {
        "type": "RuleGroup object",
        "required": "No",
        "desc": "An object that defines the rule group rules."
      },
      "RuleGroupName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "required": "Yes",
        "desc": "The descriptive name of the rule group. You can't change the name of a rule group after you create it."
      },
      "Rules": {
        "type": "String",
        "length": "Minimum length of 0. Maximum length of 1000000.",
        "required": "No",
        "desc": "The name of a file containing stateful rule group rules specifications in Suricata flat format, with one rule per line. Use this to import your existing Suricata compatible rule groups. You can provide your rule group specification in a file through this setting when you create or update your rule group. The call response returns a RuleGroup object that Network Firewall has populated from your file. Network Firewall uses the file contents to populate the rule group rules, but does not maintain a reference to the file or use the file in any way after performing the create or update. If you call DescribeRuleGroup to retrieve the rule group, Network Firewall returns rules settings inside a RuleGroup object."
      },
      "Tags": {
        "type": "Array of Tag objects",
        "required": "No",
        "desc": "The key:value pairs to associate with the resource."
      },
      "Type": {
        "type": "String",
        "required": "Yes",
        "desc": "Indicates whether the rule group is stateless or stateful. If the rule group is stateless, it contains stateless rules. If it is stateful, it contains stateful rules."
      }
    },
    "res": {
      "RuleGroupResponse": {
        "type": "RuleGroupResponse object",
        "desc": "The high-level properties of a rule group. This, along with the RuleGroup, define the rule group. You can retrieve all objects for a rule group by calling DescribeRuleGroup."
      },
      "UpdateToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 1024.",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "desc": "A token used for optimistic locking. Network Firewall returns a token to your requests that access the rule group. The token marks the state of the rule group resource at the time of the request. To make changes to the rule group, you provide the token in your request. Network Firewall uses the token to ensure that the rule group hasn't changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException. If this happens, retrieve the rule group again to get a current copy of it with a current token. Reapply your changes as needed, then try the operation again using the new token."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InsufficientCapacityException": {
        "statusCode": "500",
        "desc": "AWS doesn't currently have enough available capacity to fulfill your request. Try your request later."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      },
      "LimitExceededException": {
        "statusCode": "400",
        "desc": "Unable to perform the operation because doing so would violate a limit setting."
      }
    }
  },
  {
    "title": "DeleteFirewall",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "FirewallArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "No",
        "desc": "The Amazon Resource Name (ARN) of the firewall. You must specify the ARN or the name, and you can specify both."
      },
      "FirewallName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "required": "No",
        "desc": "The descriptive name of the firewall. You can't change the name of a firewall after you create it. You must specify the ARN or the name, and you can specify both."
      }
    },
    "res": {
      "Firewall": {
        "type": "Firewall object",
        "desc": "The firewall defines the configuration settings for an AWS Network Firewall firewall. These settings include the firewall policy, the subnets in your VPC to use for the firewall endpoints, and any tags that are attached to the firewall AWS resource. The status of the firewall, for example whether it's ready to filter network traffic, is provided in the corresponding FirewallStatus. You can retrieve both objects by calling DescribeFirewall."
      },
      "FirewallStatus": {
        "type": "FirewallStatus object",
        "desc": "Detailed information about the current status of a Firewall. You can retrieve this for a firewall by calling DescribeFirewall and providing the firewall name and ARN."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidOperationException": {
        "statusCode": "400",
        "desc": "The operation failed because it's not valid. For example, you might have tried to delete a rule group or firewall policy that's in use."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      },
      "ResourceNotFoundException": {
        "statusCode": "400",
        "desc": "Unable to locate a resource using the parameters that you provided."
      },
      "UnsupportedOperationException": {
        "statusCode": "400",
        "desc": "The operation you requested isn't supported by Network Firewall."
      }
    }
  },
  {
    "title": "DeleteFirewallPolicy",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "FirewallPolicyArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "No",
        "desc": "The Amazon Resource Name (ARN) of the firewall policy. You must specify the ARN or the name, and you can specify both."
      },
      "FirewallPolicyName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "required": "No",
        "desc": "The descriptive name of the firewall policy. You can't change the name of a firewall policy after you create it. You must specify the ARN or the name, and you can specify both."
      }
    },
    "res": {
      "FirewallPolicyResponse": {
        "type": "FirewallPolicyResponse object",
        "desc": "The object containing the definition of the FirewallPolicyResponse that you asked to delete."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidOperationException": {
        "statusCode": "400",
        "desc": "The operation failed because it's not valid. For example, you might have tried to delete a rule group or firewall policy that's in use."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      },
      "ResourceNotFoundException": {
        "statusCode": "400",
        "desc": "Unable to locate a resource using the parameters that you provided."
      },
      "UnsupportedOperationException": {
        "statusCode": "400",
        "desc": "The operation you requested isn't supported by Network Firewall."
      }
    }
  },
  {
    "title": "DeleteResourcePolicy",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "ResourceArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "Yes",
        "desc": "The Amazon Resource Name (ARN) of the rule group or firewall policy whose resource policy you want to delete."
      }
    },
    "res": {},
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "ResourceNotFoundException": {
        "statusCode": "400",
        "desc": "Unable to locate a resource using the parameters that you provided."
      }
    }
  },
  {
    "title": "DeleteRuleGroup",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "RuleGroupArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "No",
        "desc": "The Amazon Resource Name (ARN) of the rule group. You must specify the ARN or the name, and you can specify both."
      },
      "RuleGroupName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "required": "No",
        "desc": "The descriptive name of the rule group. You can't change the name of a rule group after you create it. You must specify the ARN or the name, and you can specify both."
      },
      "Type": {
        "type": "String",
        "required": "No",
        "desc": "Indicates whether the rule group is stateless or stateful. If the rule group is stateless, it contains stateless rules. If it is stateful, it contains stateful rules."
      }
    },
    "res": {
      "RuleGroupResponse": {
        "type": "RuleGroupResponse object",
        "desc": "The high-level properties of a rule group. This, along with the RuleGroup, define the rule group. You can retrieve all objects for a rule group by calling DescribeRuleGroup."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidOperationException": {
        "statusCode": "400",
        "desc": "The operation failed because it's not valid. For example, you might have tried to delete a rule group or firewall policy that's in use."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      },
      "ResourceNotFoundException": {
        "statusCode": "400",
        "desc": "Unable to locate a resource using the parameters that you provided."
      },
      "UnsupportedOperationException": {
        "statusCode": "400",
        "desc": "The operation you requested isn't supported by Network Firewall."
      }
    }
  },
  {
    "title": "DescribeFirewall",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "FirewallArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "No",
        "desc": "The Amazon Resource Name (ARN) of the firewall. You must specify the ARN or the name, and you can specify both."
      },
      "FirewallName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "required": "No",
        "desc": "The descriptive name of the firewall. You can't change the name of a firewall after you create it. You must specify the ARN or the name, and you can specify both."
      }
    },
    "res": {
      "Firewall": {
        "type": "Firewall object",
        "desc": "The configuration settings for the firewall. These settings include the firewall policy and the subnets in your VPC to use for the firewall endpoints."
      },
      "FirewallStatus": {
        "type": "FirewallStatus object",
        "desc": "Detailed information about the current status of a Firewall. You can retrieve this for a firewall by calling DescribeFirewall and providing the firewall name and ARN."
      },
      "UpdateToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 1024.",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "desc": "An optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request. To make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it. To make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn't changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException. If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      },
      "ResourceNotFoundException": {
        "statusCode": "400",
        "desc": "Unable to locate a resource using the parameters that you provided."
      }
    }
  },
  {
    "title": "DescribeFirewallPolicy",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "FirewallPolicyArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "No",
        "desc": "The Amazon Resource Name (ARN) of the firewall policy. You must specify the ARN or the name, and you can specify both."
      },
      "FirewallPolicyName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "required": "No",
        "desc": "The descriptive name of the firewall policy. You can't change the name of a firewall policy after you create it. You must specify the ARN or the name, and you can specify both."
      }
    },
    "res": {
      "FirewallPolicy": {
        "type": "FirewallPolicy object",
        "desc": "The policy for the specified firewall policy."
      },
      "FirewallPolicyResponse": {
        "type": "FirewallPolicyResponse object",
        "desc": "The high-level properties of a firewall policy. This, along with the FirewallPolicy, define the policy. You can retrieve all objects for a firewall policy by calling DescribeFirewallPolicy."
      },
      "UpdateToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 1024.",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "desc": "A token used for optimistic locking. Network Firewall returns a token to your requests that access the firewall policy. The token marks the state of the policy resource at the time of the request. To make changes to the policy, you provide the token in your request. Network Firewall uses the token to ensure that the policy hasn't changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException. If this happens, retrieve the firewall policy again to get a current copy of it with current token. Reapply your changes as needed, then try the operation again using the new token."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      },
      "ResourceNotFoundException": {
        "statusCode": "400",
        "desc": "Unable to locate a resource using the parameters that you provided."
      }
    }
  },
  {
    "title": "DescribeLoggingConfiguration",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "FirewallArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "No",
        "desc": "The Amazon Resource Name (ARN) of the firewall. You must specify the ARN or the name, and you can specify both."
      },
      "FirewallName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "required": "No",
        "desc": "The descriptive name of the firewall. You can't change the name of a firewall after you create it. You must specify the ARN or the name, and you can specify both."
      }
    },
    "res": {
      "FirewallArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "desc": "The Amazon Resource Name (ARN) of the firewall."
      },
      "LoggingConfiguration": {
        "type": "LoggingConfiguration object",
        "desc": "Defines how AWS Network Firewall performs logging for a Firewall."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      },
      "ResourceNotFoundException": {
        "statusCode": "400",
        "desc": "Unable to locate a resource using the parameters that you provided."
      }
    }
  },
  {
    "title": "DescribeResourcePolicy",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "ResourceArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "Yes",
        "desc": "The Amazon Resource Name (ARN) of the rule group or firewall policy whose resource policy you want to retrieve."
      }
    },
    "res": {
      "Policy": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 395000.",
        "pattern": ".*\\S.*",
        "desc": "The AWS Identity and Access Management policy for the resource."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "ResourceNotFoundException": {
        "statusCode": "400",
        "desc": "Unable to locate a resource using the parameters that you provided."
      }
    }
  },
  {
    "title": "DescribeRuleGroup",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "RuleGroupArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "No",
        "desc": "The Amazon Resource Name (ARN) of the rule group. You must specify the ARN or the name, and you can specify both."
      },
      "RuleGroupName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "required": "No",
        "desc": "The descriptive name of the rule group. You can't change the name of a rule group after you create it. You must specify the ARN or the name, and you can specify both."
      },
      "Type": {
        "type": "String",
        "required": "No",
        "desc": "Indicates whether the rule group is stateless or stateful. If the rule group is stateless, it contains stateless rules. If it is stateful, it contains stateful rules."
      }
    },
    "res": {
      "RuleGroup": {
        "type": "RuleGroup object",
        "desc": "The object that defines the rules in a rule group. This, along with RuleGroupResponse, define the rule group. You can retrieve all objects for a rule group by calling DescribeRuleGroup. AWS Network Firewall uses a rule group to inspect and control network traffic. You define stateless rule groups to inspect individual packets and you define stateful rule groups to inspect packets in the context of their traffic flow. To use a rule group, you include it by reference in an Network Firewall firewall policy, then you use the policy in a firewall. You can reference a rule group from more than one firewall policy, and you can use a firewall policy in more than one firewall."
      },
      "RuleGroupResponse": {
        "type": "RuleGroupResponse object",
        "desc": "The high-level properties of a rule group. This, along with the RuleGroup, define the rule group. You can retrieve all objects for a rule group by calling DescribeRuleGroup."
      },
      "UpdateToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 1024.",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "desc": "A token used for optimistic locking. Network Firewall returns a token to your requests that access the rule group. The token marks the state of the rule group resource at the time of the request. To make changes to the rule group, you provide the token in your request. Network Firewall uses the token to ensure that the rule group hasn't changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException. If this happens, retrieve the rule group again to get a current copy of it with a current token. Reapply your changes as needed, then try the operation again using the new token."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      },
      "ResourceNotFoundException": {
        "statusCode": "400",
        "desc": "Unable to locate a resource using the parameters that you provided."
      }
    }
  },
  {
    "title": "DisassociateSubnets",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "FirewallArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "No",
        "desc": "The Amazon Resource Name (ARN) of the firewall. You must specify the ARN or the name, and you can specify both."
      },
      "FirewallName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "required": "No",
        "desc": "The descriptive name of the firewall. You can't change the name of a firewall after you create it. You must specify the ARN or the name, and you can specify both."
      },
      "SubnetIds": {
        "type": "Array of strings",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^subnet-[0-9a-f]+$",
        "required": "Yes",
        "desc": "The unique identifiers for the subnets that you want to disassociate."
      },
      "UpdateToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 1024.",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "required": "No",
        "desc": "An optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request. To make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it. To make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn't changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException. If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token."
      }
    },
    "res": {
      "FirewallArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "desc": "The Amazon Resource Name (ARN) of the firewall."
      },
      "FirewallName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "desc": "The descriptive name of the firewall. You can't change the name of a firewall after you create it."
      },
      "SubnetMappings": {
        "type": "Array of SubnetMapping objects",
        "desc": "The IDs of the subnets that are associated with the firewall."
      },
      "UpdateToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 1024.",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "desc": "An optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request. To make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it. To make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn't changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException. If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidOperationException": {
        "statusCode": "400",
        "desc": "The operation failed because it's not valid. For example, you might have tried to delete a rule group or firewall policy that's in use."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      },
      "InvalidTokenException": {
        "statusCode": "400",
        "desc": "The token you provided is stale or isn't valid for the operation."
      },
      "ResourceNotFoundException": {
        "statusCode": "400",
        "desc": "Unable to locate a resource using the parameters that you provided."
      }
    }
  },
  {
    "title": "ListFirewallPolicies",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "MaxResults": {
        "type": "Integer",
        "required": "No",
        "desc": "The maximum number of objects that you want Network Firewall to return for this request. If more objects are available, in the response, Network Firewall provides a NextToken value that you can use in a subsequent call to get the next batch of objects."
      },
      "NextToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 2048.",
        "pattern": "[0-9A-Za-z:\\/+=]+$",
        "required": "No",
        "desc": "When you request a list of objects with a MaxResults setting, if the number of objects that are still available for retrieval exceeds the maximum you requested, Network Firewall returns a NextToken value in the response. To retrieve the next batch of objects, use the token returned from the prior request in your next request."
      }
    },
    "res": {
      "FirewallPolicies": {
        "type": "Array of FirewallPolicyMetadata objects",
        "desc": "The metadata for the firewall policies. Depending on your setting for max results and the number of firewall policies that you have, this might not be the full list."
      },
      "NextToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 2048.",
        "pattern": "[0-9A-Za-z:\\/+=]+$",
        "desc": "When you request a list of objects with a MaxResults setting, if the number of objects that are still available for retrieval exceeds the maximum you requested, Network Firewall returns a NextToken value in the response. To retrieve the next batch of objects, use the token returned from the prior request in your next request."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      }
    }
  },
  {
    "title": "ListFirewalls",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "MaxResults": {
        "type": "Integer",
        "required": "No",
        "desc": "The maximum number of objects that you want Network Firewall to return for this request. If more objects are available, in the response, Network Firewall provides a NextToken value that you can use in a subsequent call to get the next batch of objects."
      },
      "NextToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 2048.",
        "pattern": "[0-9A-Za-z:\\/+=]+$",
        "required": "No",
        "desc": "When you request a list of objects with a MaxResults setting, if the number of objects that are still available for retrieval exceeds the maximum you requested, Network Firewall returns a NextToken value in the response. To retrieve the next batch of objects, use the token returned from the prior request in your next request."
      },
      "VpcIds": {
        "type": "Array of strings",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^vpc-[0-9a-f]+$",
        "required": "No",
        "desc": "The unique identifiers of the VPCs that you want Network Firewall to retrieve the firewalls for. Leave this blank to retrieve all firewalls that you have defined."
      }
    },
    "res": {
      "Firewalls": {
        "type": "Array of FirewallMetadata objects",
        "desc": "The firewall metadata objects for the VPCs that you specified. Depending on your setting for max results and the number of firewalls you have, a single call might not be the full list."
      },
      "NextToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 2048.",
        "pattern": "[0-9A-Za-z:\\/+=]+$",
        "desc": "When you request a list of objects with a MaxResults setting, if the number of objects that are still available for retrieval exceeds the maximum you requested, Network Firewall returns a NextToken value in the response. To retrieve the next batch of objects, use the token returned from the prior request in your next request."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      }
    }
  },
  {
    "title": "ListRuleGroups",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "MaxResults": {
        "type": "Integer",
        "required": "No",
        "desc": "The maximum number of objects that you want Network Firewall to return for this request. If more objects are available, in the response, Network Firewall provides a NextToken value that you can use in a subsequent call to get the next batch of objects."
      },
      "NextToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 2048.",
        "pattern": "[0-9A-Za-z:\\/+=]+$",
        "required": "No",
        "desc": "When you request a list of objects with a MaxResults setting, if the number of objects that are still available for retrieval exceeds the maximum you requested, Network Firewall returns a NextToken value in the response. To retrieve the next batch of objects, use the token returned from the prior request in your next request."
      }
    },
    "res": {
      "NextToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 2048.",
        "pattern": "[0-9A-Za-z:\\/+=]+$",
        "desc": "When you request a list of objects with a MaxResults setting, if the number of objects that are still available for retrieval exceeds the maximum you requested, Network Firewall returns a NextToken value in the response. To retrieve the next batch of objects, use the token returned from the prior request in your next request."
      },
      "RuleGroups": {
        "type": "Array of RuleGroupMetadata objects",
        "desc": "The rule group metadata objects that you've defined. Depending on your setting for max results and the number of rule groups, this might not be the full list."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      }
    }
  },
  {
    "title": "ListTagsForResource",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "MaxResults": {
        "type": "Integer",
        "required": "No",
        "desc": "The maximum number of objects that you want Network Firewall to return for this request. If more objects are available, in the response, Network Firewall provides a NextToken value that you can use in a subsequent call to get the next batch of objects."
      },
      "NextToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 2048.",
        "pattern": "[0-9A-Za-z:\\/+=]+$",
        "required": "No",
        "desc": "When you request a list of objects with a MaxResults setting, if the number of objects that are still available for retrieval exceeds the maximum you requested, Network Firewall returns a NextToken value in the response. To retrieve the next batch of objects, use the token returned from the prior request in your next request."
      },
      "ResourceArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "Yes",
        "desc": "The Amazon Resource Name (ARN) of the resource."
      }
    },
    "res": {
      "NextToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 2048.",
        "pattern": "[0-9A-Za-z:\\/+=]+$",
        "desc": "When you request a list of objects with a MaxResults setting, if the number of objects that are still available for retrieval exceeds the maximum you requested, Network Firewall returns a NextToken value in the response. To retrieve the next batch of objects, use the token returned from the prior request in your next request."
      },
      "Tags": {
        "type": "Array of Tag objects",
        "desc": "The tags that are associated with the resource."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "The request was denied due to request throttling."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "ResourceNotFoundException": {
        "statusCode": "400",
        "desc": "Unable to locate a resource using the parameters that you provided."
      }
    }
  },
  {
    "title": "PutResourcePolicy",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "Policy": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 395000.",
        "pattern": ".*\\S.*",
        "required": "Yes",
        "desc": "The AWS Identity and Access Management policy statement that lists the accounts that you want to share your rule group or firewall policy with and the operations that you want the accounts to be able to perform. For a rule group resource, you can specify the following operations in the Actions section of the statement: For a firewall policy resource, you can specify the following operations in the Actions section of the statement: In the Resource section of the statement, you specify the ARNs for the rule groups and firewall policies that you want to share with the account that you specified in Arn."
      },
      "ResourceArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "Yes",
        "desc": "The Amazon Resource Name (ARN) of the account that you want to share rule groups and firewall policies with."
      }
    },
    "res": {},
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      },
      "InvalidResourcePolicyException": {
        "statusCode": "400",
        "desc": ""
      },
      "ResourceNotFoundException": {
        "statusCode": "400",
        "desc": "Unable to locate a resource using the parameters that you provided."
      }
    }
  },
  {
    "title": "TagResource",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "ResourceArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "Yes",
        "desc": "The Amazon Resource Name (ARN) of the resource."
      },
      "Tags": {
        "type": "Array of Tag objects",
        "required": "Yes",
        "desc": ""
      }
    },
    "res": {},
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "The request was denied due to request throttling."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      },
      "ResourceNotFoundException": {
        "statusCode": "400",
        "desc": "Unable to locate a resource using the parameters that you provided."
      }
    }
  },
  {
    "title": "UntagResource",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "ResourceArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "Yes",
        "desc": "The Amazon Resource Name (ARN) of the resource."
      },
      "TagKeys": {
        "type": "Array of strings",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^.*$",
        "required": "Yes",
        "desc": ""
      }
    },
    "res": {},
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "The request was denied due to request throttling."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      },
      "ResourceNotFoundException": {
        "statusCode": "400",
        "desc": "Unable to locate a resource using the parameters that you provided."
      }
    }
  },
  {
    "title": "UpdateFirewallDeleteProtection",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "DeleteProtection": {
        "type": "Boolean",
        "required": "Yes",
        "desc": "A flag indicating whether it is possible to delete the firewall. A setting of TRUE indicates that the firewall is protected against deletion. Use this setting to protect against accidentally deleting a firewall that is in use. When you create a firewall, the operation initializes this flag to TRUE."
      },
      "FirewallArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "No",
        "desc": "The Amazon Resource Name (ARN) of the firewall. You must specify the ARN or the name, and you can specify both."
      },
      "FirewallName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "required": "No",
        "desc": "The descriptive name of the firewall. You can't change the name of a firewall after you create it. You must specify the ARN or the name, and you can specify both."
      },
      "UpdateToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 1024.",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "required": "No",
        "desc": "An optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request. To make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it. To make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn't changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException. If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token."
      }
    },
    "res": {
      "DeleteProtection": {
        "type": "Boolean",
        "desc": ""
      },
      "FirewallArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "desc": "The Amazon Resource Name (ARN) of the firewall."
      },
      "FirewallName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "desc": "The descriptive name of the firewall. You can't change the name of a firewall after you create it."
      },
      "UpdateToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 1024.",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "desc": "An optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request. To make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it. To make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn't changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException. If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      },
      "InvalidTokenException": {
        "statusCode": "400",
        "desc": "The token you provided is stale or isn't valid for the operation."
      },
      "ResourceNotFoundException": {
        "statusCode": "400",
        "desc": "Unable to locate a resource using the parameters that you provided."
      },
      "ResourceOwnerCheckException": {
        "statusCode": "400",
        "desc": ""
      }
    }
  },
  {
    "title": "UpdateFirewallDescription",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "Description": {
        "type": "String",
        "length": "Maximum length of 512.",
        "pattern": "^.*$",
        "required": "No",
        "desc": "The new description for the firewall. If you omit this setting, Network Firewall removes the description for the firewall."
      },
      "FirewallArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "No",
        "desc": "The Amazon Resource Name (ARN) of the firewall. You must specify the ARN or the name, and you can specify both."
      },
      "FirewallName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "required": "No",
        "desc": "The descriptive name of the firewall. You can't change the name of a firewall after you create it. You must specify the ARN or the name, and you can specify both."
      },
      "UpdateToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 1024.",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "required": "No",
        "desc": "An optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request. To make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it. To make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn't changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException. If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token."
      }
    },
    "res": {
      "Description": {
        "type": "String",
        "length": "Maximum length of 512.",
        "pattern": "^.*$",
        "desc": "A description of the firewall."
      },
      "FirewallArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "desc": "The Amazon Resource Name (ARN) of the firewall."
      },
      "FirewallName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "desc": "The descriptive name of the firewall. You can't change the name of a firewall after you create it."
      },
      "UpdateToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 1024.",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "desc": "An optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request. To make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it. To make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn't changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException. If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      },
      "InvalidTokenException": {
        "statusCode": "400",
        "desc": "The token you provided is stale or isn't valid for the operation."
      },
      "ResourceNotFoundException": {
        "statusCode": "400",
        "desc": "Unable to locate a resource using the parameters that you provided."
      }
    }
  },
  {
    "title": "UpdateFirewallPolicy",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "Description": {
        "type": "String",
        "length": "Maximum length of 512.",
        "pattern": "^.*$",
        "required": "No",
        "desc": "A description of the firewall policy."
      },
      "DryRun": {
        "type": "Boolean",
        "required": "No",
        "desc": "Indicates whether you want Network Firewall to just check the validity of the request, rather than run the request. If set to TRUE, Network Firewall checks whether the request can run successfully, but doesn't actually make the requested changes. The call returns the value that the request would return if you ran it with dry run set to FALSE, but doesn't make additions or changes to your resources. This option allows you to make sure that you have the required permissions to run the request and that your request parameters are valid. If set to FALSE, Network Firewall makes the requested changes to your resources."
      },
      "FirewallPolicy": {
        "type": "FirewallPolicy object",
        "required": "Yes",
        "desc": "The updated firewall policy to use for the firewall."
      },
      "FirewallPolicyArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "No",
        "desc": "The Amazon Resource Name (ARN) of the firewall policy. You must specify the ARN or the name, and you can specify both."
      },
      "FirewallPolicyName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "required": "No",
        "desc": "The descriptive name of the firewall policy. You can't change the name of a firewall policy after you create it. You must specify the ARN or the name, and you can specify both."
      },
      "UpdateToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 1024.",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "required": "Yes",
        "desc": "A token used for optimistic locking. Network Firewall returns a token to your requests that access the firewall policy. The token marks the state of the policy resource at the time of the request. To make changes to the policy, you provide the token in your request. Network Firewall uses the token to ensure that the policy hasn't changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException. If this happens, retrieve the firewall policy again to get a current copy of it with current token. Reapply your changes as needed, then try the operation again using the new token."
      }
    },
    "res": {
      "FirewallPolicyResponse": {
        "type": "FirewallPolicyResponse object",
        "desc": "The high-level properties of a firewall policy. This, along with the FirewallPolicy, define the policy. You can retrieve all objects for a firewall policy by calling DescribeFirewallPolicy."
      },
      "UpdateToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 1024.",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "desc": "A token used for optimistic locking. Network Firewall returns a token to your requests that access the firewall policy. The token marks the state of the policy resource at the time of the request. To make changes to the policy, you provide the token in your request. Network Firewall uses the token to ensure that the policy hasn't changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException. If this happens, retrieve the firewall policy again to get a current copy of it with current token. Reapply your changes as needed, then try the operation again using the new token."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      },
      "InvalidTokenException": {
        "statusCode": "400",
        "desc": "The token you provided is stale or isn't valid for the operation."
      },
      "ResourceNotFoundException": {
        "statusCode": "400",
        "desc": "Unable to locate a resource using the parameters that you provided."
      }
    }
  },
  {
    "title": "UpdateFirewallPolicyChangeProtection",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "FirewallArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "No",
        "desc": "The Amazon Resource Name (ARN) of the firewall. You must specify the ARN or the name, and you can specify both."
      },
      "FirewallName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "required": "No",
        "desc": "The descriptive name of the firewall. You can't change the name of a firewall after you create it. You must specify the ARN or the name, and you can specify both."
      },
      "FirewallPolicyChangeProtection": {
        "type": "Boolean",
        "required": "Yes",
        "desc": "A setting indicating whether the firewall is protected against a change to the firewall policy association. Use this setting to protect against accidentally modifying the firewall policy for a firewall that is in use. When you create a firewall, the operation initializes this setting to TRUE."
      },
      "UpdateToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 1024.",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "required": "No",
        "desc": "An optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request. To make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it. To make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn't changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException. If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token."
      }
    },
    "res": {
      "FirewallArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "desc": "The Amazon Resource Name (ARN) of the firewall."
      },
      "FirewallName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "desc": "The descriptive name of the firewall. You can't change the name of a firewall after you create it."
      },
      "FirewallPolicyChangeProtection": {
        "type": "Boolean",
        "desc": "A setting indicating whether the firewall is protected against a change to the firewall policy association. Use this setting to protect against accidentally modifying the firewall policy for a firewall that is in use. When you create a firewall, the operation initializes this setting to TRUE."
      },
      "UpdateToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 1024.",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "desc": "An optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request. To make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it. To make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn't changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException. If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      },
      "InvalidTokenException": {
        "statusCode": "400",
        "desc": "The token you provided is stale or isn't valid for the operation."
      },
      "ResourceNotFoundException": {
        "statusCode": "400",
        "desc": "Unable to locate a resource using the parameters that you provided."
      },
      "ResourceOwnerCheckException": {
        "statusCode": "400",
        "desc": ""
      }
    }
  },
  {
    "title": "UpdateLoggingConfiguration",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "FirewallArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "No",
        "desc": "The Amazon Resource Name (ARN) of the firewall. You must specify the ARN or the name, and you can specify both."
      },
      "FirewallName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "required": "No",
        "desc": "The descriptive name of the firewall. You can't change the name of a firewall after you create it. You must specify the ARN or the name, and you can specify both."
      },
      "LoggingConfiguration": {
        "type": "LoggingConfiguration object",
        "required": "No",
        "desc": "Defines how Network Firewall performs logging for a firewall. If you omit this setting, Network Firewall disables logging for the firewall."
      }
    },
    "res": {
      "FirewallArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "desc": "The Amazon Resource Name (ARN) of the firewall."
      },
      "FirewallName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "desc": "The descriptive name of the firewall. You can't change the name of a firewall after you create it."
      },
      "LoggingConfiguration": {
        "type": "LoggingConfiguration object",
        "desc": "Defines how AWS Network Firewall performs logging for a Firewall."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      },
      "InvalidTokenException": {
        "statusCode": "400",
        "desc": "The token you provided is stale or isn't valid for the operation."
      },
      "LogDestinationPermissionException": {
        "statusCode": "400",
        "desc": "Unable to send logs to a configured logging destination."
      },
      "ResourceNotFoundException": {
        "statusCode": "400",
        "desc": "Unable to locate a resource using the parameters that you provided."
      }
    }
  },
  {
    "title": "UpdateRuleGroup",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "Description": {
        "type": "String",
        "length": "Maximum length of 512.",
        "pattern": "^.*$",
        "required": "No",
        "desc": "A description of the rule group."
      },
      "DryRun": {
        "type": "Boolean",
        "required": "No",
        "desc": "Indicates whether you want Network Firewall to just check the validity of the request, rather than run the request. If set to TRUE, Network Firewall checks whether the request can run successfully, but doesn't actually make the requested changes. The call returns the value that the request would return if you ran it with dry run set to FALSE, but doesn't make additions or changes to your resources. This option allows you to make sure that you have the required permissions to run the request and that your request parameters are valid. If set to FALSE, Network Firewall makes the requested changes to your resources."
      },
      "RuleGroup": {
        "type": "RuleGroup object",
        "required": "No",
        "desc": "An object that defines the rule group rules."
      },
      "RuleGroupArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "No",
        "desc": "The Amazon Resource Name (ARN) of the rule group. You must specify the ARN or the name, and you can specify both."
      },
      "RuleGroupName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "required": "No",
        "desc": "The descriptive name of the rule group. You can't change the name of a rule group after you create it. You must specify the ARN or the name, and you can specify both."
      },
      "Rules": {
        "type": "String",
        "length": "Minimum length of 0. Maximum length of 1000000.",
        "required": "No",
        "desc": "The name of a file containing stateful rule group rules specifications in Suricata flat format, with one rule per line. Use this to import your existing Suricata compatible rule groups. You can provide your rule group specification in a file through this setting when you create or update your rule group. The call response returns a RuleGroup object that Network Firewall has populated from your file. Network Firewall uses the file contents to populate the rule group rules, but does not maintain a reference to the file or use the file in any way after performing the create or update. If you call DescribeRuleGroup to retrieve the rule group, Network Firewall returns rules settings inside a RuleGroup object."
      },
      "Type": {
        "type": "String",
        "required": "No",
        "desc": "Indicates whether the rule group is stateless or stateful. If the rule group is stateless, it contains stateless rules. If it is stateful, it contains stateful rules."
      },
      "UpdateToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 1024.",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "required": "Yes",
        "desc": "A token used for optimistic locking. Network Firewall returns a token to your requests that access the rule group. The token marks the state of the rule group resource at the time of the request. To make changes to the rule group, you provide the token in your request. Network Firewall uses the token to ensure that the rule group hasn't changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException. If this happens, retrieve the rule group again to get a current copy of it with a current token. Reapply your changes as needed, then try the operation again using the new token."
      }
    },
    "res": {
      "RuleGroupResponse": {
        "type": "RuleGroupResponse object",
        "desc": "The high-level properties of a rule group. This, along with the RuleGroup, define the rule group. You can retrieve all objects for a rule group by calling DescribeRuleGroup."
      },
      "UpdateToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 1024.",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "desc": "A token used for optimistic locking. Network Firewall returns a token to your requests that access the rule group. The token marks the state of the rule group resource at the time of the request. To make changes to the rule group, you provide the token in your request. Network Firewall uses the token to ensure that the rule group hasn't changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException. If this happens, retrieve the rule group again to get a current copy of it with a current token. Reapply your changes as needed, then try the operation again using the new token."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      },
      "InvalidTokenException": {
        "statusCode": "400",
        "desc": "The token you provided is stale or isn't valid for the operation."
      },
      "ResourceNotFoundException": {
        "statusCode": "400",
        "desc": "Unable to locate a resource using the parameters that you provided."
      }
    }
  },
  {
    "title": "UpdateSubnetChangeProtection",
    "req": {
      "Action": {
        "type": "string",
        "required": "Yes",
        "desc": "The action to be performed."
      },
      "Version": {
        "type": "string",
        "required": "Yes",
        "desc": "The API version that the request is written for, expressed in the format YYYY-MM-DD."
      },
      "X-Amz-Algorithm": {
        "type": "string",
        "required": "Conditional",
        "desc": "The hash algorithm that you used to create the request signature. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Credential": {
        "type": "string",
        "required": "Conditional",
        "desc": "The credential scope value, which is a string that includes your access key, the date, the region you are targeting, the service you are requesting, and a termination string (\"aws4_request\"). The value is expressed in the following format: access_key/YYYYMMDD/region/service/aws4_request. For more information, see Task 2: Create a String to Sign for Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-Date": {
        "type": "string",
        "required": "Conditional",
        "desc": "The date that is used to create the signature. The format must be ISO 8601 basic format (YYYYMMDD'T'HHMMSS'Z'). For example, the following date time is a valid X-Amz-Date value: 20120325T120000Z. Condition: X-Amz-Date is optional for all requests; it can be used to override the date used for signing requests. If the Date header is specified in the ISO 8601 basic format, X-Amz-Date is not required. When X-Amz-Date is used, it always overrides the value of the Date header. For more information, see Handling Dates in Signature Version 4 in the Amazon Web Services General Reference."
      },
      "X-Amz-Security-Token": {
        "type": "string",
        "required": "Conditional",
        "desc": "The temporary security token that was obtained through a call to AWS Security Token Service (AWS STS). For a list of services that support temporary security credentials from AWS Security Token Service, go to AWS Services That Work with IAM in the IAM User Guide. Condition: If you're using temporary security credentials from the AWS Security Token Service, you must include the security token."
      },
      "X-Amz-Signature": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies the hex-encoded signature that was calculated from the string to sign and the derived signing key. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "X-Amz-SignedHeaders": {
        "type": "string",
        "required": "Conditional",
        "desc": "Specifies all the HTTP headers that were included as part of the canonical request. For more information about specifying signed headers, see Task 1: Create a Canonical Request For Signature Version 4 in the Amazon Web Services General Reference. Condition: Specify this parameter when you include authentication information in a query string instead of in the HTTP authorization header."
      },
      "FirewallArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "required": "No",
        "desc": "The Amazon Resource Name (ARN) of the firewall. You must specify the ARN or the name, and you can specify both."
      },
      "FirewallName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "required": "No",
        "desc": "The descriptive name of the firewall. You can't change the name of a firewall after you create it. You must specify the ARN or the name, and you can specify both."
      },
      "SubnetChangeProtection": {
        "type": "Boolean",
        "required": "Yes",
        "desc": "A setting indicating whether the firewall is protected against changes to the subnet associations. Use this setting to protect against accidentally modifying the subnet associations for a firewall that is in use. When you create a firewall, the operation initializes this setting to TRUE."
      },
      "UpdateToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 1024.",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "required": "No",
        "desc": "An optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request. To make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it. To make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn't changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException. If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token."
      }
    },
    "res": {
      "FirewallArn": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 256.",
        "pattern": "^arn:aws.*",
        "desc": "The Amazon Resource Name (ARN) of the firewall."
      },
      "FirewallName": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 128.",
        "pattern": "^[a-zA-Z0-9-]+$",
        "desc": "The descriptive name of the firewall. You can't change the name of a firewall after you create it."
      },
      "SubnetChangeProtection": {
        "type": "Boolean",
        "desc": "A setting indicating whether the firewall is protected against changes to the subnet associations. Use this setting to protect against accidentally modifying the subnet associations for a firewall that is in use. When you create a firewall, the operation initializes this setting to TRUE."
      },
      "UpdateToken": {
        "type": "String",
        "length": "Minimum length of 1. Maximum length of 1024.",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "desc": "An optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request. To make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it. To make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn't changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException. If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token."
      }
    },
    "err": {
      "AccessDeniedException": {
        "statusCode": "400",
        "desc": "You do not have sufficient access to perform this action."
      },
      "IncompleteSignature": {
        "statusCode": "400",
        "desc": "The request signature does not conform to AWS standards."
      },
      "InternalFailure": {
        "statusCode": "500",
        "desc": "The request processing has failed because of an unknown error, exception or failure."
      },
      "InvalidAction": {
        "statusCode": "400",
        "desc": "The action or operation requested is invalid. Verify that the action is typed correctly."
      },
      "InvalidClientTokenId": {
        "statusCode": "403",
        "desc": "The X.509 certificate or AWS access key ID provided does not exist in our records."
      },
      "InvalidParameterCombination": {
        "statusCode": "400",
        "desc": "Parameters that must not be used together were used together."
      },
      "InvalidParameterValue": {
        "statusCode": "400",
        "desc": "An invalid or out-of-range value was supplied for the input parameter."
      },
      "InvalidQueryParameter": {
        "statusCode": "400",
        "desc": "The AWS query string is malformed or does not adhere to AWS standards."
      },
      "MalformedQueryString": {
        "statusCode": "404",
        "desc": "The query string contains a syntax error."
      },
      "MissingAction": {
        "statusCode": "400",
        "desc": "The request is missing an action or a required parameter."
      },
      "MissingAuthenticationToken": {
        "statusCode": "403",
        "desc": "The request must contain either a valid (registered) AWS access key ID or X.509 certificate."
      },
      "MissingParameter": {
        "statusCode": "400",
        "desc": "A required parameter for the specified action is not supplied."
      },
      "NotAuthorized": {
        "statusCode": "400",
        "desc": "You do not have permission to perform this action."
      },
      "OptInRequired": {
        "statusCode": "403",
        "desc": "The AWS access key ID needs a subscription for the service."
      },
      "RequestExpired": {
        "statusCode": "400",
        "desc": "The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future."
      },
      "ServiceUnavailable": {
        "statusCode": "503",
        "desc": "The request has failed due to a temporary failure of the server."
      },
      "ThrottlingException": {
        "statusCode": "400",
        "desc": "Unable to process the request due to throttling limitations."
      },
      "ValidationError": {
        "statusCode": "400",
        "desc": "The input fails to satisfy the constraints specified by an AWS service."
      },
      "InternalServerError": {
        "statusCode": "500",
        "desc": "Your request is valid, but Network Firewall couldn’t perform the operation because of a system problem. Retry your request."
      },
      "InvalidRequestException": {
        "statusCode": "400",
        "desc": "The operation failed because of a problem with your request. Examples include:"
      },
      "InvalidTokenException": {
        "statusCode": "400",
        "desc": "The token you provided is stale or isn't valid for the operation."
      },
      "ResourceNotFoundException": {
        "statusCode": "400",
        "desc": "Unable to locate a resource using the parameters that you provided."
      },
      "ResourceOwnerCheckException": {
        "statusCode": "400",
        "desc": ""
      }
    }
  }
]