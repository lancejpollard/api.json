[
  {
    "title": "AssociateVPCWithHostedZone",
    "req": {
      "Id": {
        "desc": "The ID of the private hosted zone that you want to associate an Amazon VPC with."
      }
    },
    "res": {
      "AssociateVPCWithHostedZoneRequest": {
        "desc": "Root level tag for the AssociateVPCWithHostedZoneRequest parameters."
      },
      "Comment": {
        "desc": "Optional: A comment about the association request.",
        "type": "String"
      },
      "VPC": {
        "desc": "A complex type that contains information about the VPC that you want to associate with a private hosted zone.",
        "type": "VPC object"
      }
    }
  },
  {
    "title": "ChangeResourceRecordSets",
    "req": {
      "Id": {
        "desc": "The ID of the hosted zone that contains the resource record sets that you want to change."
      }
    },
    "res": {
      "ChangeResourceRecordSetsRequest": {
        "desc": "Root level tag for the ChangeResourceRecordSetsRequest parameters."
      },
      "ChangeBatch": {
        "desc": "A complex type that contains an optional comment and the Changes element.",
        "type": "ChangeBatch object"
      }
    }
  },
  {
    "title": "ChangeTagsForResource",
    "req": {
      "ResourceId": {
        "desc": "The ID of the resource for which you want to add, change, or delete tags."
      },
      "ResourceType": {
        "desc": "The type of the resource.",
        "values": [
          "healthcheck",
          "hostedzone"
        ]
      }
    },
    "res": {
      "ChangeTagsForResourceRequest": {
        "desc": "Root level tag for the ChangeTagsForResourceRequest parameters.",
        "values": [
          "healthcheck",
          "hostedzone"
        ]
      },
      "AddTags": {
        "desc": "A complex type that contains a list of the tags that you want to add to the specified health check or hosted zone and/or the tags that you want to edit Value for.",
        "type": "Array of Tag objects",
        "values": [
          "healthcheck",
          "hostedzone"
        ]
      },
      "RemoveTagKeys": {
        "desc": "A complex type that contains a list of the tags that you want to delete from the specified health check or hosted zone. You can specify up to 10 keys.",
        "type": "Array of strings",
        "values": [
          "healthcheck",
          "hostedzone"
        ]
      }
    }
  },
  {
    "title": "CreateHealthCheck",
    "req": {
      "CreateHealthCheckRequest": {
        "desc": "Root level tag for the CreateHealthCheckRequest parameters.",
        "required": "yes"
      },
      "CallerReference": {
        "desc": "A unique string that identifies the request and that allows you to retry a failed CreateHealthCheck request without the risk of creating two identical health checks:",
        "type": "String",
        "required": "yes"
      },
      "HealthCheckConfig": {
        "desc": "A complex type that contains settings for a new health check.",
        "type": "HealthCheckConfig object",
        "required": "yes"
      }
    },
    "res": {
      "Location": {
        "desc": "The unique URL representing the new health check.",
        "type": "HealthCheckConfig object"
      }
    }
  },
  {
    "title": "CreateHostedZone",
    "req": {
      "CreateHostedZoneRequest": {
        "desc": "Root level tag for the CreateHostedZoneRequest parameters.",
        "required": "yes"
      },
      "CallerReference": {
        "desc": "A unique string that identifies the request and that allows failed CreateHostedZone requests to be retried without the risk of executing the operation twice. You must use a unique CallerReference string every time you submit a CreateHostedZone request. CallerReference can be any unique string, for example, a date/time stamp.",
        "type": "String",
        "required": "yes"
      },
      "DelegationSetId": {
        "desc": "If you want to associate a reusable delegation set with this hosted zone, the ID that Amazon Route 53 assigned to the reusable delegation set when you created it. For more information about reusable delegation sets, see CreateReusableDelegationSet.",
        "type": "String",
        "required": "no"
      },
      "HostedZoneConfig": {
        "desc": "(Optional) A complex type that contains the following optional values:",
        "type": "HostedZoneConfig object",
        "required": "no"
      },
      "Name": {
        "desc": "The name of the domain. Specify a fully qualified domain name, for example, www.example.com. The trailing dot is optional; Amazon Route 53 assumes that the domain name is fully qualified. This means that Route 53 treats www.example.com (without a trailing dot) and www.example.com. (with a trailing dot) as identical.",
        "type": "String",
        "required": "yes"
      },
      "VPC": {
        "desc": "(Private hosted zones only) A complex type that contains information about the Amazon VPC that you're associating with this hosted zone.",
        "type": "VPC object",
        "required": "no"
      }
    },
    "res": {
      "Location": {
        "desc": "The unique URL representing the new hosted zone.",
        "type": "VPC object"
      }
    }
  },
  {
    "title": "CreateQueryLoggingConfig",
    "req": {
      "Log Group and Resource Policy": {
        "desc": "Before you create a query logging configuration, perform the following operations."
      },
      "Log Streams and Edge Locations": {
        "desc": "When Route 53 finishes creating the configuration for DNS query logging, it does the following:"
      },
      "Queries That Are Logged": {
        "desc": "Query logs contain only the queries that DNS resolvers forward to Route 53. If a DNS resolver has already cached the response to a query (such as the IP address for a load balancer for example.com), the resolver will continue to return the cached response. It doesn't forward another query to Route 53 until the TTL for the corresponding resource record set expires. Depending on how many DNS queries are submitted for a resource record set, and depending on the TTL for that resource record set, query logs might contain information about only one query out of every several thousand queries that are submitted to DNS. For more information about how DNS works, see Routing Internet Traffic to Your Website or Web Application in the Amazon Route 53 Developer Guide."
      },
      "Log File Format": {
        "desc": "For a list of the values in each query log and the format of each value, see Logging DNS Queries in the Amazon Route 53 Developer Guide."
      },
      "Pricing": {
        "desc": "For information about charges for query logs, see Amazon CloudWatch Pricing."
      },
      "How to Stop Logging": {
        "desc": "If you want Route 53 to stop sending query logs to CloudWatch Logs, delete the query logging configuration. For more information, see DeleteQueryLoggingConfig."
      }
    },
    "res": {
      "CreateQueryLoggingConfigRequest": {
        "desc": "Root level tag for the CreateQueryLoggingConfigRequest parameters."
      },
      "CloudWatchLogsLogGroupArn": {
        "desc": "The Amazon Resource Name (ARN) for the log group that you want to Amazon Route 53 to send query logs to. This is the format of the ARN:",
        "type": "String"
      },
      "HostedZoneId": {
        "desc": "The ID of the hosted zone that you want to log queries for. You can log queries only for public hosted zones.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateReusableDelegationSet",
    "req": {
      "CreateReusableDelegationSetRequest": {
        "desc": "Root level tag for the CreateReusableDelegationSetRequest parameters.",
        "required": "yes"
      },
      "CallerReference": {
        "desc": "A unique string that identifies the request, and that allows you to retry failed CreateReusableDelegationSet requests without the risk of executing the operation twice. You must use a unique CallerReference string every time you submit a CreateReusableDelegationSet request. CallerReference can be any unique string, for example a date/time stamp.",
        "type": "String",
        "required": "yes"
      },
      "HostedZoneId": {
        "desc": "If you want to mark the delegation set for an existing hosted zone as reusable, the ID for that hosted zone.",
        "type": "String",
        "required": "no"
      }
    },
    "res": {
      "Location": {
        "desc": "The unique URL representing the new reusable delegation set.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateTrafficPolicy",
    "req": {
      "CreateTrafficPolicyRequest": {
        "desc": "Root level tag for the CreateTrafficPolicyRequest parameters.",
        "required": "yes"
      },
      "Comment": {
        "desc": "(Optional) Any comments that you want to include about the traffic policy.",
        "type": "String",
        "required": "no"
      },
      "Document": {
        "desc": "The definition of this traffic policy in JSON format. For more information, see Traffic Policy Document Format.",
        "type": "String",
        "required": "yes"
      },
      "Name": {
        "desc": "The name of the traffic policy.",
        "type": "String",
        "required": "yes"
      }
    },
    "res": {
      "Location": {
        "desc": "A unique URL that represents a new traffic policy.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateTrafficPolicyInstance",
    "req": {
      "CreateTrafficPolicyInstanceRequest": {
        "desc": "Root level tag for the CreateTrafficPolicyInstanceRequest parameters.",
        "required": "yes"
      },
      "HostedZoneId": {
        "desc": "The ID of the hosted zone that you want Amazon Route 53 to create resource record sets in by using the configuration in a traffic policy.",
        "type": "String",
        "required": "yes"
      },
      "Name": {
        "desc": "The domain name (such as example.com) or subdomain name (such as www.example.com) for which Amazon Route 53 responds to DNS queries by using the resource record sets that Route 53 creates for this traffic policy instance.",
        "type": "String",
        "required": "yes"
      },
      "TrafficPolicyId": {
        "desc": "The ID of the traffic policy that you want to use to create resource record sets in the specified hosted zone.",
        "type": "String",
        "required": "yes"
      },
      "TrafficPolicyVersion": {
        "desc": "The version of the traffic policy that you want to use to create resource record sets in the specified hosted zone.",
        "type": "Integer",
        "required": "yes"
      },
      "TTL": {
        "desc": "(Optional) The TTL that you want Amazon Route 53 to assign to all of the resource record sets that it creates in the specified hosted zone.",
        "type": "Long",
        "required": "yes"
      }
    },
    "res": {
      "Location": {
        "desc": "A unique URL that represents a new traffic policy instance.",
        "type": "Long"
      }
    }
  },
  {
    "title": "CreateTrafficPolicyVersion",
    "req": {
      "Id": {
        "desc": "The ID of the traffic policy for which you want to create a new version."
      }
    },
    "res": {
      "CreateTrafficPolicyVersionRequest": {
        "desc": "Root level tag for the CreateTrafficPolicyVersionRequest parameters."
      },
      "Comment": {
        "desc": "The comment that you specified in the CreateTrafficPolicyVersion request, if any.",
        "type": "String"
      },
      "Document": {
        "desc": "The definition of this version of the traffic policy, in JSON format. You specified the JSON in the CreateTrafficPolicyVersion request. For more information about the JSON format, see CreateTrafficPolicy.",
        "type": "String"
      }
    }
  },
  {
    "title": "CreateVPCAssociationAuthorization",
    "req": {
      "Id": {
        "desc": "The ID of the private hosted zone that you want to authorize associating a VPC with."
      }
    },
    "res": {
      "CreateVPCAssociationAuthorizationRequest": {
        "desc": "Root level tag for the CreateVPCAssociationAuthorizationRequest parameters."
      },
      "VPC": {
        "desc": "A complex type that contains the VPC ID and region for the VPC that you want to authorize associating with your hosted zone.",
        "type": "VPC object"
      }
    }
  },
  {
    "title": "DeleteHealthCheck",
    "req": {
      "HealthCheckId": {
        "desc": "The ID of the health check that you want to delete."
      }
    },
    "res": {
      "HealthCheckInUse": {
        "desc": "This error has been deprecated."
      },
      "InvalidInput": {
        "desc": "The input is not valid."
      },
      "NoSuchHealthCheck": {
        "desc": "No health check exists with the specified ID."
      }
    }
  },
  {
    "title": "DeleteHostedZone",
    "req": {
      "Id": {
        "desc": "The ID of the hosted zone you want to delete."
      }
    },
    "res": {
      "DeleteHostedZoneResponse": {
        "desc": "Root level tag for the DeleteHostedZoneResponse parameters."
      },
      "ChangeInfo": {
        "desc": "A complex type that contains the ID, the status, and the date and time of a request to delete a hosted zone.",
        "type": "ChangeInfo object"
      }
    }
  },
  {
    "title": "DeleteQueryLoggingConfig",
    "req": {
      "Id": {
        "desc": "The ID of the configuration that you want to delete."
      }
    },
    "res": {
      "ConcurrentModification": {
        "desc": "Another user submitted a request to create, update, or delete the object at the same time that you did. Retry the request."
      },
      "InvalidInput": {
        "desc": "The input is not valid."
      },
      "NoSuchQueryLoggingConfig": {
        "desc": "There is no DNS query logging configuration with the specified ID."
      }
    }
  },
  {
    "title": "DeleteReusableDelegationSet",
    "req": {
      "Id": {
        "desc": "The ID of the reusable delegation set that you want to delete."
      }
    },
    "res": {
      "DelegationSetInUse": {
        "desc": "The specified delegation contains associated hosted zones which must be deleted before the reusable delegation set can be deleted."
      },
      "DelegationSetNotReusable": {
        "desc": "A reusable delegation set with the specified ID does not exist."
      },
      "InvalidInput": {
        "desc": "The input is not valid."
      },
      "NoSuchDelegationSet": {
        "desc": "A reusable delegation set with the specified ID does not exist."
      }
    }
  },
  {
    "title": "DeleteTrafficPolicy",
    "req": {
      "Id": {
        "desc": "The ID of the traffic policy that you want to delete."
      },
      "Version": {
        "desc": "The version number of the traffic policy that you want to delete."
      }
    },
    "res": {
      "ConcurrentModification": {
        "desc": "Another user submitted a request to create, update, or delete the object at the same time that you did. Retry the request."
      },
      "InvalidInput": {
        "desc": "The input is not valid."
      },
      "NoSuchTrafficPolicy": {
        "desc": "No traffic policy exists with the specified ID."
      },
      "TrafficPolicyInUse": {
        "desc": "One or more traffic policy instances were created by using the specified traffic policy."
      }
    }
  },
  {
    "title": "DeleteTrafficPolicyInstance",
    "req": {
      "Id": {
        "desc": "The ID of the traffic policy instance that you want to delete."
      }
    },
    "res": {
      "InvalidInput": {
        "desc": "The input is not valid."
      },
      "NoSuchTrafficPolicyInstance": {
        "desc": "No traffic policy instance exists with the specified ID."
      },
      "PriorRequestNotComplete": {
        "desc": "If Amazon Route 53 can't process a request before the next request arrives, it will reject subsequent requests for the same hosted zone and return an HTTP 400 error (Bad request). If Route 53 returns this error repeatedly for the same request, we recommend that you wait, in intervals of increasing duration, before you try the request again."
      }
    }
  },
  {
    "title": "DeleteVPCAssociationAuthorization",
    "req": {
      "Id": {
        "desc": "When removing authorization to associate a VPC that was created by one AWS account with a hosted zone that was created with a different AWS account, the ID of the hosted zone."
      }
    },
    "res": {
      "DeleteVPCAssociationAuthorizationRequest": {
        "desc": "Root level tag for the DeleteVPCAssociationAuthorizationRequest parameters."
      },
      "VPC": {
        "desc": "When removing authorization to associate a VPC that was created by one AWS account with a hosted zone that was created with a different AWS account, a complex type that includes the ID and region of the VPC.",
        "type": "VPC object"
      }
    }
  },
  {
    "title": "DisassociateVPCFromHostedZone",
    "req": {
      "Id": {
        "desc": "The ID of the private hosted zone that you want to disassociate a VPC from."
      }
    },
    "res": {
      "DisassociateVPCFromHostedZoneRequest": {
        "desc": "Root level tag for the DisassociateVPCFromHostedZoneRequest parameters."
      },
      "Comment": {
        "desc": "Optional: A comment about the disassociation request.",
        "type": "String"
      },
      "VPC": {
        "desc": "A complex type that contains information about the VPC that you're disassociating from the specified hosted zone.",
        "type": "VPC object"
      }
    }
  },
  {
    "title": "GetAccountLimit",
    "req": {
      "Type": {
        "desc": "The limit that you want to get. Valid values include the following:",
        "values": [
          "max_health_checks_by_owner",
          "max_hosted_zones_by_owner",
          "max_traffic_policy_instances_by_owner"
        ]
      }
    },
    "res": {
      "GetAccountLimitResponse": {
        "desc": "Root level tag for the GetAccountLimitResponse parameters.",
        "values": [
          "max_health_checks_by_owner",
          "max_hosted_zones_by_owner",
          "max_traffic_policy_instances_by_owner"
        ]
      },
      "Count": {
        "desc": "The current number of entities that you have created of the specified type. For example, if you specified MAX_HEALTH_CHECKS_BY_OWNER for the value of Type in the request, the value of Count is the current number of health checks that you have created using the current account.",
        "type": "Long",
        "values": [
          "max_health_checks_by_owner",
          "max_hosted_zones_by_owner",
          "max_traffic_policy_instances_by_owner"
        ]
      },
      "Limit": {
        "desc": "The current setting for the specified limit. For example, if you specified MAX_HEALTH_CHECKS_BY_OWNER for the value of Type in the request, the value of Limit is the maximum number of health checks that you can create using the current account.",
        "type": "AccountLimit object",
        "values": [
          "max_health_checks_by_owner",
          "max_hosted_zones_by_owner",
          "max_traffic_policy_instances_by_owner"
        ]
      }
    }
  },
  {
    "title": "GetChange",
    "req": {
      "Id": {
        "desc": "The ID of the change batch request. The value that you specify here is the value that ChangeResourceRecordSets returned in the Id element when you submitted the request."
      }
    },
    "res": {
      "GetChangeResponse": {
        "desc": "Root level tag for the GetChangeResponse parameters."
      },
      "ChangeInfo": {
        "desc": "A complex type that contains information about the specified change batch.",
        "type": "ChangeInfo object"
      }
    }
  },
  {
    "title": "GetCheckerIpRanges",
    "req": {
      "GetCheckerIpRangesResponse": {
        "desc": "Root level tag for the GetCheckerIpRangesResponse parameters.",
        "required": "yes"
      },
      "CheckerIpRanges": {
        "desc": "A complex type that contains sorted list of IP ranges in CIDR format for Amazon Route 53 health checkers.",
        "type": "Array of strings",
        "required": "yes"
      }
    },
    "res": {}
  },
  {
    "title": "GetGeoLocation",
    "req": {
      "continentcode": {
        "desc": "For geolocation resource record sets, a two-letter abbreviation that identifies a continent. Amazon Route 53 supports the following continent codes:"
      },
      "countrycode": {
        "desc": "Amazon Route 53 uses the two-letter country codes that are specified in ISO standard 3166-1 alpha-2."
      },
      "subdivisioncode": {
        "desc": "For SubdivisionCode, Amazon Route 53 supports only states of the United States. For a list of state abbreviations, see Appendix B: Two–Letter State and Possession Abbreviations on the United States Postal Service website."
      }
    },
    "res": {
      "GetGeoLocationResponse": {
        "desc": "Root level tag for the GetGeoLocationResponse parameters."
      },
      "GeoLocationDetails": {
        "desc": "A complex type that contains the codes and full continent, country, and subdivision names for the specified geolocation code.",
        "type": "GeoLocationDetails object"
      }
    }
  },
  {
    "title": "GetHealthCheck",
    "req": {
      "HealthCheckId": {
        "desc": "The identifier that Amazon Route 53 assigned to the health check when you created it. When you add or update a resource record set, you use this value to specify which health check to use. The value can be up to 64 characters long."
      }
    },
    "res": {
      "GetHealthCheckResponse": {
        "desc": "Root level tag for the GetHealthCheckResponse parameters."
      },
      "HealthCheck": {
        "desc": "A complex type that contains information about one health check that is associated with the current AWS account.",
        "type": "HealthCheck object"
      }
    }
  },
  {
    "title": "GetHealthCheckCount",
    "req": {
      "GetHealthCheckCountResponse": {
        "desc": "Root level tag for the GetHealthCheckCountResponse parameters.",
        "required": "yes"
      },
      "HealthCheckCount": {
        "desc": "The number of health checks associated with the current AWS account.",
        "type": "Long",
        "required": "yes"
      }
    },
    "res": {}
  },
  {
    "title": "GetHealthCheckLastFailureReason",
    "req": {
      "HealthCheckId": {
        "desc": "The ID for the health check for which you want the last failure reason. When you created the health check, CreateHealthCheck returned the ID in the response, in the HealthCheckId element."
      }
    },
    "res": {
      "GetHealthCheckLastFailureReasonResponse": {
        "desc": "Root level tag for the GetHealthCheckLastFailureReasonResponse parameters."
      },
      "HealthCheckObservations": {
        "desc": "A list that contains one Observation element for each Amazon Route 53 health checker that is reporting a last failure reason.",
        "type": "Array of HealthCheckObservation objects"
      }
    }
  },
  {
    "title": "GetHealthCheckStatus",
    "req": {
      "HealthCheckId": {
        "desc": "The ID for the health check that you want the current status for. When you created the health check, CreateHealthCheck returned the ID in the response, in the HealthCheckId element."
      }
    },
    "res": {
      "GetHealthCheckStatusResponse": {
        "desc": "Root level tag for the GetHealthCheckStatusResponse parameters."
      },
      "HealthCheckObservations": {
        "desc": "A list that contains one HealthCheckObservation element for each Amazon Route 53 health checker that is reporting a status about the health check endpoint.",
        "type": "Array of HealthCheckObservation objects"
      }
    }
  },
  {
    "title": "GetHostedZone",
    "req": {
      "Id": {
        "desc": "The ID of the hosted zone that you want to get information about."
      }
    },
    "res": {
      "GetHostedZoneResponse": {
        "desc": "Root level tag for the GetHostedZoneResponse parameters."
      },
      "DelegationSet": {
        "desc": "A complex type that lists the Amazon Route 53 name servers for the specified hosted zone.",
        "type": "DelegationSet object"
      },
      "HostedZone": {
        "desc": "A complex type that contains general information about the specified hosted zone.",
        "type": "HostedZone object"
      },
      "VPCs": {
        "desc": "A complex type that contains information about the VPCs that are associated with the specified hosted zone.",
        "type": "Array of VPC objects"
      }
    }
  },
  {
    "title": "GetHostedZoneCount",
    "req": {
      "GetHostedZoneCountResponse": {
        "desc": "Root level tag for the GetHostedZoneCountResponse parameters.",
        "required": "yes"
      },
      "HostedZoneCount": {
        "desc": "The total number of public and private hosted zones that are associated with the current AWS account.",
        "type": "Long",
        "required": "yes"
      }
    },
    "res": {
      "InvalidInput": {
        "desc": "The input is not valid.",
        "type": "Long"
      }
    }
  },
  {
    "title": "GetHostedZoneLimit",
    "req": {
      "Id": {
        "desc": "The ID of the hosted zone that you want to get a limit for."
      },
      "Type": {
        "desc": "The limit that you want to get. Valid values include the following:",
        "values": [
          "max_rrsets_by_zone",
          "max_vpcs_associated_by_zone"
        ]
      }
    },
    "res": {
      "GetHostedZoneLimitResponse": {
        "desc": "Root level tag for the GetHostedZoneLimitResponse parameters.",
        "values": [
          "max_rrsets_by_zone",
          "max_vpcs_associated_by_zone"
        ]
      },
      "Count": {
        "desc": "The current number of entities that you have created of the specified type. For example, if you specified MAX_RRSETS_BY_ZONE for the value of Type in the request, the value of Count is the current number of records that you have created in the specified hosted zone.",
        "type": "Long",
        "values": [
          "max_rrsets_by_zone",
          "max_vpcs_associated_by_zone"
        ]
      },
      "Limit": {
        "desc": "The current setting for the specified limit. For example, if you specified MAX_RRSETS_BY_ZONE for the value of Type in the request, the value of Limit is the maximum number of records that you can create in the specified hosted zone.",
        "type": "HostedZoneLimit object",
        "values": [
          "max_rrsets_by_zone",
          "max_vpcs_associated_by_zone"
        ]
      }
    }
  },
  {
    "title": "GetQueryLoggingConfig",
    "req": {
      "Id": {
        "desc": "The ID of the configuration for DNS query logging that you want to get information about."
      }
    },
    "res": {
      "GetQueryLoggingConfigResponse": {
        "desc": "Root level tag for the GetQueryLoggingConfigResponse parameters."
      },
      "QueryLoggingConfig": {
        "desc": "A complex type that contains information about the query logging configuration that you specified in a GetQueryLoggingConfig request.",
        "type": "QueryLoggingConfig object"
      }
    }
  },
  {
    "title": "GetReusableDelegationSet",
    "req": {
      "Id": {
        "desc": "The ID of the reusable delegation set that you want to get a list of name servers for."
      }
    },
    "res": {
      "GetReusableDelegationSetResponse": {
        "desc": "Root level tag for the GetReusableDelegationSetResponse parameters."
      },
      "DelegationSet": {
        "desc": "A complex type that contains information about the reusable delegation set.",
        "type": "DelegationSet object"
      }
    }
  },
  {
    "title": "GetReusableDelegationSetLimit",
    "req": {
      "Id": {
        "desc": "The ID of the delegation set that you want to get the limit for."
      },
      "Type": {
        "desc": "Specify MAX_ZONES_BY_REUSABLE_DELEGATION_SET to get the maximum number of hosted zones that you can associate with the specified reusable delegation set.",
        "values": [
          "max_zones_by_reusable_delegation_set"
        ]
      }
    },
    "res": {
      "GetReusableDelegationSetLimitResponse": {
        "desc": "Root level tag for the GetReusableDelegationSetLimitResponse parameters.",
        "values": [
          "max_zones_by_reusable_delegation_set"
        ]
      },
      "Count": {
        "desc": "The current number of hosted zones that you can associate with the specified reusable delegation set.",
        "type": "Long",
        "values": [
          "max_zones_by_reusable_delegation_set"
        ]
      },
      "Limit": {
        "desc": "The current setting for the limit on hosted zones that you can associate with the specified reusable delegation set.",
        "type": "ReusableDelegationSetLimit object",
        "values": [
          "max_zones_by_reusable_delegation_set"
        ]
      }
    }
  },
  {
    "title": "GetTrafficPolicy",
    "req": {
      "Id": {
        "desc": "The ID of the traffic policy that you want to get information about."
      },
      "Version": {
        "desc": "The version number of the traffic policy that you want to get information about."
      }
    },
    "res": {
      "GetTrafficPolicyResponse": {
        "desc": "Root level tag for the GetTrafficPolicyResponse parameters."
      },
      "TrafficPolicy": {
        "desc": "A complex type that contains settings for the specified traffic policy.",
        "type": "TrafficPolicy object"
      }
    }
  },
  {
    "title": "GetTrafficPolicyInstance",
    "req": {
      "Id": {
        "desc": "The ID of the traffic policy instance that you want to get information about."
      }
    },
    "res": {
      "GetTrafficPolicyInstanceResponse": {
        "desc": "Root level tag for the GetTrafficPolicyInstanceResponse parameters."
      },
      "TrafficPolicyInstance": {
        "desc": "A complex type that contains settings for the traffic policy instance.",
        "type": "TrafficPolicyInstance object"
      }
    }
  },
  {
    "title": "GetTrafficPolicyInstanceCount",
    "req": {
      "GetTrafficPolicyInstanceCountResponse": {
        "desc": "Root level tag for the GetTrafficPolicyInstanceCountResponse parameters.",
        "required": "yes"
      },
      "TrafficPolicyInstanceCount": {
        "desc": "The number of traffic policy instances that are associated with the current AWS account.",
        "type": "Integer",
        "required": "yes"
      }
    },
    "res": {}
  },
  {
    "title": "ListGeoLocations",
    "req": {
      "maxitems": {
        "desc": "(Optional) The maximum number of geolocations to be included in the response body for this request. If more than maxitems geolocations remain to be listed, then the value of the IsTruncated element in the response is true."
      },
      "startcontinentcode": {
        "desc": "The code for the continent with which you want to start listing locations that Amazon Route 53 supports for geolocation. If Route 53 has already returned a page or more of results, if IsTruncated is true, and if NextContinentCode from the previous response has a value, enter that value in startcontinentcode to return the next page of results."
      },
      "startcountrycode": {
        "desc": "The code for the country with which you want to start listing locations that Amazon Route 53 supports for geolocation. If Route 53 has already returned a page or more of results, if IsTruncated is true, and if NextCountryCode from the previous response has a value, enter that value in startcountrycode to return the next page of results."
      },
      "startsubdivisioncode": {
        "desc": "The code for the state of the United States with which you want to start listing locations that Amazon Route 53 supports for geolocation. If Route 53 has already returned a page or more of results, if IsTruncated is true, and if NextSubdivisionCode from the previous response has a value, enter that value in startsubdivisioncode to return the next page of results."
      }
    },
    "res": {
      "ListGeoLocationsResponse": {
        "desc": "Root level tag for the ListGeoLocationsResponse parameters."
      },
      "GeoLocationDetailsList": {
        "desc": "A complex type that contains one GeoLocationDetails element for each location that Amazon Route 53 supports for geolocation.",
        "type": "Array of GeoLocationDetails objects"
      },
      "IsTruncated": {
        "desc": "A value that indicates whether more locations remain to be listed after the last location in this response. If so, the value of IsTruncated is true. To get more values, submit another request and include the values of NextContinentCode, NextCountryCode, and NextSubdivisionCode in the startcontinentcode, startcountrycode, and startsubdivisioncode, as applicable.",
        "type": "Boolean"
      },
      "MaxItems": {
        "desc": "The value that you specified for MaxItems in the request.",
        "type": "String"
      },
      "NextContinentCode": {
        "desc": "If IsTruncated is true, you can make a follow-up request to display more locations. Enter the value of NextContinentCode in the startcontinentcode parameter in another ListGeoLocations request.",
        "type": "String"
      },
      "NextCountryCode": {
        "desc": "If IsTruncated is true, you can make a follow-up request to display more locations. Enter the value of NextCountryCode in the startcountrycode parameter in another ListGeoLocations request.",
        "type": "String"
      },
      "NextSubdivisionCode": {
        "desc": "If IsTruncated is true, you can make a follow-up request to display more locations. Enter the value of NextSubdivisionCode in the startsubdivisioncode parameter in another ListGeoLocations request.",
        "type": "String"
      }
    }
  },
  {
    "title": "ListHealthChecks",
    "req": {
      "marker": {
        "desc": "If the value of IsTruncated in the previous response was true, you have more health checks. To get another group, submit another ListHealthChecks request."
      },
      "maxitems": {
        "desc": "The maximum number of health checks that you want ListHealthChecks to return in response to the current request. Amazon Route 53 returns a maximum of 100 items. If you set MaxItems to a value greater than 100, Route 53 returns only the first 100 health checks."
      }
    },
    "res": {
      "ListHealthChecksResponse": {
        "desc": "Root level tag for the ListHealthChecksResponse parameters."
      },
      "HealthChecks": {
        "desc": "A complex type that contains one HealthCheck element for each health check that is associated with the current AWS account.",
        "type": "Array of HealthCheck objects"
      },
      "IsTruncated": {
        "desc": "A flag that indicates whether there are more health checks to be listed. If the response was truncated, you can get the next group of health checks by submitting another ListHealthChecks request and specifying the value of NextMarker in the marker parameter.",
        "type": "Boolean"
      },
      "Marker": {
        "desc": "For the second and subsequent calls to ListHealthChecks, Marker is the value that you specified for the marker parameter in the previous request.",
        "type": "String"
      },
      "MaxItems": {
        "desc": "The value that you specified for the maxitems parameter in the call to ListHealthChecks that produced the current response.",
        "type": "String"
      },
      "NextMarker": {
        "desc": "If IsTruncated is true, the value of NextMarker identifies the first health check that Amazon Route 53 returns if you submit another ListHealthChecks request and specify the value of NextMarker in the marker parameter.",
        "type": "String"
      }
    }
  },
  {
    "title": "ListHostedZones",
    "req": {
      "delegationsetid": {
        "desc": "If you're using reusable delegation sets and you want to list all of the hosted zones that are associated with a reusable delegation set, specify the ID of that reusable delegation set."
      },
      "marker": {
        "desc": "If the value of IsTruncated in the previous response was true, you have more hosted zones. To get more hosted zones, submit another ListHostedZones request."
      },
      "maxitems": {
        "desc": "(Optional) The maximum number of hosted zones that you want Amazon Route 53 to return. If you have more than maxitems hosted zones, the value of IsTruncated in the response is true, and the value of NextMarker is the hosted zone ID of the first hosted zone that Route 53 will return if you submit another request."
      }
    },
    "res": {
      "ListHostedZonesResponse": {
        "desc": "Root level tag for the ListHostedZonesResponse parameters."
      },
      "HostedZones": {
        "desc": "A complex type that contains general information about the hosted zone.",
        "type": "Array of HostedZone objects"
      },
      "IsTruncated": {
        "desc": "A flag indicating whether there are more hosted zones to be listed. If the response was truncated, you can get more hosted zones by submitting another ListHostedZones request and specifying the value of NextMarker in the marker parameter.",
        "type": "Boolean"
      },
      "Marker": {
        "desc": "For the second and subsequent calls to ListHostedZones, Marker is the value that you specified for the marker parameter in the request that produced the current response.",
        "type": "String"
      },
      "MaxItems": {
        "desc": "The value that you specified for the maxitems parameter in the call to ListHostedZones that produced the current response.",
        "type": "String"
      },
      "NextMarker": {
        "desc": "If IsTruncated is true, the value of NextMarker identifies the first hosted zone in the next group of hosted zones. Submit another ListHostedZones request, and specify the value of NextMarker from the response in the marker parameter.",
        "type": "String"
      }
    }
  },
  {
    "title": "ListHostedZonesByName",
    "req": {
      "dnsname": {
        "desc": "(Optional) For your first request to ListHostedZonesByName, include the dnsname parameter only if you want to specify the name of the first hosted zone in the response. If you don't include the dnsname parameter, Amazon Route 53 returns all of the hosted zones that were created by the current AWS account, in ASCII order. For subsequent requests, include both dnsname and hostedzoneid parameters. For dnsname, specify the value of NextDNSName from the previous response."
      },
      "hostedzoneid": {
        "desc": "(Optional) For your first request to ListHostedZonesByName, do not include the hostedzoneid parameter."
      },
      "maxitems": {
        "desc": "The maximum number of hosted zones to be included in the response body for this request. If you have more than maxitems hosted zones, then the value of the IsTruncated element in the response is true, and the values of NextDNSName and NextHostedZoneId specify the first hosted zone in the next group of maxitems hosted zones."
      }
    },
    "res": {
      "ListHostedZonesByNameResponse": {
        "desc": "Root level tag for the ListHostedZonesByNameResponse parameters."
      },
      "DNSName": {
        "desc": "For the second and subsequent calls to ListHostedZonesByName, DNSName is the value that you specified for the dnsname parameter in the request that produced the current response.",
        "type": "String"
      },
      "HostedZoneId": {
        "desc": "The ID that Amazon Route 53 assigned to the hosted zone when you created it.",
        "type": "String"
      },
      "HostedZones": {
        "desc": "A complex type that contains general information about the hosted zone.",
        "type": "Array of HostedZone objects"
      },
      "IsTruncated": {
        "desc": "A flag that indicates whether there are more hosted zones to be listed. If the response was truncated, you can get the next group of maxitems hosted zones by calling ListHostedZonesByName again and specifying the values of NextDNSName and NextHostedZoneId elements in the dnsname and hostedzoneid parameters.",
        "type": "Boolean"
      },
      "MaxItems": {
        "desc": "The value that you specified for the maxitems parameter in the call to ListHostedZonesByName that produced the current response.",
        "type": "String"
      },
      "NextDNSName": {
        "desc": "If IsTruncated is true, the value of NextDNSName is the name of the first hosted zone in the next group of maxitems hosted zones. Call ListHostedZonesByName again and specify the value of NextDNSName and NextHostedZoneId in the dnsname and hostedzoneid parameters, respectively.",
        "type": "String"
      },
      "NextHostedZoneId": {
        "desc": "If IsTruncated is true, the value of NextHostedZoneId identifies the first hosted zone in the next group of maxitems hosted zones. Call ListHostedZonesByName again and specify the value of NextDNSName and NextHostedZoneId in the dnsname and hostedzoneid parameters, respectively.",
        "type": "String"
      }
    }
  },
  {
    "title": "ListQueryLoggingConfigs",
    "req": {
      "hostedzoneid": {
        "desc": "(Optional) If you want to list the query logging configuration that is associated with a hosted zone, specify the ID in HostedZoneId."
      },
      "maxresults": {
        "desc": "(Optional) The maximum number of query logging configurations that you want Amazon Route 53 to return in response to the current request. If the current AWS account has more than MaxResults configurations, use the value of NextToken in the response to get the next page of results."
      },
      "nexttoken": {
        "desc": "(Optional) If the current AWS account has more than MaxResults query logging configurations, use NextToken to get the second and subsequent pages of results."
      }
    },
    "res": {
      "ListQueryLoggingConfigsResponse": {
        "desc": "Root level tag for the ListQueryLoggingConfigsResponse parameters."
      },
      "NextToken": {
        "desc": "If a response includes the last of the query logging configurations that are associated with the current AWS account, NextToken doesn't appear in the response.",
        "type": "String"
      },
      "QueryLoggingConfigs": {
        "desc": "An array that contains one QueryLoggingConfig element for each configuration for DNS query logging that is associated with the current AWS account.",
        "type": "Array of QueryLoggingConfig objects"
      }
    }
  },
  {
    "title": "ListResourceRecordSets",
    "req": {
      "If you do not specify Name or Type": {
        "desc": "The results begin with the first resource record set that the hosted zone contains."
      },
      "If you specify Name but not Type": {
        "desc": "The results begin with the first resource record set in the list whose name is greater than or equal to Name."
      },
      "If you specify Type but not Name": {
        "desc": "Amazon Route 53 returns the InvalidInput error."
      },
      "If you specify both Name and Type": {
        "desc": "The results begin with the first resource record set in the list whose name is greater than or equal to Name, and whose type is greater than or equal to Type."
      }
    },
    "res": {
      "Id": {
        "desc": "The ID of the hosted zone that contains the resource record sets that you want to list."
      },
      "identifier": {
        "desc": "Resource record sets that have a routing policy other than simple: If results were truncated for a given DNS name and type, specify the value of NextRecordIdentifier from the previous response to get the next resource record set that has the current DNS name and type."
      },
      "maxitems": {
        "desc": "(Optional) The maximum number of resource records sets to include in the response body for this request. If the response includes more than maxitems resource record sets, the value of the IsTruncated element in the response is true, and the values of the NextRecordName and NextRecordType elements in the response identify the first resource record set in the next group of maxitems resource record sets."
      },
      "name": {
        "desc": "The first name in the lexicographic ordering of resource record sets that you want to list. If the specified record name doesn't exist, the results begin with the first resource record set that has a name greater than the value of name."
      },
      "type": {
        "desc": "The type of resource record set to begin the record listing from.",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      }
    }
  },
  {
    "title": "ListReusableDelegationSets",
    "req": {
      "marker": {
        "desc": "If the value of IsTruncated in the previous response was true, you have more reusable delegation sets. To get another group, submit another ListReusableDelegationSets request."
      },
      "maxitems": {
        "desc": "The number of reusable delegation sets that you want Amazon Route 53 to return in the response to this request. If you specify a value greater than 100, Route 53 returns only the first 100 reusable delegation sets."
      }
    },
    "res": {
      "ListReusableDelegationSetsResponse": {
        "desc": "Root level tag for the ListReusableDelegationSetsResponse parameters."
      },
      "DelegationSets": {
        "desc": "A complex type that contains one DelegationSet element for each reusable delegation set that was created by the current AWS account.",
        "type": "Array of DelegationSet objects"
      },
      "IsTruncated": {
        "desc": "A flag that indicates whether there are more reusable delegation sets to be listed.",
        "type": "Boolean"
      },
      "Marker": {
        "desc": "For the second and subsequent calls to ListReusableDelegationSets, Marker is the value that you specified for the marker parameter in the request that produced the current response.",
        "type": "String"
      },
      "MaxItems": {
        "desc": "The value that you specified for the maxitems parameter in the call to ListReusableDelegationSets that produced the current response.",
        "type": "String"
      },
      "NextMarker": {
        "desc": "If IsTruncated is true, the value of NextMarker identifies the next reusable delegation set that Amazon Route 53 will return if you submit another ListReusableDelegationSets request and specify the value of NextMarker in the marker parameter.",
        "type": "String"
      }
    }
  },
  {
    "title": "ListTagsForResource",
    "req": {
      "ResourceId": {
        "desc": "The ID of the resource for which you want to retrieve tags."
      },
      "ResourceType": {
        "desc": "The type of the resource.",
        "values": [
          "healthcheck",
          "hostedzone"
        ]
      }
    },
    "res": {
      "ListTagsForResourceResponse": {
        "desc": "Root level tag for the ListTagsForResourceResponse parameters.",
        "values": [
          "healthcheck",
          "hostedzone"
        ]
      },
      "ResourceTagSet": {
        "desc": "A ResourceTagSet containing tags associated with the specified resource.",
        "type": "ResourceTagSet object",
        "values": [
          "healthcheck",
          "hostedzone"
        ]
      }
    }
  },
  {
    "title": "ListTagsForResources",
    "req": {
      "ResourceType": {
        "desc": "The type of the resources.",
        "values": [
          "healthcheck",
          "hostedzone"
        ]
      }
    },
    "res": {
      "ListTagsForResourcesRequest": {
        "desc": "Root level tag for the ListTagsForResourcesRequest parameters.",
        "values": [
          "healthcheck",
          "hostedzone"
        ]
      },
      "ResourceIds": {
        "desc": "A complex type that contains the ResourceId element for each resource for which you want to get a list of tags.",
        "type": "Array of strings",
        "values": [
          "healthcheck",
          "hostedzone"
        ]
      }
    }
  },
  {
    "title": "ListTrafficPolicies",
    "req": {
      "maxitems": {
        "desc": "(Optional) The maximum number of traffic policies that you want Amazon Route 53 to return in response to this request. If you have more than MaxItems traffic policies, the value of IsTruncated in the response is true, and the value of TrafficPolicyIdMarker is the ID of the first traffic policy that Route 53 will return if you submit another request."
      },
      "trafficpolicyid": {
        "desc": "(Conditional) For your first request to ListTrafficPolicies, don't include the TrafficPolicyIdMarker parameter."
      }
    },
    "res": {
      "ListTrafficPoliciesResponse": {
        "desc": "Root level tag for the ListTrafficPoliciesResponse parameters."
      },
      "IsTruncated": {
        "desc": "A flag that indicates whether there are more traffic policies to be listed. If the response was truncated, you can get the next group of traffic policies by submitting another ListTrafficPolicies request and specifying the value of TrafficPolicyIdMarker in the TrafficPolicyIdMarker request parameter.",
        "type": "Boolean"
      },
      "MaxItems": {
        "desc": "The value that you specified for the MaxItems parameter in the ListTrafficPolicies request that produced the current response.",
        "type": "String"
      },
      "TrafficPolicyIdMarker": {
        "desc": "If the value of IsTruncated is true, TrafficPolicyIdMarker is the ID of the first traffic policy in the next group of MaxItems traffic policies.",
        "type": "String"
      },
      "TrafficPolicySummaries": {
        "desc": "A list that contains one TrafficPolicySummary element for each traffic policy that was created by the current AWS account.",
        "type": "Array of TrafficPolicySummary objects"
      }
    }
  },
  {
    "title": "ListTrafficPolicyInstances",
    "req": {
      "hostedzoneid": {
        "desc": "If the value of IsTruncated in the previous response was true, you have more traffic policy instances. To get more traffic policy instances, submit another ListTrafficPolicyInstances request. For the value of HostedZoneId, specify the value of HostedZoneIdMarker from the previous response, which is the hosted zone ID of the first traffic policy instance in the next group of traffic policy instances."
      },
      "maxitems": {
        "desc": "The maximum number of traffic policy instances that you want Amazon Route 53 to return in response to a ListTrafficPolicyInstances request. If you have more than MaxItems traffic policy instances, the value of the IsTruncated element in the response is true, and the values of HostedZoneIdMarker, TrafficPolicyInstanceNameMarker, and TrafficPolicyInstanceTypeMarker represent the first traffic policy instance in the next group of MaxItems traffic policy instances."
      },
      "trafficpolicyinstancename": {
        "desc": "If the value of IsTruncated in the previous response was true, you have more traffic policy instances. To get more traffic policy instances, submit another ListTrafficPolicyInstances request. For the value of trafficpolicyinstancename, specify the value of TrafficPolicyInstanceNameMarker from the previous response, which is the name of the first traffic policy instance in the next group of traffic policy instances."
      },
      "trafficpolicyinstancetype": {
        "desc": "If the value of IsTruncated in the previous response was true, you have more traffic policy instances. To get more traffic policy instances, submit another ListTrafficPolicyInstances request. For the value of trafficpolicyinstancetype, specify the value of TrafficPolicyInstanceTypeMarker from the previous response, which is the type of the first traffic policy instance in the next group of traffic policy instances.",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      }
    },
    "res": {
      "ListTrafficPolicyInstancesResponse": {
        "desc": "Root level tag for the ListTrafficPolicyInstancesResponse parameters.",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "HostedZoneIdMarker": {
        "desc": "If IsTruncated is true, HostedZoneIdMarker is the ID of the hosted zone of the first traffic policy instance that Route 53 will return if you submit another ListTrafficPolicyInstances request.",
        "type": "String",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "IsTruncated": {
        "desc": "A flag that indicates whether there are more traffic policy instances to be listed. If the response was truncated, you can get more traffic policy instances by calling ListTrafficPolicyInstances again and specifying the values of the HostedZoneIdMarker, TrafficPolicyInstanceNameMarker, and TrafficPolicyInstanceTypeMarker in the corresponding request parameters.",
        "type": "Boolean",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "MaxItems": {
        "desc": "The value that you specified for the MaxItems parameter in the call to ListTrafficPolicyInstances that produced the current response.",
        "type": "String",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "TrafficPolicyInstanceNameMarker": {
        "desc": "If IsTruncated is true, TrafficPolicyInstanceNameMarker is the name of the first traffic policy instance that Route 53 will return if you submit another ListTrafficPolicyInstances request.",
        "type": "String",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "TrafficPolicyInstances": {
        "desc": "A list that contains one TrafficPolicyInstance element for each traffic policy instance that matches the elements in the request.",
        "type": "Array of TrafficPolicyInstance objects",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "TrafficPolicyInstanceTypeMarker": {
        "desc": "If IsTruncated is true, TrafficPolicyInstanceTypeMarker is the DNS type of the resource record sets that are associated with the first traffic policy instance that Amazon Route 53 will return if you submit another ListTrafficPolicyInstances request.",
        "type": "String",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      }
    }
  },
  {
    "title": "ListTrafficPolicyInstancesByHostedZone",
    "req": {
      "id": {
        "desc": "The ID of the hosted zone that you want to list traffic policy instances for."
      },
      "maxitems": {
        "desc": "The maximum number of traffic policy instances to be included in the response body for this request. If you have more than MaxItems traffic policy instances, the value of the IsTruncated element in the response is true, and the values of HostedZoneIdMarker, TrafficPolicyInstanceNameMarker, and TrafficPolicyInstanceTypeMarker represent the first traffic policy instance that Amazon Route 53 will return if you submit another request."
      },
      "trafficpolicyinstancename": {
        "desc": "If the value of IsTruncated in the previous response is true, you have more traffic policy instances. To get more traffic policy instances, submit another ListTrafficPolicyInstances request. For the value of trafficpolicyinstancename, specify the value of TrafficPolicyInstanceNameMarker from the previous response, which is the name of the first traffic policy instance in the next group of traffic policy instances."
      },
      "trafficpolicyinstancetype": {
        "desc": "If the value of IsTruncated in the previous response is true, you have more traffic policy instances. To get more traffic policy instances, submit another ListTrafficPolicyInstances request. For the value of trafficpolicyinstancetype, specify the value of TrafficPolicyInstanceTypeMarker from the previous response, which is the type of the first traffic policy instance in the next group of traffic policy instances.",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      }
    },
    "res": {
      "ListTrafficPolicyInstancesByHostedZoneResponse": {
        "desc": "Root level tag for the ListTrafficPolicyInstancesByHostedZoneResponse parameters.",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "IsTruncated": {
        "desc": "A flag that indicates whether there are more traffic policy instances to be listed. If the response was truncated, you can get the next group of traffic policy instances by submitting another ListTrafficPolicyInstancesByHostedZone request and specifying the values of HostedZoneIdMarker, TrafficPolicyInstanceNameMarker, and TrafficPolicyInstanceTypeMarker in the corresponding request parameters.",
        "type": "Boolean",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "MaxItems": {
        "desc": "The value that you specified for the MaxItems parameter in the ListTrafficPolicyInstancesByHostedZone request that produced the current response.",
        "type": "String",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "TrafficPolicyInstanceNameMarker": {
        "desc": "If IsTruncated is true, TrafficPolicyInstanceNameMarker is the name of the first traffic policy instance in the next group of traffic policy instances.",
        "type": "String",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "TrafficPolicyInstances": {
        "desc": "A list that contains one TrafficPolicyInstance element for each traffic policy instance that matches the elements in the request.",
        "type": "Array of TrafficPolicyInstance objects",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "TrafficPolicyInstanceTypeMarker": {
        "desc": "If IsTruncated is true, TrafficPolicyInstanceTypeMarker is the DNS type of the resource record sets that are associated with the first traffic policy instance in the next group of traffic policy instances.",
        "type": "String",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      }
    }
  },
  {
    "title": "ListTrafficPolicyInstancesByPolicy",
    "req": {
      "hostedzoneid": {
        "desc": "If the value of IsTruncated in the previous response was true, you have more traffic policy instances. To get more traffic policy instances, submit another ListTrafficPolicyInstancesByPolicy request."
      },
      "id": {
        "desc": "The ID of the traffic policy for which you want to list traffic policy instances."
      },
      "maxitems": {
        "desc": "The maximum number of traffic policy instances to be included in the response body for this request. If you have more than MaxItems traffic policy instances, the value of the IsTruncated element in the response is true, and the values of HostedZoneIdMarker, TrafficPolicyInstanceNameMarker, and TrafficPolicyInstanceTypeMarker represent the first traffic policy instance that Amazon Route 53 will return if you submit another request."
      },
      "trafficpolicyinstancename": {
        "desc": "If the value of IsTruncated in the previous response was true, you have more traffic policy instances. To get more traffic policy instances, submit another ListTrafficPolicyInstancesByPolicy request."
      },
      "trafficpolicyinstancetype": {
        "desc": "If the value of IsTruncated in the previous response was true, you have more traffic policy instances. To get more traffic policy instances, submit another ListTrafficPolicyInstancesByPolicy request.",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "version": {
        "desc": "The version of the traffic policy for which you want to list traffic policy instances. The version must be associated with the traffic policy that is specified by TrafficPolicyId.",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      }
    },
    "res": {
      "ListTrafficPolicyInstancesByPolicyResponse": {
        "desc": "Root level tag for the ListTrafficPolicyInstancesByPolicyResponse parameters.",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "HostedZoneIdMarker": {
        "desc": "If IsTruncated is true, HostedZoneIdMarker is the ID of the hosted zone of the first traffic policy instance in the next group of traffic policy instances.",
        "type": "String",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "IsTruncated": {
        "desc": "A flag that indicates whether there are more traffic policy instances to be listed. If the response was truncated, you can get the next group of traffic policy instances by calling ListTrafficPolicyInstancesByPolicy again and specifying the values of the HostedZoneIdMarker, TrafficPolicyInstanceNameMarker, and TrafficPolicyInstanceTypeMarker elements in the corresponding request parameters.",
        "type": "Boolean",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "MaxItems": {
        "desc": "The value that you specified for the MaxItems parameter in the call to ListTrafficPolicyInstancesByPolicy that produced the current response.",
        "type": "String",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "TrafficPolicyInstanceNameMarker": {
        "desc": "If IsTruncated is true, TrafficPolicyInstanceNameMarker is the name of the first traffic policy instance in the next group of MaxItems traffic policy instances.",
        "type": "String",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "TrafficPolicyInstances": {
        "desc": "A list that contains one TrafficPolicyInstance element for each traffic policy instance that matches the elements in the request.",
        "type": "Array of TrafficPolicyInstance objects",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "TrafficPolicyInstanceTypeMarker": {
        "desc": "If IsTruncated is true, TrafficPolicyInstanceTypeMarker is the DNS type of the resource record sets that are associated with the first traffic policy instance in the next group of MaxItems traffic policy instances.",
        "type": "String",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      }
    }
  },
  {
    "title": "ListTrafficPolicyVersions",
    "req": {
      "Id": {
        "desc": "Specify the value of Id of the traffic policy for which you want to list all versions."
      },
      "maxitems": {
        "desc": "The maximum number of traffic policy versions that you want Amazon Route 53 to include in the response body for this request. If the specified traffic policy has more than MaxItems versions, the value of IsTruncated in the response is true, and the value of the TrafficPolicyVersionMarker element is the ID of the first version that Route 53 will return if you submit another request."
      },
      "trafficpolicyversion": {
        "desc": "For your first request to ListTrafficPolicyVersions, don't include the TrafficPolicyVersionMarker parameter."
      }
    },
    "res": {
      "ListTrafficPolicyVersionsResponse": {
        "desc": "Root level tag for the ListTrafficPolicyVersionsResponse parameters."
      },
      "IsTruncated": {
        "desc": "A flag that indicates whether there are more traffic policies to be listed. If the response was truncated, you can get the next group of traffic policies by submitting another ListTrafficPolicyVersions request and specifying the value of NextMarker in the marker parameter.",
        "type": "Boolean"
      },
      "MaxItems": {
        "desc": "The value that you specified for the maxitems parameter in the ListTrafficPolicyVersions request that produced the current response.",
        "type": "String"
      },
      "TrafficPolicies": {
        "desc": "A list that contains one TrafficPolicy element for each traffic policy version that is associated with the specified traffic policy.",
        "type": "Array of TrafficPolicy objects"
      },
      "TrafficPolicyVersionMarker": {
        "desc": "If IsTruncated is true, the value of TrafficPolicyVersionMarker identifies the first traffic policy that Amazon Route 53 will return if you submit another request. Call ListTrafficPolicyVersions again and specify the value of TrafficPolicyVersionMarker in the TrafficPolicyVersionMarker request parameter.",
        "type": "String"
      }
    }
  },
  {
    "title": "ListVPCAssociationAuthorizations",
    "req": {
      "Id": {
        "desc": "The ID of the hosted zone for which you want a list of VPCs that can be associated with the hosted zone."
      },
      "maxresults": {
        "desc": "Optional: An integer that specifies the maximum number of VPCs that you want Amazon Route 53 to return. If you don't specify a value for MaxResults, Route 53 returns up to 50 VPCs per page."
      },
      "nexttoken": {
        "desc": "Optional: If a response includes a NextToken element, there are more VPCs that can be associated with the specified hosted zone. To get the next page of results, submit another request, and include the value of NextToken from the response in the nexttoken parameter in another ListVPCAssociationAuthorizations request."
      }
    },
    "res": {
      "ListVPCAssociationAuthorizationsResponse": {
        "desc": "Root level tag for the ListVPCAssociationAuthorizationsResponse parameters."
      },
      "HostedZoneId": {
        "desc": "The ID of the hosted zone that you can associate the listed VPCs with.",
        "type": "String"
      },
      "NextToken": {
        "desc": "When the response includes a NextToken element, there are more VPCs that can be associated with the specified hosted zone. To get the next page of VPCs, submit another ListVPCAssociationAuthorizations request, and include the value of the NextToken element from the response in the nexttoken request parameter.",
        "type": "String"
      },
      "VPCs": {
        "desc": "The list of VPCs that are authorized to be associated with the specified hosted zone.",
        "type": "Array of VPC objects"
      }
    }
  },
  {
    "title": "TestDNSAnswer",
    "req": {
      "edns0clientsubnetip": {
        "desc": "If the resolver that you specified for resolverip supports EDNS0, specify the IPv4 or IPv6 address of a client in the applicable location, for example, 192.0.2.44 or 2001:db8:85a3::8a2e:370:7334."
      },
      "edns0clientsubnetmask": {
        "desc": "If you specify an IP address for edns0clientsubnetip, you can optionally specify the number of bits of the IP address that you want the checking tool to include in the DNS query. For example, if you specify 192.0.2.44 for edns0clientsubnetip and 24 for edns0clientsubnetmask, the checking tool will simulate a request from 192.0.2.0/24. The default value is 24 bits for IPv4 addresses and 64 bits for IPv6 addresses."
      },
      "hostedzoneid": {
        "desc": "The ID of the hosted zone that you want Amazon Route 53 to simulate a query for."
      },
      "recordname": {
        "desc": "The name of the resource record set that you want Amazon Route 53 to simulate a query for."
      },
      "recordtype": {
        "desc": "The type of the resource record set.",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "resolverip": {
        "desc": "If you want to simulate a request from a specific DNS resolver, specify the IP address for that resolver. If you omit this value, TestDnsAnswer uses the IP address of a DNS resolver in the AWS US East (N. Virginia) Region (us-east-1).",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      }
    },
    "res": {
      "TestDNSAnswerResponse": {
        "desc": "Root level tag for the TestDNSAnswerResponse parameters.",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "Nameserver": {
        "desc": "The Amazon Route 53 name server used to respond to the request.",
        "type": "String",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "Protocol": {
        "desc": "The protocol that Amazon Route 53 used to respond to the request, either UDP or TCP.",
        "type": "String",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "RecordData": {
        "desc": "A list that contains values that Amazon Route 53 returned for this resource record set.",
        "type": "Array of strings",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "RecordName": {
        "desc": "The name of the resource record set that you submitted a request for.",
        "type": "String",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "RecordType": {
        "desc": "The type of the resource record set that you submitted a request for.",
        "type": "String",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      },
      "ResponseCode": {
        "desc": "A code that indicates whether the request is valid or not. The most common response code is NOERROR, meaning that the request is valid. If the response is not valid, Amazon Route 53 returns a response code that describes the error. For a list of possible response codes, see DNS RCODES on the IANA website.",
        "type": "String",
        "values": [
          "soa",
          "a",
          "txt",
          "ns",
          "cname",
          "mx",
          "naptr",
          "ptr",
          "srv",
          "spf",
          "aaaa",
          "caa"
        ]
      }
    }
  },
  {
    "title": "UpdateHealthCheck",
    "req": {
      "HealthCheckId": {
        "desc": "The ID for the health check for which you want detailed information. When you created the health check, CreateHealthCheck returned the ID in the response, in the HealthCheckId element."
      }
    },
    "res": {
      "UpdateHealthCheckRequest": {
        "desc": "Root level tag for the UpdateHealthCheckRequest parameters."
      },
      "AlarmIdentifier": {
        "desc": "A complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether the specified health check is healthy.",
        "type": "AlarmIdentifier object"
      },
      "ChildHealthChecks": {
        "desc": "A complex type that contains one ChildHealthCheck element for each health check that you want to associate with a CALCULATED health check.",
        "type": "Array of strings"
      },
      "Disabled": {
        "desc": "Stops Route 53 from performing health checks. When you disable a health check, here's what happens:",
        "type": "Boolean"
      },
      "EnableSNI": {
        "desc": "Specify whether you want Amazon Route 53 to send the value of FullyQualifiedDomainName to the endpoint in the client_hello message during TLS negotiation. This allows the endpoint to respond to HTTPS health check requests with the applicable SSL/TLS certificate.",
        "type": "Boolean"
      },
      "FailureThreshold": {
        "desc": "The number of consecutive health checks that an endpoint must pass or fail for Amazon Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa. For more information, see How Amazon Route 53 Determines Whether an Endpoint Is Healthy in the Amazon Route 53 Developer Guide.",
        "type": "Integer"
      },
      "FullyQualifiedDomainName": {
        "desc": "Amazon Route 53 behavior depends on whether you specify a value for IPAddress.",
        "type": "String"
      },
      "HealthCheckVersion": {
        "desc": "A sequential counter that Amazon Route 53 sets to 1 when you create a health check and increments by 1 each time you update settings for the health check.",
        "type": "Long"
      },
      "HealthThreshold": {
        "desc": "The number of child health checks that are associated with a CALCULATED health that Amazon Route 53 must consider healthy for the CALCULATED health check to be considered healthy. To specify the child health checks that you want to associate with a CALCULATED health check, use the ChildHealthChecks and ChildHealthCheck elements.",
        "type": "Integer"
      },
      "InsufficientDataHealthStatus": {
        "desc": "When CloudWatch has insufficient data about the metric to determine the alarm state, the status that you want Amazon Route 53 to assign to the health check:",
        "type": "String",
        "values": [
          "healthy",
          "unhealthy",
          "lastknownstatus"
        ]
      },
      "Inverted": {
        "desc": "Specify whether you want Amazon Route 53 to invert the status of a health check, for example, to consider a health check unhealthy when it otherwise would be considered healthy.",
        "type": "Boolean",
        "values": [
          "healthy",
          "unhealthy",
          "lastknownstatus"
        ]
      },
      "IPAddress": {
        "desc": "The IPv4 or IPv6 IP address for the endpoint that you want Amazon Route 53 to perform health checks on. If you don't specify a value for IPAddress, Route 53 sends a DNS request to resolve the domain name that you specify in FullyQualifiedDomainName at the interval that you specify in RequestInterval. Using an IP address that is returned by DNS, Route 53 then checks the health of the endpoint.",
        "type": "String",
        "values": [
          "healthy",
          "unhealthy",
          "lastknownstatus"
        ]
      },
      "Port": {
        "desc": "The port on the endpoint that you want Amazon Route 53 to perform health checks on.",
        "type": "Integer",
        "values": [
          "healthy",
          "unhealthy",
          "lastknownstatus"
        ]
      },
      "Regions": {
        "desc": "A complex type that contains one Region element for each region that you want Amazon Route 53 health checkers to check the specified endpoint from.",
        "type": "Array of strings",
        "values": [
          "us-east-1",
          "us-west-1",
          "us-west-2",
          "eu-west-1",
          "ap-southeast-1",
          "ap-southeast-2",
          ""
        ]
      },
      "ResetElements": {
        "desc": "A complex type that contains one ResettableElementName element for each element that you want to reset to the default value. Valid values for ResettableElementName include the following:",
        "type": "Array of strings",
        "values": [
          "fullyqualifieddomainname",
          "regions",
          "resourcepath",
          "childhealthchecks"
        ]
      },
      "ResourcePath": {
        "desc": "The path that you want Amazon Route 53 to request when performing health checks. The path can be any value for which your endpoint will return an HTTP status code of 2xx or 3xx when the endpoint is healthy, for example the file /docs/route53-health-check.html. You can also include query string parameters, for example, /welcome.html?language=jp&login=y.",
        "type": "String",
        "values": [
          "fullyqualifieddomainname",
          "regions",
          "resourcepath",
          "childhealthchecks"
        ]
      },
      "SearchString": {
        "desc": "If the value of Type is HTTP_STR_MATCH or HTTPS_STR_MATCH, the string that you want Amazon Route 53 to search for in the response body from the specified resource. If the string appears in the response body, Route 53 considers the resource healthy. (You can't change the value of Type when you update a health check.)",
        "type": "String",
        "values": [
          "fullyqualifieddomainname",
          "regions",
          "resourcepath",
          "childhealthchecks"
        ]
      }
    }
  },
  {
    "title": "UpdateHostedZoneComment",
    "req": {
      "Id": {
        "desc": "The ID for the hosted zone that you want to update the comment for."
      }
    },
    "res": {
      "UpdateHostedZoneCommentRequest": {
        "desc": "Root level tag for the UpdateHostedZoneCommentRequest parameters."
      },
      "Comment": {
        "desc": "The new comment for the hosted zone. If you don't specify a value for Comment, Amazon Route 53 deletes the existing value of the Comment element, if any.",
        "type": "String"
      }
    }
  },
  {
    "title": "UpdateTrafficPolicyComment",
    "req": {
      "Id": {
        "desc": "The value of Id for the traffic policy that you want to update the comment for."
      },
      "Version": {
        "desc": "The value of Version for the traffic policy that you want to update the comment for."
      }
    },
    "res": {
      "UpdateTrafficPolicyCommentRequest": {
        "desc": "Root level tag for the UpdateTrafficPolicyCommentRequest parameters."
      },
      "Comment": {
        "desc": "The new comment for the specified traffic policy and version.",
        "type": "String"
      }
    }
  },
  {
    "title": "UpdateTrafficPolicyInstance",
    "req": {
      "Id": {
        "desc": "The ID of the traffic policy instance that you want to update."
      }
    },
    "res": {
      "UpdateTrafficPolicyInstanceRequest": {
        "desc": "Root level tag for the UpdateTrafficPolicyInstanceRequest parameters."
      },
      "TrafficPolicyId": {
        "desc": "The ID of the traffic policy that you want Amazon Route 53 to use to update resource record sets for the specified traffic policy instance.",
        "type": "String"
      },
      "TrafficPolicyVersion": {
        "desc": "The version of the traffic policy that you want Amazon Route 53 to use to update resource record sets for the specified traffic policy instance.",
        "type": "Integer"
      },
      "TTL": {
        "desc": "The TTL that you want Amazon Route 53 to assign to all of the updated resource record sets.",
        "type": "Long"
      }
    }
  }
]
