{
  "type": "Structure",
  "name": "CGSize",
  "desc": "A structure that contains width and height values.",
  "items": [
    {
      "name": "width",
      "type": "var",
      "datatype": "CGFloat",
      "desc": "A width value."
    },
    {
      "name": "height",
      "type": "var",
      "datatype": "CGFloat",
      "desc": "A height value."
    },
    {
      "name": "zero",
      "type": "static var",
      "datatype": "CGSize",
      "desc": "The size whose width and height are both zero."
    },
    {
      "name": "applying",
      "type": "func",
      "desc": "Returns the height and width resulting from a transformation of an existing height and width.",
      "params": [
        {
          "type": "CGAffineTransform"
        }
      ],
      "returnType": "CGSize"
    },
    {
      "name": "dictionaryRepresentation",
      "type": "var",
      "datatype": "CFDictionary",
      "desc": "Returns a dictionary representation of the specified size."
    },
    {
      "name": "debugDescription",
      "type": "var",
      "datatype": "String",
      "desc": "A textual representation of the size’s dimensions."
    },
    {
      "name": "customMirror",
      "type": "var",
      "datatype": "Mirror",
      "desc": "A representation of the size’s structure and display style for use in debugging."
    },
    {
      "name": "customPlaygroundQuickLook",
      "type": "var",
      "datatype": "PlaygroundQuickLook",
      "desc": "A representation of the size for use in Playgrounds."
    },
    {
      "name": "equalTo",
      "type": "func",
      "desc": "Returns whether two sizes are equal.",
      "params": [
        {
          "type": "CGSize"
        }
      ],
      "returnType": "Bool"
    },
    {
      "name": "animatableData",
      "type": "var",
      "datatype": "CGSize.AnimatableData"
    },
    {
      "name": "hashValue",
      "type": "var",
      "datatype": "Int"
    },
    {
      "name": "encode",
      "type": "func",
      "params": [
        {
          "name": "to",
          "type": "Encoder"
        }
      ]
    },
    {
      "name": "==",
      "type": "static func",
      "params": [
        {
          "type": "CGSize"
        },
        {
          "type": "CGSize"
        }
      ],
      "returnType": "Bool"
    }
  ]
}
