{
  "type": "Class",
  "name": "URLSessionStreamTask",
  "desc": "A URL session task that is stream-based.",
  "items": [
    {
      "name": "captureStreams",
      "type": "func",
      "desc": "Completes any already enqueued reads and writes, and then invokes the urlSession(_:streamTask:didBecome:outputStream:) delegate message.",
      "params": []
    },
    {
      "name": "closeRead",
      "type": "func",
      "desc": "Completes any enqueued reads and writes, and then closes the read side of the underlying socket.",
      "params": []
    },
    {
      "name": "closeWrite",
      "type": "func",
      "desc": "Completes any enqueued reads and writes, and then closes the write side of the underlying socket.",
      "params": []
    },
    {
      "name": "startSecureConnection",
      "type": "func",
      "desc": "Completes any enqueued reads and writes, and establishes a secure connection.",
      "params": []
    },
    {
      "name": "stopSecureConnection",
      "type": "func",
      "desc": "Completes any enqueued reads and writes, and closes the secure connection.",
      "params": []
    },
    {
      "name": "new",
      "type": "class func",
      "params": [],
      "returnType": "Self"
    },
    {
      "name": "streamTask",
      "type": "func",
      "desc": "Creates a task that establishes a bidirectional TCP/IP connection to a specified hostname and port.",
      "params": [
        {
          "name": "withHostName",
          "type": "String"
        },
        {
          "name": "port",
          "type": "Int"
        }
      ],
      "returnType": "URLSessionStreamTask"
    },
    {
      "name": "streamTask",
      "type": "func",
      "desc": "Creates a task that establishes a bidirectional TCP/IP connection using a specified network service.",
      "params": [
        {
          "name": "with",
          "type": "NetService"
        }
      ],
      "returnType": "URLSessionStreamTask"
    }
  ]
}
