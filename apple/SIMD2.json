{
  "type": "Generic Structure",
  "name": "SIMD2",
  "desc": "A vector of two scalar values.",
  "items": [
    {
      "name": "debugDescription",
      "type": "var",
      "datatype": "String",
      "desc": "A textual representation of this instance, suitable for debugging."
    },
    {
      "name": "description",
      "type": "var",
      "datatype": "String",
      "desc": "A textual description of the vector."
    },
    {
      "name": "hashValue",
      "type": "var",
      "datatype": "Int",
      "desc": "The hash value."
    },
    {
      "name": "indices",
      "type": "var",
      "datatype": "Range<Int>",
      "desc": "The valid indices for subscripting the vector."
    },
    {
      "name": "leadingZeroBitCount",
      "type": "var",
      "datatype": "SIMD2<Scalar>"
    },
    {
      "name": "nonzeroBitCount",
      "type": "var",
      "datatype": "SIMD2<Scalar>"
    },
    {
      "name": "scalarCount",
      "type": "var",
      "datatype": "Int",
      "desc": "The number of scalars in the vector."
    },
    {
      "name": "trailingZeroBitCount",
      "type": "var",
      "datatype": "SIMD2<Scalar>"
    },
    {
      "name": "x",
      "type": "var",
      "datatype": "Scalar",
      "desc": "The first element of the vector."
    },
    {
      "name": "y",
      "type": "var",
      "datatype": "Scalar",
      "desc": "The second element of the vector."
    },
    {
      "name": "one",
      "type": "static var",
      "datatype": "SIMD2<Scalar>",
      "desc": "A vector with one in all lanes."
    },
    {
      "name": "one",
      "type": "static var",
      "datatype": "SIMD2<Scalar>",
      "desc": "A vector with one in all lanes."
    },
    {
      "name": "scalarCount",
      "type": "static var",
      "datatype": "Int",
      "desc": "The number of scalars, or elements, in a vector of this type."
    },
    {
      "name": "zero",
      "type": "static var",
      "datatype": "SIMD2<Scalar>",
      "desc": "A vector with zero in all lanes."
    },
    {
      "name": "zero",
      "type": "static var",
      "datatype": "SIMD2<Scalar>",
      "desc": "A vector with zero in all lanes."
    },
    {
      "name": "addProduct",
      "type": "func",
      "params": [
        {
          "type": "Scalar"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ]
    },
    {
      "name": "addProduct",
      "type": "func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ]
    },
    {
      "name": "addProduct",
      "type": "func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ]
    },
    {
      "name": "addingProduct",
      "type": "func",
      "params": [
        {
          "type": "Scalar"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "addingProduct",
      "type": "func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "addingProduct",
      "type": "func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "clamp",
      "type": "func",
      "params": [
        {
          "name": "lowerBound",
          "type": "SIMD2<Scalar>"
        },
        {
          "name": "upperBound",
          "type": "SIMD2<Scalar>"
        }
      ]
    },
    {
      "name": "clamp",
      "type": "func",
      "params": [
        {
          "name": "lowerBound",
          "type": "SIMD2<Scalar>"
        },
        {
          "name": "upperBound",
          "type": "SIMD2<Scalar>"
        }
      ]
    },
    {
      "name": "clamped",
      "type": "func",
      "params": [
        {
          "name": "lowerBound",
          "type": "SIMD2<Scalar>"
        },
        {
          "name": "upperBound",
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "clamped",
      "type": "func",
      "params": [
        {
          "name": "lowerBound",
          "type": "SIMD2<Scalar>"
        },
        {
          "name": "upperBound",
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "encode",
      "type": "func",
      "desc": "Encodes the scalars of this vector into the given encoder in an unkeyed container.",
      "params": [
        {
          "name": "to",
          "type": "Encoder"
        }
      ]
    },
    {
      "name": "formSquareRoot",
      "type": "func",
      "params": []
    },
    {
      "name": "hash",
      "type": "func",
      "desc": "Hashes the elements of the vector using the given hasher.",
      "params": [
        {
          "name": "into",
          "type": "inout Hasher"
        }
      ]
    },
    {
      "name": "max",
      "type": "func",
      "desc": "Returns the greatest scalar in the vector.",
      "params": [],
      "returnType": "Scalar"
    },
    {
      "name": "max",
      "type": "func",
      "desc": "The greatest element in the vector.",
      "params": [],
      "returnType": "Scalar"
    },
    {
      "name": "min",
      "type": "func",
      "desc": "Returns the least scalar in the vector.",
      "params": [],
      "returnType": "Scalar"
    },
    {
      "name": "min",
      "type": "func",
      "desc": "The least element in the vector.",
      "params": [],
      "returnType": "Scalar"
    },
    {
      "name": "replace",
      "type": "func",
      "desc": "Replaces elements of this vector with other in the lanes where mask is true.",
      "params": [
        {
          "name": "with",
          "type": "Scalar"
        },
        {
          "name": "where",
          "type": "SIMDMask<SIMD2<Scalar.SIMDMaskScalar>>"
        }
      ]
    },
    {
      "name": "replace",
      "type": "func",
      "desc": "Replaces elements of this vector with elements of other in the lanes where mask is true.",
      "params": [
        {
          "name": "with",
          "type": "SIMD2<Scalar>"
        },
        {
          "name": "where",
          "type": "SIMDMask<SIMD2<Scalar.SIMDMaskScalar>>"
        }
      ]
    },
    {
      "name": "replacing",
      "type": "func",
      "desc": "Returns a copy of this vector, with elements other in the lanes where mask is true.",
      "params": [
        {
          "name": "with",
          "type": "Scalar"
        },
        {
          "name": "where",
          "type": "SIMDMask<SIMD2<Scalar.SIMDMaskScalar>>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "replacing",
      "type": "func",
      "desc": "Returns a copy of this vector, with elements replaced by elements of other in the lanes where mask is true.",
      "params": [
        {
          "name": "with",
          "type": "SIMD2<Scalar>"
        },
        {
          "name": "where",
          "type": "SIMDMask<SIMD2<Scalar.SIMDMaskScalar>>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "round",
      "type": "func",
      "params": [
        {
          "type": "FloatingPointRoundingRule"
        }
      ]
    },
    {
      "name": "rounded",
      "type": "func",
      "params": [
        {
          "type": "FloatingPointRoundingRule"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "squareRoot",
      "type": "func",
      "params": [],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "sum",
      "type": "func",
      "desc": "Returns the sum of the scalars in the vector.",
      "params": [],
      "returnType": "Scalar"
    },
    {
      "name": "wrappedSum",
      "type": "func",
      "desc": "Returns the sum of the scalars in the vector, computed with wrapping addition.",
      "params": [],
      "returnType": "Scalar"
    },
    {
      "name": "random",
      "type": "static func",
      "desc": "Returns a vector with random values from within the specified range in all lanes.",
      "params": [
        {
          "name": "in",
          "type": "ClosedRange<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "random",
      "type": "static func",
      "desc": "Returns a vector with random values from within the specified range in all lanes.",
      "params": [
        {
          "name": "in",
          "type": "Range<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "random",
      "type": "static func",
      "desc": "Returns a vector with random values from within the specified range in all lanes.",
      "params": [
        {
          "name": "in",
          "type": "ClosedRange<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "random",
      "type": "static func",
      "desc": "Returns a vector with random values from within the specified range in all lanes.",
      "params": [
        {
          "name": "in",
          "type": "Range<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "random<T>",
      "type": "static func",
      "desc": "Returns a vector with random values from within the specified range in all lanes, using the given generator as a source for randomness.",
      "params": [
        {
          "name": "in",
          "type": "ClosedRange<Scalar>"
        },
        {
          "name": "using",
          "type": "inout T"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "random<T>",
      "type": "static func",
      "desc": "Returns a vector with random values from within the specified range in all lanes, using the given generator as a source for randomness.",
      "params": [
        {
          "name": "in",
          "type": "Range<Scalar>"
        },
        {
          "name": "using",
          "type": "inout T"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "random<T>",
      "type": "static func",
      "desc": "Returns a vector with random values from within the specified range in all lanes, using the given generator as a source for randomness.",
      "params": [
        {
          "name": "in",
          "type": "ClosedRange<Scalar>"
        },
        {
          "name": "using",
          "type": "inout T"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "random<T>",
      "type": "static func",
      "desc": "Returns a vector with random values from within the specified range in all lanes, using the given generator as a source for randomness.",
      "params": [
        {
          "name": "in",
          "type": "Range<Scalar>"
        },
        {
          "name": "using",
          "type": "inout T"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "!=",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "Bool"
    },
    {
      "name": "%",
      "type": "static func",
      "params": [
        {
          "type": "Scalar"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "%",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "%",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "%=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ]
    },
    {
      "name": "%=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ]
    },
    {
      "name": "&",
      "type": "static func",
      "params": [
        {
          "type": "Scalar"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "&",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "&",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "&*",
      "type": "static func",
      "params": [
        {
          "type": "Scalar"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "&*",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "&*",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "&*=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ]
    },
    {
      "name": "&*=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ]
    },
    {
      "name": "&+",
      "type": "static func",
      "params": [
        {
          "type": "Scalar"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "&+",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "&+",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "&+=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ]
    },
    {
      "name": "&+=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ]
    },
    {
      "name": "&-",
      "type": "static func",
      "params": [
        {
          "type": "Scalar"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "&-",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "&-",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "&-=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ]
    },
    {
      "name": "&-=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ]
    },
    {
      "name": "&<<",
      "type": "static func",
      "params": [
        {
          "type": "Scalar"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "&<<",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "&<<",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "&<<=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ]
    },
    {
      "name": "&<<=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ]
    },
    {
      "name": "&=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ]
    },
    {
      "name": "&=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ]
    },
    {
      "name": "&>>",
      "type": "static func",
      "params": [
        {
          "type": "Scalar"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "&>>",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "&>>",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "&>>=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ]
    },
    {
      "name": "&>>=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ]
    },
    {
      "name": "*",
      "type": "static func",
      "params": [
        {
          "type": "Scalar"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "*",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "*",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "*=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ]
    },
    {
      "name": "*=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ]
    },
    {
      "name": "+",
      "type": "static func",
      "params": [
        {
          "type": "Scalar"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "+",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "+",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "+=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ]
    },
    {
      "name": "+=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ]
    },
    {
      "name": "-",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "-",
      "type": "static func",
      "params": [
        {
          "type": "Scalar"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "-",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "-",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "-=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ]
    },
    {
      "name": "-=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ]
    },
    {
      "name": ".!=",
      "type": "static func",
      "desc": "Returns a vector mask with the result of a pointwise inequality comparison.",
      "params": [
        {
          "type": "Scalar"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMDMask<SIMD2<Scalar.SIMDMaskScalar>>"
    },
    {
      "name": ".!=",
      "type": "static func",
      "desc": "Returns a vector mask with the result of a pointwise inequality comparison.",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ],
      "returnType": "SIMDMask<SIMD2<Scalar.SIMDMaskScalar>>"
    },
    {
      "name": ".!=",
      "type": "static func",
      "desc": "Returns a vector mask with the result of a pointwise inequality comparison.",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMDMask<SIMD2<Scalar.SIMDMaskScalar>>"
    },
    {
      "name": ".<",
      "type": "static func",
      "desc": "Returns a vector mask with the result of a pointwise less than comparison.",
      "params": [
        {
          "type": "Scalar"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMDMask<SIMD2<Scalar.SIMDMaskScalar>>"
    },
    {
      "name": ".<",
      "type": "static func",
      "desc": "Returns a vector mask with the result of a pointwise less than comparison.",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ],
      "returnType": "SIMDMask<SIMD2<Scalar.SIMDMaskScalar>>"
    },
    {
      "name": ".<",
      "type": "static func",
      "desc": "Returns a vector mask with the result of a pointwise less than comparison.",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMDMask<SIMD2<Scalar.SIMDMaskScalar>>"
    },
    {
      "name": ".<=",
      "type": "static func",
      "desc": "Returns a vector mask with the result of a pointwise less than or equal comparison.",
      "params": [
        {
          "type": "Scalar"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMDMask<SIMD2<Scalar.SIMDMaskScalar>>"
    },
    {
      "name": ".<=",
      "type": "static func",
      "desc": "Returns a vector mask with the result of a pointwise less than or equal comparison.",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ],
      "returnType": "SIMDMask<SIMD2<Scalar.SIMDMaskScalar>>"
    },
    {
      "name": ".<=",
      "type": "static func",
      "desc": "Returns a vector mask with the result of a pointwise less than or equal comparison.",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMDMask<SIMD2<Scalar.SIMDMaskScalar>>"
    },
    {
      "name": ".==",
      "type": "static func",
      "desc": "Returns a vector mask with the result of a pointwise equality comparison.",
      "params": [
        {
          "type": "Scalar"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMDMask<SIMD2<Scalar.SIMDMaskScalar>>"
    },
    {
      "name": ".==",
      "type": "static func",
      "desc": "Returns a vector mask with the result of a pointwise equality comparison.",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ],
      "returnType": "SIMDMask<SIMD2<Scalar.SIMDMaskScalar>>"
    },
    {
      "name": ".==",
      "type": "static func",
      "desc": "Returns a vector mask with the result of a pointwise equality comparison.",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMDMask<SIMD2<Scalar.SIMDMaskScalar>>"
    },
    {
      "name": ".>",
      "type": "static func",
      "desc": "Returns a vector mask with the result of a pointwise greater than comparison.",
      "params": [
        {
          "type": "Scalar"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMDMask<SIMD2<Scalar.SIMDMaskScalar>>"
    },
    {
      "name": ".>",
      "type": "static func",
      "desc": "Returns a vector mask with the result of a pointwise greater than comparison.",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ],
      "returnType": "SIMDMask<SIMD2<Scalar.SIMDMaskScalar>>"
    },
    {
      "name": ".>",
      "type": "static func",
      "desc": "Returns a vector mask with the result of a pointwise greater than comparison.",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMDMask<SIMD2<Scalar.SIMDMaskScalar>>"
    },
    {
      "name": ".>=",
      "type": "static func",
      "desc": "Returns a vector mask with the result of a pointwise greater than or equal comparison.",
      "params": [
        {
          "type": "Scalar"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMDMask<SIMD2<Scalar.SIMDMaskScalar>>"
    },
    {
      "name": ".>=",
      "type": "static func",
      "desc": "Returns a vector mask with the result of a pointwise greater than or equal comparison.",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ],
      "returnType": "SIMDMask<SIMD2<Scalar.SIMDMaskScalar>>"
    },
    {
      "name": ".>=",
      "type": "static func",
      "desc": "Returns a vector mask with the result of a pointwise greater than or equal comparison.",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMDMask<SIMD2<Scalar.SIMDMaskScalar>>"
    },
    {
      "name": "/",
      "type": "static func",
      "params": [
        {
          "type": "Scalar"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "/",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "/",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "/",
      "type": "static func",
      "params": [
        {
          "type": "Scalar"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "/",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "/",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "/=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ]
    },
    {
      "name": "/=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ]
    },
    {
      "name": "/=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ]
    },
    {
      "name": "/=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ]
    },
    {
      "name": "==",
      "type": "static func",
      "desc": "Returns a Boolean value indicating whether two vectors are equal.",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "Bool"
    },
    {
      "name": "^",
      "type": "static func",
      "params": [
        {
          "type": "Scalar"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "^",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "^",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "^=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ]
    },
    {
      "name": "^=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ]
    },
    {
      "name": "|",
      "type": "static func",
      "params": [
        {
          "type": "Scalar"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "|",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "|",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    },
    {
      "name": "|=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "Scalar"
        }
      ]
    },
    {
      "name": "|=",
      "type": "static func",
      "params": [
        {
          "type": "inout SIMD2<Scalar>"
        },
        {
          "type": "SIMD2<Scalar>"
        }
      ]
    },
    {
      "name": "~",
      "type": "static func",
      "params": [
        {
          "type": "SIMD2<Scalar>"
        }
      ],
      "returnType": "SIMD2<Scalar>"
    }
  ]
}
