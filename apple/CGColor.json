{
  "type": "Class",
  "name": "CGColor",
  "desc": "A set of components that define a color, with a color space specifying how to interpret them.",
  "items": [
    {
      "name": "copy",
      "type": "func",
      "desc": "Creates a copy of an existing color.",
      "params": [],
      "returnType": "CGColor?"
    },
    {
      "name": "copy",
      "type": "func",
      "desc": "Creates a copy of an existing color, substituting a new alpha value.",
      "params": [
        {
          "name": "alpha",
          "type": "CGFloat"
        }
      ],
      "returnType": "CGColor?"
    },
    {
      "name": "black",
      "type": "class var",
      "datatype": "CGColor",
      "desc": "The black color in the Generic gray color space."
    },
    {
      "name": "white",
      "type": "class var",
      "datatype": "CGColor",
      "desc": "The white color in the Generic gray color space."
    },
    {
      "name": "clear",
      "type": "class var",
      "datatype": "CGColor",
      "desc": "The clear color in the Generic gray color space."
    },
    {
      "name": "alpha",
      "type": "var",
      "datatype": "CGFloat",
      "desc": "Returns the value of the alpha component associated with a color."
    },
    {
      "name": "colorSpace",
      "type": "var",
      "datatype": "CGColorSpace?",
      "desc": "Returns the color space associated with a color."
    },
    {
      "name": "components",
      "type": "var",
      "datatype": "[CGFloat]?",
      "desc": "Returns the values of the color components (including alpha) associated with a color."
    },
    {
      "name": "numberOfComponents",
      "type": "var",
      "datatype": "Int",
      "desc": "Returns the number of color components (including alpha) associated with a color."
    },
    {
      "name": "pattern",
      "type": "var",
      "datatype": "CGPattern?",
      "desc": "Returns the pattern associated with a color in a pattern color space."
    },
    {
      "name": "conversionTRCSize",
      "type": "class let",
      "datatype": "CFString"
    },
    {
      "name": "converted",
      "type": "func",
      "desc": "Creates a new color in a different color space that matches the provided color.",
      "params": [
        {
          "name": "to",
          "type": "CGColorSpace"
        },
        {
          "name": "intent",
          "type": "CGColorRenderingIntent"
        },
        {
          "name": "options",
          "type": "CFDictionary?"
        }
      ],
      "returnType": "CGColor?"
    },
    {
      "name": "typeID",
      "type": "class var",
      "datatype": "CFTypeID",
      "desc": "Returns the Core Foundation type identifier for a color data type."
    },
    {
      "name": "conversionBlackPointCompensation",
      "type": "class let",
      "datatype": "CFString",
      "desc": "An option for whether to apply black point compensation when converting between color profiles."
    }
  ]
}
