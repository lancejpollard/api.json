{
  "type": "Structure",
  "name": "Int",
  "desc": "A signed integer value type.",
  "items": [
    {
      "name": "random",
      "type": "static func",
      "desc": "Returns a random value within the specified range.",
      "params": [
        {
          "name": "in",
          "type": "Range<Int>"
        }
      ],
      "returnType": "Int"
    },
    {
      "name": "random<T>",
      "type": "static func",
      "desc": "Returns a random value within the specified range, using the given generator as a source for randomness.",
      "params": [
        {
          "name": "in",
          "type": "Range<Int>"
        },
        {
          "name": "using",
          "type": "inout T"
        }
      ],
      "returnType": "Int"
    },
    {
      "name": "random",
      "type": "static func",
      "desc": "Returns a random value within the specified range.",
      "params": [
        {
          "name": "in",
          "type": "ClosedRange<Int>"
        }
      ],
      "returnType": "Int"
    },
    {
      "name": "random<T>",
      "type": "static func",
      "desc": "Returns a random value within the specified range, using the given generator as a source for randomness.",
      "params": [
        {
          "name": "in",
          "type": "ClosedRange<Int>"
        },
        {
          "name": "using",
          "type": "inout T"
        }
      ],
      "returnType": "Int"
    },
    {
      "name": "negate",
      "type": "func",
      "desc": "Replaces this value with its additive inverse.",
      "params": []
    },
    {
      "name": "isMultiple",
      "type": "func",
      "desc": "Returns true if this value is a multiple of the given value, and false otherwise.",
      "params": [
        {
          "name": "of",
          "type": "Int"
        }
      ],
      "returnType": "Bool"
    },
    {
      "name": "magnitude",
      "type": "var",
      "datatype": "UInt",
      "desc": "The magnitude of this value."
    },
    {
      "name": "abs<T>",
      "type": "func",
      "desc": "Returns the absolute value of the given number.",
      "params": [
        {
          "type": "T"
        }
      ],
      "returnType": "T"
    },
    {
      "name": "signum",
      "type": "func",
      "desc": "Returns -1 if this value is negative and 1 if it’s positive; otherwise, 0.",
      "params": [],
      "returnType": "Int"
    },
    {
      "name": "zero",
      "type": "static var",
      "datatype": "Int",
      "desc": "The zero value."
    },
    {
      "name": "min",
      "type": "static var",
      "datatype": "Int",
      "desc": "The minimum representable integer in this type."
    },
    {
      "name": "max",
      "type": "static var",
      "datatype": "Int",
      "desc": "The maximum representable integer in this type."
    },
    {
      "name": "isSigned",
      "type": "static var",
      "datatype": "Bool",
      "desc": "A Boolean value indicating whether this type is a signed integer type."
    },
    {
      "name": "byteSwapped",
      "type": "var",
      "datatype": "Int",
      "desc": "A representation of this integer with the byte order swapped."
    },
    {
      "name": "littleEndian",
      "type": "var",
      "datatype": "Int",
      "desc": "The little-endian representation of this integer."
    },
    {
      "name": "bigEndian",
      "type": "var",
      "datatype": "Int",
      "desc": "The big-endian representation of this integer."
    },
    {
      "name": "bitWidth",
      "type": "static var",
      "datatype": "Int",
      "desc": "The number of bits used for the underlying binary representation of values of this type."
    },
    {
      "name": "bitWidth",
      "type": "var",
      "datatype": "Int",
      "desc": "The number of bits in the binary representation of this value."
    },
    {
      "name": "nonzeroBitCount",
      "type": "var",
      "datatype": "Int",
      "desc": "The number of bits equal to 1 in this value’s binary representation."
    },
    {
      "name": "leadingZeroBitCount",
      "type": "var",
      "datatype": "Int",
      "desc": "The number of leading zeros in this value’s binary representation."
    },
    {
      "name": "trailingZeroBitCount",
      "type": "var",
      "datatype": "Int",
      "desc": "The number of trailing zeros in this value’s binary representation."
    },
    {
      "name": "words",
      "type": "var",
      "datatype": "Int.Words",
      "desc": "A collection containing the words of this value’s binary representation, in order from the least significant to most significant."
    },
    {
      "name": "encode",
      "type": "func",
      "desc": "Encodes this value into the given encoder.",
      "params": [
        {
          "name": "to",
          "type": "Encoder"
        }
      ]
    },
    {
      "name": "description",
      "type": "var",
      "datatype": "String",
      "desc": "A textual representation of this value."
    },
    {
      "name": "hashValue",
      "type": "var",
      "datatype": "Int",
      "desc": "The hash value."
    },
    {
      "name": "hash",
      "type": "func",
      "desc": "Hashes the essential components of this value by feeding them into the given hasher.",
      "params": [
        {
          "name": "into",
          "type": "inout Hasher"
        }
      ]
    },
    {
      "name": "customMirror",
      "type": "var",
      "datatype": "Mirror",
      "desc": "A mirror that reflects the Int instance."
    },
    {
      "name": "dataValue",
      "type": "var",
      "datatype": "MLDataValue",
      "desc": "The integer wrapped in a data value."
    },
    {
      "name": "dataValueType",
      "type": "static var",
      "datatype": "MLDataValue.ValueType",
      "desc": "The underlying type an integer uses when it wraps itself in a data value."
    },
    {
      "name": "distance",
      "type": "func",
      "desc": "Returns the distance from this value to the given value, expressed as a stride.",
      "params": [
        {
          "name": "to",
          "type": "Int"
        }
      ],
      "returnType": "Int"
    },
    {
      "name": "advanced",
      "type": "func",
      "desc": "Returns a value that is offset the specified distance from this value.",
      "params": [
        {
          "name": "by",
          "type": "Int"
        }
      ],
      "returnType": "Int"
    },
    {
      "name": "customPlaygroundQuickLook",
      "type": "var",
      "datatype": "_PlaygroundQuickLook",
      "desc": "A custom playground Quick Look for the Int instance."
    },
    {
      "name": "identifierValue",
      "type": "var",
      "datatype": "MLDataValue",
      "desc": "The integer value of the unique identifier wrapped in a data value."
    },
    {
      "name": "+=",
      "type": "static func",
      "desc": "Adds two values and stores the result in the left-hand-side variable.",
      "params": [
        {
          "type": "inout Int"
        },
        {
          "type": "Int"
        }
      ]
    },
    {
      "name": "-=",
      "type": "static func",
      "desc": "Subtracts the second value from the first and stores the difference in the left-hand-side variable.",
      "params": [
        {
          "type": "inout Int"
        },
        {
          "type": "Int"
        }
      ]
    }
  ]
}
