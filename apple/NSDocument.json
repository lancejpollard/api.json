{
  "type": "Class",
  "name": "NSDocument",
  "desc": "An abstract class that defines the interface for macOS documents.",
  "items": [
    {
      "name": "canConcurrentlyReadDocuments",
      "type": "class func",
      "desc": "Returns a Boolean value that indicates whether the receiver reads multiple documents of the given type concurrently.",
      "params": [
        {
          "name": "ofType",
          "type": "String"
        }
      ],
      "returnType": "Bool"
    },
    {
      "name": "read",
      "type": "func",
      "desc": "Sets the contents of this document by reading from a file or file package, of a specified type, located by a URL.",
      "params": [
        {
          "name": "from",
          "type": "URL"
        },
        {
          "name": "ofType",
          "type": "String"
        }
      ]
    },
    {
      "name": "read",
      "type": "func",
      "desc": "Sets the contents of this document by reading from a file wrapper of a specified type.",
      "params": [
        {
          "name": "from",
          "type": "FileWrapper"
        },
        {
          "name": "ofType",
          "type": "String"
        }
      ]
    },
    {
      "name": "read",
      "type": "func",
      "desc": "Sets the contents of this document by reading from data of a specified type.",
      "params": [
        {
          "name": "from",
          "type": "Data"
        },
        {
          "name": "ofType",
          "type": "String"
        }
      ]
    },
    {
      "name": "canAsynchronouslyWrite",
      "type": "func",
      "desc": "Returns whether the receiver can concurrently write to a file or file package located by a URL, that is formatted for a specific type, for a specific kind of save operation.",
      "params": [
        {
          "name": "to",
          "type": "URL"
        },
        {
          "name": "ofType",
          "type": "String"
        },
        {
          "name": "for",
          "type": "NSDocument.SaveOperationType"
        }
      ],
      "returnType": "Bool"
    },
    {
      "name": "unblockUserInteraction",
      "type": "func",
      "desc": "Unblocks the main thread during asynchronous saving.",
      "params": []
    },
    {
      "name": "write",
      "type": "func",
      "desc": "Writes the contents of the document to a file or file package located by a URL, that is formatted to a specified type.",
      "params": [
        {
          "name": "to",
          "type": "URL"
        },
        {
          "name": "ofType",
          "type": "String"
        }
      ]
    },
    {
      "name": "writeSafely",
      "type": "func",
      "desc": "Writes the contents of the document to a file or file package located by a URL.",
      "params": [
        {
          "name": "to",
          "type": "URL"
        },
        {
          "name": "ofType",
          "type": "String"
        },
        {
          "name": "for",
          "type": "NSDocument.SaveOperationType"
        }
      ]
    },
    {
      "name": "fileWrapper",
      "type": "func",
      "desc": "Creates and returns a file wrapper that contains the contents of the document, formatted to the specified type.",
      "params": [
        {
          "name": "ofType",
          "type": "String"
        }
      ],
      "returnType": "FileWrapper"
    },
    {
      "name": "data",
      "type": "func",
      "desc": "Creates and returns a data object that contains the contents of the document, formatted to a specified type.",
      "params": [
        {
          "name": "ofType",
          "type": "String"
        }
      ],
      "returnType": "Data"
    },
    {
      "name": "write",
      "type": "func",
      "desc": "Writes the contents of the document to a file or file package located by a URL.",
      "params": [
        {
          "name": "to",
          "type": "URL"
        },
        {
          "name": "ofType",
          "type": "String"
        },
        {
          "name": "for",
          "type": "NSDocument.SaveOperationType"
        },
        {
          "name": "originalContentsURL",
          "type": "URL?"
        }
      ]
    },
    {
      "name": "save",
      "type": "func",
      "desc": "Saves the contents of the document to a file or file package located by a URL, that is formatted to a specified type, for a particular kind of save operation.",
      "params": [
        {
          "name": "to",
          "type": "URL"
        },
        {
          "name": "ofType",
          "type": "String"
        },
        {
          "name": "for",
          "type": "NSDocument.SaveOperationType"
        },
        {
          "name": "delegate",
          "type": "Any?"
        },
        {
          "name": "didSave",
          "type": "Selector?"
        },
        {
          "name": "contextInfo",
          "type": "UnsafeMutableRawPointer?"
        }
      ]
    },
    {
      "name": "fileAttributesToWrite",
      "type": "func",
      "desc": "Returns the attributes to write to the file or file package at the specified URL, and targeting the specified type of save operation.",
      "params": [
        {
          "name": "to",
          "type": "URL"
        },
        {
          "name": "ofType",
          "type": "String"
        },
        {
          "name": "for",
          "type": "NSDocument.SaveOperationType"
        },
        {
          "name": "originalContentsURL",
          "type": "URL?"
        }
      ],
      "returnType": "[String : Any]"
    },
    {
      "name": "NSDocument.SaveOperationType",
      "type": "enum",
      "desc": "Constants for specifying the type of document-save operation to perform."
    },
    {
      "name": "fileURL",
      "type": "var",
      "datatype": "URL?",
      "desc": "The location of the document’s on-disk representation."
    },
    {
      "name": "isEntireFileLoaded",
      "type": "var",
      "datatype": "Bool",
      "desc": "A Boolean value that indicates whether the document’s file is completely loaded into memory."
    },
    {
      "name": "fileModificationDate",
      "type": "var",
      "datatype": "Date?",
      "desc": "The last-known modification date of the document’s on-disk representation."
    },
    {
      "name": "keepBackupFile",
      "type": "var",
      "datatype": "Bool",
      "desc": "A Boolean value that indicates whether the document archives previously saved versions of the document."
    },
    {
      "name": "isDraft",
      "type": "var",
      "datatype": "Bool",
      "desc": "A Boolean value that indicates whether the document is a draft that the user has not yet saved."
    },
    {
      "name": "fileType",
      "type": "var",
      "datatype": "String?",
      "desc": "The name of the document type, as specified in the app’s information property-list file."
    },
    {
      "name": "isDocumentEdited",
      "type": "var",
      "datatype": "Bool",
      "desc": "A Boolean value that indicates whether the document has unsaved changes."
    },
    {
      "name": "isInViewingMode",
      "type": "var",
      "datatype": "Bool",
      "desc": "A Boolean value that indicates whether the document is in read-only mode."
    },
    {
      "name": "readableTypes",
      "type": "class var",
      "datatype": "[String]",
      "desc": "Returns the types of data the receiver can read natively and any types filterable to that native type."
    },
    {
      "name": "writableTypes",
      "type": "class var",
      "datatype": "[String]",
      "desc": "Returns the types of data the receiver can write natively and any types filterable to that native type."
    },
    {
      "name": "isNativeType",
      "type": "class func",
      "desc": "Returns a Boolean value that indicates whether the document can read and write the data natively.",
      "params": [
        {
          "type": "String"
        }
      ],
      "returnType": "Bool"
    },
    {
      "name": "writableTypes",
      "type": "func",
      "desc": "Returns the names of the types to which this document can be saved for a specified kind of save operation.",
      "params": [
        {
          "name": "for",
          "type": "NSDocument.SaveOperationType"
        }
      ],
      "returnType": "[String]"
    },
    {
      "name": "fileNameExtension",
      "type": "func",
      "desc": "Returns a filename extension that can be appended to a base filename, for a specified file type and kind of save operation.",
      "params": [
        {
          "name": "forType",
          "type": "String"
        },
        {
          "name": "saveOperation",
          "type": "NSDocument.SaveOperationType"
        }
      ],
      "returnType": "String?"
    },
    {
      "name": "makeWindowControllers",
      "type": "func",
      "desc": "Creates the window controller objects that the document uses to display its content.",
      "params": []
    },
    {
      "name": "addWindowController",
      "type": "func",
      "desc": "Adds the specified window controller to the current document.",
      "params": [
        {
          "type": "NSWindowController"
        }
      ]
    },
    {
      "name": "removeWindowController",
      "type": "func",
      "desc": "Removes the specified window controller from the receiver’s array of window controllers.",
      "params": [
        {
          "type": "NSWindowController"
        }
      ]
    },
    {
      "name": "windowControllers",
      "type": "var",
      "datatype": "[NSWindowController]",
      "desc": "The document’s current window controllers."
    },
    {
      "name": "windowNibName",
      "type": "var",
      "datatype": "NSNib.Name?",
      "desc": "The name of the document’s sole nib file."
    },
    {
      "name": "windowControllerDidLoadNib",
      "type": "func",
      "desc": "Called after one of the document's window controllers loads its nib file.",
      "params": [
        {
          "type": "NSWindowController"
        }
      ]
    },
    {
      "name": "windowControllerWillLoadNib",
      "type": "func",
      "desc": "Called before one of the document's window controllers loads its nib file.",
      "params": [
        {
          "type": "NSWindowController"
        }
      ]
    },
    {
      "name": "shouldCloseWindowController",
      "type": "func",
      "desc": "Determines whether the system should close the document and its associated window.",
      "params": [
        {
          "type": "NSWindowController"
        },
        {
          "name": "delegate",
          "type": "Any?"
        },
        {
          "name": "shouldClose",
          "type": "Selector?"
        },
        {
          "name": "contextInfo",
          "type": "UnsafeMutableRawPointer?"
        }
      ]
    },
    {
      "name": "showWindows",
      "type": "func",
      "desc": "Displays all of the document’s windows, bringing them to the front and making them main or key as necessary.",
      "params": []
    },
    {
      "name": "setWindow",
      "type": "func",
      "desc": "Sets the window outlet of this document to the specified value.",
      "params": [
        {
          "type": "NSWindow?"
        }
      ]
    },
    {
      "name": "windowForSheet",
      "type": "var",
      "datatype": "NSWindow?",
      "desc": "Returns the document window to use as the parent of a document-modal sheet."
    },
    {
      "name": "displayName",
      "type": "var",
      "datatype": "String!",
      "desc": "The name of the document as displayed in the title bars of the document’s windows and in alert dialogs related to the document."
    },
    {
      "name": "defaultDraftName",
      "type": "func",
      "desc": "Returns the default draft name for the document subclass.",
      "params": [],
      "returnType": "String"
    },
    {
      "name": "encodeRestorableState",
      "type": "func",
      "desc": "Saves the interface-related state of the document.",
      "params": [
        {
          "name": "with",
          "type": "NSCoder"
        },
        {
          "name": "backgroundQueue",
          "type": "OperationQueue"
        }
      ]
    },
    {
      "name": "autosavesInPlace",
      "type": "class var",
      "datatype": "Bool",
      "desc": "Returns whether the receiver supports autosaving in place."
    },
    {
      "name": "autosavesDrafts",
      "type": "class var",
      "datatype": "Bool",
      "desc": "Returns whether the document subclass supports autosaving of drafts."
    },
    {
      "name": "preservesVersions",
      "type": "class var",
      "datatype": "Bool",
      "desc": "Returns whether the document subclass supports version management."
    },
    {
      "name": "autosavedContentsFileURL",
      "type": "var",
      "datatype": "URL?",
      "desc": "The location of the most recently autosaved document contents."
    },
    {
      "name": "autosavingFileType",
      "type": "var",
      "datatype": "String?",
      "desc": "Returns the document type to use for an autosave operation."
    },
    {
      "name": "autosavingIsImplicitlyCancellable",
      "type": "var",
      "datatype": "Bool",
      "desc": "Returns a Boolean value that indicates whether you can cancel an in-progress autosave operation."
    },
    {
      "name": "checkAutosavingSafety",
      "type": "func",
      "desc": "Returns a Boolean value that indicates whether it is safe to autosave document changes.",
      "params": []
    },
    {
      "name": "hasUnautosavedChanges",
      "type": "var",
      "datatype": "Bool",
      "desc": "A Boolean value that indicates whether the document has changes that have not been autosaved."
    },
    {
      "name": "scheduleAutosaving",
      "type": "func",
      "desc": "Schedules periodic autosaving for the purpose of crash protection.",
      "params": []
    },
    {
      "name": "autosave",
      "type": "func",
      "desc": "Autosaves the document’s contents to an appropriate location in the file system.",
      "params": [
        {
          "name": "withDelegate",
          "type": "Any?"
        },
        {
          "name": "didAutosave",
          "type": "Selector?"
        },
        {
          "name": "contextInfo",
          "type": "UnsafeMutableRawPointer?"
        }
      ]
    },
    {
      "name": "backupFileURL",
      "type": "var",
      "datatype": "URL?",
      "desc": "The URL for the document’s backup file that was created during an autosave operation."
    },
    {
      "name": "browseVersions",
      "type": "func",
      "desc": "Opens the Versions browser in the document’s main window.",
      "params": [
        {
          "type": "Any?"
        }
      ]
    },
    {
      "name": "isBrowsingVersions",
      "type": "var",
      "datatype": "Bool",
      "desc": "A Boolean value that indicates whether the document is currently displaying the Versions browser."
    },
    {
      "name": "moveToUbiquityContainer",
      "type": "func",
      "desc": "Moves the document to the user’s iCloud storage.",
      "params": [
        {
          "type": "Any?"
        }
      ]
    },
    {
      "name": "usesUbiquitousStorage",
      "type": "class var",
      "datatype": "Bool",
      "desc": "Returns whether the document object stores its contents in the user's iCloud document storage."
    },
    {
      "name": "undoManager",
      "type": "var",
      "datatype": "UndoManager?",
      "desc": "The object that the document uses to support undo/redo operations."
    },
    {
      "name": "hasUndoManager",
      "type": "var",
      "datatype": "Bool",
      "desc": "A Boolean value that indicates whether the document owns an undo manager object."
    },
    {
      "name": "updateChangeCount",
      "type": "func",
      "desc": "Updates the document's change count settings after a successful save operation.",
      "params": [
        {
          "name": "withToken",
          "type": "Any"
        },
        {
          "name": "for",
          "type": "NSDocument.SaveOperationType"
        }
      ]
    },
    {
      "name": "updateChangeCount",
      "type": "func",
      "desc": "Updates the receiver’s change count according to the given change type.",
      "params": [
        {
          "type": "NSDocument.ChangeType"
        }
      ]
    },
    {
      "name": "NSDocument.ChangeType",
      "type": "enum",
      "desc": "Values that indicate a document’s edit status."
    },
    {
      "name": "changeCountToken",
      "type": "func",
      "desc": "Returns an object that encapsulates the current record of document changes at the beginning of a save operation.",
      "params": [
        {
          "name": "for",
          "type": "NSDocument.SaveOperationType"
        }
      ],
      "returnType": "Any"
    },
    {
      "name": "encodeRestorableState",
      "type": "func",
      "desc": "Saves the interface-related state of the document.",
      "params": [
        {
          "name": "with",
          "type": "NSCoder"
        }
      ]
    },
    {
      "name": "restoreState",
      "type": "func",
      "desc": "Restores the interface-related state of the document.",
      "params": [
        {
          "name": "with",
          "type": "NSCoder"
        }
      ]
    },
    {
      "name": "restorableStateKeyPaths",
      "type": "class var",
      "datatype": "[String]",
      "desc": "Returns an array of key paths that represent the restorable attributes of the document."
    },
    {
      "name": "invalidateRestorableState",
      "type": "func",
      "desc": "Marks the document’s interface-related state as dirty.",
      "params": []
    },
    {
      "name": "runModalSavePanel",
      "type": "func",
      "desc": "Presents a modal Save panel to the user, then tries to save the document if the user approves the operation.",
      "params": [
        {
          "name": "for",
          "type": "NSDocument.SaveOperationType"
        },
        {
          "name": "delegate",
          "type": "Any?"
        },
        {
          "name": "didSave",
          "type": "Selector?"
        },
        {
          "name": "contextInfo",
          "type": "UnsafeMutableRawPointer?"
        }
      ]
    },
    {
      "name": "prepareSavePanel",
      "type": "func",
      "desc": "Tells the document to customize the specified Save panel.",
      "params": [
        {
          "type": "NSSavePanel"
        }
      ],
      "returnType": "Bool"
    },
    {
      "name": "shouldRunSavePanelWithAccessoryView",
      "type": "var",
      "datatype": "Bool",
      "desc": "A Boolean value that indicates whether the document’s Save panel displays a list of supported writable document types."
    },
    {
      "name": "fileTypeFromLastRunSavePanel",
      "type": "var",
      "datatype": "String?",
      "desc": "The file type that was last selected in the Save panel."
    },
    {
      "name": "fileNameExtensionWasHiddenInLastRunSavePanel",
      "type": "var",
      "datatype": "Bool",
      "desc": "A Boolean value that indicates whether the user chose to hide the document's filename extension."
    },
    {
      "name": "userActivity",
      "type": "var",
      "datatype": "NSUserActivity?",
      "desc": "An object that encapsulates a user activity supported by this document."
    },
    {
      "name": "updateUserActivityState",
      "type": "func",
      "desc": "Updates the state of the given user activity.",
      "params": [
        {
          "type": "NSUserActivity"
        }
      ]
    },
    {
      "name": "userActivityURLKey",
      "type": "class let",
      "datatype": "String",
      "desc": "The key that identifies the document associated with a user activity."
    },
    {
      "name": "validateUserInterfaceItem",
      "type": "func",
      "desc": "Validates the specified user interface item that the receiver manages.",
      "params": [
        {
          "type": "NSValidatedUserInterfaceItem"
        }
      ],
      "returnType": "Bool"
    },
    {
      "name": "printDocument",
      "type": "func",
      "desc": "Prints the receiver in response to the user choosing the Print menu command.",
      "params": [
        {
          "type": "Any?"
        }
      ]
    },
    {
      "name": "runPageLayout",
      "type": "func",
      "desc": "The action method invoked in the receiver as first responder when the user chooses the Page Setup menu command.",
      "params": [
        {
          "type": "Any?"
        }
      ]
    },
    {
      "name": "revertToSaved",
      "type": "func",
      "desc": "The action of the File menu item Revert in a document-based app.",
      "params": [
        {
          "type": "Any?"
        }
      ]
    },
    {
      "name": "save",
      "type": "func",
      "desc": "The action method invoked in the receiver as first responder when the user chooses the Save menu command.",
      "params": [
        {
          "type": "Any?"
        }
      ]
    },
    {
      "name": "saveAs",
      "type": "func",
      "desc": "The action method invoked in the receiver as first responder when the user chooses the Save As menu command.",
      "params": [
        {
          "type": "Any?"
        }
      ]
    },
    {
      "name": "saveTo",
      "type": "func",
      "desc": "The action method invoked in the receiver as first responder when the user chooses the Save To menu command.",
      "params": [
        {
          "type": "Any?"
        }
      ]
    },
    {
      "name": "save",
      "type": "func",
      "desc": "Saves the document and delivers the results to the provided delegate object.",
      "params": [
        {
          "name": "withDelegate",
          "type": "Any?"
        },
        {
          "name": "didSave",
          "type": "Selector?"
        },
        {
          "name": "contextInfo",
          "type": "UnsafeMutableRawPointer?"
        }
      ]
    },
    {
      "name": "canClose",
      "type": "func",
      "desc": "Determines whether to close the document, prompting the user as needed to choose a course of action.",
      "params": [
        {
          "name": "withDelegate",
          "type": "Any"
        },
        {
          "name": "shouldClose",
          "type": "Selector?"
        },
        {
          "name": "contextInfo",
          "type": "UnsafeMutableRawPointer?"
        }
      ]
    },
    {
      "name": "close",
      "type": "func",
      "desc": "Closes all of the document's windows and removes the document from its document controller.",
      "params": []
    },
    {
      "name": "revert",
      "type": "func",
      "desc": "Discards all unsaved document modifications and replaces the document’s contents by reading a file or file package located by a URL of a specified type.",
      "params": [
        {
          "name": "toContentsOf",
          "type": "URL"
        },
        {
          "name": "ofType",
          "type": "String"
        }
      ]
    },
    {
      "name": "duplicate",
      "type": "func",
      "desc": "Creates a new document whose contents are the same as the receiver and returns an error object if unsuccessful.",
      "params": [],
      "returnType": "NSDocument"
    },
    {
      "name": "duplicate",
      "type": "func",
      "desc": "Creates a copy of the receiving document in response to the user choosing Duplicate from the File menu.",
      "params": [
        {
          "type": "Any?"
        }
      ]
    },
    {
      "name": "duplicate",
      "type": "func",
      "desc": "Creates a new document whose contents are the same as the current document.",
      "params": [
        {
          "name": "withDelegate",
          "type": "Any?"
        },
        {
          "name": "didDuplicate",
          "type": "Selector?"
        },
        {
          "name": "contextInfo",
          "type": "UnsafeMutableRawPointer?"
        }
      ]
    },
    {
      "name": "rename",
      "type": "func",
      "desc": "Renames the current document in response to the user choosing the Rename menu item.",
      "params": [
        {
          "type": "Any?"
        }
      ]
    },
    {
      "name": "move",
      "type": "func",
      "desc": "Moves the document to a new location in response to the user choosing the Move To… menu item.",
      "params": [
        {
          "type": "Any?"
        }
      ]
    },
    {
      "name": "lock",
      "type": "func",
      "desc": "Locks the document in response to the user choosing the Lock menu item.",
      "params": [
        {
          "type": "Any?"
        }
      ]
    },
    {
      "name": "unlock",
      "type": "func",
      "desc": "Unlocks the document in response to the user choosing the Unlock menu item.",
      "params": [
        {
          "type": "Any?"
        }
      ]
    },
    {
      "name": "isLocked",
      "type": "var",
      "datatype": "Bool",
      "desc": "A Boolean value that indicates whether or not the file can be written to."
    },
    {
      "name": "printInfo",
      "type": "var",
      "datatype": "NSPrintInfo",
      "desc": "The printing information associated with the document."
    },
    {
      "name": "preparePageLayout",
      "type": "func",
      "desc": "Adds document-specific content to the Page Layout panel.",
      "params": [
        {
          "type": "NSPageLayout"
        }
      ],
      "returnType": "Bool"
    },
    {
      "name": "runModalPageLayout",
      "type": "func",
      "desc": "Runs the modal page layout panel with the receiver’s printing information object.",
      "params": [
        {
          "name": "with",
          "type": "NSPrintInfo"
        },
        {
          "name": "delegate",
          "type": "Any?"
        },
        {
          "name": "didRun",
          "type": "Selector?"
        },
        {
          "name": "contextInfo",
          "type": "UnsafeMutableRawPointer?"
        }
      ]
    },
    {
      "name": "runModalPrintOperation",
      "type": "func",
      "desc": "Runs the specified print operation modally.",
      "params": [
        {
          "type": "NSPrintOperation"
        },
        {
          "name": "delegate",
          "type": "Any?"
        },
        {
          "name": "didRun",
          "type": "Selector?"
        },
        {
          "name": "contextInfo",
          "type": "UnsafeMutableRawPointer?"
        }
      ]
    },
    {
      "name": "shouldChangePrintInfo",
      "type": "func",
      "desc": "Returns a Boolean value that indicates whether the document allows changes to the default printing information.",
      "params": [
        {
          "type": "NSPrintInfo"
        }
      ],
      "returnType": "Bool"
    },
    {
      "name": "pdfPrintOperation",
      "type": "var",
      "datatype": "NSPrintOperation",
      "desc": "A print operation you can use to create a PDF representation of the document’s current contents."
    },
    {
      "name": "saveToPDF",
      "type": "func",
      "desc": "Exports a PDF representation of the document’s current contents.",
      "params": [
        {
          "type": "Any?"
        }
      ]
    },
    {
      "name": "allowsDocumentSharing",
      "type": "var",
      "datatype": "Bool",
      "desc": "A Boolean value that indicates whether the document is shareable from the standard Share menu."
    },
    {
      "name": "prepare",
      "type": "func",
      "desc": "Perform any custom setup associated with a sharing service picker.",
      "params": [
        {
          "type": "NSSharingServicePicker"
        }
      ]
    },
    {
      "name": "handleClose",
      "type": "func",
      "desc": "Handles the Close AppleScript command by attempting to close the document.",
      "params": [
        {
          "type": "NSCloseCommand"
        }
      ],
      "returnType": "Any?"
    },
    {
      "name": "handlePrint",
      "type": "func",
      "desc": "Handles the Print AppleScript command by attempting to print the document.",
      "params": [
        {
          "type": "NSScriptCommand"
        }
      ],
      "returnType": "Any?"
    },
    {
      "name": "handleSave",
      "type": "func",
      "desc": "Handles the Save AppleScript command by attempting to save the document.",
      "params": [
        {
          "type": "NSScriptCommand"
        }
      ],
      "returnType": "Any?"
    },
    {
      "name": "objectSpecifier",
      "type": "var",
      "datatype": "NSScriptObjectSpecifier",
      "desc": "Returns the object specifier that represents the document."
    },
    {
      "name": "lastComponentOfFileName",
      "type": "var",
      "datatype": "String",
      "desc": "The name of the document seen by the user in AppleScript."
    },
    {
      "name": "presentError",
      "type": "func",
      "desc": "Presents an error alert to the user as a modal panel.",
      "params": [
        {
          "type": "Error"
        },
        {
          "name": "modalFor",
          "type": "NSWindow"
        },
        {
          "name": "delegate",
          "type": "Any?"
        },
        {
          "name": "didPresent",
          "type": "Selector?"
        },
        {
          "name": "contextInfo",
          "type": "UnsafeMutableRawPointer?"
        }
      ]
    },
    {
      "name": "presentError",
      "type": "func",
      "desc": "Presents an error alert to the user as a modal panel.",
      "params": [
        {
          "type": "Error"
        }
      ],
      "returnType": "Bool"
    },
    {
      "name": "willPresentError",
      "type": "func",
      "desc": "Called when the receiver is about to present an error.",
      "params": [
        {
          "type": "Error"
        }
      ],
      "returnType": "Error"
    },
    {
      "name": "willNotPresentError",
      "type": "func",
      "desc": "Confirms that the error object is not to be presented to the user and the error cannot be recovered from, so cleanup can be done.",
      "params": [
        {
          "type": "Error"
        }
      ]
    }
  ]
}
