{
  "type": "Class",
  "name": "NSPopover",
  "desc": "A means to display additional content related to existing content on the screen.",
  "items": [
    {
      "name": "contentViewController",
      "type": "var",
      "datatype": "NSViewController?",
      "desc": "The view controller that manages the content of the popover."
    },
    {
      "name": "behavior",
      "type": "var",
      "datatype": "NSPopover.Behavior",
      "desc": "Specifies the behavior of the popover."
    },
    {
      "name": "show",
      "type": "func",
      "desc": "Shows the popover anchored to the specified view.",
      "params": [
        {
          "name": "relativeTo",
          "type": "NSRect"
        },
        {
          "name": "of",
          "type": "NSView"
        },
        {
          "name": "preferredEdge",
          "type": "NSRectEdge"
        }
      ]
    },
    {
      "name": "positioningRect",
      "type": "var",
      "datatype": "NSRect",
      "desc": "The rectangle within the positioning view relative to which the popover should be positioned."
    },
    {
      "name": "appearance",
      "type": "var",
      "datatype": "NSAppearance?",
      "desc": "The appearance of the popover."
    },
    {
      "name": "effectiveAppearance",
      "type": "var",
      "datatype": "NSAppearance",
      "desc": "The appearance that will be used when the popover is displayed onscreen."
    },
    {
      "name": "animates",
      "type": "var",
      "datatype": "Bool",
      "desc": "Specifies if the popover is to be animated."
    },
    {
      "name": "contentSize",
      "type": "var",
      "datatype": "NSSize",
      "desc": "The content size of the popover."
    },
    {
      "name": "isShown",
      "type": "var",
      "datatype": "Bool",
      "desc": "The display state of the popover."
    },
    {
      "name": "isDetached",
      "type": "var",
      "datatype": "Bool",
      "desc": "A Boolean value that indicates whether the window created by a popover's detachment is automatically created."
    },
    {
      "name": "performClose",
      "type": "func",
      "desc": "Attempts to close the popover.",
      "params": [
        {
          "type": "Any?"
        }
      ]
    },
    {
      "name": "close",
      "type": "func",
      "desc": "Forces the popover to close without consulting its delegate.",
      "params": []
    },
    {
      "name": "delegate",
      "type": "var",
      "datatype": "NSPopoverDelegate?",
      "desc": "The delegate of the popover."
    },
    {
      "name": "NSPopover.Behavior",
      "type": "enum",
      "desc": "The appearance and disappearance behavior of a popover."
    },
    {
      "name": "closeReasonUserInfoKey",
      "type": "class let",
      "datatype": "String",
      "desc": "The userInfo key containing the reason for the willCloseNotification."
    },
    {
      "name": "NSPopover.Appearance",
      "type": "enum",
      "desc": "The set of predefined appearances for a popover."
    },
    {
      "name": "willShowNotification",
      "type": "class let",
      "datatype": "NSNotification.Name",
      "desc": "Sent before the popover is shown."
    },
    {
      "name": "didShowNotification",
      "type": "class let",
      "datatype": "NSNotification.Name",
      "desc": "Sent after the popover has finished animating onscreen."
    },
    {
      "name": "willCloseNotification",
      "type": "class let",
      "datatype": "NSNotification.Name",
      "desc": "Sent before the popover is closed."
    },
    {
      "name": "didCloseNotification",
      "type": "class let",
      "datatype": "NSNotification.Name",
      "desc": "Sent after the popover has finished animating offscreen."
    }
  ]
}
