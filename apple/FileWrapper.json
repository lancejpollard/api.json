{
  "type": "Class",
  "name": "FileWrapper",
  "desc": "A representation of a node (a file, directory, or symbolic link) in the file system.",
  "items": [
    {
      "name": "isRegularFile",
      "type": "var",
      "datatype": "Bool",
      "desc": "This property contains a boolean value that indicates whether the file wrapper object is a regular-file."
    },
    {
      "name": "isDirectory",
      "type": "var",
      "datatype": "Bool",
      "desc": "This property contains a boolean value indicating whether the file wrapper is a directory file wrapper."
    },
    {
      "name": "isSymbolicLink",
      "type": "var",
      "datatype": "Bool",
      "desc": "A boolean that indicates whether the file wrapper object is a symbolic-link file wrapper."
    },
    {
      "name": "fileWrappers",
      "type": "var",
      "datatype": "[String",
      "desc": "The file wrappers contained by a directory file wrapper."
    },
    {
      "name": "addFileWrapper",
      "type": "func",
      "desc": "Adds a child file wrapper to the receiver, which must be a directory file wrapper.",
      "params": [
        {
          "type": "FileWrapper"
        }
      ],
      "returnType": "String"
    },
    {
      "name": "removeFileWrapper",
      "type": "func",
      "desc": "Removes a child file wrapper from the receiver, which must be a directory file wrapper.",
      "params": [
        {
          "type": "FileWrapper"
        }
      ]
    },
    {
      "name": "addFile",
      "type": "func",
      "desc": "Creates a file wrapper from a given file-system node and adds it to the receiver, which must be a directory file wrapper.",
      "params": [
        {
          "name": "withPath",
          "type": "String"
        }
      ],
      "returnType": "String"
    },
    {
      "name": "addRegularFile",
      "type": "func",
      "desc": "Creates a regular-file file wrapper with the given contents and adds it to the receiver, which must be a directory file wrapper.",
      "params": [
        {
          "name": "withContents",
          "type": "Data"
        },
        {
          "name": "preferredFilename",
          "type": "String"
        }
      ],
      "returnType": "String"
    },
    {
      "name": "addSymbolicLink",
      "type": "func",
      "desc": "Creates a symbolic-link file wrapper pointing to a given file-system node and adds it to the receiver, which must be a directory file wrapper.",
      "params": [
        {
          "name": "withDestination",
          "type": "String"
        },
        {
          "name": "preferredFilename",
          "type": "String"
        }
      ],
      "returnType": "String"
    },
    {
      "name": "keyForChildFileWrapper",
      "type": "func",
      "desc": "Returns the dictionary key used by a directory to identify a given file wrapper.",
      "params": [
        {
          "type": "FileWrapper"
        }
      ],
      "returnType": "String?"
    },
    {
      "name": "symbolicLinkDestination",
      "type": "func",
      "desc": "Provides the pathname referenced by the file wrapper object, which must be a symbolic-link file wrapper.",
      "params": [],
      "returnType": "String"
    },
    {
      "name": "symbolicLinkDestinationURL",
      "type": "var",
      "datatype": "URL?",
      "desc": "The URL referenced by the file wrapper object, which must be a symbolic-link file wrapper."
    },
    {
      "name": "needsToBeUpdated",
      "type": "func",
      "desc": "Indicates whether the file wrapper needs to be updated to match a given file-system node.",
      "params": [
        {
          "name": "fromPath",
          "type": "String"
        }
      ],
      "returnType": "Bool"
    },
    {
      "name": "matchesContents",
      "type": "func",
      "desc": "Indicates whether the contents of a file wrapper matches a directory, regular file, or symbolic link on disk.",
      "params": [
        {
          "name": "of",
          "type": "URL"
        }
      ],
      "returnType": "Bool"
    },
    {
      "name": "update",
      "type": "func",
      "desc": "Updates the file wrapper to match a given file-system node.",
      "params": [
        {
          "name": "fromPath",
          "type": "String"
        }
      ],
      "returnType": "Bool"
    },
    {
      "name": "read",
      "type": "func",
      "desc": "Recursively rereads the entire contents of a file wrapper from the specified location on disk.",
      "params": [
        {
          "name": "from",
          "type": "URL"
        },
        {
          "name": "options",
          "type": "FileWrapper.ReadingOptions"
        }
      ]
    },
    {
      "name": "serializedRepresentation",
      "type": "var",
      "datatype": "Data?",
      "desc": "The contents of the file wrapper as an opaque data object."
    },
    {
      "name": "filename",
      "type": "var",
      "datatype": "String?",
      "desc": "The filename of the file wrapper object"
    },
    {
      "name": "preferredFilename",
      "type": "var",
      "datatype": "String?",
      "desc": "The preferred filename for the file wrapper object."
    },
    {
      "name": "fileAttributes",
      "type": "var",
      "datatype": "[String",
      "desc": "A dictionary of file attributes."
    },
    {
      "name": "regularFileContents",
      "type": "var",
      "datatype": "Data?",
      "desc": "The contents of the file-system node associated with a regular-file file wrapper."
    },
    {
      "name": "write",
      "type": "func",
      "desc": "Writes a file wrapperâ€™s contents to a given file-system node.",
      "params": [
        {
          "name": "toFile",
          "type": "String"
        },
        {
          "name": "atomically",
          "type": "Bool"
        },
        {
          "name": "updateFilenames",
          "type": "Bool"
        }
      ],
      "returnType": "Bool"
    },
    {
      "name": "write",
      "type": "func",
      "desc": "Recursively writes the entire contents of a file wrapper to a given file-system URL.",
      "params": [
        {
          "name": "to",
          "type": "URL"
        },
        {
          "name": "options",
          "type": "FileWrapper.WritingOptions"
        },
        {
          "name": "originalContentsURL",
          "type": "URL?"
        }
      ]
    },
    {
      "name": "icon",
      "type": "var",
      "datatype": "NSImage?",
      "desc": "The icon that represents the file wrapper."
    }
  ]
}
