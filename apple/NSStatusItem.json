{
  "type": "Class",
  "name": "NSStatusItem",
  "desc": "An individual element displayed in the system menu bar.",
  "items": [
    {
      "name": "statusBar",
      "type": "var",
      "datatype": "NSStatusBar?",
      "desc": "The status bar that displays the status item."
    },
    {
      "name": "behavior",
      "type": "var",
      "datatype": "NSStatusItem.Behavior",
      "desc": "The set of allowed behaviors for the status item."
    },
    {
      "name": "button",
      "type": "var",
      "datatype": "NSStatusBarButton?",
      "desc": "The button displayed in the status bar."
    },
    {
      "name": "menu",
      "type": "var",
      "datatype": "NSMenu?",
      "desc": "The pull-down menu displayed when the user clicks the status item."
    },
    {
      "name": "isVisible",
      "type": "var",
      "datatype": "Bool",
      "desc": "A Boolean value indicating if the menu bar currently displays the status item."
    },
    {
      "name": "length",
      "type": "var",
      "datatype": "CGFloat",
      "desc": "The amount of space in the status bar that should be allocated to the status item."
    },
    {
      "name": "squareLength",
      "type": "class let",
      "datatype": "CGFloat",
      "desc": "A status item length that is equal to the status bar’s thickness."
    },
    {
      "name": "variableLength",
      "type": "class let",
      "datatype": "CGFloat",
      "desc": "A status item length that dynamically adjusts to the width of its contents."
    },
    {
      "name": "autosaveName",
      "type": "var",
      "datatype": "NSStatusItem.AutosaveName!",
      "desc": "A unique name for saving and restoring information about a status item."
    },
    {
      "name": "isEnabled",
      "type": "var",
      "datatype": "Bool",
      "desc": "A Boolean that indicates whether the status item is enabled to respond to clicks."
    },
    {
      "name": "target",
      "type": "var",
      "datatype": "AnyObject?",
      "desc": "The target object to which the status item’s action message is sent when the status item is clicked."
    },
    {
      "name": "action",
      "type": "var",
      "datatype": "Selector?",
      "desc": "The selector that is sent to the status item’s target when the status item is clicked."
    },
    {
      "name": "doubleAction",
      "type": "var",
      "datatype": "Selector?",
      "desc": "The selector that is sent to the status item’s target when the status item is double-clicked."
    },
    {
      "name": "sendAction",
      "type": "func",
      "desc": "Sets the conditions on which the status item sends action messages to its target.",
      "params": [
        {
          "name": "on",
          "type": "NSEvent.EventTypeMask"
        }
      ],
      "returnType": "Int"
    },
    {
      "name": "popUpMenu",
      "type": "func",
      "desc": "Displays a menu under a custom status bar item.",
      "params": [
        {
          "type": "NSMenu"
        }
      ]
    },
    {
      "name": "title",
      "type": "var",
      "datatype": "String?",
      "desc": "The string that is displayed at the status item’s position in the status bar."
    },
    {
      "name": "attributedTitle",
      "type": "var",
      "datatype": "NSAttributedString?",
      "desc": "The attributed string that is displayed at the status item’s position in the status bar."
    },
    {
      "name": "image",
      "type": "var",
      "datatype": "NSImage?",
      "desc": "The image that is displayed at the status item’s position in the status bar."
    },
    {
      "name": "alternateImage",
      "type": "var",
      "datatype": "NSImage?",
      "desc": "The alternate image to be displayed when a status bar item is highlighted."
    },
    {
      "name": "highlightMode",
      "type": "var",
      "datatype": "Bool",
      "desc": "A Boolean that indicates whether the status item is highlighted when it is clicked."
    },
    {
      "name": "toolTip",
      "type": "var",
      "datatype": "String?",
      "desc": "The tool tip string that is displayed when the cursor pauses over the status item."
    },
    {
      "name": "view",
      "type": "var",
      "datatype": "NSView?",
      "desc": "The custom view that is displayed at the status item’s position in the status bar."
    },
    {
      "name": "drawStatusBarBackground",
      "type": "func",
      "desc": "Draws the menu background pattern for a custom status-bar item in regular or highlight pattern.",
      "params": [
        {
          "name": "in",
          "type": "NSRect"
        },
        {
          "name": "withHighlight",
          "type": "Bool"
        }
      ]
    }
  ]
}
