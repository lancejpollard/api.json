{
  "path": "java.util",
  "name": "Locale",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Char",
      "code": "PRIVATE_USE_EXTENSION",
      "desc": "The key for the private use extension ('x')."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Char",
      "code": "UNICODE_LOCALE_EXTENSION",
      "desc": "The key for Unicode locale extension ('u')."
    },
    {
      "type": "ctor",
      "ctor": "<init>(language: String, country: String, variant: String)\n            Construct a locale from language, country and variant."
    },
    {
      "type": "ctor",
      "ctor": "<init>(language: String, country: String)\n            Construct a locale from language and country."
    },
    {
      "type": "ctor",
      "ctor": "<init>(language: String)\n            Construct a locale from a language code."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Any",
      "code": "clone()",
      "desc": "Overrides Cloneable."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Returns true if this Locale is equal to another object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "MutableList",
      "code": "filter(priorityList: MutableList<Locale.LanguageRange!>, locales: MutableCollection<Locale!>, mode: Locale.FilteringMode)",
      "desc": "Returns a list of matching Locale instances using the filtering mechanism defined in RFC 4647.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "MutableList",
      "code": "filter(priorityList: MutableList<Locale.LanguageRange!>, locales: MutableCollection<Locale!>)",
      "desc": "Returns a list of matching Locale instances using the filtering mechanism defined in RFC 4647.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "MutableList",
      "code": "filterTags(priorityList: MutableList<Locale.LanguageRange!>, tags: MutableCollection<String!>, mode: Locale.FilteringMode)",
      "desc": "Returns a list of matching languages tags using the basic filtering mechanism defined in RFC 4647.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "MutableList",
      "code": "filterTags(priorityList: MutableList<Locale.LanguageRange!>, tags: MutableCollection<String!>)",
      "desc": "Returns a list of matching languages tags using the basic filtering mechanism defined in RFC 4647.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Locale",
      "code": "forLanguageTag(languageTag: String)",
      "desc": "Returns a locale for the specified IETF BCP 47 language tag string."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Array",
      "code": "getAvailableLocales()",
      "desc": "Returns an array of all installed locales.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getCountry()",
      "desc": "Returns the country/region code for this locale, which should either be the empty string, an uppercase ISO 3166 2-letter code, or a UN M."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Locale",
      "code": "getDefault()",
      "desc": "Gets the current value of the default locale for this instance of the Java Virtual Machine."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Locale",
      "code": "getDefault(category: Locale.Category)",
      "desc": "Gets the current value of the default locale for the specified Category for this instance of the Java Virtual Machine."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getDisplayCountry()",
      "desc": "Returns a name for the locale's country that is appropriate for display to the user."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getDisplayCountry(locale: Locale)",
      "desc": "Returns the name of this locale's country, localized to locale."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getDisplayLanguage()",
      "desc": "Returns a name for the locale's language that is appropriate for display to the user."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getDisplayLanguage(locale: Locale)",
      "desc": "Returns the name of this locale's language, localized to locale."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getDisplayName()",
      "desc": "Returns a name for the locale that is appropriate for display to the user."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getDisplayName(locale: Locale)",
      "desc": "Returns this locale's language name, country name, and variant, localized to locale."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getDisplayScript()",
      "desc": "Returns a name for the the locale's script that is appropriate for display to the user."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getDisplayScript(inLocale: Locale)",
      "desc": "Returns a name for the locale's script that is appropriate for display to the user."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getDisplayVariant()",
      "desc": "Returns a name for the locale's variant code that is appropriate for display to the user."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getDisplayVariant(inLocale: Locale)",
      "desc": "Returns a name for the locale's variant code that is appropriate for display to the user."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getExtension(key: Char)",
      "desc": "Returns the extension (or private use) value associated with the specified key, or null if there is no extension associated with the key.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MutableSet",
      "code": "getExtensionKeys()",
      "desc": "Returns the set of extension keys associated with this locale, or the empty set if it has no extensions.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getISO3Country()",
      "desc": "Returns a three-letter abbreviation for this locale's country."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getISO3Language()",
      "desc": "Returns a three-letter abbreviation of this locale's language."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Array",
      "code": "getISOCountries()",
      "desc": "Returns a list of all 2-letter country codes defined in ISO 3166.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Array",
      "code": "getISOLanguages()",
      "desc": "Returns a list of all 2-letter language codes defined in ISO 639.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getLanguage()",
      "desc": "Returns the language code of this Locale."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getScript()",
      "desc": "Returns the script for this locale, which should either be the empty string or an ISO 15924 4-letter script code."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MutableSet",
      "code": "getUnicodeLocaleAttributes()",
      "desc": "Returns the set of unicode locale attributes associated with this locale, or the empty set if it has no attributes.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MutableSet",
      "code": "getUnicodeLocaleKeys()",
      "desc": "Returns the set of Unicode locale keys defined by this locale, or the empty set if this locale has none.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getUnicodeLocaleType(key: String)",
      "desc": "Returns the Unicode locale type associated with the specified Unicode locale key for this locale.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getVariant()",
      "desc": "Returns the variant code for this locale."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hasExtensions()",
      "desc": "Returns true if this Locale has any  extensions."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Override hashCode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Locale",
      "code": "lookup(priorityList: MutableList<Locale.LanguageRange!>, locales: MutableCollection<Locale!>)",
      "desc": "Returns a Locale instance for the best-matching language tag using the lookup mechanism defined in RFC 4647.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "String",
      "code": "lookupTag(priorityList: MutableList<Locale.LanguageRange!>, tags: MutableCollection<String!>)",
      "desc": "Returns the best-matching language tag using the lookup mechanism defined in RFC 4647.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Unit",
      "code": "setDefault(newLocale: Locale)",
      "desc": "Sets the default locale for this instance of the Java Virtual Machine."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Unit",
      "code": "setDefault(category: Locale.Category, newLocale: Locale)",
      "desc": "Sets the default locale for the specified Category for this instance of the Java Virtual Machine."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Locale",
      "code": "stripExtensions()",
      "desc": "Returns a copy of this Locale with no  extensions."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toLanguageTag()",
      "desc": "Returns a well-formed IETF BCP 47 language tag representing this locale."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns a string representation of this Locale object, consisting of language, country, variant, script, and extensions as below:  language + \"_\" + country + \"_\" + (variant + \"_#\" | \"#\") + script + \"-\" + extensions  Language is always lower case, country is always upper case, script is always title case, and extensions are always lower case."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "code": "Builder",
      "desc": "Builder is used to build instances of Locale from values configured by the setters."
    },
    {
      "type": "nested-classes",
      "code": "Category",
      "desc": "Enum for locale categories."
    },
    {
      "type": "nested-classes",
      "code": "FilteringMode",
      "desc": "This enum provides constants to select a filtering mode for locale matching."
    },
    {
      "type": "nested-classes",
      "code": "LanguageRange",
      "desc": "This class expresses a Language Range defined in RFC 4647 Matching of Language Tags."
    }
  ]
}