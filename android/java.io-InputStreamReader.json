{
  "path": "java.io",
  "name": "InputStreamReader",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(in: InputStream!)\n            Creates an InputStreamReader that uses the default charset."
    },
    {
      "type": "ctor",
      "ctor": "<init>(in: InputStream!, charsetName: String!)\n            Creates an InputStreamReader that uses the named charset."
    },
    {
      "type": "ctor",
      "ctor": "<init>(in: InputStream!, cs: Charset!)\n            Creates an InputStreamReader that uses the given charset."
    },
    {
      "type": "ctor",
      "ctor": "<init>(in: InputStream!, dec: CharsetDecoder!)\n            Creates an InputStreamReader that uses the given charset decoder."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "close()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getEncoding()",
      "desc": "Returns the name of the character encoding being used by this stream.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "read()",
      "desc": "Reads a single character."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "read(cbuf: CharArray!, offset: Int, length: Int)",
      "desc": "Reads characters into a portion of an array."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "ready()",
      "desc": "Tells whether this stream is ready to be read."
    },
    {
      "type": "inherited-methods",
      "from": "Reader"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "mark(readAheadLimit: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "markSupported()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "read(target: CharBuffer!)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "read(cbuf: CharArray!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "reset()"
    },
    {
      "type": "inherited-methods",
      "from": "Long"
    },
    {
      "type": "inherited-methods",
      "from": "skip(n: Long)"
    }
  ]
}