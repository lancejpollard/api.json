{
  "path": "java.time",
  "name": "Period",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Temporal",
      "code": "addTo(temporal: Temporal!)",
      "desc": "Adds this period to the specified temporal object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Period",
      "code": "between(startDateInclusive: LocalDate!, endDateExclusive: LocalDate!)",
      "desc": "Obtains a Period consisting of the number of years, months, and days between two dates.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Checks if this period is equal to another period."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Period",
      "code": "from(amount: TemporalAmount!)",
      "desc": "Obtains an instance of Period from a temporal amount.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "get(unit: TemporalUnit!)",
      "desc": "Gets the value of the requested unit."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "IsoChronology",
      "code": "getChronology()",
      "desc": "Gets the chronology of this period, which is the ISO calendar system.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getDays()",
      "desc": "Gets the amount of days of this period."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getMonths()",
      "desc": "Gets the amount of months of this period."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MutableList",
      "code": "getUnits()",
      "desc": "Gets the set of units supported by this period.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getYears()",
      "desc": "Gets the amount of years of this period."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "A hash code for this period."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isNegative()",
      "desc": "Checks if any of the three units of this period are negative."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isZero()",
      "desc": "Checks if all three units of this period are zero."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Period",
      "code": "minus(amountToSubtract: TemporalAmount!)",
      "desc": "Returns a copy of this period with the specified period subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Period",
      "code": "minusDays(daysToSubtract: Long)",
      "desc": "Returns a copy of this period with the specified days subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Period",
      "code": "minusMonths(monthsToSubtract: Long)",
      "desc": "Returns a copy of this period with the specified months subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Period",
      "code": "minusYears(yearsToSubtract: Long)",
      "desc": "Returns a copy of this period with the specified years subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Period",
      "code": "multipliedBy(scalar: Int)",
      "desc": "Returns a new instance with each element in this period multiplied by the specified scalar.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Period",
      "code": "negated()",
      "desc": "Returns a new instance with each amount in this period negated.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Period",
      "code": "normalized()",
      "desc": "Returns a copy of this period with the years and months normalized.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Period",
      "code": "of(years: Int, months: Int, days: Int)",
      "desc": "Obtains a Period representing a number of years, months and days.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Period",
      "code": "ofDays(days: Int)",
      "desc": "Obtains a Period representing a number of days.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Period",
      "code": "ofMonths(months: Int)",
      "desc": "Obtains a Period representing a number of months.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Period",
      "code": "ofWeeks(weeks: Int)",
      "desc": "Obtains a Period representing a number of weeks.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Period",
      "code": "ofYears(years: Int)",
      "desc": "Obtains a Period representing a number of years.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Period",
      "code": "parse(text: CharSequence!)",
      "desc": "Obtains a Period from a text string such as PnYnMnD.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Period",
      "code": "plus(amountToAdd: TemporalAmount!)",
      "desc": "Returns a copy of this period with the specified period added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Period",
      "code": "plusDays(daysToAdd: Long)",
      "desc": "Returns a copy of this period with the specified days added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Period",
      "code": "plusMonths(monthsToAdd: Long)",
      "desc": "Returns a copy of this period with the specified months added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Period",
      "code": "plusYears(yearsToAdd: Long)",
      "desc": "Returns a copy of this period with the specified years added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Temporal",
      "code": "subtractFrom(temporal: Temporal!)",
      "desc": "Subtracts this period from the specified temporal object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": "Outputs this period as a String, such as P6Y3M1D."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "toTotalMonths()",
      "desc": "Gets the total number of months in this period."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Period",
      "code": "withDays(days: Int)",
      "desc": "Returns a copy of this period with the specified amount of days.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Period",
      "code": "withMonths(months: Int)",
      "desc": "Returns a copy of this period with the specified amount of months.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Period",
      "code": "withYears(years: Int)",
      "desc": "Returns a copy of this period with the specified amount of years.",
      "symbol": "!"
    }
  ]
}