{
  "path": "android.os",
  "name": "BaseBundle",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "clear()",
      "desc": "Removes all elements from the mapping of this Bundle."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "containsKey(key: String!)",
      "desc": "Returns true if the given key is contained in the mapping of this Bundle."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "get(key: String!)",
      "desc": "Returns the entry with the given key as an object.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getBoolean(key: String!)",
      "desc": "Returns the value associated with the given key, or false if no mapping of the desired type exists for the given key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getBoolean(key: String!, defaultValue: Boolean)",
      "desc": "Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "BooleanArray",
      "code": "getBooleanArray(key: String?)",
      "desc": "Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Double",
      "code": "getDouble(key: String!)",
      "desc": "Returns the value associated with the given key, or 0."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Double",
      "code": "getDouble(key: String!, defaultValue: Double)",
      "desc": "Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "DoubleArray",
      "code": "getDoubleArray(key: String?)",
      "desc": "Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getInt(key: String!)",
      "desc": "Returns the value associated with the given key, or 0 if no mapping of the desired type exists for the given key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getInt(key: String!, defaultValue: Int)",
      "desc": "Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "IntArray",
      "code": "getIntArray(key: String?)",
      "desc": "Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "getLong(key: String!)",
      "desc": "Returns the value associated with the given key, or 0L if no mapping of the desired type exists for the given key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "getLong(key: String!, defaultValue: Long)",
      "desc": "Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "LongArray",
      "code": "getLongArray(key: String?)",
      "desc": "Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getString(key: String?)",
      "desc": "Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getString(key: String?, defaultValue: String!)",
      "desc": "Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key or if a null value is explicitly associated with the given key.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getStringArray(key: String?)",
      "desc": "Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isEmpty()",
      "desc": "Returns true if the mapping of this Bundle is empty, false otherwise."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableSet",
      "code": "keySet()",
      "desc": "Returns a Set containing the Strings used as keys in this Bundle.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "putAll(bundle: PersistableBundle!)",
      "desc": "Inserts all mappings from the given PersistableBundle into this BaseBundle."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "putBoolean(key: String?, value: Boolean)",
      "desc": "Inserts a Boolean value into the mapping of this Bundle, replacing any existing value for the given key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "putBooleanArray(key: String?, value: BooleanArray?)",
      "desc": "Inserts a boolean array value into the mapping of this Bundle, replacing any existing value for the given key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "putDouble(key: String?, value: Double)",
      "desc": "Inserts a double value into the mapping of this Bundle, replacing any existing value for the given key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "putDoubleArray(key: String?, value: DoubleArray?)",
      "desc": "Inserts a double array value into the mapping of this Bundle, replacing any existing value for the given key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "putInt(key: String?, value: Int)",
      "desc": "Inserts an int value into the mapping of this Bundle, replacing any existing value for the given key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "putIntArray(key: String?, value: IntArray?)",
      "desc": "Inserts an int array value into the mapping of this Bundle, replacing any existing value for the given key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "putLong(key: String?, value: Long)",
      "desc": "Inserts a long value into the mapping of this Bundle, replacing any existing value for the given key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "putLongArray(key: String?, value: LongArray?)",
      "desc": "Inserts a long array value into the mapping of this Bundle, replacing any existing value for the given key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "putString(key: String?, value: String?)",
      "desc": "Inserts a String value into the mapping of this Bundle, replacing any existing value for the given key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "putStringArray(key: String?, value: Array<String!>?)",
      "desc": "Inserts a String array value into the mapping of this Bundle, replacing any existing value for the given key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "remove(key: String!)",
      "desc": "Removes any entry with the given key from the mapping of this Bundle."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "size()",
      "desc": "Returns the number of mappings contained in this Bundle."
    }
  ]
}