{
  "path": "java.io",
  "name": "DataInputStream",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(in: InputStream!)\n            Creates a DataInputStream that uses the specified underlying InputStream."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "read(b: ByteArray!)",
      "desc": "Reads some number of bytes from the contained input stream and stores them into the buffer array b."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "read(b: ByteArray!, off: Int, len: Int)",
      "desc": "Reads up to len bytes of data from the contained input stream into an array of bytes."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "readBoolean()",
      "desc": "See the general contract of the readBoolean method of DataInput."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Byte",
      "code": "readByte()",
      "desc": "See the general contract of the readByte method of DataInput."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Char",
      "code": "readChar()",
      "desc": "See the general contract of the readChar method of DataInput."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Double",
      "code": "readDouble()",
      "desc": "See the general contract of the readDouble method of DataInput."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "readFloat()",
      "desc": "See the general contract of the readFloat method of DataInput."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "readFully(b: ByteArray!)",
      "desc": "See the general contract of the readFully method of DataInput."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "readFully(b: ByteArray!, off: Int, len: Int)",
      "desc": "See the general contract of the readFully method of DataInput."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "readInt()",
      "desc": "See the general contract of the readInt method of DataInput."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "readLine()",
      "desc": "See the general contract of the readLine method of DataInput.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "readLong()",
      "desc": "See the general contract of the readLong method of DataInput."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Short",
      "code": "readShort()",
      "desc": "See the general contract of the readShort method of DataInput."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "readUTF()",
      "desc": "See the general contract of the readUTF method of DataInput.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "String",
      "code": "readUTF(in: DataInput!)",
      "desc": "Reads from the stream in a representation of a Unicode character string encoded in modified UTF-8 format; this string of characters is then returned as a String.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "readUnsignedByte()",
      "desc": "See the general contract of the readUnsignedByte method of DataInput."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "readUnsignedShort()",
      "desc": "See the general contract of the readUnsignedShort method of DataInput."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "skipBytes(n: Int)",
      "desc": "See the general contract of the skipBytes method of DataInput."
    },
    {
      "type": "inherited-methods",
      "from": "FilterInputStream"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "available()"
    },
    {
      "type": "inherited-methods",
      "from": "in"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "close()"
    },
    {
      "type": "inherited-methods",
      "from": "in.close()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "mark(readlimit: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "reset"
    },
    {
      "type": "inherited-methods",
      "from": "readlimit"
    },
    {
      "type": "inherited-methods",
      "from": "in.mark(readlimit)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "markSupported()"
    },
    {
      "type": "inherited-methods",
      "from": "mark"
    },
    {
      "type": "inherited-methods",
      "from": "reset"
    },
    {
      "type": "inherited-methods",
      "from": "in.markSupported()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "read()"
    },
    {
      "type": "inherited-methods",
      "from": "int"
    },
    {
      "type": "inherited-methods",
      "from": "0"
    },
    {
      "type": "inherited-methods",
      "from": "255"
    },
    {
      "type": "inherited-methods",
      "from": "-1"
    },
    {
      "type": "inherited-methods",
      "from": "in.read()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "reset()"
    },
    {
      "type": "inherited-methods",
      "from": "mark"
    },
    {
      "type": "inherited-methods",
      "from": "in.reset()"
    },
    {
      "type": "inherited-methods",
      "from": "Long"
    },
    {
      "type": "inherited-methods",
      "from": "skip(n: Long)"
    },
    {
      "type": "inherited-methods",
      "from": "n"
    },
    {
      "type": "inherited-methods",
      "from": "skip"
    },
    {
      "type": "inherited-methods",
      "from": "0"
    },
    {
      "type": "inherited-methods",
      "from": "in.skip(n)"
    }
  ]
}