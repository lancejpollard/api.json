{
  "path": "java.text",
  "name": "ChoiceFormat",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(newPattern: String!)\n            Constructs with limits and corresponding formats based on the pattern."
    },
    {
      "type": "ctor",
      "ctor": "<init>(limits: DoubleArray!, formats: Array<String!>!)\n            Constructs with the limits and the corresponding formats."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "applyPattern(newPattern: String!)",
      "desc": "Sets the pattern."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "clone()",
      "desc": "Overrides Cloneable"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Equality comparision between two"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "StringBuffer",
      "code": "format(number: Long, toAppendTo: StringBuffer, status: FieldPosition)",
      "desc": "Specialization of format."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "StringBuffer",
      "code": "format(number: Double, toAppendTo: StringBuffer, status: FieldPosition)",
      "desc": "Returns pattern with formatted double."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getFormats()",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "DoubleArray",
      "code": "getLimits()",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Generates a hash code for the message format object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Double",
      "code": "nextDouble(d: Double)",
      "desc": "Finds the least double greater than d."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Double",
      "code": "nextDouble(d: Double, positive: Boolean)",
      "desc": "Finds the least double greater than d (if positive is true), or the greatest double less than d (if positive is false)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Number",
      "code": "parse(text: String, status: ParsePosition)",
      "desc": "Parses a Number from the input text.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Double",
      "code": "previousDouble(d: Double)",
      "desc": "Finds the greatest double less than d."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setChoices(limits: DoubleArray!, formats: Array<String!>!)",
      "desc": "Set the choices to be used in formatting."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toPattern()",
      "desc": "Gets the pattern.",
      "symbol": "!"
    },
    {
      "type": "inherited-constants",
      "from": "NumberFormat"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "FRACTION_FIELD"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "INTEGER_FIELD"
    },
    {
      "type": "inherited-methods",
      "from": "NumberFormat"
    },
    {
      "type": "inherited-methods",
      "from": "StringBuffer"
    },
    {
      "type": "inherited-methods",
      "from": "format(number: Any, toAppendTo: StringBuffer, pos: FieldPosition)"
    },
    {
      "type": "inherited-methods",
      "from": "java.lang.Number"
    },
    {
      "type": "inherited-methods",
      "from": "java.lang.Number#longValue()"
    },
    {
      "type": "inherited-methods",
      "from": "long"
    },
    {
      "type": "inherited-methods",
      "from": "BigInteger"
    },
    {
      "type": "inherited-methods",
      "from": "bit length"
    },
    {
      "type": "inherited-methods",
      "from": "java.lang.Number#doubleValue()"
    },
    {
      "type": "inherited-methods",
      "from": "format(long,java.lang.StringBuffer,java.text.FieldPosition)"
    },
    {
      "type": "inherited-methods",
      "from": "format(double,java.lang.StringBuffer,java.text.FieldPosition)"
    },
    {
      "type": "inherited-methods",
      "from": "BigInteger"
    },
    {
      "type": "inherited-methods",
      "from": "BigDecimal"
    },
    {
      "type": "inherited-methods",
      "from": "String"
    },
    {
      "type": "inherited-methods",
      "from": "format(number: Double)"
    },
    {
      "type": "inherited-methods",
      "from": "String"
    },
    {
      "type": "inherited-methods",
      "from": "format(number: Long)"
    },
    {
      "type": "inherited-methods",
      "from": "Array<Locale!>"
    },
    {
      "type": "inherited-methods",
      "from": "getAvailableLocales()"
    },
    {
      "type": "inherited-methods",
      "from": "get*Instance"
    },
    {
      "type": "inherited-methods",
      "from": "Currency?"
    },
    {
      "type": "inherited-methods",
      "from": "getCurrency()"
    },
    {
      "type": "inherited-methods",
      "from": "setCurrency"
    },
    {
      "type": "inherited-methods",
      "from": "UnsupportedOperationException"
    },
    {
      "type": "inherited-methods",
      "from": "NumberFormat"
    },
    {
      "type": "inherited-methods",
      "from": "getCurrencyInstance()"
    },
    {
      "type": "inherited-methods",
      "from": "FORMAT"
    },
    {
      "type": "inherited-methods",
      "from": "getCurrencyInstance(Locale.getDefault(Locale.Category.FORMAT))"
    },
    {
      "type": "inherited-methods",
      "from": "NumberFormat"
    },
    {
      "type": "inherited-methods",
      "from": "getCurrencyInstance(inLocale: Locale)"
    },
    {
      "type": "inherited-methods",
      "from": "NumberFormat"
    },
    {
      "type": "inherited-methods",
      "from": "getInstance()"
    },
    {
      "type": "inherited-methods",
      "from": "FORMAT"
    },
    {
      "type": "inherited-methods",
      "from": "getNumberInstance()"
    },
    {
      "type": "inherited-methods",
      "from": "NumberFormat"
    },
    {
      "type": "inherited-methods",
      "from": "getInstance(inLocale: Locale)"
    },
    {
      "type": "inherited-methods",
      "from": "getNumberInstance(inLocale)"
    },
    {
      "type": "inherited-methods",
      "from": "NumberFormat"
    },
    {
      "type": "inherited-methods",
      "from": "getIntegerInstance()"
    },
    {
      "type": "inherited-methods",
      "from": "FORMAT"
    },
    {
      "type": "inherited-methods",
      "from": ""
    },
    {
      "type": "inherited-methods",
      "from": ""
    },
    {
      "type": "inherited-methods",
      "from": "getIntegerInstance(Locale.getDefault(Locale.Category.FORMAT))"
    },
    {
      "type": "inherited-methods",
      "from": "NumberFormat"
    },
    {
      "type": "inherited-methods",
      "from": "getIntegerInstance(inLocale: Locale)"
    },
    {
      "type": "inherited-methods",
      "from": ""
    },
    {
      "type": "inherited-methods",
      "from": ""
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getMaximumFractionDigits()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getMaximumIntegerDigits()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getMinimumFractionDigits()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getMinimumIntegerDigits()"
    },
    {
      "type": "inherited-methods",
      "from": "NumberFormat"
    },
    {
      "type": "inherited-methods",
      "from": "getNumberInstance()"
    },
    {
      "type": "inherited-methods",
      "from": "FORMAT"
    },
    {
      "type": "inherited-methods",
      "from": "getNumberInstance(Locale.getDefault(Locale.Category.FORMAT))"
    },
    {
      "type": "inherited-methods",
      "from": "NumberFormat"
    },
    {
      "type": "inherited-methods",
      "from": "getNumberInstance(inLocale: Locale)"
    },
    {
      "type": "inherited-methods",
      "from": "NumberFormat"
    },
    {
      "type": "inherited-methods",
      "from": "getPercentInstance()"
    },
    {
      "type": "inherited-methods",
      "from": "FORMAT"
    },
    {
      "type": "inherited-methods",
      "from": "getPercentInstance(Locale.getDefault(Locale.Category.FORMAT))"
    },
    {
      "type": "inherited-methods",
      "from": "NumberFormat"
    },
    {
      "type": "inherited-methods",
      "from": "getPercentInstance(inLocale: Locale)"
    },
    {
      "type": "inherited-methods",
      "from": "RoundingMode"
    },
    {
      "type": "inherited-methods",
      "from": "getRoundingMode()"
    },
    {
      "type": "inherited-methods",
      "from": "java.math.RoundingMode"
    },
    {
      "type": "inherited-methods",
      "from": "java.lang.UnsupportedOperationException"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isGroupingUsed()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isParseIntegerOnly()"
    },
    {
      "type": "inherited-methods",
      "from": "Number?"
    },
    {
      "type": "inherited-methods",
      "from": "parse(source: String)"
    },
    {
      "type": "inherited-methods",
      "from": "parse(java.lang.String,java.text.ParsePosition)"
    },
    {
      "type": "inherited-methods",
      "from": "Any?"
    },
    {
      "type": "inherited-methods",
      "from": "parseObject(source: String, pos: ParsePosition)"
    },
    {
      "type": "inherited-methods",
      "from": "Number"
    },
    {
      "type": "inherited-methods",
      "from": "pos"
    },
    {
      "type": "inherited-methods",
      "from": "pos"
    },
    {
      "type": "inherited-methods",
      "from": "pos"
    },
    {
      "type": "inherited-methods",
      "from": "pos"
    },
    {
      "type": "inherited-methods",
      "from": "pos"
    },
    {
      "type": "inherited-methods",
      "from": "parse(java.lang.String,java.text.ParsePosition)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setCurrency(currency: Currency)"
    },
    {
      "type": "inherited-methods",
      "from": "UnsupportedOperationException"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setGroupingUsed(newValue: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setMaximumFractionDigits(newValue: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setMaximumIntegerDigits(newValue: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setMinimumFractionDigits(newValue: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setMinimumIntegerDigits(newValue: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setParseIntegerOnly(value: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setRoundingMode(roundingMode: RoundingMode?)"
    },
    {
      "type": "inherited-methods",
      "from": "java.math.RoundingMode"
    },
    {
      "type": "inherited-methods",
      "from": "java.lang.UnsupportedOperationException"
    },
    {
      "type": "inherited-methods",
      "from": "Format"
    },
    {
      "type": "inherited-methods",
      "from": "String!"
    },
    {
      "type": "inherited-methods",
      "from": "format(obj: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "format"
    },
    {
      "type": "inherited-methods",
      "from": "(obj, new StringBuffer(), new FieldPosition(0)).toString();"
    },
    {
      "type": "inherited-methods",
      "from": "AttributedCharacterIterator!"
    },
    {
      "type": "inherited-methods",
      "from": "formatToCharacterIterator(obj: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "AttributedCharacterIterator"
    },
    {
      "type": "inherited-methods",
      "from": "AttributedCharacterIterator"
    },
    {
      "type": "inherited-methods",
      "from": "Field"
    },
    {
      "type": "inherited-methods",
      "from": "Format"
    },
    {
      "type": "inherited-methods",
      "from": "AttributedCharacterIterator"
    },
    {
      "type": "inherited-methods",
      "from": "AttributedCharacterIterator"
    },
    {
      "type": "inherited-methods",
      "from": "AttributedCharacterIterator"
    },
    {
      "type": "inherited-methods",
      "from": "Any!"
    },
    {
      "type": "inherited-methods",
      "from": "parseObject(source: String!)"
    }
  ]
}