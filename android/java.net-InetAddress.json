{
  "path": "java.net",
  "name": "InetAddress",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Compares this object against the specified object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ByteArray",
      "code": "getAddress()",
      "desc": "Returns the raw IP address of this InetAddress object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getAllByName(host: String!)",
      "desc": "Given the name of a host, returns an array of its IP addresses, based on the configured name service on the system.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "InetAddress",
      "code": "getByAddress(host: String!, addr: ByteArray!)",
      "desc": "Creates an InetAddress based on the provided host name and IP address.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "InetAddress",
      "code": "getByAddress(addr: ByteArray!)",
      "desc": "Returns an InetAddress object given the raw IP address .",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "InetAddress",
      "code": "getByName(host: String!)",
      "desc": "Determines the IP address of a host, given the host's name.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getCanonicalHostName()",
      "desc": "Gets the fully qualified domain name for this IP address.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getHostAddress()",
      "desc": "Returns the IP address string in textual presentation.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getHostName()",
      "desc": "Gets the host name for this IP address.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "InetAddress",
      "code": "getLocalHost()",
      "desc": "Returns the address of the local host.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "InetAddress",
      "code": "getLoopbackAddress()",
      "desc": "Returns the loopback address.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Returns a hashcode for this IP address."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isAnyLocalAddress()",
      "desc": "Utility routine to check if the InetAddress in a wildcard address."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isLinkLocalAddress()",
      "desc": "Utility routine to check if the InetAddress is an link local address."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isLoopbackAddress()",
      "desc": "Utility routine to check if the InetAddress is a loopback address."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isMCGlobal()",
      "desc": "Utility routine to check if the multicast address has global scope."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isMCLinkLocal()",
      "desc": "Utility routine to check if the multicast address has link scope."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isMCNodeLocal()",
      "desc": "Utility routine to check if the multicast address has node scope."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isMCOrgLocal()",
      "desc": "Utility routine to check if the multicast address has organization scope."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isMCSiteLocal()",
      "desc": "Utility routine to check if the multicast address has site scope."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isMulticastAddress()",
      "desc": "Utility routine to check if the InetAddress is an IP multicast address."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isReachable(timeout: Int)",
      "desc": "Test whether that address is reachable."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isReachable(netif: NetworkInterface!, ttl: Int, timeout: Int)",
      "desc": "Test whether that address is reachable."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isSiteLocalAddress()",
      "desc": "Utility routine to check if the InetAddress is a site local address."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": "Converts this IP address to a String."
    }
  ]
}