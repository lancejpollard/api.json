{
  "path": "android.icu.text",
  "name": "PluralFormat",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()\n            Creates a new cardinal-number PluralFormat for the default FORMAT locale."
    },
    {
      "type": "ctor",
      "ctor": "<init>(ulocale: ULocale!)\n            Creates a new cardinal-number PluralFormat for a given locale."
    },
    {
      "type": "ctor",
      "ctor": "<init>(locale: Locale!)\n            Creates a new cardinal-number PluralFormat for a given java.util.Locale."
    },
    {
      "type": "ctor",
      "ctor": "<init>(rules: PluralRules!)\n            Creates a new cardinal-number PluralFormat for a given set of rules."
    },
    {
      "type": "ctor",
      "ctor": "<init>(ulocale: ULocale!, rules: PluralRules!)\n            Creates a new cardinal-number PluralFormat for a given set of rules."
    },
    {
      "type": "ctor",
      "ctor": "<init>(locale: Locale!, rules: PluralRules!)\n            Creates a new cardinal-number PluralFormat for a given set of rules."
    },
    {
      "type": "ctor",
      "ctor": "<init>(ulocale: ULocale!, type: PluralRules.PluralType!)\n            Creates a new PluralFormat for the plural type."
    },
    {
      "type": "ctor",
      "ctor": "<init>(locale: Locale!, type: PluralRules.PluralType!)\n            Creates a new PluralFormat for the plural type."
    },
    {
      "type": "ctor",
      "ctor": "<init>(pattern: String!)\n            Creates a new cardinal-number PluralFormat for a given pattern string."
    },
    {
      "type": "ctor",
      "ctor": "<init>(ulocale: ULocale!, pattern: String!)\n            Creates a new cardinal-number PluralFormat for a given pattern string and locale."
    },
    {
      "type": "ctor",
      "ctor": "<init>(rules: PluralRules!, pattern: String!)\n            Creates a new cardinal-number PluralFormat for a given set of rules and a pattern."
    },
    {
      "type": "ctor",
      "ctor": "<init>(ulocale: ULocale!, rules: PluralRules!, pattern: String!)\n            Creates a new cardinal-number PluralFormat for a given set of rules, a pattern and a locale."
    },
    {
      "type": "ctor",
      "ctor": "<init>(ulocale: ULocale!, type: PluralRules.PluralType!, pattern: String!)\n            Creates a new PluralFormat for a plural type, a pattern and a locale."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "applyPattern(pattern: String!)",
      "desc": "Sets the pattern used by this plural format."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Indicates whether some other object is \"equal to\" this one."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "equals(rhs: PluralFormat!)",
      "desc": "Returns true if this equals the provided PluralFormat."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "format(number: Double)",
      "desc": "Formats a plural message for a given number.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "StringBuffer",
      "code": "format(number: Any!, toAppendTo: StringBuffer!, pos: FieldPosition!)",
      "desc": "Formats a plural message for a given number and appends the formatted message to the given StringBuffer.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Returns a hash code value for the object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Number",
      "code": "parse(text: String!, parsePosition: ParsePosition!)",
      "desc": "This method is not yet supported by PluralFormat.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "parseObject(source: String!, pos: ParsePosition!)",
      "desc": "This method is not yet supported by PluralFormat.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setNumberFormat(format: NumberFormat!)",
      "desc": "Sets the number format used by this formatter."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toPattern()",
      "desc": "Returns the pattern for this PluralFormat.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns a string representation of the object."
    }
  ]
}