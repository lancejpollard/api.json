{
  "path": "javax.xml.parsers",
  "name": "DocumentBuilder",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "DOMImplementation",
      "code": "getDOMImplementation()",
      "desc": "Obtain an instance of a DOMImplementation object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Schema",
      "code": "getSchema()",
      "desc": "Get a reference to the the Schema being used by the XML processor.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "isNamespaceAware()",
      "desc": "Indicates whether or not this parser is configured to understand namespaces."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "isValidating()",
      "desc": "Indicates whether or not this parser is configured to validate XML documents."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isXIncludeAware()",
      "desc": "Get the XInclude processing mode for this parser."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Document",
      "code": "newDocument()",
      "desc": "Obtain a new instance of a DOM Document object to build a DOM tree with.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Document",
      "code": "parse(is: InputStream!)",
      "desc": "Parse the content of the given InputStream as an XML document and return a new DOM Document object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Document",
      "code": "parse(is: InputStream!, systemId: String!)",
      "desc": "Parse the content of the given InputStream as an XML document and return a new DOM Document object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Document",
      "code": "parse(uri: String!)",
      "desc": "Parse the content of the given URI as an XML document and return a new DOM Document object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Document",
      "code": "parse(f: File!)",
      "desc": "Parse the content of the given file as an XML document and return a new DOM Document object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Document",
      "code": "parse(is: InputSource!)",
      "desc": "Parse the content of the given input source as an XML document and return a new DOM Document object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "reset()",
      "desc": "Reset this DocumentBuilder to its original configuration."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setEntityResolver(er: EntityResolver!)",
      "desc": "Specify the EntityResolver to be used to resolve entities present in the XML document to be parsed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setErrorHandler(eh: ErrorHandler!)",
      "desc": "Specify the ErrorHandler to be used by the parser."
    }
  ]
}