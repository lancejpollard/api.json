{
  "path": "android.util",
  "name": "ArraySet",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()\n            Create a new empty ArraySet."
    },
    {
      "type": "ctor",
      "ctor": "<init>(capacity: Int)\n            Create a new ArraySet with a given initial capacity."
    },
    {
      "type": "ctor",
      "ctor": "<init>(set: ArraySet<E>!)\n            Create a new ArraySet with the mappings from the given ArraySet."
    },
    {
      "type": "ctor",
      "ctor": "<init>(set: MutableCollection<out E>!)\n            Create a new ArraySet with items from the given collection."
    },
    {
      "type": "ctor",
      "ctor": "<init>(array: Array<E>?)\n            Create a new ArraySet with items from the given array"
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "add(element: E)",
      "desc": "Adds the specified object to this set."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "addAll(array: ArraySet<out E>!)",
      "desc": "Perform a add(java.lang.Object) of all values in array"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "addAll(elements: Collection<E>)",
      "desc": "Perform an add(java.lang.Object) of all values in collection"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "clear()",
      "desc": "Make the array map empty."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "contains(element: E)",
      "desc": "Check whether a value exists in the set."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "containsAll(elements: Collection<E>)",
      "desc": "Determine if the array set contains all of the values in the given collection."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "ensureCapacity(minimumCapacity: Int)",
      "desc": "Ensure the array map can hold at least minimumCapacity items."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Indicates whether some other object is \"equal to\" this one."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Returns a hash code value for the object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "indexOf(key: Any!)",
      "desc": "Returns the index of a value in the set."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isEmpty()",
      "desc": "Return true if the array map contains no items."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MutableIterator",
      "code": "iterator()",
      "desc": "Return an java.util.Iterator over all values in the set.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "remove(element: E)",
      "desc": "Removes the specified object from this set."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "removeAll(array: ArraySet<out E>!)",
      "desc": "Perform a remove(java.lang.Object) of all values in array"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "removeAll(elements: Collection<E>)",
      "desc": "Remove all values in the array set that exist in the given collection."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "E",
      "code": "removeAt(index: Int)",
      "desc": "Remove the key/value mapping at the given index."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "removeIf(filter: Predicate<in E>)",
      "desc": "Removes all values that satisfy the predicate."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "retainAll(elements: Collection<E>)",
      "desc": "Remove all values in the array set that do not exist in the given collection."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "toArray()",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "toArray(array: Array<T>!)",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns a string representation of the object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "E",
      "code": "valueAt(index: Int)",
      "desc": "Return the value at the given index in the array."
    }
  ]
}