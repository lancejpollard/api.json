{
  "path": "android.view",
  "name": "LayoutInflater",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "LayoutInflater",
      "code": "cloneInContext(newContext: Context!)",
      "desc": "Create a copy of the existing LayoutInflater object, with the copy pointing to a different Context than the original.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "View",
      "code": "createView(name: String!, prefix: String!, attrs: AttributeSet!)",
      "desc": "Low-level function for instantiating a view by name.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "View",
      "code": "createView(viewContext: Context, name: String, prefix: String?, attrs: AttributeSet?)",
      "desc": "Low-level function for instantiating a view by name.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "LayoutInflater",
      "code": "from(context: Context!)",
      "desc": "Obtains the LayoutInflater from the given context.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Context",
      "code": "getContext()",
      "desc": "Return the context we are running in, for access to resources, class loader, etc.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "LayoutInflater.Factory",
      "code": "getFactory()",
      "desc": "Return the current Factory (or null).",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "LayoutInflater.Factory2",
      "code": "getFactory2()",
      "desc": "Return the current Factory2.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "LayoutInflater.Filter",
      "code": "getFilter()",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View",
      "code": "inflate(resource: Int, root: ViewGroup?)",
      "desc": "Inflate a new view hierarchy from the specified xml resource.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View",
      "code": "inflate(parser: XmlPullParser!, root: ViewGroup?)",
      "desc": "Inflate a new view hierarchy from the specified xml node.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View",
      "code": "inflate(resource: Int, root: ViewGroup?, attachToRoot: Boolean)",
      "desc": "Inflate a new view hierarchy from the specified xml resource.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View",
      "code": "inflate(parser: XmlPullParser!, root: ViewGroup?, attachToRoot: Boolean)",
      "desc": "Inflate a new view hierarchy from the specified XML node.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View",
      "code": "onCreateView(viewContext: Context, parent: View?, name: String, attrs: AttributeSet?)",
      "desc": "Version of onCreateView(android.view.View,java.lang.String,android.util.AttributeSet) that also takes the inflation context.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFactory(factory: LayoutInflater.Factory!)",
      "desc": "Attach a custom Factory interface for creating views while using this LayoutInflater."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFactory2(factory: LayoutInflater.Factory2!)",
      "desc": "Like setFactory, but allows you to set a Factory2 interface."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFilter(filter: LayoutInflater.Filter!)",
      "desc": "Sets the Filter to by this LayoutInflater."
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "View",
      "code": "onCreateView(name: String!, attrs: AttributeSet!)",
      "desc": "This routine is responsible for creating the correct subclass of View given the xml element name.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "View",
      "code": "onCreateView(parent: View!, name: String!, attrs: AttributeSet!)",
      "desc": "Version of onCreateView(java.lang.String,android.util.AttributeSet) that also takes the future parent of the view being constructed.",
      "symbol": "!"
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "Factory",
      "desc": ""
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "Factory2",
      "desc": ""
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "Filter",
      "desc": "Hook to allow clients of the LayoutInflater to restrict the set of Views that are allowed to be inflated."
    }
  ]
}