{
  "path": "java.util.concurrent.atomic",
  "name": "AtomicReference",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(initialValue: V)\n            Creates a new AtomicReference with the given initial value."
    },
    {
      "type": "ctor",
      "ctor": "<init>()\n            Creates a new AtomicReference with null initial value."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "V",
      "code": "accumulateAndGet(x: V, accumulatorFunction: BinaryOperator<V>!)",
      "desc": "Atomically updates the current value with the results of applying the given function to the current and given values, returning the updated value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "compareAndSet(expect: V, update: V)",
      "desc": "Atomically sets the value to the given updated value if the current value == the expected value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "V",
      "code": "get()",
      "desc": "Gets the current value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "V",
      "code": "getAndAccumulate(x: V, accumulatorFunction: BinaryOperator<V>!)",
      "desc": "Atomically updates the current value with the results of applying the given function to the current and given values, returning the previous value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "V",
      "code": "getAndSet(newValue: V)",
      "desc": "Atomically sets to the given value and returns the old value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "V",
      "code": "getAndUpdate(updateFunction: UnaryOperator<V>!)",
      "desc": "Atomically updates the current value with the results of applying the given function, returning the previous value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "lazySet(newValue: V)",
      "desc": "Eventually sets to the given value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "set(newValue: V)",
      "desc": "Sets to the given value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns the String representation of the current value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "V",
      "code": "updateAndGet(updateFunction: UnaryOperator<V>!)",
      "desc": "Atomically updates the current value with the results of applying the given function, returning the updated value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "weakCompareAndSet(expect: V, update: V)",
      "desc": "Atomically sets the value to the given updated value if the current value == the expected value."
    }
  ]
}