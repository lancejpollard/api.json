{
  "path": "java.util",
  "name": "ArrayList",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(initialCapacity: Int)\n            Constructs an empty list with the specified initial capacity."
    },
    {
      "type": "ctor",
      "ctor": "<init>()\n            Constructs an empty list with an initial capacity of ten."
    },
    {
      "type": "ctor",
      "ctor": "<init>(c: MutableCollection<out E>)\n            Constructs a list containing the elements of the specified collection, in the order they are returned by the collection's iterator."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "add(element: E)",
      "desc": "Appends the specified element to the end of this list."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "add(index: Int, element: E)",
      "desc": "Inserts the specified element at the specified position in this list."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "addAll(elements: Collection<E>)",
      "desc": "Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's Iterator."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "addAll(index: Int, elements: Collection<E>)",
      "desc": "Inserts all of the elements in the specified collection into this list, starting at the specified position."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "clear()",
      "desc": "Removes all of the elements from this list."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "clone()",
      "desc": "Returns a shallow copy of this ArrayList instance."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "contains(element: E)",
      "desc": "Returns true if this list contains the specified element."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "contains(element: E)",
      "desc": "Returns true if this list contains the specified element."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "ensureCapacity(minCapacity: Int)",
      "desc": "Increases the capacity of this ArrayList instance, if necessary, to ensure that it can hold at least the number of elements specified by the minimum capacity argument."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEach(action: Consumer<in E>)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "E",
      "code": "get(index: Int)",
      "desc": "Returns the element at the specified position in this list."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "indexOf(element: E)",
      "desc": "Returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "indexOf(element: E)",
      "desc": "Returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isEmpty()",
      "desc": "Returns true if this list contains no elements."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableIterator",
      "code": "iterator()",
      "desc": "Returns an iterator over the elements in this list in proper sequence.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "lastIndexOf(element: E)",
      "desc": "Returns the index of the last occurrence of the specified element in this list, or -1 if this list does not contain the element."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "lastIndexOf(element: E)",
      "desc": "Returns the index of the last occurrence of the specified element in this list, or -1 if this list does not contain the element."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableListIterator",
      "code": "listIterator(index: Int)",
      "desc": "Returns a list iterator over the elements in this list (in proper sequence), starting at the specified position in the list.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableListIterator",
      "code": "listIterator()",
      "desc": "Returns a list iterator over the elements in this list (in proper sequence).",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "remove(element: E)",
      "desc": "Removes the first occurrence of the specified element from this list, if it is present."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "remove(element: E)",
      "desc": "Removes the first occurrence of the specified element from this list, if it is present."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "removeAll(elements: Collection<E>)",
      "desc": "Removes from this list all of its elements that are contained in the specified collection."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "E",
      "code": "removeAt(index: Int)",
      "desc": "Removes the element at the specified position in this list."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "removeIf(filter: Predicate<in E>)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "replaceAll(operator: UnaryOperator<E>)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "retainAll(elements: Collection<E>)",
      "desc": "Retains only the elements in this list that are contained in the specified collection."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "E",
      "code": "set(index: Int, element: E)",
      "desc": "Replaces the element at the specified position in this list with the specified element."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "sort(c: Comparator<in E>?)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Spliterator",
      "code": "spliterator()",
      "desc": "Creates a late-binding and fail-fast Spliterator over the elements in this list.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableList",
      "code": "subList(fromIndex: Int, toIndex: Int)",
      "desc": "Returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "toArray()",
      "desc": "Returns an array containing all of the elements in this list in proper sequence (from first to last element).",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "toArray(a: Array<T>)",
      "desc": "Returns an array containing all of the elements in this list in proper sequence (from first to last element); the runtime type of the returned array is that of the specified array.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "trimToSize()",
      "desc": "Trims the capacity of this ArrayList instance to be the list's current size."
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "removeRange(fromIndex: Int, toIndex: Int)",
      "desc": "Removes from this list all of the elements whose index is between fromIndex, inclusive, and toIndex, exclusive."
    },
    {
      "type": "inherited-methods",
      "from": "AbstractCollection"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "addAll(elements: Collection<E>)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "contains(element: E?)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "containsAll(elements: Collection<E>)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isEmpty()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "remove(element: E?)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "removeAll(elements: Collection<E>)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "retainAll(elements: Collection<E>)"
    },
    {
      "type": "inherited-methods",
      "from": "Array<Any!>"
    },
    {
      "type": "inherited-methods",
      "from": "toArray()"
    },
    {
      "type": "inherited-methods",
      "from": "0"
    },
    {
      "type": "inherited-methods",
      "from": "size"
    },
    {
      "type": "inherited-methods",
      "from": "Array<T>"
    },
    {
      "type": "inherited-methods",
      "from": "toArray(a: Array<T>)"
    },
    {
      "type": "inherited-methods",
      "from": "toArray()"
    },
    {
      "type": "inherited-methods",
      "from": "0"
    },
    {
      "type": "inherited-methods",
      "from": "size"
    },
    {
      "type": "inherited-methods",
      "from": "String"
    },
    {
      "type": "inherited-methods",
      "from": "toString()"
    },
    {
      "type": "inherited-methods",
      "from": "String#valueOf(Object)"
    },
    {
      "type": "inherited-methods",
      "from": "AbstractList"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "equals(other: Any?)"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "e1"
    },
    {
      "type": "inherited-methods",
      "from": "e2"
    },
    {
      "type": "inherited-methods",
      "from": "(e1==null ? e2==null : e1.equals(e2))"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "hashCode()"
    }
  ]
}