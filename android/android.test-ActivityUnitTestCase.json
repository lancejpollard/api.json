{
  "path": "android.test",
  "name": "ActivityUnitTestCase",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(activityClass: Class<T>!)"
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "T",
      "code": "getActivity()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getFinishedActivityRequest()",
      "desc": "This method will return the request code if the Activity under test called android.app.Activity#finishActivity(int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getRequestedOrientation()",
      "desc": "This method will return the value if your Activity under test calls android.app.Activity#setRequestedOrientation."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Intent",
      "code": "getStartedActivityIntent()",
      "desc": "This method will return the launch intent if your Activity under test calls android.app.Activity#startActivity(Intent) or android.app.Activity#startActivityForResult(Intent, int).",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getStartedActivityRequest()",
      "desc": "This method will return the launch request code if your Activity under test calls android.app.Activity#startActivityForResult(Intent, int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isFinishCalled()",
      "desc": "This method will notify you if the Activity under test called android.app.Activity#finish(), android.app.Activity#finishFromChild(Activity), or android.app.Activity#finishActivity(int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setActivityContext(activityContext: Context!)",
      "desc": "If you wish to inject a Mock, Isolated, or otherwise altered context, you can do so here."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setApplication(application: Application!)",
      "desc": "Set the application for use during the test."
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setUp()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "T",
      "code": "startActivity(intent: Intent!, savedInstanceState: Bundle!, lastNonConfigurationInstance: Any!)",
      "desc": "Start the activity under test, in the same way as if it was started by Context.startActivity(), providing the arguments it supplied."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "tearDown()",
      "desc": ""
    },
    {
      "type": "inherited-methods",
      "from": "Assert"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(message: String!, expected: Any!, actual: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(expected: Any!, actual: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(message: String!, expected: String!, actual: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(expected: String!, actual: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(message: String!, expected: Double, actual: Double, delta: Double)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(expected: Double, actual: Double, delta: Double)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(message: String!, expected: Float, actual: Float, delta: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(expected: Float, actual: Float, delta: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(message: String!, expected: Long, actual: Long)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(expected: Long, actual: Long)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(message: String!, expected: Boolean, actual: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(expected: Boolean, actual: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(message: String!, expected: Byte, actual: Byte)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(expected: Byte, actual: Byte)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(message: String!, expected: Char, actual: Char)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(expected: Char, actual: Char)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(message: String!, expected: Short, actual: Short)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(expected: Short, actual: Short)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(message: String!, expected: Int, actual: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(expected: Int, actual: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertFalse(message: String!, condition: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertFalse(condition: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertNotNull(object: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertNotNull(message: String!, object: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertNotSame(message: String!, expected: Any!, actual: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertNotSame(expected: Any!, actual: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertNull(object: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "AssertionError"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertNull(message: String!, object: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertSame(message: String!, expected: Any!, actual: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertSame(expected: Any!, actual: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertTrue(message: String!, condition: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertTrue(condition: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "fail(message: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "fail()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "failNotEquals(message: String!, expected: Any!, actual: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "failNotSame(message: String!, expected: Any!, actual: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "failSame(message: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "String!"
    },
    {
      "type": "inherited-methods",
      "from": "format(message: String!, expected: Any!, actual: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "TestCase"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "countTestCases()"
    },
    {
      "type": "inherited-methods",
      "from": "TestResult!"
    },
    {
      "type": "inherited-methods",
      "from": "createResult()"
    },
    {
      "type": "inherited-methods",
      "from": "String!"
    },
    {
      "type": "inherited-methods",
      "from": "getName()"
    },
    {
      "type": "inherited-methods",
      "from": "TestResult!"
    },
    {
      "type": "inherited-methods",
      "from": "run()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "run(result: TestResult!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "runBare()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setName(name: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setUp()"
    },
    {
      "type": "inherited-methods",
      "from": "String"
    },
    {
      "type": "inherited-methods",
      "from": "toString()"
    },
    {
      "type": "inherited-methods",
      "from": "InstrumentationTestCase"
    },
    {
      "type": "inherited-methods",
      "from": "Instrumentation!"
    },
    {
      "type": "inherited-methods",
      "from": "getInstrumentation()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "injectInsrumentation(instrumentation: Instrumentation!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "injectInstrumentation(instrumentation: Instrumentation!)"
    },
    {
      "type": "inherited-methods",
      "from": "T"
    },
    {
      "type": "inherited-methods",
      "from": "launchActivity(pkg: String!, activityCls: Class<T>!, extras: Bundle!)"
    },
    {
      "type": "inherited-methods",
      "from": "Intent"
    },
    {
      "type": "inherited-methods",
      "from": "Intent#ACTION_MAIN"
    },
    {
      "type": "inherited-methods",
      "from": "T"
    },
    {
      "type": "inherited-methods",
      "from": "launchActivityWithIntent(pkg: String!, activityCls: Class<T>!, intent: Intent!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "runTest()"
    },
    {
      "type": "inherited-methods",
      "from": "android.test.UiThreadTest"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "runTestOnUiThread(r: Runnable!)"
    },
    {
      "type": "inherited-methods",
      "from": "android.test.UiThreadTest"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "sendKeys(keysSequence: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "sendKeys(vararg keys: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "sendRepeatedKeys(vararg keys: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "tearDown()"
    },
    {
      "type": "inherited-methods",
      "from": "ActivityTestCase"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "scrubClass(testCaseClass: Class<*>!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setActivity(testActivity: Activity!)"
    }
  ]
}