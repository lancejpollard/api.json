{
  "path": "java.text",
  "name": "DateFormat",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AM_PM_FIELD",
      "desc": "Useful constant for AM_PM field alignment."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DATE_FIELD",
      "desc": "Useful constant for DATE field alignment."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DAY_OF_WEEK_FIELD",
      "desc": "Useful constant for DAY_OF_WEEK field alignment."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DAY_OF_WEEK_IN_MONTH_FIELD",
      "desc": "Useful constant for DAY_OF_WEEK_IN_MONTH field alignment."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DAY_OF_YEAR_FIELD",
      "desc": "Useful constant for DAY_OF_YEAR field alignment."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DEFAULT",
      "desc": "Constant for default style pattern."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ERA_FIELD",
      "desc": "Useful constant for ERA field alignment."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FULL",
      "desc": "Constant for full style pattern."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "HOUR0_FIELD",
      "desc": "Useful constant for zero-based HOUR field alignment."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "HOUR1_FIELD",
      "desc": "Useful constant for one-based HOUR field alignment."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "HOUR_OF_DAY0_FIELD",
      "desc": "Useful constant for zero-based HOUR_OF_DAY field alignment."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "HOUR_OF_DAY1_FIELD",
      "desc": "Useful constant for one-based HOUR_OF_DAY field alignment."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "LONG",
      "desc": "Constant for long style pattern."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MEDIUM",
      "desc": "Constant for medium style pattern."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MILLISECOND_FIELD",
      "desc": "Useful constant for MILLISECOND field alignment."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MINUTE_FIELD",
      "desc": "Useful constant for MINUTE field alignment."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MONTH_FIELD",
      "desc": "Useful constant for MONTH field alignment."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SECOND_FIELD",
      "desc": "Useful constant for SECOND field alignment."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SHORT",
      "desc": "Constant for short style pattern."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TIMEZONE_FIELD",
      "desc": "Useful constant for TIMEZONE field alignment."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "WEEK_OF_MONTH_FIELD",
      "desc": "Useful constant for WEEK_OF_MONTH field alignment."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "WEEK_OF_YEAR_FIELD",
      "desc": "Useful constant for WEEK_OF_YEAR field alignment."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "YEAR_FIELD",
      "desc": "Useful constant for YEAR field alignment."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "clone()",
      "desc": "Overrides Cloneable"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Overrides equals"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "StringBuffer",
      "code": "format(obj: Any, toAppendTo: StringBuffer, fieldPosition: FieldPosition)",
      "desc": "Overrides Format."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "StringBuffer",
      "code": "format(date: Date, toAppendTo: StringBuffer, fieldPosition: FieldPosition)",
      "desc": "Formats a Date into a date/time string."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "format(date: Date)",
      "desc": "Formats a Date into a date/time string."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getAvailableLocales()",
      "desc": "Returns an array of all locales for which the get*Instance methods of this class can return localized instances.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Calendar",
      "code": "getCalendar()",
      "desc": "Gets the calendar associated with this date/time formatter."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "DateFormat",
      "code": "getDateInstance()",
      "desc": "Gets the date formatter with the default formatting style for the default FORMAT locale."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "DateFormat",
      "code": "getDateInstance(style: Int)",
      "desc": "Gets the date formatter with the given formatting style for the default FORMAT locale."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "DateFormat",
      "code": "getDateInstance(style: Int, aLocale: Locale)",
      "desc": "Gets the date formatter with the given formatting style for the given locale."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "DateFormat",
      "code": "getDateTimeInstance()",
      "desc": "Gets the date/time formatter with the default formatting style for the default FORMAT locale."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "DateFormat",
      "code": "getDateTimeInstance(dateStyle: Int, timeStyle: Int)",
      "desc": "Gets the date/time formatter with the given date and time formatting styles for the default FORMAT locale."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "DateFormat",
      "code": "getDateTimeInstance(dateStyle: Int, timeStyle: Int, aLocale: Locale)",
      "desc": "Gets the date/time formatter with the given formatting styles for the given locale."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "DateFormat",
      "code": "getInstance()",
      "desc": "Get a default date/time formatter that uses the SHORT style for both the date and the time."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "NumberFormat",
      "code": "getNumberFormat()",
      "desc": "Gets the number formatter which this date/time formatter uses to format and parse a time."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "DateFormat",
      "code": "getTimeInstance()",
      "desc": "Gets the time formatter with the default formatting style for the default FORMAT locale."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "DateFormat",
      "code": "getTimeInstance(style: Int)",
      "desc": "Gets the time formatter with the given formatting style for the default FORMAT locale."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "DateFormat",
      "code": "getTimeInstance(style: Int, aLocale: Locale)",
      "desc": "Gets the time formatter with the given formatting style for the given locale."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TimeZone",
      "code": "getTimeZone()",
      "desc": "Gets the time zone."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Overrides hashCode"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isLenient()",
      "desc": "Tell whether date/time parsing is to be lenient."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Date",
      "code": "parse(source: String)",
      "desc": "Parses text from the beginning of the given string to produce a date.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Date",
      "code": "parse(source: String, pos: ParsePosition)",
      "desc": "Parse a date/time string according to the given parse position.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "parseObject(source: String, pos: ParsePosition)",
      "desc": "Parses text from a string to produce a Date.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCalendar(newCalendar: Calendar)",
      "desc": "Set the calendar to be used by this date format."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLenient(lenient: Boolean)",
      "desc": "Specify whether or not date/time parsing is to be lenient."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setNumberFormat(newNumberFormat: NumberFormat)",
      "desc": "Allows you to set the number formatter."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTimeZone(zone: TimeZone)",
      "desc": "Sets the time zone for the calendar of this DateFormat object."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "open",
      "code": "Field",
      "desc": "Defines constants that are used as attribute keys in the AttributedCharacterIterator returned from DateFormat.formatToCharacterIterator and as field identifiers in FieldPosition."
    },
    {
      "type": "inherited-methods",
      "from": "Format"
    },
    {
      "type": "inherited-methods",
      "from": "String!"
    },
    {
      "type": "inherited-methods",
      "from": "format(obj: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "format"
    },
    {
      "type": "inherited-methods",
      "from": "(obj, new StringBuffer(), new FieldPosition(0)).toString();"
    },
    {
      "type": "inherited-methods",
      "from": "AttributedCharacterIterator!"
    },
    {
      "type": "inherited-methods",
      "from": "formatToCharacterIterator(obj: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "AttributedCharacterIterator"
    },
    {
      "type": "inherited-methods",
      "from": "AttributedCharacterIterator"
    },
    {
      "type": "inherited-methods",
      "from": "Field"
    },
    {
      "type": "inherited-methods",
      "from": "Format"
    },
    {
      "type": "inherited-methods",
      "from": "AttributedCharacterIterator"
    },
    {
      "type": "inherited-methods",
      "from": "AttributedCharacterIterator"
    },
    {
      "type": "inherited-methods",
      "from": "AttributedCharacterIterator"
    },
    {
      "type": "inherited-methods",
      "from": "Any!"
    },
    {
      "type": "inherited-methods",
      "from": "parseObject(source: String!)"
    }
  ]
}