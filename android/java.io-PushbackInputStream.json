{
  "path": "java.io",
  "name": "PushbackInputStream",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(in: InputStream!, size: Int)\n            Creates a PushbackInputStream with a pushback buffer of the specified size, and saves its argument, the input stream in, for later use."
    },
    {
      "type": "ctor",
      "ctor": "<init>(in: InputStream!)\n            Creates a PushbackInputStream and saves its argument, the input stream in, for later use."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "available()",
      "desc": "Returns an estimate of the number of bytes that can be read (or skipped over) from this input stream without blocking by the next invocation of a method for this input stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "close()",
      "desc": "Closes this input stream and releases any system resources associated with the stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "mark(readlimit: Int)",
      "desc": "Marks the current position in this input stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "markSupported()",
      "desc": "Tests if this input stream supports the mark and reset methods, which it does not."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "read()",
      "desc": "Reads the next byte of data from this input stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "read(b: ByteArray!, off: Int, len: Int)",
      "desc": "Reads up to len bytes of data from this input stream into an array of bytes."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "reset()",
      "desc": "Repositions this stream to the position at the time the mark method was last called on this input stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "skip(n: Long)",
      "desc": "Skips over and discards n bytes of data from this input stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "unread(b: Int)",
      "desc": "Pushes back a byte by copying it to the front of the pushback buffer."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "unread(b: ByteArray!, off: Int, len: Int)",
      "desc": "Pushes back a portion of an array of bytes by copying it to the front of the pushback buffer."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "unread(b: ByteArray!)",
      "desc": "Pushes back an array of bytes by copying it to the front of the pushback buffer."
    },
    {
      "type": "inherited-methods",
      "from": "FilterInputStream"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "read(b: ByteArray!)"
    },
    {
      "type": "inherited-methods",
      "from": "byte.length"
    },
    {
      "type": "inherited-methods",
      "from": "read(b, 0, b.length)"
    },
    {
      "type": "inherited-methods",
      "from": "in.read(b)"
    },
    {
      "type": "inherited-methods",
      "from": "FilterInputStream"
    }
  ]
}