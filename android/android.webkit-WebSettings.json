{
  "path": "android.webkit",
  "name": "WebSettings",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FORCE_DARK_AUTO",
      "desc": "Enable force dark dependent on the state of the WebView parent view."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FORCE_DARK_OFF",
      "desc": "Disable force dark, irrespective of the force dark mode of the WebView parent."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FORCE_DARK_ON",
      "desc": "Unconditionally enable force dark."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "LOAD_CACHE_ELSE_NETWORK",
      "desc": "Use cached resources when they are available, even if they have expired."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "LOAD_CACHE_ONLY",
      "desc": "Don't use the network, load from the cache."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "LOAD_DEFAULT",
      "desc": "Default cache usage mode."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "LOAD_NORMAL",
      "desc": "Normal cache usage mode."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "LOAD_NO_CACHE",
      "desc": "Don't use the cache, load from the network."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MENU_ITEM_NONE",
      "desc": "No menu items should be disabled."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MENU_ITEM_PROCESS_TEXT",
      "desc": "Disable all the action mode menu items for text processing."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MENU_ITEM_SHARE",
      "desc": "Disable menu item \"Share\"."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MENU_ITEM_WEB_SEARCH",
      "desc": "Disable menu item \"Web Search\"."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MIXED_CONTENT_ALWAYS_ALLOW",
      "desc": "In this mode, the WebView will allow a secure origin to load content from any other origin, even if that origin is insecure."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MIXED_CONTENT_COMPATIBILITY_MODE",
      "desc": "In this mode, the WebView will attempt to be compatible with the approach of a modern web browser with regard to mixed content."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MIXED_CONTENT_NEVER_ALLOW",
      "desc": "In this mode, the WebView will not allow a secure origin to load content from an insecure origin."
    },
    {
      "type": "ctor",
      "ctor": "<init>()"
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "enableSmoothTransition()",
      "desc": "Gets whether the WebView enables smooth transition while panning or zooming."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getAllowContentAccess()",
      "desc": "Gets whether this WebView supports content URL access."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getAllowFileAccess()",
      "desc": "Gets whether this WebView supports file access."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getAllowFileAccessFromFileURLs()",
      "desc": "Gets whether JavaScript running in the context of a file scheme URL can access content from other file scheme URLs."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getAllowUniversalAccessFromFileURLs()",
      "desc": "Gets whether JavaScript running in the context of a file scheme URL can access content from any origin."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getBlockNetworkImage()",
      "desc": "Gets whether the WebView does not load image resources from the network."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getBlockNetworkLoads()",
      "desc": "Gets whether the WebView does not load any resources from the network."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getBuiltInZoomControls()",
      "desc": "Gets whether the zoom mechanisms built into WebView are being used."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Int",
      "code": "getCacheMode()",
      "desc": "Gets the current setting for overriding the cache mode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "String",
      "code": "getCursiveFontFamily()",
      "desc": "Gets the cursive font family name.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getDatabaseEnabled()",
      "desc": "Gets whether the database storage API is enabled."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "String",
      "code": "getDatabasePath()",
      "desc": "Gets the path to where database storage API databases are saved.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Int",
      "code": "getDefaultFixedFontSize()",
      "desc": "Gets the default fixed font size."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Int",
      "code": "getDefaultFontSize()",
      "desc": "Gets the default font size."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "String",
      "code": "getDefaultTextEncodingName()",
      "desc": "Gets the default text encoding name.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getDefaultUserAgent(context:Â Context!)",
      "desc": "Returns the default User-Agent used by a WebView.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "WebSettings.ZoomDensity",
      "code": "getDefaultZoom()",
      "desc": "Gets the default zoom density of the page.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Int",
      "code": "getDisabledActionModeMenuItems()",
      "desc": "Gets the action mode menu items that are disabled, expressed in an integer field flag."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getDisplayZoomControls()",
      "desc": "Gets whether the WebView displays on-screen zoom controls when using the built-in zoom mechanisms."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getDomStorageEnabled()",
      "desc": "Gets whether the DOM Storage APIs are enabled."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "String",
      "code": "getFantasyFontFamily()",
      "desc": "Gets the fantasy font family name.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "String",
      "code": "getFixedFontFamily()",
      "desc": "Gets the fixed font family name.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getForceDark()",
      "desc": "Get the force dark mode for this WebView."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getJavaScriptCanOpenWindowsAutomatically()",
      "desc": "Gets whether JavaScript can open windows automatically."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getJavaScriptEnabled()",
      "desc": "Gets whether JavaScript is enabled."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "WebSettings.LayoutAlgorithm",
      "code": "getLayoutAlgorithm()",
      "desc": "Gets the current layout algorithm.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getLightTouchEnabled()",
      "desc": "Gets whether light touches are enabled."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getLoadWithOverviewMode()",
      "desc": "Gets whether this WebView loads pages in overview mode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getLoadsImagesAutomatically()",
      "desc": "Gets whether the WebView loads image resources."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getMediaPlaybackRequiresUserGesture()",
      "desc": "Gets whether the WebView requires a user gesture to play media."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Int",
      "code": "getMinimumFontSize()",
      "desc": "Gets the minimum font size."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Int",
      "code": "getMinimumLogicalFontSize()",
      "desc": "Gets the minimum logical font size."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Int",
      "code": "getMixedContentMode()",
      "desc": "Gets the current behavior of the WebView with regard to loading insecure content from a secure origin."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getOffscreenPreRaster()",
      "desc": "Gets whether this WebView should raster tiles when it is offscreen but attached to a window."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "WebSettings.PluginState",
      "code": "getPluginState()",
      "desc": "Gets the current state regarding whether plugins are enabled.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getSafeBrowsingEnabled()",
      "desc": "Gets whether Safe Browsing is enabled."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "String",
      "code": "getSansSerifFontFamily()",
      "desc": "Gets the sans-serif font family name.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getSaveFormData()",
      "desc": "Gets whether the WebView saves form data."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getSavePassword()",
      "desc": "Gets whether the WebView saves passwords."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "String",
      "code": "getSerifFontFamily()",
      "desc": "Gets the serif font family name.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "String",
      "code": "getStandardFontFamily()",
      "desc": "Gets the standard font family name.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "WebSettings.TextSize",
      "code": "getTextSize()",
      "desc": "Gets the text size of the page.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Int",
      "code": "getTextZoom()",
      "desc": "Gets the text zoom of the page in percent."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getUseWideViewPort()",
      "desc": "Gets whether the WebView supports the \"viewport\" HTML meta tag or will use a wide viewport."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "String",
      "code": "getUserAgentString()",
      "desc": "Gets the WebView's user-agent string.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setAllowContentAccess(allow:Â Boolean)",
      "desc": "Enables or disables content URL access within WebView."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setAllowFileAccess(allow:Â Boolean)",
      "desc": "Enables or disables file access within WebView."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setAllowFileAccessFromFileURLs(flag:Â Boolean)",
      "desc": "Sets whether cross-origin requests in the context of a file scheme URL should be allowed to access content from other file scheme URLs."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setAllowUniversalAccessFromFileURLs(flag:Â Boolean)",
      "desc": "Sets whether cross-origin requests in the context of a file scheme URL should be allowed to access content from any origin."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setAppCacheEnabled(flag:Â Boolean)",
      "desc": "Sets whether the Application Caches API should be enabled."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setAppCacheMaxSize(appCacheMaxSize:Â Long)",
      "desc": "Sets the maximum size for the Application Cache content."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setAppCachePath(appCachePath:Â String!)",
      "desc": "Sets the path to the Application Caches files."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setBlockNetworkImage(flag:Â Boolean)",
      "desc": "Sets whether the WebView should not load image resources from the network (resources accessed via http and https URI schemes)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setBlockNetworkLoads(flag:Â Boolean)",
      "desc": "Sets whether the WebView should not load resources from the network."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setBuiltInZoomControls(enabled:Â Boolean)",
      "desc": "Sets whether the WebView should use its built-in zoom mechanisms."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setCacheMode(mode:Â Int)",
      "desc": "Overrides the way the cache is used."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setCursiveFontFamily(font:Â String!)",
      "desc": "Sets the cursive font family name."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setDatabaseEnabled(flag:Â Boolean)",
      "desc": "Sets whether the database storage API is enabled."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setDatabasePath(databasePath:Â String!)",
      "desc": "Sets the path to where database storage API databases should be saved."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setDefaultFixedFontSize(size:Â Int)",
      "desc": "Sets the default fixed font size."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setDefaultFontSize(size:Â Int)",
      "desc": "Sets the default font size."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setDefaultTextEncodingName(encoding:Â String!)",
      "desc": "Sets the default text encoding name to use when decoding html pages."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setDefaultZoom(zoom:Â WebSettings.ZoomDensity!)",
      "desc": "Sets the default zoom density of the page."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setDisabledActionModeMenuItems(menuItems:Â Int)",
      "desc": "Disables the action mode menu items according to menuItems flag."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setDisplayZoomControls(enabled:Â Boolean)",
      "desc": "Sets whether the WebView should display on-screen zoom controls when using the built-in zoom mechanisms."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setDomStorageEnabled(flag:Â Boolean)",
      "desc": "Sets whether the DOM storage API is enabled."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setEnableSmoothTransition(enable:Â Boolean)",
      "desc": "Sets whether the WebView will enable smooth transition while panning or zooming or while the window hosting the WebView does not have focus."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setFantasyFontFamily(font:Â String!)",
      "desc": "Sets the fantasy font family name."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setFixedFontFamily(font:Â String!)",
      "desc": "Sets the fixed font family name."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setForceDark(forceDark:Â Int)",
      "desc": "Set the force dark mode for this WebView."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setGeolocationDatabasePath(databasePath:Â String!)",
      "desc": "Sets the path where the Geolocation databases should be saved."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setGeolocationEnabled(flag:Â Boolean)",
      "desc": "Sets whether Geolocation is enabled."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setJavaScriptCanOpenWindowsAutomatically(flag:Â Boolean)",
      "desc": "Tells JavaScript to open windows automatically."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setJavaScriptEnabled(flag:Â Boolean)",
      "desc": "Tells the WebView to enable JavaScript execution."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setLayoutAlgorithm(l:Â WebSettings.LayoutAlgorithm!)",
      "desc": "Sets the underlying layout algorithm."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setLightTouchEnabled(enabled:Â Boolean)",
      "desc": "Enables using light touches to make a selection and activate mouseovers."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setLoadWithOverviewMode(overview:Â Boolean)",
      "desc": "Sets whether the WebView loads pages in overview mode, that is, zooms out the content to fit on screen by width."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setLoadsImagesAutomatically(flag:Â Boolean)",
      "desc": "Sets whether the WebView should load image resources."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setMediaPlaybackRequiresUserGesture(require:Â Boolean)",
      "desc": "Sets whether the WebView requires a user gesture to play media."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setMinimumFontSize(size:Â Int)",
      "desc": "Sets the minimum font size."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setMinimumLogicalFontSize(size:Â Int)",
      "desc": "Sets the minimum logical font size."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setMixedContentMode(mode:Â Int)",
      "desc": "Configures the WebView's behavior when a secure origin attempts to load a resource from an insecure origin."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setNeedInitialFocus(flag:Â Boolean)",
      "desc": "Tells the WebView whether it needs to set a node to have focus when WebView#requestFocus(int, android.graphics.Rect) is called."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setOffscreenPreRaster(enabled:Â Boolean)",
      "desc": "Sets whether this WebView should raster tiles when it is offscreen but attached to a window."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setPluginState(state:Â WebSettings.PluginState!)",
      "desc": "Tells the WebView to enable, disable, or have plugins on demand."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setRenderPriority(priority:Â WebSettings.RenderPriority!)",
      "desc": "Sets the priority of the Render thread."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setSafeBrowsingEnabled(enabled:Â Boolean)",
      "desc": "Sets whether Safe Browsing is enabled."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setSansSerifFontFamily(font:Â String!)",
      "desc": "Sets the sans-serif font family name."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setSaveFormData(save:Â Boolean)",
      "desc": "Sets whether the WebView should save form data."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setSavePassword(save:Â Boolean)",
      "desc": "Sets whether the WebView should save passwords."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setSerifFontFamily(font:Â String!)",
      "desc": "Sets the serif font family name."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setStandardFontFamily(font:Â String!)",
      "desc": "Sets the standard font family name."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setSupportMultipleWindows(support:Â Boolean)",
      "desc": "Sets whether the WebView whether supports multiple windows."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setSupportZoom(support:Â Boolean)",
      "desc": "Sets whether the WebView should support zooming using its on-screen zoom controls and gestures."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextSize(t:Â WebSettings.TextSize!)",
      "desc": "Sets the text size of the page."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setTextZoom(textZoom:Â Int)",
      "desc": "Sets the text zoom of the page in percent."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setUseWideViewPort(use:Â Boolean)",
      "desc": "Sets whether the WebView should enable support for the \"viewport\" HTML meta tag or should use a wide viewport."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setUserAgentString(ua:Â String?)",
      "desc": "Sets the WebView's user-agent string."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "supportMultipleWindows()",
      "desc": "Gets whether the WebView supports multiple windows."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "supportZoom()",
      "desc": "Gets whether the WebView supports zoom."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "code": "LayoutAlgorithm",
      "desc": "Enum for controlling the layout of html."
    },
    {
      "type": "nested-classes",
      "code": "PluginState",
      "desc": "The plugin state effects how plugins are treated on a page."
    },
    {
      "type": "nested-classes",
      "code": "RenderPriority",
      "desc": ""
    },
    {
      "type": "nested-classes",
      "code": "TextSize",
      "desc": "Enum for specifying the text size."
    },
    {
      "type": "nested-classes",
      "code": "ZoomDensity",
      "desc": "Enum for specifying the WebView's desired density."
    }
  ]
}