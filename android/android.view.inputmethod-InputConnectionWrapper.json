{
  "path": "android.view.inputmethod",
  "name": "InputConnectionWrapper",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(target: InputConnection!, mutable: Boolean)\n            Initializes a wrapper."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "beginBatchEdit()",
      "desc": "Tell the editor that you are starting a batch of editor operations."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "clearMetaKeyStates(states: Int)",
      "desc": "Clear the given meta key pressed states in the given input connection."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "closeConnection()",
      "desc": "Called by the system up to only once to notify that the system is about to invalidate connection between the input method and the application."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "commitCompletion(text: CompletionInfo!)",
      "desc": "Commit a completion the user has selected from the possible ones previously reported to InputMethodSession#displayCompletions or InputMethodManager#displayCompletions."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "commitContent(inputContentInfo: InputContentInfo, flags: Int, opts: Bundle?)",
      "desc": "Called by the input method to commit content such as a PNG image to the editor."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "commitCorrection(correctionInfo: CorrectionInfo!)",
      "desc": "Commit a correction automatically performed on the raw user's input."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "commitText(text: CharSequence!, newCursorPosition: Int)",
      "desc": "Commit text to the text box and set the new cursor position."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "deleteSurroundingText(beforeLength: Int, afterLength: Int)",
      "desc": "Delete beforeLength characters of text before the current cursor position, and delete afterLength characters of text after the current cursor position, excluding the selection."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "deleteSurroundingTextInCodePoints(beforeLength: Int, afterLength: Int)",
      "desc": "A variant of deleteSurroundingText(int,int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "endBatchEdit()",
      "desc": "Tell the editor that you are done with a batch edit previously initiated with beginBatchEdit."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "finishComposingText()",
      "desc": "Have the text editor finish whatever composing text is currently active."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getCursorCapsMode(reqModes: Int)",
      "desc": "Retrieve the current capitalization mode in effect at the current cursor position in the text."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ExtractedText",
      "code": "getExtractedText(request: ExtractedTextRequest!, flags: Int)",
      "desc": "Retrieve the current text in the input connection's editor, and monitor for any changes to it.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Handler",
      "code": "getHandler()",
      "desc": "Called by the InputMethodManager to enable application developers to specify a dedicated Handler on which incoming IPC method calls from input methods will be dispatched.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CharSequence",
      "code": "getSelectedText(flags: Int)",
      "desc": "Gets the selected text, if any.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CharSequence",
      "code": "getTextAfterCursor(n: Int, flags: Int)",
      "desc": "Get n characters of text after the current cursor position.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CharSequence",
      "code": "getTextBeforeCursor(n: Int, flags: Int)",
      "desc": "Get n characters of text before the current cursor position.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "performContextMenuAction(id: Int)",
      "desc": "Perform a context menu action on the field."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "performEditorAction(editorAction: Int)",
      "desc": "Have the editor perform an action it has said it can do."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "performPrivateCommand(action: String!, data: Bundle!)",
      "desc": "API to send private commands from an input method to its connected editor."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "reportFullscreenMode(enabled: Boolean)",
      "desc": "Called back when the connected IME switches between fullscreen and normal modes."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "requestCursorUpdates(cursorUpdateMode: Int)",
      "desc": "Called by the input method to ask the editor for calling back InputMethodManager#updateCursorAnchorInfo(android.view.View, CursorAnchorInfo) to notify cursor/anchor locations."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "sendKeyEvent(event: KeyEvent!)",
      "desc": "Send a key event to the process that is currently attached through this input connection."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "setComposingRegion(start: Int, end: Int)",
      "desc": "Mark a certain region of text as composing text."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "setComposingText(text: CharSequence!, newCursorPosition: Int)",
      "desc": "Replace the currently composing text with the given text, and set the new cursor position."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "setSelection(start: Int, end: Int)",
      "desc": "Set the selection of the text editor."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTarget(target: InputConnection!)",
      "desc": "Change the target of the input connection."
    },
    {
      "type": "inherited-constants",
      "from": "InputConnection"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "CURSOR_UPDATE_IMMEDIATE"
    },
    {
      "type": "inherited-constants",
      "from": "InputMethodManager#updateCursorAnchorInfo(android.view.View, CursorAnchorInfo)"
    },
    {
      "type": "inherited-constants",
      "from": "CURSOR_UPDATE_MONITOR"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "CURSOR_UPDATE_MONITOR"
    },
    {
      "type": "inherited-constants",
      "from": "InputMethodManager#updateCursorAnchorInfo(android.view.View, CursorAnchorInfo)"
    },
    {
      "type": "inherited-constants",
      "from": "InputConnection#requestCursorUpdates(int)"
    },
    {
      "type": "inherited-constants",
      "from": "CURSOR_UPDATE_IMMEDIATE"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "GET_EXTRACTED_TEXT_MONITOR"
    },
    {
      "type": "inherited-constants",
      "from": "getExtractedText"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "GET_TEXT_WITH_STYLES"
    },
    {
      "type": "inherited-constants",
      "from": "getTextAfterCursor"
    },
    {
      "type": "inherited-constants",
      "from": "getTextBeforeCursor"
    },
    {
      "type": "inherited-constants",
      "from": "getTextAfterCursor"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "INPUT_CONTENT_GRANT_READ_URI_PERMISSION"
    },
    {
      "type": "inherited-constants",
      "from": "InputContentInfo"
    },
    {
      "type": "inherited-constants",
      "from": "grantUriPermissions"
    },
    {
      "type": "inherited-constants",
      "from": "<grant-uri-permissions>"
    },
    {
      "type": "inherited-constants",
      "from": "InputContentInfo#requestPermission()"
    },
    {
      "type": "inherited-constants",
      "from": "InputContentInfo"
    }
  ]
}