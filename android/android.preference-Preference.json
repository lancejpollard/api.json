{
  "path": "android.preference",
  "name": "Preference",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DEFAULT_ORDER",
      "desc": "Specify for setOrder(int) if a specific order is not required."
    },
    {
      "type": "ctor",
      "ctor": "<init>(context: Context!, attrs: AttributeSet!, defStyleAttr: Int, defStyleRes: Int)\n            Perform inflation from XML and apply a class-specific base style."
    },
    {
      "type": "ctor",
      "ctor": "<init>(context: Context!, attrs: AttributeSet!, defStyleAttr: Int)\n            Perform inflation from XML and apply a class-specific base style."
    },
    {
      "type": "ctor",
      "ctor": "<init>(context: Context!, attrs: AttributeSet!)\n            Constructor that is called when inflating a Preference from XML."
    },
    {
      "type": "ctor",
      "ctor": "<init>(context: Context!)\n            Constructor to create a Preference."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "compareTo(other: Preference!)",
      "desc": "Compares Preference objects based on order (if set), otherwise alphabetically on the titles."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Context",
      "code": "getContext()",
      "desc": "Returns the android.content.Context of this Preference.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getDependency()",
      "desc": "Returns the key of the dependency on this Preference.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "SharedPreferences.Editor",
      "code": "getEditor()",
      "desc": "Returns an SharedPreferences.Editor where this Preference can save its value(s).",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Bundle",
      "code": "getExtras()",
      "desc": "Return the extras Bundle object associated with this preference, creating a new Bundle if there currently isn't one.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getFragment()",
      "desc": "Return the fragment class name associated with this Preference.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Drawable",
      "code": "getIcon()",
      "desc": "Returns the icon of this Preference.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Intent",
      "code": "getIntent()",
      "desc": "Return the Intent associated with this Preference.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getKey()",
      "desc": "Gets the key for this Preference, which is also the key used for storing values into SharedPreferences or PreferenceDataStore.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getLayoutResource()",
      "desc": "Gets the layout resource that will be shown as the View for this Preference."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Preference.OnPreferenceChangeListener",
      "code": "getOnPreferenceChangeListener()",
      "desc": "Returns the callback to be invoked when this Preference is changed by the user (but before the internal state has been updated).",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Preference.OnPreferenceClickListener",
      "code": "getOnPreferenceClickListener()",
      "desc": "Returns the callback to be invoked when this Preference is clicked.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getOrder()",
      "desc": "Gets the order of this Preference with respect to other Preference objects on the same level."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PreferenceGroup",
      "code": "getParent()",
      "desc": "Returns the PreferenceGroup which is this Preference assigned to or null if this preference is not assigned to any group or is a root Preference.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableSet",
      "code": "getPersistedStringSet(defaultReturnValue: MutableSet<String!>!)",
      "desc": "Attempts to get a persisted set of Strings if this Preference is persistent.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PreferenceDataStore",
      "code": "getPreferenceDataStore()",
      "desc": "Returns PreferenceDataStore used by this Preference.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PreferenceManager",
      "code": "getPreferenceManager()",
      "desc": "Gets the PreferenceManager that manages this Preference object's tree.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "SharedPreferences",
      "code": "getSharedPreferences()",
      "desc": "Returns the SharedPreferences where this Preference can read its value(s).",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getShouldDisableView()",
      "desc": "Checks whether this Preference should disable its view when it's action is disabled."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CharSequence",
      "code": "getSummary()",
      "desc": "Returns the summary of this Preference.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CharSequence",
      "code": "getTitle()",
      "desc": "Returns the title of this Preference.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getTitleRes()",
      "desc": "Returns the title resource ID of this Preference."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View",
      "code": "getView(convertView: View!, parent: ViewGroup!)",
      "desc": "Gets the View that will be shown in the PreferenceActivity.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getWidgetLayoutResource()",
      "desc": "Gets the layout resource for the controllable widget portion of this Preference."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "hasKey()",
      "desc": "Checks whether this Preference has a valid key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isEnabled()",
      "desc": "Checks whether this Preference should be enabled in the list."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isIconSpaceReserved()",
      "desc": "Gets whether the space this preference icon view is reserved."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isPersistent()",
      "desc": "Checks whether this Preference is persistent."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isRecycleEnabled()",
      "desc": "Checks whether this Preference has enabled to have its view recycled when used in the list view."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isSelectable()",
      "desc": "Checks whether this Preference should be selectable in the list."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isSingleLineTitle()",
      "desc": "Gets whether the title of this preference is constrained to a single line."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "notifyDependencyChange(disableDependents: Boolean)",
      "desc": "Notifies any listening dependents of a change that affects the dependency."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onDependencyChanged(dependency: Preference!, disableDependent: Boolean)",
      "desc": "Called when the dependency changes."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onParentChanged(parent: Preference!, disableChild: Boolean)",
      "desc": "Called when the implicit parent dependency changes."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Bundle",
      "code": "peekExtras()",
      "desc": "Return the extras Bundle object associated with this preference, returning null if there is not currently one.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "persistStringSet(values: MutableSet<String!>!)",
      "desc": "Attempts to persist a set of Strings if this Preference is persistent."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "restoreHierarchyState(container: Bundle!)",
      "desc": "Restore this Preference hierarchy's previously saved state from the given container."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "saveHierarchyState(container: Bundle!)",
      "desc": "Store this Preference hierarchy's frozen state into the given container."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setDefaultValue(defaultValue: Any!)",
      "desc": "Sets the default value for this Preference, which will be set either if persistence is off or persistence is on and the preference is not found in the persistent storage."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setDependency(dependencyKey: String!)",
      "desc": "Sets the key of a Preference that this Preference will depend on."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setEnabled(enabled: Boolean)",
      "desc": "Sets whether this Preference is enabled."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFragment(fragment: String!)",
      "desc": "Sets the class name of a fragment to be shown when this Preference is clicked."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setIcon(icon: Drawable!)",
      "desc": "Sets the icon for this Preference with a Drawable."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setIcon(iconResId: Int)",
      "desc": "Sets the icon for this Preference with a resource ID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setIconSpaceReserved(iconSpaceReserved: Boolean)",
      "desc": "Sets whether to reserve the space of this Preference icon view when no icon is provided."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setIntent(intent: Intent!)",
      "desc": "Sets an Intent to be used for Context#startActivity(Intent) when this Preference is clicked."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setKey(key: String!)",
      "desc": "Sets the key for this Preference, which is used as a key to the SharedPreferences or PreferenceDataStore."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLayoutResource(layoutResId: Int)",
      "desc": "Sets the layout resource that is inflated as the View to be shown for this Preference."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOnPreferenceChangeListener(onPreferenceChangeListener: Preference.OnPreferenceChangeListener!)",
      "desc": "Sets the callback to be invoked when this Preference is changed by the user (but before the internal state has been updated)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOnPreferenceClickListener(onPreferenceClickListener: Preference.OnPreferenceClickListener!)",
      "desc": "Sets the callback to be invoked when this Preference is clicked."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOrder(order: Int)",
      "desc": "Sets the order of this Preference with respect to other Preference objects on the same level."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPersistent(persistent: Boolean)",
      "desc": "Sets whether this Preference is persistent."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPreferenceDataStore(dataStore: PreferenceDataStore!)",
      "desc": "Sets a PreferenceDataStore to be used by this Preference instead of using android.content.SharedPreferences."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setRecycleEnabled(enabled: Boolean)",
      "desc": "Sets whether this Preference has enabled to have its view recycled when used in the list view."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSelectable(selectable: Boolean)",
      "desc": "Sets whether this Preference is selectable."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setShouldDisableView(shouldDisableView: Boolean)",
      "desc": "Sets whether this Preference should disable its view when it gets disabled."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSingleLineTitle(singleLineTitle: Boolean)",
      "desc": "Sets whether to constrain the title of this Preference to a single line instead of letting it wrap onto multiple lines."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSummary(summary: CharSequence!)",
      "desc": "Sets the summary for this Preference with a CharSequence."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSummary(summaryResId: Int)",
      "desc": "Sets the summary for this Preference with a resource ID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTitle(title: CharSequence!)",
      "desc": "Sets the title for this Preference with a CharSequence."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTitle(titleResId: Int)",
      "desc": "Sets the title for this Preference with a resource ID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setWidgetLayoutResource(widgetLayoutResId: Int)",
      "desc": "Sets the layout for the controllable widget portion of this Preference."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "shouldCommit()",
      "desc": "Returns whether the Preference should commit its saved value(s) in getEditor()."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "shouldDisableDependents()",
      "desc": "Checks whether this preference's dependents should currently be disabled."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "callChangeListener(newValue: Any!)",
      "desc": "Call this method after the user changes the preference, but before the internal state is set."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Preference",
      "code": "findPreferenceInHierarchy(key: String!)",
      "desc": "Finds a Preference in this hierarchy (the whole thing, even above/below your PreferenceScreen screen break) with the given key.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getPersistedBoolean(defaultReturnValue: Boolean)",
      "desc": "Attempts to get a persisted boolean if this Preference is persistent."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Float",
      "code": "getPersistedFloat(defaultReturnValue: Float)",
      "desc": "Attempts to get a persisted float if this Preference is persistent."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "getPersistedInt(defaultReturnValue: Int)",
      "desc": "Attempts to get a persisted int if this Preference is persistent."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Long",
      "code": "getPersistedLong(defaultReturnValue: Long)",
      "desc": "Attempts to get a persisted long if this Preference is persistent."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "String",
      "code": "getPersistedString(defaultReturnValue: String!)",
      "desc": "Attempts to get a persisted String if this Preference is persistent.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "notifyChanged()",
      "desc": "Should be called when the data of this Preference has changed."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "notifyHierarchyChanged()",
      "desc": "Should be called when a Preference has been added/removed from this group, or the ordering should be re-evaluated."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onAttachedToActivity()",
      "desc": "Called when the Preference hierarchy has been attached to the PreferenceActivity."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onAttachedToHierarchy(preferenceManager: PreferenceManager!)",
      "desc": "Called when this Preference has been attached to a Preference hierarchy."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onBindView(view: View!)",
      "desc": "Binds the created View to the data for this Preference."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onClick()",
      "desc": "Processes a click on the preference."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "View",
      "code": "onCreateView(parent: ViewGroup!)",
      "desc": "Creates the View to be shown for this Preference in the PreferenceActivity.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Any",
      "code": "onGetDefaultValue(a: TypedArray!, index: Int)",
      "desc": "Called when a Preference is being inflated and the default value attribute needs to be read.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onPrepareForRemoval()",
      "desc": "Called when this Preference is being removed from the hierarchy."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onRestoreInstanceState(state: Parcelable!)",
      "desc": "Hook allowing a Preference to re-apply a representation of its internal state that had previously been generated by onSaveInstanceState."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Parcelable",
      "code": "onSaveInstanceState()",
      "desc": "Hook allowing a Preference to generate a representation of its internal state that can later be used to create a new instance with that same state.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onSetInitialValue(restorePersistedValue: Boolean, defaultValue: Any!)",
      "desc": "Implement this to set the initial value of the Preference."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "persistBoolean(value: Boolean)",
      "desc": "Attempts to persist a boolean if this Preference is persistent."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "persistFloat(value: Float)",
      "desc": "Attempts to persist a long if this Preference is persistent."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "persistInt(value: Int)",
      "desc": "Attempts to persist an int if this Preference is persistent."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "persistLong(value: Long)",
      "desc": "Attempts to persist a long if this Preference is persistent."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "persistString(value: String!)",
      "desc": "Attempts to persist a String if this Preference is persistent."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "shouldPersist()",
      "desc": "Checks whether, at the given time this method is called, this Preference should store/restore its value(s) into the SharedPreferences or into PreferenceDataStore if assigned."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "open",
      "code": "BaseSavedState",
      "desc": "A base class for managing the instance state of a Preference."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnPreferenceChangeListener",
      "desc": "Interface definition for a callback to be invoked when the value of this Preference has been changed by the user and is about to be set and/or persisted."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnPreferenceClickListener",
      "desc": "Interface definition for a callback to be invoked when a Preference is clicked."
    }
  ]
}