{
  "path": "android.text.format",
  "name": "Time",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "EPOCH_JULIAN_DAY",
      "desc": "The Julian day of the epoch, that is, January 1, 1970 on the Gregorian calendar."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FRIDAY",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "HOUR",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MINUTE",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MONDAY",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MONDAY_BEFORE_JULIAN_EPOCH",
      "desc": "The Julian day of the Monday in the week of the epoch, December 29, 1969 on the Gregorian calendar."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MONTH",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MONTH_DAY",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SATURDAY",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SECOND",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SUNDAY",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "THURSDAY",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "TIMEZONE_UTC",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TUESDAY",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "WEDNESDAY",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "WEEK_DAY",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "WEEK_NUM",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "YEAR",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "YEAR_DAY",
      "desc": ""
    },
    {
      "type": "ctor",
      "ctor": "<init>(timezoneId: String!)\n            Construct a Time object in the timezone named by the string argument \"timezone\"."
    },
    {
      "type": "ctor",
      "ctor": "<init>()\n            Construct a Time object in the default timezone."
    },
    {
      "type": "ctor",
      "ctor": "<init>(other: Time!)\n            A copy constructor."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "after(that: Time!)",
      "desc": "Returns true if the time represented by this Time object occurs after the given time."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "before(that: Time!)",
      "desc": "Returns true if the time represented by this Time object occurs before the given time."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "clear(timezoneId: String!)",
      "desc": "Clears all values, setting the timezone to the given timezone."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "compare(a: Time!, b: Time!)",
      "desc": "Compare two Time objects and return a negative number if a is less than b, a positive number if a is greater than b, or 0 if they are equal."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "format(format: String!)",
      "desc": "Print the current value given the format string provided.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "format2445()",
      "desc": "Format according to RFC 2445 DATE-TIME type.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "format3339(allDay: Boolean)",
      "desc": "Return a string in the RFC 3339 format.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getActualMaximum(field: Int)",
      "desc": "Return the maximum possible value for the given field given the value of the other fields."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getCurrentTimezone()",
      "desc": "Returns the timezone string that is currently set for the device.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getJulianDay(millis: Long, gmtoffSeconds: Long)",
      "desc": "Computes the Julian day number for a point in time in a particular timezone."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getJulianMondayFromWeeksSinceEpoch(week: Int)",
      "desc": "Takes a number of weeks since the epoch and calculates the Julian day of the Monday for that week."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getWeekNumber()",
      "desc": "Computes the week number according to ISO 8601."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getWeeksSinceEpochFromJulianDay(julianDay: Int, firstDayOfWeek: Int)",
      "desc": "Returns the week since EPOCH_JULIAN_DAY (Jan 1, 1970) adjusted for first day of week."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isEpoch(time: Time!)",
      "desc": "Returns true if the instant of the supplied time would be for the Gregorian calendar date January 1, 1970 for a user observing UTC , i."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "normalize(ignoreDst: Boolean)",
      "desc": "Ensures the values in each field are in range."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "parse(s: String!)",
      "desc": "Parses a date-time string in either the RFC 2445 format or an abbreviated format that does not include the \"time\" field."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "parse3339(s: String!)",
      "desc": "Parse a time in RFC 3339 format."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "set(millis: Long)",
      "desc": "Sets the fields in this Time object given the UTC milliseconds."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "set(that: Time!)",
      "desc": "Copy the value of that to this Time object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "set(second: Int, minute: Int, hour: Int, monthDay: Int, month: Int, year: Int)",
      "desc": "Sets the fields."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "set(monthDay: Int, month: Int, year: Int)",
      "desc": "Sets the date from the given fields."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "setJulianDay(julianDay: Int)",
      "desc": "Sets the time from the given Julian day number, which must be based on the same timezone that is set in this Time object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setToNow()",
      "desc": "Sets the time of the given Time object to the current time."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "switchTimezone(timezone: String!)",
      "desc": "Convert this time object so the time represented remains the same, but is instead located in a different timezone."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "toMillis(ignoreDst: Boolean)",
      "desc": "Converts this time to milliseconds."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": "Return the current time in YYYYMMDDTHHMMSS<tz> format"
    }
  ]
}