{
  "path": "android.os",
  "name": "Process",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "BLUETOOTH_UID",
      "desc": "Defines the UID/GID for the Bluetooth service process."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FIRST_APPLICATION_UID",
      "desc": "Defines the start of a range of UIDs (and GIDs), going from this number to LAST_APPLICATION_UID that are reserved for assigning to applications."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "INVALID_UID",
      "desc": "An invalid UID value."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "LAST_APPLICATION_UID",
      "desc": "Last of application-specific UIDs starting at FIRST_APPLICATION_UID."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PHONE_UID",
      "desc": "Defines the UID/GID under which the telephony code runs."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ROOT_UID",
      "desc": "Defines the root UID."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SHELL_UID",
      "desc": "Defines the UID/GID for the user shell."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SIGNAL_KILL",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SIGNAL_QUIT",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SIGNAL_USR1",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SYSTEM_UID",
      "desc": "Defines the UID/GID under which system code runs."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "THREAD_PRIORITY_AUDIO",
      "desc": "Standard priority of audio threads."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "THREAD_PRIORITY_BACKGROUND",
      "desc": "Standard priority background threads."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "THREAD_PRIORITY_DEFAULT",
      "desc": "Standard priority of application threads."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "THREAD_PRIORITY_DISPLAY",
      "desc": "Standard priority of system display threads, involved in updating the user interface."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "THREAD_PRIORITY_FOREGROUND",
      "desc": "Standard priority of threads that are currently running a user interface that the user is interacting with."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "THREAD_PRIORITY_LESS_FAVORABLE",
      "desc": "Minimum increment to make a priority less favorable."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "THREAD_PRIORITY_LOWEST",
      "desc": "Lowest available thread priority."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "THREAD_PRIORITY_MORE_FAVORABLE",
      "desc": "Minimum increment to make a priority more favorable."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "THREAD_PRIORITY_URGENT_AUDIO",
      "desc": "Standard priority of the most important audio threads."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "THREAD_PRIORITY_URGENT_DISPLAY",
      "desc": "Standard priority of the most important display threads, for compositing the screen and retrieving input events."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "THREAD_PRIORITY_VIDEO",
      "desc": "Standard priority of video threads."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "WIFI_UID",
      "desc": "Defines the UID/GID for the WIFI native processes like wificond, supplicant, hostapd, vendor HAL, etc."
    },
    {
      "type": "ctor",
      "ctor": "<init>()"
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Long",
      "code": "getElapsedCpuTime()",
      "desc": "Returns elapsed milliseconds of the time this process has run."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "IntArray",
      "code": "getExclusiveCores()",
      "desc": "On some devices, the foreground process may have one or more CPU cores exclusively reserved for it.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "getGidForName(name: String!)",
      "desc": "Returns the GID assigned to a particular user name, or -1 if there is none."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Long",
      "code": "getStartElapsedRealtime()",
      "desc": "Return the SystemClock#elapsedRealtime() at which this process was started."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Long",
      "code": "getStartUptimeMillis()",
      "desc": "Return the SystemClock#uptimeMillis() at which this process was started."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "getThreadPriority(tid: Int)",
      "desc": "Return the current priority of a thread, based on Linux priorities."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "getUidForName(name: String!)",
      "desc": "Returns the UID assigned to a particular user name, or -1 if there is none."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Boolean",
      "code": "is64Bit()",
      "desc": "Returns true if the current process is a 64-bit runtime."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isApplicationUid(uid: Int)",
      "desc": "Returns whether the given uid belongs to an application."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Boolean",
      "code": "isIsolated()",
      "desc": "Returns whether the current process is in an isolated sandbox."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Unit",
      "code": "killProcess(pid: Int)",
      "desc": "Kill the process with the given PID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "myPid()",
      "desc": "Returns the identifier of this process, which can be used with killProcess and sendSignal."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "myTid()",
      "desc": "Returns the identifier of the calling thread, which be used with setThreadPriority(int,int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "myUid()",
      "desc": "Returns the identifier of this process's uid."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "UserHandle",
      "code": "myUserHandle()",
      "desc": "Returns this process's user handle.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Unit",
      "code": "sendSignal(pid: Int, signal: Int)",
      "desc": "Send a signal to the given process."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Unit",
      "code": "setThreadPriority(tid: Int, priority: Int)",
      "desc": "Set the priority of a thread, based on Linux priorities."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Unit",
      "code": "setThreadPriority(priority: Int)",
      "desc": "Set the priority of the calling thread, based on Linux priorities."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Boolean",
      "code": "supportsProcesses()",
      "desc": "Determine whether the current environment supports multiple processes."
    }
  ]
}