{
  "path": "android.util",
  "name": "Half",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Short",
      "code": "EPSILON",
      "desc": "Epsilon is the difference between 1."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Short",
      "code": "LOWEST_VALUE",
      "desc": "Smallest negative value a half-precision float may have."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MAX_EXPONENT",
      "desc": "Maximum exponent a finite half-precision float may have."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Short",
      "code": "MAX_VALUE",
      "desc": "Maximum positive finite value a half-precision float may have."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MIN_EXPONENT",
      "desc": "Minimum exponent a normalized half-precision float may have."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Short",
      "code": "MIN_NORMAL",
      "desc": "Smallest positive normal value a half-precision float may have."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Short",
      "code": "MIN_VALUE",
      "desc": "Smallest positive non-zero value a half-precision float may have."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Short",
      "code": "NEGATIVE_INFINITY",
      "desc": "Negative infinity of type half-precision float."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Short",
      "code": "NEGATIVE_ZERO",
      "desc": "Negative 0 of type half-precision float."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Short",
      "code": "NaN",
      "desc": "A Not-a-Number representation of a half-precision float."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Short",
      "code": "POSITIVE_INFINITY",
      "desc": "Positive infinity of type half-precision float."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Short",
      "code": "POSITIVE_ZERO",
      "desc": "Positive 0 of type half-precision float."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SIZE",
      "desc": "The number of bits used to represent a half-precision float value."
    },
    {
      "type": "ctor",
      "ctor": "<init>(value: Short)\n            Constructs a newly allocated Half object that represents the half-precision float type argument."
    },
    {
      "type": "ctor",
      "ctor": "<init>(value: Float)\n            Constructs a newly allocated Half object that represents the argument converted to a half-precision float."
    },
    {
      "type": "ctor",
      "ctor": "<init>(value: Double)\n            Constructs a newly allocated Half object that represents the argument converted to a half-precision float."
    },
    {
      "type": "ctor",
      "ctor": "<init>(value: String)\n            Constructs a newly allocated Half object that represents the half-precision float value represented by the string."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Short",
      "code": "abs(h: Short)",
      "desc": "Returns the absolute value of the specified half-precision float."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Short",
      "code": "ceil(h: Short)",
      "desc": "Returns the smallest half-precision float value toward negative infinity greater than or equal to the specified half-precision float value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "compare(x: Short, y: Short)",
      "desc": "Compares the two specified half-precision float values."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "compareTo(other: Half)",
      "desc": "Compares the two specified half-precision float values."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Short",
      "code": "copySign(magnitude: Short, sign: Short)",
      "desc": "Returns the first parameter with the sign of the second parameter."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Compares this object against the specified object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Boolean",
      "code": "equals(x: Short, y: Short)",
      "desc": "Returns true if the two half-precision float values are equal."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Short",
      "code": "floor(h: Short)",
      "desc": "Returns the largest half-precision float value toward positive infinity less than or equal to the specified half-precision float value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "getExponent(h: Short)",
      "desc": "Returns the unbiased exponent used in the representation of the specified half-precision float value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "getSign(h: Short)",
      "desc": "Returns the sign of the specified half-precision float."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "getSignificand(h: Short)",
      "desc": "Returns the significand, or mantissa, used in the representation of the specified half-precision float value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Boolean",
      "code": "greater(x: Short, y: Short)",
      "desc": "Returns true if the first half-precision float value is greater (larger toward positive infinity) than the second half-precision float value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Boolean",
      "code": "greaterEquals(x: Short, y: Short)",
      "desc": "Returns true if the first half-precision float value is greater (larger toward positive infinity) than or equal to the second half-precision float value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "halfToIntBits(h: Short)",
      "desc": "Returns a representation of the specified half-precision float value according to the bit layout described in Half."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "halfToRawIntBits(h: Short)",
      "desc": "Returns a representation of the specified half-precision float value according to the bit layout described in Half."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Short",
      "code": "halfToShortBits(h: Short)",
      "desc": "Returns a representation of the specified half-precision float value according to the bit layout described in Half."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Short",
      "code": "halfValue()",
      "desc": "Returns the half-precision value of this Half as a short containing the bit representation described in Half."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Returns a hash code for this Half object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "hashCode(h: Short)",
      "desc": "Returns a hash code for a half-precision float value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Short",
      "code": "intBitsToHalf(bits: Int)",
      "desc": "Returns the half-precision float value corresponding to a given bit representation."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Boolean",
      "code": "isInfinite(h: Short)",
      "desc": "Returns true if the specified half-precision float value represents infinity, false otherwise."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isNaN()",
      "desc": "Returns true if this Half value represents a Not-a-Number, false otherwise."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Boolean",
      "code": "isNaN(h: Short)",
      "desc": "Returns true if the specified half-precision float value represents a Not-a-Number, false otherwise."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Boolean",
      "code": "isNormalized(h: Short)",
      "desc": "Returns true if the specified half-precision float value is normalized (does not have a subnormal representation)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Boolean",
      "code": "less(x: Short, y: Short)",
      "desc": "Returns true if the first half-precision float value is less (smaller toward negative infinity) than the second half-precision float value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Boolean",
      "code": "lessEquals(x: Short, y: Short)",
      "desc": "Returns true if the first half-precision float value is less (smaller toward negative infinity) than or equal to the second half-precision float value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Short",
      "code": "max(x: Short, y: Short)",
      "desc": "Returns the larger of two half-precision float values (the value closest to positive infinity)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Short",
      "code": "min(x: Short, y: Short)",
      "desc": "Returns the smaller of two half-precision float values (the value closest to negative infinity)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Short",
      "code": "parseHalf(s: String)",
      "desc": "Returns the half-precision float value represented by the specified string."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Short",
      "code": "round(h: Short)",
      "desc": "Returns the closest integral half-precision float value to the specified half-precision float value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Byte",
      "code": "toByte()",
      "desc": "Returns the value of this Half as a byte after a narrowing primitive conversion."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Double",
      "code": "toDouble()",
      "desc": "Returns the value of this Half as a double after a widening primitive conversion."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "toFloat()",
      "desc": "Returns the value of this Half as a float after a widening primitive conversion."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Float",
      "code": "toFloat(h: Short)",
      "desc": "Converts the specified half-precision float value into a single-precision float value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Short",
      "code": "toHalf(f: Float)",
      "desc": "Converts the specified single-precision float value into a half-precision float value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "String",
      "code": "toHexString(h: Short)",
      "desc": "Returns a hexadecimal string representation of the specified half-precision float value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "toInt()",
      "desc": "Returns the value of this Half as a int after a narrowing primitive conversion."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "toLong()",
      "desc": "Returns the value of this Half as a long after a narrowing primitive conversion."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Short",
      "code": "toShort()",
      "desc": "Returns the value of this Half as a short after a narrowing primitive conversion."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns a string representation of the specified half-precision float value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "String",
      "code": "toString(h: Short)",
      "desc": "Returns a string representation of the specified half-precision float value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Short",
      "code": "trunc(h: Short)",
      "desc": "Returns the truncated half-precision float value of the specified half-precision float value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Half",
      "code": "valueOf(h: Short)",
      "desc": "Returns a Half instance representing the specified half-precision float value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Half",
      "code": "valueOf(f: Float)",
      "desc": "Returns a Half instance representing the specified float value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Half",
      "code": "valueOf(s: String)",
      "desc": "Returns a Half instance representing the specified string value."
    }
  ]
}