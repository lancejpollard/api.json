{
  "path": "android.icu.text",
  "name": "Transliterator",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FORWARD",
      "desc": "Direction constant indicating the forward direction in a transliterator, e."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "REVERSE",
      "desc": "Direction constant indicating the reverse direction in a transliterator, e."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Transliterator",
      "code": "createFromRules(ID: String!, rules: String!, dir: Int)",
      "desc": "Returns a Transliterator object constructed from the given rule string.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "filteredTransliterate(text: Replaceable!, index: Transliterator.Position!, incremental: Boolean)",
      "desc": "Transliterate a substring of text, as specified by index, taking filters into account."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "finishTransliteration(text: Replaceable!, index: Transliterator.Position!)",
      "desc": "Finishes any pending transliterations that were waiting for more characters."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Enumeration",
      "code": "getAvailableIDs()",
      "desc": "Returns an enumeration over the programmatic names of registered Transliterator objects.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Enumeration",
      "code": "getAvailableSources()",
      "desc": "Returns an enumeration over the source names of registered transliterators.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Enumeration",
      "code": "getAvailableTargets(source: String!)",
      "desc": "Returns an enumeration over the target names of registered transliterators having a given source name.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Enumeration",
      "code": "getAvailableVariants(source: String!, target: String!)",
      "desc": "Returns an enumeration over the variant names of registered transliterators having a given source name and target name.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "String",
      "code": "getDisplayName(ID: String!)",
      "desc": "Returns a name for this transliterator that is appropriate for display to the user in the default DISPLAY locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getDisplayName(id: String!, inLocale: Locale!)",
      "desc": "Returns a name for this transliterator that is appropriate for display to the user in the given locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getDisplayName(id: String!, inLocale: ULocale!)",
      "desc": "Returns a name for this transliterator that is appropriate for display to the user in the given locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getElements()",
      "desc": "Return the elements that make up this transliterator.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "UnicodeFilter",
      "code": "getFilter()",
      "desc": "Returns the filter used by this transliterator, or null if this transliterator uses no filter.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getID()",
      "desc": "Returns a programmatic identifier for this transliterator.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Transliterator",
      "code": "getInstance(ID: String!)",
      "desc": "Returns a Transliterator object given its ID.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Transliterator",
      "code": "getInstance(ID: String!, dir: Int)",
      "desc": "Returns a Transliterator object given its ID.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Transliterator",
      "code": "getInverse()",
      "desc": "Returns this transliterator's inverse.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getMaximumContextLength()",
      "desc": "Returns the length of the longest context required by this transliterator."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "UnicodeSet",
      "code": "getSourceSet()",
      "desc": "Returns the set of all characters that may be modified in the input text by this Transliterator.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "UnicodeSet",
      "code": "getTargetSet()",
      "desc": "Returns the set of all characters that may be generated as replacement text by this transliterator.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFilter(filter: UnicodeFilter!)",
      "desc": "Changes the filter used by this transliterator."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toRules(escapeUnprintable: Boolean)",
      "desc": "Returns a rule string for this transliterator.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "transliterate(text: Replaceable!, start: Int, limit: Int)",
      "desc": "Transliterates a segment of a string, with optional filtering."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "transliterate(text: Replaceable!)",
      "desc": "Transliterates an entire string in place."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "transliterate(text: String!)",
      "desc": "Transliterate an entire string and returns the result.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "transliterate(text: Replaceable!, index: Transliterator.Position!, insertion: String!)",
      "desc": "Transliterates the portion of the text buffer that can be transliterated unambiguosly after new text has been inserted, typically as a result of a keyboard event."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "transliterate(text: Replaceable!, index: Transliterator.Position!, insertion: Int)",
      "desc": "Transliterates the portion of the text buffer that can be transliterated unambiguosly after a new character has been inserted, typically as a result of a keyboard event."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "transliterate(text: Replaceable!, index: Transliterator.Position!)",
      "desc": "Transliterates the portion of the text buffer that can be transliterated unambiguosly."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "open",
      "code": "Position",
      "desc": "Position structure for incremental transliteration."
    }
  ]
}