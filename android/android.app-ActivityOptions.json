{
  "path": "android.app",
  "name": "ActivityOptions",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_USAGE_TIME_REPORT",
      "desc": "A long in the extras delivered by requestUsageTimeReport that contains the total time (in ms) the user spent in the app flow."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_USAGE_TIME_REPORT_PACKAGES",
      "desc": "A Bundle in the extras delivered by requestUsageTimeReport that contains detailed information about the time spent in each package associated with the app; each key is a package name, whose value is a long containing the time (in ms)."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Rect",
      "code": "getLaunchBounds()",
      "desc": "Returns the bounds that should be used to launch the activity.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getLaunchDisplayId()",
      "desc": "Gets the id of the display where activity should be launched."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getLockTaskMode()",
      "desc": "Gets whether the activity is to be launched into LockTask mode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ActivityOptions",
      "code": "makeBasic()",
      "desc": "Create a basic ActivityOptions that has no special animation associated with it.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ActivityOptions",
      "code": "makeClipRevealAnimation(source: View!, startX: Int, startY: Int, width: Int, height: Int)",
      "desc": "Create an ActivityOptions specifying an animation where the new activity is revealed from a small originating area of the screen to its final full representation.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ActivityOptions",
      "code": "makeCustomAnimation(context: Context!, enterResId: Int, exitResId: Int)",
      "desc": "Create an ActivityOptions specifying a custom animation to run when the activity is displayed.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ActivityOptions",
      "code": "makeScaleUpAnimation(source: View!, startX: Int, startY: Int, width: Int, height: Int)",
      "desc": "Create an ActivityOptions specifying an animation where the new activity is scaled from a small originating area of the screen to its final full representation.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ActivityOptions",
      "code": "makeSceneTransitionAnimation(activity: Activity!, sharedElement: View!, sharedElementName: String!)",
      "desc": "Create an ActivityOptions to transition between Activities using cross-Activity scene animations.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ActivityOptions",
      "code": "makeSceneTransitionAnimation(activity: Activity!, vararg sharedElements: Pair<View!, String!>!)",
      "desc": "Create an ActivityOptions to transition between Activities using cross-Activity scene animations.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ActivityOptions",
      "code": "makeTaskLaunchBehind()",
      "desc": "If set along with Intent.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ActivityOptions",
      "code": "makeThumbnailScaleUpAnimation(source: View!, thumbnail: Bitmap!, startX: Int, startY: Int)",
      "desc": "Create an ActivityOptions specifying an animation where a thumbnail is scaled from a given position to the new activity window that is being started.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "requestUsageTimeReport(receiver: PendingIntent!)",
      "desc": "Ask the system track that time the user spends in the app being launched, and report it back once done."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ActivityOptions",
      "code": "setAppVerificationBundle(bundle: Bundle!)",
      "desc": "Set the Bundle that is provided to the app installer for additional verification if the call to Context#startActivity results in an app being installed.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ActivityOptions",
      "code": "setLaunchBounds(screenSpacePixelRect: Rect?)",
      "desc": "Sets the bounds (window size and position) that the activity should be launched in.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ActivityOptions",
      "code": "setLaunchDisplayId(launchDisplayId: Int)",
      "desc": "Sets the id of the display where the activity should be launched.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ActivityOptions",
      "code": "setLockTaskEnabled(lockTaskMode: Boolean)",
      "desc": "Sets whether the activity is to be launched into LockTask mode.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Bundle",
      "code": "toBundle()",
      "desc": "Returns the created options as a Bundle, which can be passed to  Context.startActivity(Intent, Bundle) and related methods.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "update(otherOptions: ActivityOptions!)",
      "desc": "Update the current values in this ActivityOptions from those supplied in otherOptions."
    }
  ]
}