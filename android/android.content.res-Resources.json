{
  "path": "android.content.res",
  "name": "Resources",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ID_NULL",
      "desc": "The null resource ID."
    },
    {
      "type": "ctor",
      "ctor": "<init>(assets: AssetManager!, metrics: DisplayMetrics!, config: Configuration!)\n            Create a new Resources object on top of an existing set of assets in an AssetManager."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "addLoaders(vararg loaders: ResourcesLoader!)",
      "desc": "Adds a loader to the list of loaders."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "finishPreloading()",
      "desc": "Called by zygote when it is done preloading resources, to change back to normal Resources operation."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "flushLayoutCache()",
      "desc": "Call this to remove all cached loaded layout resources from the Resources object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "XmlResourceParser",
      "code": "getAnimation(id: Int)",
      "desc": "Return an XmlResourceParser through which you can read an animation description for the given resource ID."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "AssetManager",
      "code": "getAssets()",
      "desc": "Retrieve underlying AssetManager storage for these resources.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getAttributeSetSourceResId(set: AttributeSet?)",
      "desc": "Returns the resource ID of the resource that was used to create this AttributeSet."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getBoolean(id: Int)",
      "desc": "Return a boolean associated with a particular resource ID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getColor(id: Int)",
      "desc": "Returns a color integer associated with a particular resource ID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getColor(id: Int, theme: Resources.Theme?)",
      "desc": "Returns a themed color integer associated with a particular resource ID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ColorStateList",
      "code": "getColorStateList(id: Int)",
      "desc": "Returns a color state list associated with a particular resource ID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ColorStateList",
      "code": "getColorStateList(id: Int, theme: Resources.Theme?)",
      "desc": "Returns a themed color state list associated with a particular resource ID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Configuration",
      "code": "getConfiguration()",
      "desc": "Return the current configuration that is in effect for this resource object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Float",
      "code": "getDimension(id: Int)",
      "desc": "Retrieve a dimensional for a particular resource ID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getDimensionPixelOffset(id: Int)",
      "desc": "Retrieve a dimensional for a particular resource ID for use as an offset in raw pixels."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getDimensionPixelSize(id: Int)",
      "desc": "Retrieve a dimensional for a particular resource ID for use as a size in raw pixels."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "DisplayMetrics",
      "code": "getDisplayMetrics()",
      "desc": "Return the current display metrics that are in effect for this resource object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Drawable",
      "code": "getDrawable(id: Int)",
      "desc": "Return a drawable object associated with a particular resource ID.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Drawable",
      "code": "getDrawable(id: Int, theme: Resources.Theme?)",
      "desc": "Return a drawable object associated with a particular resource ID and styled for the specified theme.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Drawable",
      "code": "getDrawableForDensity(id: Int, density: Int)",
      "desc": "Return a drawable object associated with a particular resource ID for the given screen density in DPI.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Drawable",
      "code": "getDrawableForDensity(id: Int, density: Int, theme: Resources.Theme?)",
      "desc": "Return a drawable object associated with a particular resource ID for the given screen density in DPI and styled for the specified theme.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Float",
      "code": "getFloat(id: Int)",
      "desc": "Retrieve a floating-point value for a particular resource ID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Typeface",
      "code": "getFont(id: Int)",
      "desc": "Return the Typeface value associated with a particular resource ID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Float",
      "code": "getFraction(id: Int, base: Int, pbase: Int)",
      "desc": "Retrieve a fractional unit for a particular resource ID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getIdentifier(name: String!, defType: String!, defPackage: String!)",
      "desc": "Return a resource identifier for the given resource name."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "IntArray",
      "code": "getIntArray(id: Int)",
      "desc": "Return the int array associated with a particular resource ID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getInteger(id: Int)",
      "desc": "Return an integer associated with a particular resource ID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "XmlResourceParser",
      "code": "getLayout(id: Int)",
      "desc": "Return an XmlResourceParser through which you can read a view layout description for the given resource ID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Movie",
      "code": "getMovie(id: Int)",
      "desc": "Return a movie object associated with the particular resource ID.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getQuantityString(id: Int, quantity: Int, vararg formatArgs: Any!)",
      "desc": "Formats the string necessary for grammatically correct pluralization of the given resource ID for the given quantity, using the given arguments."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getQuantityString(id: Int, quantity: Int)",
      "desc": "Returns the string necessary for grammatically correct pluralization of the given resource ID for the given quantity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CharSequence",
      "code": "getQuantityText(id: Int, quantity: Int)",
      "desc": "Returns the character sequence necessary for grammatically correct pluralization of the given resource ID for the given quantity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getResourceEntryName(resid: Int)",
      "desc": "Return the entry name for a given resource identifier.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getResourceName(resid: Int)",
      "desc": "Return the full name for a given resource identifier.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getResourcePackageName(resid: Int)",
      "desc": "Return the package name for a given resource identifier.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getResourceTypeName(resid: Int)",
      "desc": "Return the type name for a given resource identifier.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getString(id: Int)",
      "desc": "Return the string value associated with a particular resource ID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getString(id: Int, vararg formatArgs: Any!)",
      "desc": "Return the string value associated with a particular resource ID, substituting the format arguments as defined in java.util.Formatter and java.lang.String#format."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getStringArray(id: Int)",
      "desc": "Return the string array associated with a particular resource ID.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Resources",
      "code": "getSystem()",
      "desc": "Return a global shared Resources object that provides access to only system resources (no application resources), is not configured for the current screen (can not use dimension units, does not change based on orientation, etc), and is not affected by Runtime Resource Overlay.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CharSequence",
      "code": "getText(id: Int)",
      "desc": "Return the string value associated with a particular resource ID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CharSequence",
      "code": "getText(id: Int, def: CharSequence!)",
      "desc": "Return the string value associated with a particular resource ID.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getTextArray(id: Int)",
      "desc": "Return the styled text array associated with a particular resource ID.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "getValue(id: Int, outValue: TypedValue!, resolveRefs: Boolean)",
      "desc": "Return the raw data associated with a particular resource ID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "getValue(name: String!, outValue: TypedValue!, resolveRefs: Boolean)",
      "desc": "Return the raw data associated with a particular resource ID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "getValueForDensity(id: Int, density: Int, outValue: TypedValue!, resolveRefs: Boolean)",
      "desc": "Get the raw value associated with a resource with associated density."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "XmlResourceParser",
      "code": "getXml(id: Int)",
      "desc": "Return an XmlResourceParser through which you can read a generic XML resource for the given resource ID."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Resources.Theme",
      "code": "newTheme()",
      "desc": "Generate a new Theme object for this set of Resources.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TypedArray",
      "code": "obtainAttributes(set: AttributeSet!, attrs: IntArray!)",
      "desc": "Retrieve a set of basic attribute values from an AttributeSet, not performing styling of them using a theme and/or style resources.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TypedArray",
      "code": "obtainTypedArray(id: Int)",
      "desc": "Return an array of heterogeneous values."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "InputStream",
      "code": "openRawResource(id: Int)",
      "desc": "Open a data stream for reading a raw resource."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "InputStream",
      "code": "openRawResource(id: Int, value: TypedValue!)",
      "desc": "Open a data stream for reading a raw resource."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "AssetFileDescriptor",
      "code": "openRawResourceFd(id: Int)",
      "desc": "Open a file descriptor for reading a raw resource.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "parseBundleExtra(tagName: String!, attrs: AttributeSet!, outBundle: Bundle!)",
      "desc": "Parse a name/value pair out of an XML tag holding that data."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "parseBundleExtras(parser: XmlResourceParser!, outBundle: Bundle!)",
      "desc": "Parse a series of <extra> tags from an XML file."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "removeLoaders(vararg loaders: ResourcesLoader!)",
      "desc": "Removes loaders from the list of loaders."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "updateConfiguration(config: Configuration!, metrics: DisplayMetrics!)",
      "desc": "Store the newly updated configuration."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "open",
      "code": "NotFoundException",
      "desc": "This exception is thrown by the resource APIs when a requested resource can not be found."
    },
    {
      "type": "nested-classes",
      "code": "Theme",
      "desc": "This class holds the current attribute values for a particular theme."
    }
  ]
}