{
  "path": "android.app",
  "name": "Activity",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DEFAULT_KEYS_DIALER",
      "desc": "Use with setDefaultKeyMode to launch the dialer during default key handling."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DEFAULT_KEYS_DISABLE",
      "desc": "Use with setDefaultKeyMode to turn off default handling of keys."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DEFAULT_KEYS_SEARCH_GLOBAL",
      "desc": "Use with setDefaultKeyMode to specify that unhandled keystrokes will start a global search (typically web search, but some platforms may define alternate methods for global search)"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DEFAULT_KEYS_SEARCH_LOCAL",
      "desc": "Use with setDefaultKeyMode to specify that unhandled keystrokes will start an application-defined search."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DEFAULT_KEYS_SHORTCUT",
      "desc": "Use with setDefaultKeyMode to execute a menu shortcut in default key handling."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "RESULT_CANCELED",
      "desc": "Standard activity result: operation canceled."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "RESULT_FIRST_USER",
      "desc": "Start of user-defined activity results."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "RESULT_OK",
      "desc": "Standard activity result: operation succeeded."
    },
    {
      "type": "ctor",
      "ctor": "<init>()"
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "addContentView(view: View!, params: ViewGroup.LayoutParams!)",
      "desc": "Add an additional content view to the activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "closeContextMenu()",
      "desc": "Programmatically closes the most recently opened context menu, if showing."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "closeOptionsMenu()",
      "desc": "Progammatically closes the options menu."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PendingIntent",
      "code": "createPendingResult(requestCode: Int, data: Intent, flags: Int)",
      "desc": "Create a new PendingIntent object which you can hand to others for them to use to send result data back to your onActivityResult callback.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "dismissDialog(id: Int)",
      "desc": "Dismiss a dialog that was previously shown via showDialog(int)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "dismissKeyboardShortcutsHelper()",
      "desc": "Dismiss the Keyboard Shortcuts screen."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "dispatchGenericMotionEvent(ev: MotionEvent!)",
      "desc": "Called to process generic motion events."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "dispatchKeyEvent(event: KeyEvent!)",
      "desc": "Called to process key events."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "dispatchKeyShortcutEvent(event: KeyEvent!)",
      "desc": "Called to process a key shortcut event."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "dispatchPopulateAccessibilityEvent(event: AccessibilityEvent!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "dispatchTouchEvent(ev: MotionEvent!)",
      "desc": "Called to process touch screen events."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "dispatchTrackballEvent(ev: MotionEvent!)",
      "desc": "Called to process trackball events."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "dump(prefix: String, fd: FileDescriptor?, writer: PrintWriter, args: Array<String!>?)",
      "desc": "Print the Activity's state into the given stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "enterPictureInPictureMode()",
      "desc": "Puts the activity in picture-in-picture mode if possible in the current system state."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "enterPictureInPictureMode(params: PictureInPictureParams)",
      "desc": "Puts the activity in picture-in-picture mode if possible in the current system state."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "T",
      "code": "findViewById(id: Int)",
      "desc": "Finds a view that was identified by the android:id XML attribute that was processed in onCreate."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "finish()",
      "desc": "Call this when your activity is done and should be closed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "finishActivity(requestCode: Int)",
      "desc": "Force finish another activity that you had previously started with startActivityForResult."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "finishActivityFromChild(child: Activity, requestCode: Int)",
      "desc": "This is called when a child activity of this one calls its finishActivity()."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "finishAffinity()",
      "desc": "Finish this activity as well as all activities immediately below it in the current task that have the same affinity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "finishAfterTransition()",
      "desc": "Reverses the Activity Scene entry Transition and triggers the calling Activity to reverse its exit Transition."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "finishAndRemoveTask()",
      "desc": "Call this when your activity is done and should be closed and the task should be completely removed as a part of finishing the root activity of the task."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "finishFromChild(child: Activity!)",
      "desc": "This is called when a child activity of this one calls its finish method."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ActionBar",
      "code": "getActionBar()",
      "desc": "Retrieve a reference to this activity's ActionBar.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Application",
      "code": "getApplication()",
      "desc": "Return the application that owns this activity.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ComponentName",
      "code": "getCallingActivity()",
      "desc": "Return the name of the activity that invoked this activity.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getCallingPackage()",
      "desc": "Return the name of the package that invoked this activity.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getChangingConfigurations()",
      "desc": "If this activity is being destroyed because it can not handle a configuration parameter being changed (and thus its onConfigurationChanged(android.content.res.Configuration) method is not being called), then you can use this method to discover the set of changes that have occurred while in the process of being destroyed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ComponentName",
      "code": "getComponentName()",
      "desc": "Returns the complete component name of this activity.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Scene",
      "code": "getContentScene()",
      "desc": "Retrieve the Scene representing this window's current content.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TransitionManager",
      "code": "getContentTransitionManager()",
      "desc": "Retrieve the TransitionManager responsible for default transitions in this window.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View",
      "code": "getCurrentFocus()",
      "desc": "Calls android.view.Window#getCurrentFocus on the Window of this Activity to return the currently focused view.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "FragmentManager",
      "code": "getFragmentManager()",
      "desc": "Return the FragmentManager for interacting with fragments associated with this activity.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Intent",
      "code": "getIntent()",
      "desc": "Return the intent that started this activity.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "getLastNonConfigurationInstance()",
      "desc": "Retrieve the non-configuration instance data that was previously returned by onRetainNonConfigurationInstance().",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "LayoutInflater",
      "code": "getLayoutInflater()",
      "desc": "Convenience for calling android.view.Window#getLayoutInflater."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "LoaderManager",
      "code": "getLoaderManager()",
      "desc": "Return the LoaderManager for this activity, creating it if needed.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getLocalClassName()",
      "desc": "Returns class name for this activity with the package prefix removed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getMaxNumPictureInPictureActions()",
      "desc": "Return the number of actions that will be displayed in the picture-in-picture UI when the user interacts with the activity currently in picture-in-picture mode."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MediaController",
      "code": "getMediaController()",
      "desc": "Gets the controller which should be receiving media key and volume events while this activity is in the foreground.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MenuInflater",
      "code": "getMenuInflater()",
      "desc": "Returns a MenuInflater with this context."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Activity",
      "code": "getParent()",
      "desc": "Return the parent activity if this view is an embedded child.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Intent",
      "code": "getParentActivityIntent()",
      "desc": "Obtain an Intent that will launch an explicit target activity specified by this activity's logical parent.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "SharedPreferences",
      "code": "getPreferences(mode: Int)",
      "desc": "Retrieve a SharedPreferences object for accessing preferences that are private to this activity.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Uri",
      "code": "getReferrer()",
      "desc": "Return information about who launched this activity.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getRequestedOrientation()",
      "desc": "Return the current requested orientation of the activity."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "SearchEvent",
      "code": "getSearchEvent()",
      "desc": "During the onSearchRequested() callbacks, this function will return the SearchEvent that triggered the callback, if it exists.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "getSystemService(name: String)",
      "desc": "Return the handle to a system-level service by name.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getTaskId()",
      "desc": "Return the identifier of the task this activity is in."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "CharSequence",
      "code": "getTitle()",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getTitleColor()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "VoiceInteractor",
      "code": "getVoiceInteractor()",
      "desc": "Retrieve the active VoiceInteractor that the user is going through to interact with this activity.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getVolumeControlStream()",
      "desc": "Gets the suggested audio stream whose volume should be changed by the hardware volume controls."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Window",
      "code": "getWindow()",
      "desc": "Retrieve the current android.view.Window for the activity.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "WindowManager",
      "code": "getWindowManager()",
      "desc": "Retrieve the window manager for showing custom windows.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "hasWindowFocus()",
      "desc": "Returns true if this activity's main window currently has window focus."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "invalidateOptionsMenu()",
      "desc": "Declare that the options menu has changed, so should be recreated."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isActivityTransitionRunning()",
      "desc": "Returns whether there are any activity transitions currently running on this activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isChangingConfigurations()",
      "desc": "Check to see whether this activity is in the process of being destroyed in order to be recreated with a new configuration."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isChild()",
      "desc": "Is this activity embedded inside of another activity?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isDestroyed()",
      "desc": "Returns true if the final onDestroy() call has been made on the Activity, so this instance is now dead."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isFinishing()",
      "desc": "Check to see whether this activity is in the process of finishing, either because you called finish on it or someone else has requested that it finished."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isImmersive()",
      "desc": "Bit indicating that this activity is \"immersive\" and should not be interrupted by notifications if possible."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isInMultiWindowMode()",
      "desc": "Returns true if the activity is currently in multi-window mode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isInPictureInPictureMode()",
      "desc": "Returns true if the activity is currently in picture-in-picture mode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isLocalVoiceInteractionSupported()",
      "desc": "Queries whether the currently enabled voice interaction service supports returning a voice interactor for use by the activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isTaskRoot()",
      "desc": "Return whether this activity is the root of a task."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isVoiceInteraction()",
      "desc": "Check whether this activity is running as part of a voice interaction with the user."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isVoiceInteractionRoot()",
      "desc": "Like isVoiceInteraction, but only returns true if this is also the root of a voice interaction."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Cursor",
      "code": "managedQuery(uri: Uri!, projection: Array<String!>!, selection: String!, selectionArgs: Array<String!>!, sortOrder: String!)",
      "desc": "Wrapper around ContentResolver#query(android.net.Uri , String[], String, String[], String) that gives the resulting Cursor to call startManagingCursor so that the activity will manage its lifecycle for you.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "moveTaskToBack(nonRoot: Boolean)",
      "desc": "Move the task containing this activity to the back of the activity stack."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "navigateUpTo(upIntent: Intent!)",
      "desc": "Navigate from this activity to the activity specified by upIntent, finishing this activity in the process."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "navigateUpToFromChild(child: Activity!, upIntent: Intent!)",
      "desc": "This is called when a child activity of this one calls its navigateUpTo method."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onActionModeFinished(mode: ActionMode!)",
      "desc": "Notifies the activity that an action mode has finished."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onActionModeStarted(mode: ActionMode!)",
      "desc": "Notifies the Activity that an action mode has been started."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onActivityReenter(resultCode: Int, data: Intent!)",
      "desc": "Called when an activity you launched with an activity transition exposes this Activity through a returning activity transition, giving you the resultCode and any additional data from it."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onAttachFragment(fragment: Fragment!)",
      "desc": "Called when a Fragment is being attached to this activity, immediately after the call to its Fragment#onAttach method and before Fragment#onCreate."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onAttachedToWindow()",
      "desc": "Called when the main window associated with the activity has been attached to the window manager."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onBackPressed()",
      "desc": "Called when the activity has detected the user's press of the back key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onConfigurationChanged(newConfig: Configuration)",
      "desc": "Called by the system when the device configuration changes while your activity is running."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onContentChanged()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onContextItemSelected(item: MenuItem)",
      "desc": "This hook is called whenever an item in a context menu is selected."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onContextMenuClosed(menu: Menu)",
      "desc": "This hook is called whenever the context menu is being closed (either by the user canceling the menu with the back/menu button, or when an item is selected)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onCreate(savedInstanceState: Bundle?, persistentState: PersistableBundle?)",
      "desc": "Same as onCreate(android.os.Bundle) but called for those activities created with the attribute android.R.attr#persistableMode set to persistAcrossReboots."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onCreateContextMenu(menu: ContextMenu!, v: View!, menuInfo: ContextMenu.ContextMenuInfo!)",
      "desc": "Called when a context menu for the view is about to be shown."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CharSequence",
      "code": "onCreateDescription()",
      "desc": "Generate a new description for this activity.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onCreateNavigateUpTaskStack(builder: TaskStackBuilder!)",
      "desc": "Define the synthetic task stack that will be generated during Up navigation from a different task."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onCreateOptionsMenu(menu: Menu!)",
      "desc": "Initialize the contents of the Activity's standard options menu."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onCreatePanelMenu(featureId: Int, menu: Menu)",
      "desc": "Default implementation of android.view.Window.Callback#onCreatePanelMenu for activities."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View",
      "code": "onCreatePanelView(featureId: Int)",
      "desc": "Default implementation of android.view.Window.Callback#onCreatePanelView for activities.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onCreateThumbnail(outBitmap: Bitmap!, canvas: Canvas!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View",
      "code": "onCreateView(name: String, context: Context, attrs: AttributeSet)",
      "desc": "Standard implementation of android.view.LayoutInflater.Factory#onCreateView used when inflating with the LayoutInflater returned by getSystemService.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View",
      "code": "onCreateView(parent: View?, name: String, context: Context, attrs: AttributeSet)",
      "desc": "Standard implementation of android.view.LayoutInflater.Factory2#onCreateView(View, String, Context, AttributeSet) used when inflating with the LayoutInflater returned by getSystemService.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onDetachedFromWindow()",
      "desc": "Called when the main window associated with the activity has been detached from the window manager."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onEnterAnimationComplete()",
      "desc": "Activities cannot draw during the period that their windows are animating in."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onGenericMotionEvent(event: MotionEvent!)",
      "desc": "Called when a generic motion event was not handled by any of the views inside of the activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onGetDirectActions(cancellationSignal: CancellationSignal, callback: Consumer<MutableList<DirectAction!>!>)",
      "desc": "Returns the list of direct actions supported by the app."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onKeyDown(keyCode: Int, event: KeyEvent!)",
      "desc": "Called when a key was pressed down and not handled by any of the views inside of the activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onKeyLongPress(keyCode: Int, event: KeyEvent!)",
      "desc": "Default implementation of KeyEvent.Callback#onKeyLongPress(int, KeyEvent): always returns false (doesn't handle the event)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onKeyMultiple(keyCode: Int, repeatCount: Int, event: KeyEvent!)",
      "desc": "Default implementation of KeyEvent.Callback#onKeyMultiple(int, int, KeyEvent): always returns false (doesn't handle the event)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onKeyShortcut(keyCode: Int, event: KeyEvent!)",
      "desc": "Called when a key shortcut event is not handled by any of the views in the Activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onKeyUp(keyCode: Int, event: KeyEvent!)",
      "desc": "Called when a key was released and not handled by any of the views inside of the activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onLocalVoiceInteractionStarted()",
      "desc": "Callback to indicate that startLocalVoiceInteraction(android.os.Bundle) has resulted in a voice interaction session being started."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onLocalVoiceInteractionStopped()",
      "desc": "Callback to indicate that the local voice interaction has stopped either because it was requested through a call to stopLocalVoiceInteraction() or because it was canceled by the user."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onLowMemory()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onMenuItemSelected(featureId: Int, item: MenuItem)",
      "desc": "Default implementation of android.view.Window.Callback#onMenuItemSelected for activities."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onMenuOpened(featureId: Int, menu: Menu)",
      "desc": "Called when a panel's menu is opened by the user."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onMultiWindowModeChanged(isInMultiWindowMode: Boolean, newConfig: Configuration!)",
      "desc": "Called by the system when the activity changes from fullscreen mode to multi-window mode and visa-versa."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onMultiWindowModeChanged(isInMultiWindowMode: Boolean)",
      "desc": "Called by the system when the activity changes from fullscreen mode to multi-window mode and visa-versa."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onNavigateUp()",
      "desc": "This method is called whenever the user chooses to navigate Up within your application's activity hierarchy from the action bar."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onNavigateUpFromChild(child: Activity!)",
      "desc": "This is called when a child activity of this one attempts to navigate up."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onOptionsItemSelected(item: MenuItem)",
      "desc": "This hook is called whenever an item in your options menu is selected."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onOptionsMenuClosed(menu: Menu!)",
      "desc": "This hook is called whenever the options menu is being closed (either by the user canceling the menu with the back/menu button, or when an item is selected)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onPanelClosed(featureId: Int, menu: Menu)",
      "desc": "Default implementation of android.view.Window.Callback#onPanelClosed(int, Menu) for activities."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onPerformDirectAction(actionId: String, arguments: Bundle, cancellationSignal: CancellationSignal, resultListener: Consumer<Bundle!>)",
      "desc": "This is called to perform an action previously defined by the app."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onPictureInPictureModeChanged(isInPictureInPictureMode: Boolean, newConfig: Configuration!)",
      "desc": "Called by the system when the activity changes to and from picture-in-picture mode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onPictureInPictureModeChanged(isInPictureInPictureMode: Boolean)",
      "desc": "Called by the system when the activity changes to and from picture-in-picture mode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onPictureInPictureRequested()",
      "desc": "This method is called by the system in various cases where picture in picture mode should be entered if supported."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onPostCreate(savedInstanceState: Bundle?, persistentState: PersistableBundle?)",
      "desc": "This is the same as onPostCreate(android.os.Bundle) but is called for activities created with the attribute android.R.attr#persistableMode set to persistAcrossReboots."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onPrepareNavigateUpTaskStack(builder: TaskStackBuilder!)",
      "desc": "Prepare the synthetic task stack that will be generated during Up navigation from a different task."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onPrepareOptionsMenu(menu: Menu!)",
      "desc": "Prepare the Screen's standard options menu to be displayed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onPreparePanel(featureId: Int, view: View?, menu: Menu)",
      "desc": "Default implementation of android.view.Window.Callback#onPreparePanel for activities."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onProvideAssistContent(outContent: AssistContent!)",
      "desc": "This is called when the user is requesting an assist, to provide references to content related to the current activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onProvideAssistData(data: Bundle!)",
      "desc": "This is called when the user is requesting an assist, to build a full Intent#ACTION_ASSIST Intent with all of the context of the current application."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onProvideKeyboardShortcuts(data: MutableList<KeyboardShortcutGroup!>!, menu: Menu?, deviceId: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Uri",
      "code": "onProvideReferrer()",
      "desc": "Override to generate the desired referrer for the content currently being shown by the app.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onRequestPermissionsResult(requestCode: Int, permissions: Array<String!>, grantResults: IntArray)",
      "desc": "Callback for the result from requesting permissions."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onRestoreInstanceState(savedInstanceState: Bundle?, persistentState: PersistableBundle?)",
      "desc": "This is the same as onRestoreInstanceState(android.os.Bundle) but is called for activities created with the attribute android.R.attr#persistableMode set to persistAcrossReboots."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "onRetainNonConfigurationInstance()",
      "desc": "Called by the system, as part of destroying an activity due to a configuration change, when it is known that a new instance will immediately be created for the new configuration.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onSaveInstanceState(outState: Bundle, outPersistentState: PersistableBundle)",
      "desc": "This is the same as onSaveInstanceState but is called for activities created with the attribute android.R.attr#persistableMode set to persistAcrossReboots."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onSearchRequested(searchEvent: SearchEvent?)",
      "desc": "This hook is called when the user signals the desire to start a search."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onSearchRequested()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onStateNotSaved()",
      "desc": "Called when an onResume is coming up, prior to other pre-resume callbacks such as onNewIntent and onActivityResult."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onTopResumedActivityChanged(isTopResumedActivity: Boolean)",
      "desc": "Called when activity gets or loses the top resumed position in the system."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onTouchEvent(event: MotionEvent!)",
      "desc": "Called when a touch screen event was not handled by any of the views under it."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onTrackballEvent(event: MotionEvent!)",
      "desc": "Called when the trackball was moved and not handled by any of the views inside of the activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onTrimMemory(level: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onUserInteraction()",
      "desc": "Called whenever a key, touch, or trackball event is dispatched to the activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onVisibleBehindCanceled()",
      "desc": "Called when a translucent activity over this activity is becoming opaque or another activity is being launched."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onWindowAttributesChanged(params: WindowManager.LayoutParams!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onWindowFocusChanged(hasFocus: Boolean)",
      "desc": "Called when the current Window of the activity gains or loses focus."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ActionMode",
      "code": "onWindowStartingActionMode(callback: ActionMode.Callback!)",
      "desc": "Give the Activity a chance to control the UI for an action mode requested by the system.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ActionMode",
      "code": "onWindowStartingActionMode(callback: ActionMode.Callback!, type: Int)",
      "desc": "Called when an action mode is being started for this window.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "openContextMenu(view: View!)",
      "desc": "Programmatically opens the context menu for a particular view."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "openOptionsMenu()",
      "desc": "Programmatically opens the options menu."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "overridePendingTransition(enterAnim: Int, exitAnim: Int)",
      "desc": "Call immediately after one of the flavors of startActivity(android.content.Intent) or finish to specify an explicit transition animation to perform next."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "postponeEnterTransition()",
      "desc": "Postpone the entering activity transition when Activity was started with android.app.ActivityOptions#makeSceneTransitionAnimation(Activity, * android.util.Pair[])."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "recreate()",
      "desc": "Cause this Activity to be recreated with a new instance."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "registerActivityLifecycleCallbacks(callback: Application.ActivityLifecycleCallbacks)",
      "desc": "Register an Application.ActivityLifecycleCallbacks instance that receives lifecycle callbacks for only this Activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "registerForContextMenu(view: View!)",
      "desc": "Registers a context menu to be shown for the given view (multiple views can show the context menu)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "releaseInstance()",
      "desc": "Ask that the local app instance of this activity be released to free up its memory."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "removeDialog(id: Int)",
      "desc": "Removes any internal references to a dialog managed by this Activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "reportFullyDrawn()",
      "desc": "Report to the system that your app is now fully drawn, for diagnostic and optimization purposes."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "DragAndDropPermissions",
      "code": "requestDragAndDropPermissions(event: DragEvent!)",
      "desc": "Create DragAndDropPermissions object bound to this activity and controlling the access permissions for content URIs associated with the DragEvent.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "requestPermissions(permissions: Array<String!>, requestCode: Int)",
      "desc": "Requests permissions to be granted to this application."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "requestShowKeyboardShortcuts()",
      "desc": "Request the Keyboard Shortcuts screen to show up."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "requestVisibleBehind(visible: Boolean)",
      "desc": "Activities that want to remain visible behind a translucent activity above them must call this method anytime between the start of onResume() and the return from onPause()."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "requestWindowFeature(featureId: Int)",
      "desc": "Enable extended window features."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "T",
      "code": "requireViewById(id: Int)",
      "desc": "Finds a view that was identified by the android:id XML attribute that was processed in onCreate, or throws an IllegalArgumentException if the ID is invalid, or there is no matching view in the hierarchy."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "runOnUiThread(action: Runnable!)",
      "desc": "Runs the specified action on the UI thread."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setActionBar(toolbar: Toolbar?)",
      "desc": "Set a Toolbar to act as the ActionBar for this Activity window."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setContentTransitionManager(tm: TransitionManager!)",
      "desc": "Set the TransitionManager to use for default transitions in this window."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setContentView(layoutResID: Int)",
      "desc": "Set the activity content from a layout resource."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setContentView(view: View!)",
      "desc": "Set the activity content to an explicit view."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setContentView(view: View!, params: ViewGroup.LayoutParams!)",
      "desc": "Set the activity content to an explicit view."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setDefaultKeyMode(mode: Int)",
      "desc": "Select the default key handling for this activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setEnterSharedElementCallback(callback: SharedElementCallback!)",
      "desc": "When android.app.ActivityOptions#makeSceneTransitionAnimation(Activity, * android.view.View, String) was used to start an Activity, callback will be called to handle shared elements on the launched Activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setExitSharedElementCallback(callback: SharedElementCallback!)",
      "desc": "When android.app.ActivityOptions#makeSceneTransitionAnimation(Activity, * android.view.View, String) was used to start an Activity, callback will be called to handle shared elements on the launching Activity."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setFeatureDrawable(featureId: Int, drawable: Drawable!)",
      "desc": "Convenience for calling android.view.Window#setFeatureDrawable(int, Drawable)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setFeatureDrawableAlpha(featureId: Int, alpha: Int)",
      "desc": "Convenience for calling android.view.Window#setFeatureDrawableAlpha."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setFeatureDrawableResource(featureId: Int, resId: Int)",
      "desc": "Convenience for calling android.view.Window#setFeatureDrawableResource."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setFeatureDrawableUri(featureId: Int, uri: Uri!)",
      "desc": "Convenience for calling android.view.Window#setFeatureDrawableUri."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFinishOnTouchOutside(finish: Boolean)",
      "desc": "Sets whether this activity is finished when touched outside its window's bounds."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setImmersive(i: Boolean)",
      "desc": "Adjust the current immersive mode setting."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setInheritShowWhenLocked(inheritShowWhenLocked: Boolean)",
      "desc": "Specifies whether this Activity should be shown on top of the lock screen whenever the lockscreen is up and this activity has another activity behind it with the showWhenLock attribute set."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setIntent(newIntent: Intent!)",
      "desc": "Change the intent returned by getIntent."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLocusContext(locusId: LocusId?, bundle: Bundle?)",
      "desc": "Sets the android.content.LocusId for this activity."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setMediaController(controller: MediaController!)",
      "desc": "Sets a MediaController to send media keys and volume changes to."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPictureInPictureParams(params: PictureInPictureParams)",
      "desc": "Updates the properties of the picture-in-picture activity, or sets it to be used later when enterPictureInPictureMode() is called."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setProgress(progress: Int)",
      "desc": "Sets the progress for the progress bars in the title."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setProgressBarIndeterminate(indeterminate: Boolean)",
      "desc": "Sets whether the horizontal progress bar in the title should be indeterminate (the circular is always indeterminate)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setProgressBarIndeterminateVisibility(visible: Boolean)",
      "desc": "Sets the visibility of the indeterminate progress bar in the title."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setProgressBarVisibility(visible: Boolean)",
      "desc": "Sets the visibility of the progress bar in the title."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setRequestedOrientation(requestedOrientation: Int)",
      "desc": "Change the desired orientation of this activity."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setResult(resultCode: Int)",
      "desc": "Call this to set the result that your activity will return to its caller."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setResult(resultCode: Int, data: Intent!)",
      "desc": "Call this to set the result that your activity will return to its caller."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setSecondaryProgress(secondaryProgress: Int)",
      "desc": "Sets the secondary progress for the progress bar in the title."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setShowWhenLocked(showWhenLocked: Boolean)",
      "desc": "Specifies whether an Activity should be shown on top of the lock screen whenever the lockscreen is up and the activity is resumed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTaskDescription(taskDescription: ActivityManager.TaskDescription!)",
      "desc": "Sets information describing the task with this activity for presentation inside the Recents System UI."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTheme(resid: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTitle(title: CharSequence!)",
      "desc": "Change the title associated with this activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTitle(titleId: Int)",
      "desc": "Change the title associated with this activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTitleColor(textColor: Int)",
      "desc": "Change the color of the title associated with this activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "setTranslucent(translucent: Boolean)",
      "desc": "Convert an activity, which particularly with android.R.attr#windowIsTranslucent or android.R.attr#windowIsFloating attribute, to a fullscreen opaque activity, or convert it from opaque back to translucent."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTurnScreenOn(turnScreenOn: Boolean)",
      "desc": "Specifies whether the screen should be turned on when the Activity is resumed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setVisible(visible: Boolean)",
      "desc": "Control whether this activity's main window is visible."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setVolumeControlStream(streamType: Int)",
      "desc": "Suggests an audio stream whose volume should be changed by the hardware volume controls."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setVrModeEnabled(enabled: Boolean, requestedComponent: ComponentName)",
      "desc": "Enable or disable virtual reality (VR) mode for this Activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "shouldShowRequestPermissionRationale(permission: String)",
      "desc": "Gets whether you should show UI with rationale before requesting a permission."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "shouldUpRecreateTask(targetIntent: Intent!)",
      "desc": "Returns true if the app should recreate the task when navigating 'up' from this activity by using targetIntent."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "showAssist(args: Bundle!)",
      "desc": "Ask to have the current assistant shown to the user."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "showDialog(id: Int)",
      "desc": "Simple version of showDialog(int,android.os.Bundle) that does not take any arguments."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "showDialog(id: Int, args: Bundle!)",
      "desc": "Show a dialog managed by this activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "showLockTaskEscapeMessage()",
      "desc": "Shows the user the system defined message for telling the user how to exit lock task mode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ActionMode",
      "code": "startActionMode(callback: ActionMode.Callback!)",
      "desc": "Start an action mode of the default type ActionMode#TYPE_PRIMARY.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ActionMode",
      "code": "startActionMode(callback: ActionMode.Callback!, type: Int)",
      "desc": "Start an action mode of the given type.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startActivities(intents: Array<Intent!>!)",
      "desc": "Same as startActivities(android.content.Intent[],android.os.Bundle) with no options specified."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startActivities(intents: Array<Intent!>!, options: Bundle?)",
      "desc": "Launch a new activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startActivity(intent: Intent!)",
      "desc": "Same as startActivity(android.content.Intent,android.os.Bundle) with no options specified."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startActivity(intent: Intent!, options: Bundle?)",
      "desc": "Launch a new activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startActivityForResult(intent: Intent!, requestCode: Int)",
      "desc": "Same as calling startActivityForResult(android.content.Intent,int,android.os.Bundle) with no options."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startActivityForResult(intent: Intent!, requestCode: Int, options: Bundle?)",
      "desc": "Launch an activity for which you would like a result when it finished."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startActivityFromChild(child: Activity, intent: Intent!, requestCode: Int)",
      "desc": "Same as calling startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle) with no options."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startActivityFromChild(child: Activity, intent: Intent!, requestCode: Int, options: Bundle?)",
      "desc": "This is called when a child activity of this one calls its startActivity or startActivityForResult method."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startActivityFromFragment(fragment: Fragment, intent: Intent!, requestCode: Int)",
      "desc": "Same as calling startActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle) with no options."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startActivityFromFragment(fragment: Fragment, intent: Intent!, requestCode: Int, options: Bundle?)",
      "desc": "This is called when a Fragment in this activity calls its Fragment#startActivity or Fragment#startActivityForResult method."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "startActivityIfNeeded(intent: Intent, requestCode: Int)",
      "desc": "Same as calling startActivityIfNeeded(android.content.Intent,int,android.os.Bundle) with no options."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "startActivityIfNeeded(intent: Intent, requestCode: Int, options: Bundle?)",
      "desc": "A special variation to launch an activity only if a new activity instance is needed to handle the given Intent."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startIntentSender(intent: IntentSender!, fillInIntent: Intent?, flagsMask: Int, flagsValues: Int, extraFlags: Int)",
      "desc": "Same as calling startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle) with no options."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startIntentSender(intent: IntentSender!, fillInIntent: Intent?, flagsMask: Int, flagsValues: Int, extraFlags: Int, options: Bundle?)",
      "desc": "Like startActivity(android.content.Intent,android.os.Bundle), but taking a IntentSender to start; see startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) for more information."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startIntentSenderForResult(intent: IntentSender!, requestCode: Int, fillInIntent: Intent?, flagsMask: Int, flagsValues: Int, extraFlags: Int)",
      "desc": "Same as calling startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) with no options."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startIntentSenderForResult(intent: IntentSender!, requestCode: Int, fillInIntent: Intent?, flagsMask: Int, flagsValues: Int, extraFlags: Int, options: Bundle!)",
      "desc": "Like startActivityForResult(android.content.Intent,int), but allowing you to use a IntentSender to describe the activity to be started."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startIntentSenderFromChild(child: Activity!, intent: IntentSender!, requestCode: Int, fillInIntent: Intent!, flagsMask: Int, flagsValues: Int, extraFlags: Int)",
      "desc": "Same as calling startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) with no options."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startIntentSenderFromChild(child: Activity!, intent: IntentSender!, requestCode: Int, fillInIntent: Intent!, flagsMask: Int, flagsValues: Int, extraFlags: Int, options: Bundle?)",
      "desc": "Like startActivityFromChild(android.app.Activity,android.content.Intent,int), but taking a IntentSender; see startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) for more information."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startLocalVoiceInteraction(privateOptions: Bundle!)",
      "desc": "Starts a local voice interaction session."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startLockTask()",
      "desc": "Request to put this activity in a mode where the user is locked to a restricted set of applications."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startManagingCursor(c: Cursor!)",
      "desc": "This method allows the activity to take care of managing the given Cursor's lifecycle for you based on the activity's lifecycle."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "startNextMatchingActivity(intent: Intent)",
      "desc": "Same as calling startNextMatchingActivity(android.content.Intent,android.os.Bundle) with no options."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "startNextMatchingActivity(intent: Intent, options: Bundle?)",
      "desc": "Special version of starting an activity, for use when you are replacing other activity components."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startPostponedEnterTransition()",
      "desc": "Begin postponed transitions after postponeEnterTransition() was called."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startSearch(initialQuery: String?, selectInitialQuery: Boolean, appSearchData: Bundle?, globalSearch: Boolean)",
      "desc": "This hook is called to launch the search UI."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "stopLocalVoiceInteraction()",
      "desc": "Request to terminate the current voice interaction that was previously started using startLocalVoiceInteraction(android.os.Bundle)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "stopLockTask()",
      "desc": "Stop the current task from being locked."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "stopManagingCursor(c: Cursor!)",
      "desc": "Given a Cursor that was previously given to startManagingCursor, stop the activity's management of that cursor."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "takeKeyEvents(get: Boolean)",
      "desc": "Request that key events come to this activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "triggerSearch(query: String!, appSearchData: Bundle?)",
      "desc": "Similar to startSearch, but actually fires off the search query after invoking the search dialog."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "unregisterActivityLifecycleCallbacks(callback: Application.ActivityLifecycleCallbacks)",
      "desc": "Unregister an Application.ActivityLifecycleCallbacks previously registered with registerActivityLifecycleCallbacks."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "unregisterForContextMenu(view: View!)",
      "desc": "Prevents a context menu to be shown for the given view."
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "attachBaseContext(newBase: Context!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onActivityResult(requestCode: Int, resultCode: Int, data: Intent!)",
      "desc": "Called when an activity you launched exits, giving you the requestCode you started it with, the resultCode it returned, and any additional data from it."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onApplyThemeResource(theme: Resources.Theme!, resid: Int, first: Boolean)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onChildTitleChanged(childActivity: Activity!, title: CharSequence!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onCreate(savedInstanceState: Bundle?)",
      "desc": "Called when the activity is starting."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Dialog",
      "code": "onCreateDialog(id: Int)",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Dialog",
      "code": "onCreateDialog(id: Int, args: Bundle!)",
      "desc": "Callback for creating dialogs that are managed (saved and restored) for you by the activity.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onDestroy()",
      "desc": "Perform any final cleanup before an activity is destroyed."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onNewIntent(intent: Intent!)",
      "desc": "This is called for activities that set launchMode to \"singleTop\" in their package, or if a client used the Intent#FLAG_ACTIVITY_SINGLE_TOP flag when calling startActivity."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onPause()",
      "desc": "Called as part of the activity lifecycle when the user no longer actively interacts with the activity, but it is still visible on screen."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onPostCreate(savedInstanceState: Bundle?)",
      "desc": "Called when activity start-up is complete (after onStart and onRestoreInstanceState have been called)."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onPostResume()",
      "desc": "Called when activity resume is complete (after onResume has been called)."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onPrepareDialog(id: Int, dialog: Dialog!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onPrepareDialog(id: Int, dialog: Dialog!, args: Bundle!)",
      "desc": "Provides an opportunity to prepare a managed dialog before it is being shown."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onRestart()",
      "desc": "Called after onStop when the current activity is being re-displayed to the user (the user has navigated back to it)."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onRestoreInstanceState(savedInstanceState: Bundle)",
      "desc": "This method is called after onStart when the activity is being re-initialized from a previously saved state, given here in savedInstanceState."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onResume()",
      "desc": "Called after onRestoreInstanceState, onRestart, or onPause, for your activity to start interacting with the user."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onSaveInstanceState(outState: Bundle)",
      "desc": "Called to retrieve per-instance state from an activity before being killed so that the state can be restored in onCreate or onRestoreInstanceState (the Bundle populated by this method will be passed to both)."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onStart()",
      "desc": "Called after onCreate — or after onRestart when the activity had been stopped, but is now again being displayed to the user."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onStop()",
      "desc": "Called when you are no longer visible to the user."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onTitleChanged(title: CharSequence!, color: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onUserLeaveHint()",
      "desc": "Called as part of the activity lifecycle when an activity is about to go into the background as the result of user choice."
    },
    {
      "type": "inherited-constants",
      "from": "Context"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "ACCESSIBILITY_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.view.accessibility.AccessibilityManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "ACCOUNT_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.accounts.AccountManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "ACTIVITY_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.app.ActivityManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "ALARM_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.app.AlarmManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "APPWIDGET_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.appwidget.AppWidgetManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "APP_OPS_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.app.AppOpsManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "AUDIO_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.media.AudioManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "BATTERY_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.os.BatteryManager"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "BIND_ABOVE_CLIENT"
    },
    {
      "type": "inherited-constants",
      "from": "bindService"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "BIND_ADJUST_WITH_ACTIVITY"
    },
    {
      "type": "inherited-constants",
      "from": "bindService"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "BIND_ALLOW_OOM_MANAGEMENT"
    },
    {
      "type": "inherited-constants",
      "from": "bindService"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "BIND_AUTO_CREATE"
    },
    {
      "type": "inherited-constants",
      "from": "bindService"
    },
    {
      "type": "inherited-constants",
      "from": "android.app.Service#onStartCommand"
    },
    {
      "type": "inherited-constants",
      "from": "startService"
    },
    {
      "type": "inherited-constants",
      "from": "android.os.Build.VERSION_CODES#ICE_CREAM_SANDWICH"
    },
    {
      "type": "inherited-constants",
      "from": "BIND_ADJUST_WITH_ACTIVITY"
    },
    {
      "type": "inherited-constants",
      "from": "BIND_AUTO_CREATE"
    },
    {
      "type": "inherited-constants",
      "from": "BIND_WAIVE_PRIORITY"
    },
    {
      "type": "inherited-constants",
      "from": "BIND_ADJUST_WITH_ACTIVITY"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "BIND_DEBUG_UNBIND"
    },
    {
      "type": "inherited-constants",
      "from": "bindService"
    },
    {
      "type": "inherited-constants",
      "from": "unbindService"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "BIND_EXTERNAL_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "bindService"
    },
    {
      "type": "inherited-constants",
      "from": "isolated"
    },
    {
      "type": "inherited-constants",
      "from": "external"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "BIND_IMPORTANT"
    },
    {
      "type": "inherited-constants",
      "from": "bindService"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "BIND_INCLUDE_CAPABILITIES"
    },
    {
      "type": "inherited-constants",
      "from": "bindService"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "BIND_NOT_FOREGROUND"
    },
    {
      "type": "inherited-constants",
      "from": "bindService"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "BIND_NOT_PERCEPTIBLE"
    },
    {
      "type": "inherited-constants",
      "from": "bindService"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "BIND_WAIVE_PRIORITY"
    },
    {
      "type": "inherited-constants",
      "from": "bindService"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "BIOMETRIC_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.hardware.biometrics.BiometricManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "BLOB_STORE_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "BLUETOOTH_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.bluetooth.BluetoothManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "CAMERA_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.hardware.camera2.CameraManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "CAPTIONING_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.view.accessibility.CaptioningManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "CARRIER_CONFIG_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.telephony.CarrierConfigManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "CLIPBOARD_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.content.ClipboardManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "COMPANION_DEVICE_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.companion.CompanionDeviceManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "CONNECTIVITY_DIAGNOSTICS_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "CONNECTIVITY_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "CONSUMER_IR_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.hardware.ConsumerIrManager"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "CONTEXT_IGNORE_SECURITY"
    },
    {
      "type": "inherited-constants",
      "from": "createPackageContext"
    },
    {
      "type": "inherited-constants",
      "from": "CONTEXT_INCLUDE_CODE"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "CONTEXT_INCLUDE_CODE"
    },
    {
      "type": "inherited-constants",
      "from": "createPackageContext"
    },
    {
      "type": "inherited-constants",
      "from": "getClassLoader()"
    },
    {
      "type": "inherited-constants",
      "from": "getClassLoader"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "CONTEXT_RESTRICTED"
    },
    {
      "type": "inherited-constants",
      "from": "createPackageContext"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "CROSS_PROFILE_APPS_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.content.pm.CrossProfileApps"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "DEVICE_POLICY_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.app.admin.DevicePolicyManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "DISPLAY_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.hardware.display.DisplayManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "DOWNLOAD_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.app.DownloadManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "DROPBOX_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.os.DropBoxManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "EUICC_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.telephony.euicc.EuiccManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "FILE_INTEGRITY_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.security.FileIntegrityManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "FINGERPRINT_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.hardware.fingerprint.FingerprintManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "HARDWARE_PROPERTIES_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.os.HardwarePropertiesManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "INPUT_METHOD_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.view.inputmethod.InputMethodManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "INPUT_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.hardware.input.InputManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "IPSEC_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.net.IpSecManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "JOB_SCHEDULER_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "KEYGUARD_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.app.KeyguardManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "LAUNCHER_APPS_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.content.pm.LauncherApps"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "LAYOUT_INFLATER_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.view.LayoutInflater"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "LOCATION_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "MEDIA_PROJECTION_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "MEDIA_ROUTER_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService"
    },
    {
      "type": "inherited-constants",
      "from": "android.media.MediaRouter"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "MEDIA_SESSION_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.media.session.MediaSessionManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "MIDI_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.media.midi.MidiManager"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "MODE_APPEND"
    },
    {
      "type": "inherited-constants",
      "from": "openFileOutput"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "MODE_ENABLE_WRITE_AHEAD_LOGGING"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "MODE_MULTI_PROCESS"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "MODE_NO_LOCALIZED_COLLATORS"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "MODE_PRIVATE"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "MODE_WORLD_READABLE"
    },
    {
      "type": "inherited-constants",
      "from": "android.os.Build.VERSION_CODES#N"
    },
    {
      "type": "inherited-constants",
      "from": "SecurityException"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "MODE_WORLD_WRITEABLE"
    },
    {
      "type": "inherited-constants",
      "from": "android.os.Build.VERSION_CODES#N"
    },
    {
      "type": "inherited-constants",
      "from": "SecurityException"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "NETWORK_STATS_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "NFC_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.nfc.NfcManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "NOTIFICATION_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.app.NotificationManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "NSD_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "POWER_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.os.PowerManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "PRINT_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "android.print.PrintManager"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "RECEIVER_VISIBLE_TO_INSTANT_APPS"
    },
    {
      "type": "inherited-constants",
      "from": "registerReceiver"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "RESTRICTIONS_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.content.RestrictionsManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "ROLE_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.app.role.RoleManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "SEARCH_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "Configuration#UI_MODE_TYPE_WATCH"
    },
    {
      "type": "inherited-constants",
      "from": "android.app.SearchManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "SENSOR_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "SHORTCUT_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.content.pm.ShortcutManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "STORAGE_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "STORAGE_STATS_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_HEALTH_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.os.health.SystemHealthManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "TELECOM_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.telecom.TelecomManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "TELEPHONY_IMS_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.telephony.ims.ImsManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "TELEPHONY_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.telephony.TelephonyManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "TELEPHONY_SUBSCRIPTION_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.telephony.SubscriptionManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "TEXT_CLASSIFICATION_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "TextClassificationManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "TEXT_SERVICES_MANAGER_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.view.textservice.TextServicesManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "TV_INPUT_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.media.tv.TvInputManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "UI_MODE_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.app.UiModeManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "USAGE_STATS_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "USB_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "USER_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.os.UserManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "VIBRATOR_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "VPN_MANAGEMENT_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.net.VpnManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "WALLPAPER_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "WIFI_AWARE_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.net.wifi.aware.WifiAwareManager"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "WIFI_P2P_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "WIFI_RTT_RANGING_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "WIFI_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "WINDOW_SERVICE"
    },
    {
      "type": "inherited-constants",
      "from": "getSystemService(java.lang.String)"
    },
    {
      "type": "inherited-constants",
      "from": "android.view.WindowManager"
    },
    {
      "type": "inherited-constants",
      "from": "ComponentCallbacks2"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TRIM_MEMORY_BACKGROUND"
    },
    {
      "type": "inherited-constants",
      "from": "onTrimMemory(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TRIM_MEMORY_COMPLETE"
    },
    {
      "type": "inherited-constants",
      "from": "onTrimMemory(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TRIM_MEMORY_MODERATE"
    },
    {
      "type": "inherited-constants",
      "from": "onTrimMemory(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TRIM_MEMORY_RUNNING_CRITICAL"
    },
    {
      "type": "inherited-constants",
      "from": "onTrimMemory(int)"
    },
    {
      "type": "inherited-constants",
      "from": "onLowMemory()"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TRIM_MEMORY_RUNNING_LOW"
    },
    {
      "type": "inherited-constants",
      "from": "onTrimMemory(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TRIM_MEMORY_RUNNING_MODERATE"
    },
    {
      "type": "inherited-constants",
      "from": "onTrimMemory(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TRIM_MEMORY_UI_HIDDEN"
    },
    {
      "type": "inherited-constants",
      "from": "onTrimMemory(int)"
    },
    {
      "type": "inherited-methods",
      "from": "ContextThemeWrapper"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "applyOverrideConfiguration(overrideConfiguration: Configuration!)"
    },
    {
      "type": "inherited-methods",
      "from": "Context#createConfigurationContext(Configuration)"
    },
    {
      "type": "inherited-methods",
      "from": "getResources()"
    },
    {
      "type": "inherited-methods",
      "from": "getAssets()"
    },
    {
      "type": "inherited-methods",
      "from": "AssetManager!"
    },
    {
      "type": "inherited-methods",
      "from": "getAssets()"
    },
    {
      "type": "inherited-methods",
      "from": "Resources!"
    },
    {
      "type": "inherited-methods",
      "from": "getResources()"
    },
    {
      "type": "inherited-methods",
      "from": "Resources.Theme!"
    },
    {
      "type": "inherited-methods",
      "from": "getTheme()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setTheme(theme: Resources.Theme?)"
    },
    {
      "type": "inherited-methods",
      "from": "getTheme()"
    },
    {
      "type": "inherited-methods",
      "from": "ContextWrapper"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "bindIsolatedService(service: Intent, flags: Int, instanceName: String, executor: Executor, conn: ServiceConnection)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "bindService(service: Intent!, conn: ServiceConnection, flags: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "bindService(service: Intent, flags: Int, executor: Executor, conn: ServiceConnection)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "checkCallingOrSelfPermission(permission: String)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "checkCallingOrSelfUriPermission(uri: Uri!, modeFlags: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "checkCallingPermission(permission: String)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "checkCallingUriPermission(uri: Uri!, modeFlags: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "checkPermission(permission: String, pid: Int, uid: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "checkSelfPermission(permission: String)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "checkUriPermission(uri: Uri!, pid: Int, uid: Int, modeFlags: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "checkUriPermission(uri: Uri?, readPermission: String?, writePermission: String?, pid: Int, uid: Int, modeFlags: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "clearWallpaper()"
    },
    {
      "type": "inherited-methods",
      "from": "Context"
    },
    {
      "type": "inherited-methods",
      "from": "createAttributionContext(attributionTag: String?)"
    },
    {
      "type": "inherited-methods",
      "from": "Context!"
    },
    {
      "type": "inherited-methods",
      "from": "createConfigurationContext(overrideConfiguration: Configuration)"
    },
    {
      "type": "inherited-methods",
      "from": "Context!"
    },
    {
      "type": "inherited-methods",
      "from": "createDeviceProtectedStorageContext()"
    },
    {
      "type": "inherited-methods",
      "from": "Context!"
    },
    {
      "type": "inherited-methods",
      "from": "createDisplayContext(display: Display)"
    },
    {
      "type": "inherited-methods",
      "from": "Context!"
    },
    {
      "type": "inherited-methods",
      "from": "createPackageContext(packageName: String!, flags: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Context"
    },
    {
      "type": "inherited-methods",
      "from": "createWindowContext(type: Int, options: Bundle?)"
    },
    {
      "type": "inherited-methods",
      "from": "android.view.WindowManager.LayoutParams#TYPE_APPLICATION_OVERLAY"
    },
    {
      "type": "inherited-methods",
      "from": "Display"
    },
    {
      "type": "inherited-methods",
      "from": "Activity"
    },
    {
      "type": "inherited-methods",
      "from": "createDisplayContext(android.view.Display)"
    },
    {
      "type": "inherited-methods",
      "from": "Configuration"
    },
    {
      "type": "inherited-methods",
      "from": "inflating"
    },
    {
      "type": "inherited-methods",
      "from": "Resources"
    },
    {
      "type": "inherited-methods",
      "from": "Array<String!>!"
    },
    {
      "type": "inherited-methods",
      "from": "databaseList()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "deleteDatabase(name: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "deleteFile(name: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "deleteSharedPreferences(name: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "enforceCallingOrSelfPermission(permission: String, message: String?)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "enforceCallingOrSelfUriPermission(uri: Uri!, modeFlags: Int, message: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "enforceCallingPermission(permission: String, message: String?)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "enforceCallingUriPermission(uri: Uri!, modeFlags: Int, message: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "enforcePermission(permission: String, pid: Int, uid: Int, message: String?)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "enforceUriPermission(uri: Uri!, pid: Int, uid: Int, modeFlags: Int, message: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "enforceUriPermission(uri: Uri?, readPermission: String?, writePermission: String?, pid: Int, uid: Int, modeFlags: Int, message: String?)"
    },
    {
      "type": "inherited-methods",
      "from": "Array<String!>!"
    },
    {
      "type": "inherited-methods",
      "from": "fileList()"
    },
    {
      "type": "inherited-methods",
      "from": "Context!"
    },
    {
      "type": "inherited-methods",
      "from": "getApplicationContext()"
    },
    {
      "type": "inherited-methods",
      "from": "ApplicationInfo!"
    },
    {
      "type": "inherited-methods",
      "from": "getApplicationInfo()"
    },
    {
      "type": "inherited-methods",
      "from": "Context!"
    },
    {
      "type": "inherited-methods",
      "from": "getBaseContext()"
    },
    {
      "type": "inherited-methods",
      "from": "File!"
    },
    {
      "type": "inherited-methods",
      "from": "getCacheDir()"
    },
    {
      "type": "inherited-methods",
      "from": "ClassLoader!"
    },
    {
      "type": "inherited-methods",
      "from": "getClassLoader()"
    },
    {
      "type": "inherited-methods",
      "from": "File!"
    },
    {
      "type": "inherited-methods",
      "from": "getCodeCacheDir()"
    },
    {
      "type": "inherited-methods",
      "from": "ContentResolver!"
    },
    {
      "type": "inherited-methods",
      "from": "getContentResolver()"
    },
    {
      "type": "inherited-methods",
      "from": "File!"
    },
    {
      "type": "inherited-methods",
      "from": "getDataDir()"
    },
    {
      "type": "inherited-methods",
      "from": "File!"
    },
    {
      "type": "inherited-methods",
      "from": "getDatabasePath(name: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "File!"
    },
    {
      "type": "inherited-methods",
      "from": "getDir(name: String!, mode: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Display?"
    },
    {
      "type": "inherited-methods",
      "from": "getDisplay()"
    },
    {
      "type": "inherited-methods",
      "from": "android.app.Activity"
    },
    {
      "type": "inherited-methods",
      "from": "Display"
    },
    {
      "type": "inherited-methods",
      "from": "createDisplayContext(android.view.Display)"
    },
    {
      "type": "inherited-methods",
      "from": "android.hardware.display.DisplayManager#getDisplay"
    },
    {
      "type": "inherited-methods",
      "from": "File?"
    },
    {
      "type": "inherited-methods",
      "from": "getExternalCacheDir()"
    },
    {
      "type": "inherited-methods",
      "from": "Array<File!>!"
    },
    {
      "type": "inherited-methods",
      "from": "getExternalCacheDirs()"
    },
    {
      "type": "inherited-methods",
      "from": "File?"
    },
    {
      "type": "inherited-methods",
      "from": "getExternalFilesDir(type: String?)"
    },
    {
      "type": "inherited-methods",
      "from": "Array<File!>!"
    },
    {
      "type": "inherited-methods",
      "from": "getExternalFilesDirs(type: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "Array<File!>!"
    },
    {
      "type": "inherited-methods",
      "from": "getExternalMediaDirs()"
    },
    {
      "type": "inherited-methods",
      "from": "File!"
    },
    {
      "type": "inherited-methods",
      "from": "getFileStreamPath(name: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "File!"
    },
    {
      "type": "inherited-methods",
      "from": "getFilesDir()"
    },
    {
      "type": "inherited-methods",
      "from": "Executor!"
    },
    {
      "type": "inherited-methods",
      "from": "getMainExecutor()"
    },
    {
      "type": "inherited-methods",
      "from": "Looper!"
    },
    {
      "type": "inherited-methods",
      "from": "getMainLooper()"
    },
    {
      "type": "inherited-methods",
      "from": "File!"
    },
    {
      "type": "inherited-methods",
      "from": "getNoBackupFilesDir()"
    },
    {
      "type": "inherited-methods",
      "from": "File!"
    },
    {
      "type": "inherited-methods",
      "from": "getObbDir()"
    },
    {
      "type": "inherited-methods",
      "from": "Array<File!>!"
    },
    {
      "type": "inherited-methods",
      "from": "getObbDirs()"
    },
    {
      "type": "inherited-methods",
      "from": "String!"
    },
    {
      "type": "inherited-methods",
      "from": "getPackageCodePath()"
    },
    {
      "type": "inherited-methods",
      "from": "PackageManager!"
    },
    {
      "type": "inherited-methods",
      "from": "getPackageManager()"
    },
    {
      "type": "inherited-methods",
      "from": "String!"
    },
    {
      "type": "inherited-methods",
      "from": "getPackageName()"
    },
    {
      "type": "inherited-methods",
      "from": "String!"
    },
    {
      "type": "inherited-methods",
      "from": "getPackageResourcePath()"
    },
    {
      "type": "inherited-methods",
      "from": "SharedPreferences!"
    },
    {
      "type": "inherited-methods",
      "from": "getSharedPreferences(name: String!, mode: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "String?"
    },
    {
      "type": "inherited-methods",
      "from": "getSystemServiceName(serviceClass: Class<*>)"
    },
    {
      "type": "inherited-methods",
      "from": "Drawable!"
    },
    {
      "type": "inherited-methods",
      "from": "getWallpaper()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getWallpaperDesiredMinimumHeight()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getWallpaperDesiredMinimumWidth()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "grantUriPermission(toPackage: String!, uri: Uri!, modeFlags: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isDeviceProtectedStorage()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isRestricted()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "moveDatabaseFrom(sourceContext: Context!, name: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "moveSharedPreferencesFrom(sourceContext: Context!, name: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "FileInputStream!"
    },
    {
      "type": "inherited-methods",
      "from": "openFileInput(name: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "FileOutputStream!"
    },
    {
      "type": "inherited-methods",
      "from": "openFileOutput(name: String!, mode: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "SQLiteDatabase!"
    },
    {
      "type": "inherited-methods",
      "from": "openOrCreateDatabase(name: String!, mode: Int, factory: SQLiteDatabase.CursorFactory!)"
    },
    {
      "type": "inherited-methods",
      "from": "SQLiteDatabase!"
    },
    {
      "type": "inherited-methods",
      "from": "openOrCreateDatabase(name: String!, mode: Int, factory: SQLiteDatabase.CursorFactory!, errorHandler: DatabaseErrorHandler?)"
    },
    {
      "type": "inherited-methods",
      "from": "Drawable!"
    },
    {
      "type": "inherited-methods",
      "from": "peekWallpaper()"
    },
    {
      "type": "inherited-methods",
      "from": "Intent?"
    },
    {
      "type": "inherited-methods",
      "from": "registerReceiver(receiver: BroadcastReceiver?, filter: IntentFilter!)"
    },
    {
      "type": "inherited-methods",
      "from": "Intent?"
    },
    {
      "type": "inherited-methods",
      "from": "registerReceiver(receiver: BroadcastReceiver?, filter: IntentFilter!, flags: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Intent?"
    },
    {
      "type": "inherited-methods",
      "from": "registerReceiver(receiver: BroadcastReceiver!, filter: IntentFilter!, broadcastPermission: String?, scheduler: Handler?)"
    },
    {
      "type": "inherited-methods",
      "from": "Intent?"
    },
    {
      "type": "inherited-methods",
      "from": "registerReceiver(receiver: BroadcastReceiver!, filter: IntentFilter!, broadcastPermission: String?, scheduler: Handler?, flags: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "removeStickyBroadcast(intent: Intent!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "removeStickyBroadcastAsUser(intent: Intent!, user: UserHandle!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "revokeUriPermission(uri: Uri!, modeFlags: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "revokeUriPermission(targetPackage: String!, uri: Uri!, modeFlags: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "sendBroadcast(intent: Intent!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "sendBroadcast(intent: Intent!, receiverPermission: String?)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "sendBroadcastAsUser(intent: Intent!, user: UserHandle!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "sendBroadcastAsUser(intent: Intent!, user: UserHandle!, receiverPermission: String?)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "sendOrderedBroadcast(intent: Intent!, receiverPermission: String?)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "sendOrderedBroadcast(intent: Intent, receiverPermission: String?, resultReceiver: BroadcastReceiver?, scheduler: Handler?, initialCode: Int, initialData: String?, initialExtras: Bundle?)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "sendOrderedBroadcast(intent: Intent, receiverPermission: String?, receiverAppOp: String?, resultReceiver: BroadcastReceiver?, scheduler: Handler?, initialCode: Int, initialData: String?, initialExtras: Bundle?)"
    },
    {
      "type": "inherited-methods",
      "from": "sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)"
    },
    {
      "type": "inherited-methods",
      "from": "BroadcastReceiver"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "sendOrderedBroadcast(intent: Intent, initialCode: Int, receiverPermission: String?, receiverAppOp: String?, resultReceiver: BroadcastReceiver?, scheduler: Handler?, initialData: String?, initialExtras: Bundle?, options: Bundle?)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "sendOrderedBroadcastAsUser(intent: Intent!, user: UserHandle!, receiverPermission: String?, resultReceiver: BroadcastReceiver!, scheduler: Handler?, initialCode: Int, initialData: String?, initialExtras: Bundle?)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "sendStickyBroadcast(intent: Intent!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "sendStickyBroadcastAsUser(intent: Intent!, user: UserHandle!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "sendStickyOrderedBroadcast(intent: Intent!, resultReceiver: BroadcastReceiver!, scheduler: Handler?, initialCode: Int, initialData: String?, initialExtras: Bundle?)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "sendStickyOrderedBroadcastAsUser(intent: Intent!, user: UserHandle!, resultReceiver: BroadcastReceiver!, scheduler: Handler?, initialCode: Int, initialData: String?, initialExtras: Bundle?)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setWallpaper(bitmap: Bitmap!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setWallpaper(data: InputStream!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "startActivities(intents: Array<Intent!>!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "startActivities(intents: Array<Intent!>!, options: Bundle!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "startActivity(intent: Intent!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "startActivity(intent: Intent!, options: Bundle?)"
    },
    {
      "type": "inherited-methods",
      "from": "ComponentName?"
    },
    {
      "type": "inherited-methods",
      "from": "startForegroundService(service: Intent!)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "startInstrumentation(className: ComponentName, profileFile: String?, arguments: Bundle?)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "startIntentSender(intent: IntentSender!, fillInIntent: Intent?, flagsMask: Int, flagsValues: Int, extraFlags: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "startIntentSender(intent: IntentSender!, fillInIntent: Intent?, flagsMask: Int, flagsValues: Int, extraFlags: Int, options: Bundle?)"
    },
    {
      "type": "inherited-methods",
      "from": "ComponentName?"
    },
    {
      "type": "inherited-methods",
      "from": "startService(service: Intent!)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "stopService(name: Intent!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "unbindService(conn: ServiceConnection)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "unregisterReceiver(receiver: BroadcastReceiver!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "updateServiceGroup(conn: ServiceConnection, group: Int, importance: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Context"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getColor(id: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "ColorStateList"
    },
    {
      "type": "inherited-methods",
      "from": "getColorStateList(id: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Drawable?"
    },
    {
      "type": "inherited-methods",
      "from": "getDrawable(id: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "String"
    },
    {
      "type": "inherited-methods",
      "from": "getString(resId: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "String"
    },
    {
      "type": "inherited-methods",
      "from": "getString(resId: Int, vararg formatArgs: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "java.util.Formatter"
    },
    {
      "type": "inherited-methods",
      "from": "java.lang.String#format"
    },
    {
      "type": "inherited-methods",
      "from": "T"
    },
    {
      "type": "inherited-methods",
      "from": "getSystemService(serviceClass: Class<T>)"
    },
    {
      "type": "inherited-methods",
      "from": "android.view.WindowManager"
    },
    {
      "type": "inherited-methods",
      "from": "android.view.LayoutInflater"
    },
    {
      "type": "inherited-methods",
      "from": "android.app.ActivityManager"
    },
    {
      "type": "inherited-methods",
      "from": "android.os.PowerManager"
    },
    {
      "type": "inherited-methods",
      "from": "android.app.AlarmManager"
    },
    {
      "type": "inherited-methods",
      "from": "android.app.NotificationManager"
    },
    {
      "type": "inherited-methods",
      "from": "android.app.KeyguardManager"
    },
    {
      "type": "inherited-methods",
      "from": "android.location.LocationManager"
    },
    {
      "type": "inherited-methods",
      "from": "android.app.SearchManager"
    },
    {
      "type": "inherited-methods",
      "from": "android.os.Vibrator"
    },
    {
      "type": "inherited-methods",
      "from": "android.net.ConnectivityManager"
    },
    {
      "type": "inherited-methods",
      "from": "android.net.wifi.WifiManager"
    },
    {
      "type": "inherited-methods",
      "from": "android.media.AudioManager"
    },
    {
      "type": "inherited-methods",
      "from": "android.media.MediaRouter"
    },
    {
      "type": "inherited-methods",
      "from": "android.telephony.TelephonyManager"
    },
    {
      "type": "inherited-methods",
      "from": "android.telephony.SubscriptionManager"
    },
    {
      "type": "inherited-methods",
      "from": "android.view.inputmethod.InputMethodManager"
    },
    {
      "type": "inherited-methods",
      "from": "android.app.UiModeManager"
    },
    {
      "type": "inherited-methods",
      "from": "android.app.DownloadManager"
    },
    {
      "type": "inherited-methods",
      "from": "android.os.BatteryManager"
    },
    {
      "type": "inherited-methods",
      "from": "android.app.job.JobScheduler"
    },
    {
      "type": "inherited-methods",
      "from": "android.app.usage.NetworkStatsManager"
    },
    {
      "type": "inherited-methods",
      "from": "PackageManager#isInstantApp()"
    },
    {
      "type": "inherited-methods",
      "from": "DEVICE_POLICY_SERVICE"
    },
    {
      "type": "inherited-methods",
      "from": "FINGERPRINT_SERVICE"
    },
    {
      "type": "inherited-methods",
      "from": "KEYGUARD_SERVICE"
    },
    {
      "type": "inherited-methods",
      "from": "SHORTCUT_SERVICE"
    },
    {
      "type": "inherited-methods",
      "from": "USB_SERVICE"
    },
    {
      "type": "inherited-methods",
      "from": "WALLPAPER_SERVICE"
    },
    {
      "type": "inherited-methods",
      "from": "WIFI_P2P_SERVICE"
    },
    {
      "type": "inherited-methods",
      "from": "WIFI_SERVICE"
    },
    {
      "type": "inherited-methods",
      "from": "WIFI_AWARE_SERVICE"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "CharSequence"
    },
    {
      "type": "inherited-methods",
      "from": "getText(resId: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "TypedArray"
    },
    {
      "type": "inherited-methods",
      "from": "obtainStyledAttributes(attrs: IntArray)"
    },
    {
      "type": "inherited-methods",
      "from": "android.content.res.Resources.Theme#obtainStyledAttributes(int[])"
    },
    {
      "type": "inherited-methods",
      "from": "TypedArray"
    },
    {
      "type": "inherited-methods",
      "from": "obtainStyledAttributes(resid: Int, attrs: IntArray)"
    },
    {
      "type": "inherited-methods",
      "from": "android.content.res.Resources.Theme#obtainStyledAttributes(int, int[])"
    },
    {
      "type": "inherited-methods",
      "from": "TypedArray"
    },
    {
      "type": "inherited-methods",
      "from": "obtainStyledAttributes(set: AttributeSet?, attrs: IntArray)"
    },
    {
      "type": "inherited-methods",
      "from": "android.content.res.Resources.Theme#obtainStyledAttributes(AttributeSet, int[], int, int)"
    },
    {
      "type": "inherited-methods",
      "from": "TypedArray"
    },
    {
      "type": "inherited-methods",
      "from": "obtainStyledAttributes(set: AttributeSet?, attrs: IntArray, defStyleAttr: Int, defStyleRes: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "android.content.res.Resources.Theme#obtainStyledAttributes(AttributeSet, int[], int, int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "registerComponentCallbacks(callback: ComponentCallbacks!)"
    },
    {
      "type": "inherited-methods",
      "from": "ComponentCallbacks"
    },
    {
      "type": "inherited-methods",
      "from": "unregisterComponentCallbacks"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "sendBroadcastWithMultiplePermissions(intent: Intent, receiverPermissions: Array<String!>)"
    },
    {
      "type": "inherited-methods",
      "from": "sendOrderedBroadcast(android.content.Intent,java.lang.String)"
    },
    {
      "type": "inherited-methods",
      "from": "BroadcastReceiver"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "unregisterComponentCallbacks(callback: ComponentCallbacks!)"
    },
    {
      "type": "inherited-methods",
      "from": "ComponentCallbacks"
    },
    {
      "type": "inherited-methods",
      "from": "registerComponentCallbacks(android.content.ComponentCallbacks)"
    },
    {
      "type": "inherited-methods",
      "from": "ComponentCallbacks"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onConfigurationChanged(newConfig: Configuration)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onLowMemory()"
    },
    {
      "type": "inherited-methods",
      "from": "ComponentCallbacks2#onTrimMemory"
    },
    {
      "type": "inherited-methods",
      "from": "ComponentCallbacks2"
    },
    {
      "type": "inherited-methods",
      "from": "onLowMemory"
    },
    {
      "type": "inherited-methods",
      "from": "ComponentCallbacks2#onTrimMemory"
    },
    {
      "type": "inherited-methods",
      "from": "ComponentCallbacks2#TRIM_MEMORY_COMPLETE"
    },
    {
      "type": "inherited-methods",
      "from": "Callback"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onPointerCaptureChanged(hasCapture: Boolean)"
    }
  ]
}