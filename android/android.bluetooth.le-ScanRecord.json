{
  "path": "android.bluetooth.le",
  "name": "ScanRecord",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getAdvertiseFlags()",
      "desc": "Returns the advertising flags indicating the discoverable mode and capability of the device."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ByteArray",
      "code": "getBytes()",
      "desc": "Returns raw bytes of scan record.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getDeviceName()",
      "desc": "Returns the local name of the BLE device.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "SparseArray",
      "code": "getManufacturerSpecificData()",
      "desc": "Returns a sparse array of manufacturer identifier and its corresponding manufacturer specific data.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ByteArray",
      "code": "getManufacturerSpecificData(manufacturerId: Int)",
      "desc": "Returns the manufacturer specific data associated with the manufacturer id.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MutableMap",
      "code": "getServiceData()",
      "desc": "Returns a map of service UUID and its corresponding service data.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ByteArray",
      "code": "getServiceData(serviceDataUuid: ParcelUuid!)",
      "desc": "Returns the service data byte array associated with the serviceUuid.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MutableList",
      "code": "getServiceSolicitationUuids()",
      "desc": "Returns a list of service solicitation UUIDs within the advertisement that are used to identify the Bluetooth GATT services.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MutableList",
      "code": "getServiceUuids()",
      "desc": "Returns a list of service UUIDs within the advertisement that are used to identify the bluetooth GATT services.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getTxPowerLevel()",
      "desc": "Returns the transmission power level of the packet in dBm."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": ""
    }
  ]
}