{
  "path": "android.icu.text",
  "name": "Normalizer",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "COMPARE_CODE_POINT_ORDER",
      "desc": "Option bit for compare: Compare strings in code point order instead of code unit order."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "COMPARE_IGNORE_CASE",
      "desc": "Option bit for compare: Perform case-insensitive comparison."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FOLD_CASE_DEFAULT",
      "desc": "Option bit for compare: Case sensitively compare the strings"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FOLD_CASE_EXCLUDE_SPECIAL_I",
      "desc": "Option value for case folding: Use the modified set of mappings provided in CaseFolding."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "INPUT_IS_FCD",
      "desc": "Option bit for compare: Both input strings are assumed to fulfill FCD conditions."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "compare(s1: CharArray!, s1Start: Int, s1Limit: Int, s2: CharArray!, s2Start: Int, s2Limit: Int, options: Int)",
      "desc": "Compare two strings for canonical equivalence."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "compare(s1: String!, s2: String!, options: Int)",
      "desc": "Compare two strings for canonical equivalence."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "compare(s1: CharArray!, s2: CharArray!, options: Int)",
      "desc": "Compare two strings for canonical equivalence."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "compare(char32a: Int, char32b: Int, options: Int)",
      "desc": "Convenience method that can have faster implementation by not allocating buffers."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "compare(char32a: Int, str2: String!, options: Int)",
      "desc": "Convenience method that can have faster implementation by not allocating buffers."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "code": "QuickCheckResult",
      "desc": "Result values for quickCheck()."
    }
  ]
}