{
  "path": "android.content.res",
  "name": "AssetFileDescriptor",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "UNKNOWN_LENGTH",
      "desc": "Length used with AssetFileDescriptor(android.os.ParcelFileDescriptor,long,long) and getDeclaredLength when a length has not been declared."
    },
    {
      "type": "ctor",
      "ctor": "<init>(fd: ParcelFileDescriptor!, startOffset: Long, length: Long)\n            Create a new AssetFileDescriptor from the given values."
    },
    {
      "type": "ctor",
      "ctor": "<init>(fd: ParcelFileDescriptor!, startOffset: Long, length: Long, extras: Bundle!)\n            Create a new AssetFileDescriptor from the given values."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "close()",
      "desc": "Convenience for calling getParcelFileDescriptor().close()."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "FileInputStream",
      "code": "createInputStream()",
      "desc": "Create and return a new auto-close input stream for this asset.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "FileOutputStream",
      "code": "createOutputStream()",
      "desc": "Create and return a new auto-close output stream for this asset.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "describeContents()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "getDeclaredLength()",
      "desc": "Return the actual number of bytes that were declared when the AssetFileDescriptor was constructed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Bundle",
      "code": "getExtras()",
      "desc": "Returns any additional details that can be used to interpret the underlying file descriptor.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "FileDescriptor",
      "code": "getFileDescriptor()",
      "desc": "Returns the FileDescriptor that can be used to read the data in the file.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "getLength()",
      "desc": "Returns the total number of bytes of this asset entry's data."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ParcelFileDescriptor",
      "code": "getParcelFileDescriptor()",
      "desc": "The AssetFileDescriptor contains its own ParcelFileDescriptor, which in addition to the normal FileDescriptor object also allows you to close the descriptor when you are done with it.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "getStartOffset()",
      "desc": "Returns the byte offset where this asset entry's data starts."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "writeToParcel(out: Parcel!, flags: Int)",
      "desc": ""
    },
    {
      "type": "inherited-constants",
      "from": "Parcelable"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "CONTENTS_FILE_DESCRIPTOR"
    },
    {
      "type": "inherited-constants",
      "from": "describeContents()"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "PARCELABLE_WRITE_RETURN_VALUE"
    },
    {
      "type": "inherited-constants",
      "from": "writeToParcel"
    },
    {
      "type": "inherited-constants",
      "from": "Parcelable someFunction()"
    },
    {
      "type": "inherited-constants",
      "from": "void someFunction(out Parcelable)"
    },
    {
      "type": "inherited-constants",
      "from": "void someFunction(inout Parcelable)"
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "open",
      "code": "AutoCloseInputStream",
      "desc": "An InputStream you can create on a ParcelFileDescriptor, which will take care of calling ParcelFileDescriptor#close for you when the stream is closed."
    },
    {
      "type": "nested-classes",
      "keyword": "open",
      "code": "AutoCloseOutputStream",
      "desc": "An OutputStream you can create on a ParcelFileDescriptor, which will take care of calling ParcelFileDescriptor#close for you when the stream is closed."
    }
  ]
}