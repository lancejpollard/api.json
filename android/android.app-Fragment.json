{
  "path": "android.app",
  "name": "Fragment",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()\n            Default constructor."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "dump(prefix: String!, fd: FileDescriptor!, writer: PrintWriter!, args: Array<String!>!)",
      "desc": "Print the Fragments's state into the given stream."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Subclasses can not override equals()."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Activity",
      "code": "getActivity()",
      "desc": "Return the Activity this fragment is currently associated with.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getAllowEnterTransitionOverlap()",
      "desc": "Returns whether the exit transition and enter transition overlap or not."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getAllowReturnTransitionOverlap()",
      "desc": "Returns whether the return transition and reenter transition overlap or not."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Bundle",
      "code": "getArguments()",
      "desc": "Return the arguments supplied to setArguments, if any.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "FragmentManager",
      "code": "getChildFragmentManager()",
      "desc": "Return a private FragmentManager for placing and managing Fragments inside of this Fragment.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Context",
      "code": "getContext()",
      "desc": "Return the Context this fragment is currently associated with.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Transition",
      "code": "getEnterTransition()",
      "desc": "Returns the Transition that will be used to move Views into the initial scene.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Transition",
      "code": "getExitTransition()",
      "desc": "Returns the Transition that will be used to move Views out of the scene when the fragment is removed, hidden, or detached when not popping the back stack.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "FragmentManager",
      "code": "getFragmentManager()",
      "desc": "Return the FragmentManager for interacting with fragments associated with this fragment's activity.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Any",
      "code": "getHost()",
      "desc": "Return the host object of this fragment.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getId()",
      "desc": "Return the identifier this fragment is known by."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "LayoutInflater",
      "code": "getLayoutInflater()",
      "desc": "Returns the cached LayoutInflater used to inflate Views of this Fragment.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "LoaderManager",
      "code": "getLoaderManager()",
      "desc": "Return the LoaderManager for this fragment, creating it if needed.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Fragment",
      "code": "getParentFragment()",
      "desc": "Returns the parent Fragment containing this Fragment.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Transition",
      "code": "getReenterTransition()",
      "desc": "Returns the Transition that will be used to move Views in to the scene when returning due to popping a back stack.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Resources",
      "code": "getResources()",
      "desc": "Return getActivity().getResources().",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "getRetainInstance()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Transition",
      "code": "getReturnTransition()",
      "desc": "Returns the Transition that will be used to move Views out of the scene when the Fragment is preparing to be removed, hidden, or detached because of popping the back stack.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Transition",
      "code": "getSharedElementEnterTransition()",
      "desc": "Returns the Transition that will be used for shared elements transferred into the content Scene.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Transition",
      "code": "getSharedElementReturnTransition()",
      "desc": "Return the Transition that will be used for shared elements transferred back during a pop of the back stack.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getString(resId: Int)",
      "desc": "Return a localized string from the application's package's default string table.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getString(resId: Int, vararg formatArgs: Any!)",
      "desc": "Return a localized formatted string from the application's package's default string table, substituting the format arguments as defined in java.util.Formatter and java.lang.String#format.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getTag()",
      "desc": "Get the tag name of the fragment, if specified.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Fragment",
      "code": "getTargetFragment()",
      "desc": "Return the target fragment set by setTargetFragment.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getTargetRequestCode()",
      "desc": "Return the target request code set by setTargetFragment."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "CharSequence",
      "code": "getText(resId: Int)",
      "desc": "Return a localized, styled CharSequence from the application's package's default string table.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getUserVisibleHint()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View",
      "code": "getView()",
      "desc": "Get the root view for the fragment's layout (the one returned by onCreateView), if provided.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Subclasses can not override hashCode()."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Fragment",
      "code": "instantiate(context: Context!, fname: String!)",
      "desc": "Like instantiate(android.content.Context,java.lang.String,android.os.Bundle) but with a null argument Bundle.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Fragment",
      "code": "instantiate(context: Context!, fname: String!, args: Bundle?)",
      "desc": "Create a new instance of a Fragment with the given class name.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isAdded()",
      "desc": "Return true if the fragment is currently added to its activity."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isDetached()",
      "desc": "Return true if the fragment has been explicitly detached from the UI."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isHidden()",
      "desc": "Return true if the fragment has been hidden."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isInLayout()",
      "desc": "Return true if the layout is included as part of an activity view hierarchy via the <fragment> tag."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isRemoving()",
      "desc": "Return true if this fragment is currently being removed from its activity."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isResumed()",
      "desc": "Return true if the fragment is in the resumed state."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isStateSaved()",
      "desc": "Returns true if this fragment is added and its state has already been saved by its host."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isVisible()",
      "desc": "Return true if the fragment is currently visible to the user."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onActivityCreated(savedInstanceState: Bundle?)",
      "desc": "Called when the fragment's activity has been created and this fragment's view hierarchy instantiated."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onActivityResult(requestCode: Int, resultCode: Int, data: Intent!)",
      "desc": "Receive the result from a previous call to startActivityForResult(android.content.Intent,int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onAttach(context: Context!)",
      "desc": "Called when a fragment is first attached to its context."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onAttach(activity: Activity!)",
      "desc": "If you override this method you must call through to the superclass implementation."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onAttachFragment(childFragment: Fragment!)",
      "desc": "Called when a fragment is attached as a child of this fragment."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onConfigurationChanged(newConfig: Configuration)",
      "desc": "Called by the system when the device configuration changes while your component is running."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onContextItemSelected(item: MenuItem!)",
      "desc": "This hook is called whenever an item in a context menu is selected."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onCreate(savedInstanceState: Bundle?)",
      "desc": "Called to do initial creation of a fragment."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Animator",
      "code": "onCreateAnimator(transit: Int, enter: Boolean, nextAnim: Int)",
      "desc": "Called when a fragment loads an animation.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onCreateContextMenu(menu: ContextMenu!, v: View!, menuInfo: ContextMenu.ContextMenuInfo!)",
      "desc": "Called when a context menu for the view is about to be shown."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onCreateOptionsMenu(menu: Menu!, inflater: MenuInflater!)",
      "desc": "Initialize the contents of the Activity's standard options menu."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View",
      "code": "onCreateView(inflater: LayoutInflater!, container: ViewGroup?, savedInstanceState: Bundle!)",
      "desc": "Called to have the fragment instantiate its user interface view.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onDestroy()",
      "desc": "Called when the fragment is no longer in use."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onDestroyOptionsMenu()",
      "desc": "Called when this fragment's option menu items are no longer being included in the overall options menu."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onDestroyView()",
      "desc": "Called when the view previously created by onCreateView has been detached from the fragment."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onDetach()",
      "desc": "Called when the fragment is no longer attached to its activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "LayoutInflater",
      "code": "onGetLayoutInflater(savedInstanceState: Bundle!)",
      "desc": "Returns the LayoutInflater used to inflate Views of this Fragment.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onHiddenChanged(hidden: Boolean)",
      "desc": "Called when the hidden state (as returned by isHidden() of the fragment has changed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onInflate(attrs: AttributeSet!, savedInstanceState: Bundle!)",
      "desc": "If you override this method you must call through to the superclass implementation."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onInflate(context: Context!, attrs: AttributeSet!, savedInstanceState: Bundle!)",
      "desc": "Called when a fragment is being created as part of a view layout inflation, typically from setting the content view of an activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onInflate(activity: Activity!, attrs: AttributeSet!, savedInstanceState: Bundle!)",
      "desc": "If you override this method you must call through to the superclass implementation."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onLowMemory()",
      "desc": "This is called when the overall system is running low on memory, and actively running processes should trim their memory usage."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onMultiWindowModeChanged(isInMultiWindowMode: Boolean, newConfig: Configuration!)",
      "desc": "Called when the Fragment's activity changes from fullscreen mode to multi-window mode and visa-versa."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onMultiWindowModeChanged(isInMultiWindowMode: Boolean)",
      "desc": "Called when the Fragment's activity changes from fullscreen mode to multi-window mode and visa-versa."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onOptionsItemSelected(item: MenuItem!)",
      "desc": "This hook is called whenever an item in your options menu is selected."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onOptionsMenuClosed(menu: Menu!)",
      "desc": "This hook is called whenever the options menu is being closed (either by the user canceling the menu with the back/menu button, or when an item is selected)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onPause()",
      "desc": "Called when the Fragment is no longer resumed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onPictureInPictureModeChanged(isInPictureInPictureMode: Boolean, newConfig: Configuration!)",
      "desc": "Called by the system when the activity changes to and from picture-in-picture mode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onPictureInPictureModeChanged(isInPictureInPictureMode: Boolean)",
      "desc": "Called by the system when the activity changes to and from picture-in-picture mode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onPrepareOptionsMenu(menu: Menu!)",
      "desc": "Prepare the Screen's standard options menu to be displayed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onRequestPermissionsResult(requestCode: Int, permissions: Array<String!>, grantResults: IntArray)",
      "desc": "Callback for the result from requesting permissions."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onResume()",
      "desc": "Called when the fragment is visible to the user and actively running."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onSaveInstanceState(outState: Bundle!)",
      "desc": "Called to ask the fragment to save its current dynamic state, so it can later be reconstructed in a new instance of its process is restarted."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onStart()",
      "desc": "Called when the Fragment is visible to the user."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onStop()",
      "desc": "Called when the Fragment is no longer started."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onTrimMemory(level: Int)",
      "desc": "Called when the operating system has determined that it is a good time for a process to trim unneeded memory from its process."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onViewCreated(view: View!, savedInstanceState: Bundle?)",
      "desc": "Called immediately after onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) has returned, but before any saved state has been restored in to the view."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onViewStateRestored(savedInstanceState: Bundle!)",
      "desc": "Called when all saved state has been restored into the view hierarchy of the fragment."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "postponeEnterTransition()",
      "desc": "Postpone the entering Fragment transition until startPostponedEnterTransition() or FragmentManager#executePendingTransactions() has been called."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "registerForContextMenu(view: View!)",
      "desc": "Registers a context menu to be shown for the given view (multiple views can show the context menu)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "requestPermissions(permissions: Array<String!>, requestCode: Int)",
      "desc": "Requests permissions to be granted to this application."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAllowEnterTransitionOverlap(allow: Boolean)",
      "desc": "Sets whether the exit transition and enter transition overlap or not."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAllowReturnTransitionOverlap(allow: Boolean)",
      "desc": "Sets whether the return transition and reenter transition overlap or not."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setArguments(args: Bundle!)",
      "desc": "Supply the construction arguments for this fragment."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setEnterSharedElementCallback(callback: SharedElementCallback!)",
      "desc": "When custom transitions are used with Fragments, the enter transition callback is called when this Fragment is attached or detached when not popping the back stack."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setEnterTransition(transition: Transition!)",
      "desc": "Sets the Transition that will be used to move Views into the initial scene."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setExitSharedElementCallback(callback: SharedElementCallback!)",
      "desc": "When custom transitions are used with Fragments, the exit transition callback is called when this Fragment is attached or detached when popping the back stack."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setExitTransition(transition: Transition!)",
      "desc": "Sets the Transition that will be used to move Views out of the scene when the fragment is removed, hidden, or detached when not popping the back stack."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setHasOptionsMenu(hasMenu: Boolean)",
      "desc": "Report that this fragment would like to participate in populating the options menu by receiving a call to onCreateOptionsMenu and related methods."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setInitialSavedState(state: Fragment.SavedState!)",
      "desc": "Set the initial saved state that this Fragment should restore itself from when first being constructed, as returned by FragmentManager#saveFragmentInstanceState(Fragment)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMenuVisibility(menuVisible: Boolean)",
      "desc": "Set a hint for whether this fragment's menu should be visible."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setReenterTransition(transition: Transition!)",
      "desc": "Sets the Transition that will be used to move Views in to the scene when returning due to popping a back stack."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setRetainInstance(retain: Boolean)",
      "desc": "Control whether a fragment instance is retained across Activity re-creation (such as from a configuration change)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setReturnTransition(transition: Transition!)",
      "desc": "Sets the Transition that will be used to move Views out of the scene when the Fragment is preparing to be removed, hidden, or detached because of popping the back stack."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSharedElementEnterTransition(transition: Transition!)",
      "desc": "Sets the Transition that will be used for shared elements transferred into the content Scene."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSharedElementReturnTransition(transition: Transition!)",
      "desc": "Sets the Transition that will be used for shared elements transferred back during a pop of the back stack."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTargetFragment(fragment: Fragment!, requestCode: Int)",
      "desc": "Optional target for this fragment."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setUserVisibleHint(isVisibleToUser: Boolean)",
      "desc": "Set a hint to the system about whether this fragment's UI is currently visible to the user."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "shouldShowRequestPermissionRationale(permission: String)",
      "desc": "Gets whether you should show UI with rationale before requesting a permission."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startActivity(intent: Intent!)",
      "desc": "Call Activity#startActivity(Intent) from the fragment's containing Activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startActivity(intent: Intent!, options: Bundle!)",
      "desc": "Call Activity#startActivity(Intent, Bundle) from the fragment's containing Activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startActivityForResult(intent: Intent!, requestCode: Int)",
      "desc": "Call Activity#startActivityForResult(Intent, int) from the fragment's containing Activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startActivityForResult(intent: Intent!, requestCode: Int, options: Bundle!)",
      "desc": "Call Activity#startActivityForResult(Intent, int, Bundle) from the fragment's containing Activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startIntentSenderForResult(intent: IntentSender!, requestCode: Int, fillInIntent: Intent?, flagsMask: Int, flagsValues: Int, extraFlags: Int, options: Bundle!)",
      "desc": "Call Activity#startIntentSenderForResult(IntentSender, int, Intent, int, int, int, from the fragment's containing Activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startPostponedEnterTransition()",
      "desc": "Begin postponed transitions after postponeEnterTransition() was called."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "unregisterForContextMenu(view: View!)",
      "desc": "Prevents a context menu to be shown for the given view."
    },
    {
      "type": "inherited-constants",
      "from": "ComponentCallbacks2"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TRIM_MEMORY_BACKGROUND"
    },
    {
      "type": "inherited-constants",
      "from": "onTrimMemory(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TRIM_MEMORY_COMPLETE"
    },
    {
      "type": "inherited-constants",
      "from": "onTrimMemory(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TRIM_MEMORY_MODERATE"
    },
    {
      "type": "inherited-constants",
      "from": "onTrimMemory(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TRIM_MEMORY_RUNNING_CRITICAL"
    },
    {
      "type": "inherited-constants",
      "from": "onTrimMemory(int)"
    },
    {
      "type": "inherited-constants",
      "from": "onLowMemory()"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TRIM_MEMORY_RUNNING_LOW"
    },
    {
      "type": "inherited-constants",
      "from": "onTrimMemory(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TRIM_MEMORY_RUNNING_MODERATE"
    },
    {
      "type": "inherited-constants",
      "from": "onTrimMemory(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TRIM_MEMORY_UI_HIDDEN"
    },
    {
      "type": "inherited-constants",
      "from": "onTrimMemory(int)"
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "open",
      "code": "InstantiationException",
      "desc": "Thrown by Fragment#instantiate(Context, String, Bundle) when there is an instantiation failure."
    },
    {
      "type": "nested-classes",
      "keyword": "open",
      "code": "SavedState",
      "desc": "State information that has been retrieved from a fragment instance through FragmentManager#saveFragmentInstanceState(Fragment)."
    },
    {
      "type": "inherited-methods",
      "from": "ComponentCallbacks"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onConfigurationChanged(newConfig: Configuration)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onLowMemory()"
    },
    {
      "type": "inherited-methods",
      "from": "ComponentCallbacks2#onTrimMemory"
    },
    {
      "type": "inherited-methods",
      "from": "ComponentCallbacks2"
    },
    {
      "type": "inherited-methods",
      "from": "onLowMemory"
    },
    {
      "type": "inherited-methods",
      "from": "ComponentCallbacks2#onTrimMemory"
    },
    {
      "type": "inherited-methods",
      "from": "ComponentCallbacks2#TRIM_MEMORY_COMPLETE"
    }
  ]
}