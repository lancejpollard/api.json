{
  "path": "java.net",
  "name": "Inet6Address",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Compares this object against the specified object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ByteArray",
      "code": "getAddress()",
      "desc": "Returns the raw IP address of this InetAddress object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Inet6Address",
      "code": "getByAddress(host: String!, addr: ByteArray!, nif: NetworkInterface!)",
      "desc": "Create an Inet6Address in the exact manner of InetAddress#getByAddress(String,byte[]) except that the IPv6 scope_id is set to the value corresponding to the given interface for the address type specified in addr.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Inet6Address",
      "code": "getByAddress(host: String!, addr: ByteArray!, scope_id: Int)",
      "desc": "Create an Inet6Address in the exact manner of InetAddress#getByAddress(String,byte[]) except that the IPv6 scope_id is set to the given numeric value.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getHostAddress()",
      "desc": "Returns the IP address string in textual presentation.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getScopeId()",
      "desc": "Returns the numeric scopeId, if this instance is associated with an interface."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "NetworkInterface",
      "code": "getScopedInterface()",
      "desc": "Returns the scoped interface, if this instance was created with with a scoped interface.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Returns a hashcode for this IP address."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isAnyLocalAddress()",
      "desc": "Utility routine to check if the InetAddress in a wildcard address."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isIPv4CompatibleAddress()",
      "desc": "Utility routine to check if the InetAddress is an IPv4 compatible IPv6 address."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isLinkLocalAddress()",
      "desc": "Utility routine to check if the InetAddress is an link local address."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isLoopbackAddress()",
      "desc": "Utility routine to check if the InetAddress is a loopback address."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isMCGlobal()",
      "desc": "Utility routine to check if the multicast address has global scope."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isMCLinkLocal()",
      "desc": "Utility routine to check if the multicast address has link scope."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isMCNodeLocal()",
      "desc": "Utility routine to check if the multicast address has node scope."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isMCOrgLocal()",
      "desc": "Utility routine to check if the multicast address has organization scope."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isMCSiteLocal()",
      "desc": "Utility routine to check if the multicast address has site scope."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isMulticastAddress()",
      "desc": "Utility routine to check if the InetAddress is an IP multicast address."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isSiteLocalAddress()",
      "desc": "Utility routine to check if the InetAddress is a site local address."
    },
    {
      "type": "inherited-methods",
      "from": "InetAddress"
    },
    {
      "type": "inherited-methods",
      "from": "Array<InetAddress!>!"
    },
    {
      "type": "inherited-methods",
      "from": "getAllByName(host: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "java.sun.com"
    },
    {
      "type": "inherited-methods",
      "from": "host"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "InetAddress"
    },
    {
      "type": "inherited-methods",
      "from": "host"
    },
    {
      "type": "inherited-methods",
      "from": "host.length()"
    },
    {
      "type": "inherited-methods",
      "from": "checkConnect"
    },
    {
      "type": "inherited-methods",
      "from": "-1"
    },
    {
      "type": "inherited-methods",
      "from": "InetAddress!"
    },
    {
      "type": "inherited-methods",
      "from": "getByAddress(host: String!, addr: ByteArray!)"
    },
    {
      "type": "inherited-methods",
      "from": "java.sun.com"
    },
    {
      "type": "inherited-methods",
      "from": "InetAddress!"
    },
    {
      "type": "inherited-methods",
      "from": "getByAddress(addr: ByteArray!)"
    },
    {
      "type": "inherited-methods",
      "from": "InetAddress"
    },
    {
      "type": "inherited-methods",
      "from": "getAddress()[0]"
    },
    {
      "type": "inherited-methods",
      "from": "InetAddress!"
    },
    {
      "type": "inherited-methods",
      "from": "getByName(host: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "java.sun.com"
    },
    {
      "type": "inherited-methods",
      "from": "host"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "InetAddress"
    },
    {
      "type": "inherited-methods",
      "from": "String!"
    },
    {
      "type": "inherited-methods",
      "from": "getCanonicalHostName()"
    },
    {
      "type": "inherited-methods",
      "from": "checkConnect"
    },
    {
      "type": "inherited-methods",
      "from": "-1"
    },
    {
      "type": "inherited-methods",
      "from": "String!"
    },
    {
      "type": "inherited-methods",
      "from": "getHostName()"
    },
    {
      "type": "inherited-methods",
      "from": "getCanonicalHostName"
    },
    {
      "type": "inherited-methods",
      "from": "checkConnect"
    },
    {
      "type": "inherited-methods",
      "from": "-1"
    },
    {
      "type": "inherited-methods",
      "from": "InetAddress!"
    },
    {
      "type": "inherited-methods",
      "from": "getLocalHost()"
    },
    {
      "type": "inherited-methods",
      "from": "InetAddress"
    },
    {
      "type": "inherited-methods",
      "from": "checkConnect"
    },
    {
      "type": "inherited-methods",
      "from": "-1"
    },
    {
      "type": "inherited-methods",
      "from": "InetAddress!"
    },
    {
      "type": "inherited-methods",
      "from": "getLoopbackAddress()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isReachable(timeout: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isReachable(netif: NetworkInterface!, ttl: Int, timeout: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "network interface"
    },
    {
      "type": "inherited-methods",
      "from": "ttl"
    },
    {
      "type": "inherited-methods",
      "from": "ttl"
    },
    {
      "type": "inherited-methods",
      "from": "String"
    },
    {
      "type": "inherited-methods",
      "from": "toString()"
    },
    {
      "type": "inherited-methods",
      "from": "String"
    }
  ]
}