{
  "path": "java.util",
  "name": "LongSummaryStatistics",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()\n            Construct an empty instance with zero count, zero sum, Long.MAX_VALUE min, Long.MIN_VALUE max and zero average."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "accept(value: Int)",
      "desc": "Records a new int value into the summary information."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "accept(value: Long)",
      "desc": "Records a new long value into the summary information."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "combine(other: LongSummaryStatistics!)",
      "desc": "Combines the state of another LongSummaryStatistics into this one."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Double",
      "code": "getAverage()",
      "desc": "Returns the arithmetic mean of values recorded, or zero if no values have been recorded."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "getCount()",
      "desc": "Returns the count of values recorded."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "getMax()",
      "desc": "Returns the maximum value recorded, or Long.MIN_VALUE if no values have been recorded"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "getMin()",
      "desc": "Returns the minimum value recorded, or Long.MAX_VALUE if no values have been recorded."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "getSum()",
      "desc": "Returns the sum of values recorded, or zero if no values have been recorded."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": ""
    },
    {
      "type": "inherited-methods",
      "from": "LongConsumer"
    },
    {
      "type": "inherited-methods",
      "from": "LongConsumer!"
    },
    {
      "type": "inherited-methods",
      "from": "andThen(after: LongConsumer!)"
    },
    {
      "type": "inherited-methods",
      "from": "LongConsumer"
    },
    {
      "type": "inherited-methods",
      "from": "after"
    },
    {
      "type": "inherited-methods",
      "from": "after"
    },
    {
      "type": "inherited-methods",
      "from": "IntConsumer"
    },
    {
      "type": "inherited-methods",
      "from": "IntConsumer!"
    },
    {
      "type": "inherited-methods",
      "from": "andThen(after: IntConsumer!)"
    },
    {
      "type": "inherited-methods",
      "from": "IntConsumer"
    },
    {
      "type": "inherited-methods",
      "from": "after"
    },
    {
      "type": "inherited-methods",
      "from": "after"
    }
  ]
}