{
  "path": "java.io",
  "name": "PipedReader",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(src: PipedWriter!)\n            Creates a PipedReader so that it is connected to the piped writer src."
    },
    {
      "type": "ctor",
      "ctor": "<init>(src: PipedWriter!, pipeSize: Int)\n            Creates a PipedReader so that it is connected to the piped writer src and uses the specified pipe size for the pipe's buffer."
    },
    {
      "type": "ctor",
      "ctor": "<init>()\n            Creates a PipedReader so that it is not yet  connected."
    },
    {
      "type": "ctor",
      "ctor": "<init>(pipeSize: Int)\n            Creates a PipedReader so that it is not yet connected and uses the specified pipe size for the pipe's buffer."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "close()",
      "desc": "Closes this piped stream and releases any system resources associated with the stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "connect(src: PipedWriter!)",
      "desc": "Causes this piped reader to be connected to the piped writer src."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "read()",
      "desc": "Reads the next character of data from this piped stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "read(cbuf: CharArray!, off: Int, len: Int)",
      "desc": "Reads up to len characters of data from this piped stream into an array of characters."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "ready()",
      "desc": "Tell whether this stream is ready to be read."
    },
    {
      "type": "inherited-methods",
      "from": "Reader"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "mark(readAheadLimit: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "markSupported()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "read(target: CharBuffer!)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "read(cbuf: CharArray!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "reset()"
    },
    {
      "type": "inherited-methods",
      "from": "Long"
    },
    {
      "type": "inherited-methods",
      "from": "skip(n: Long)"
    }
  ]
}