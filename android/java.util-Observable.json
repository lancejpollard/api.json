{
  "path": "java.util",
  "name": "Observable",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()\n            Construct an Observable with zero Observers."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "addObserver(o: Observer!)",
      "desc": "Adds an observer to the set of observers for this object, provided that it is not the same as some observer already in the set."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "countObservers()",
      "desc": "Returns the number of observers of this Observable object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "deleteObserver(o: Observer!)",
      "desc": "Deletes an observer from the set of observers of this object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "deleteObservers()",
      "desc": "Clears the observer list so that this object no longer has any observers."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "hasChanged()",
      "desc": "Tests if this object has changed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "notifyObservers()",
      "desc": "If this object has changed, as indicated by the hasChanged method, then notify all of its observers and then call the clearChanged method to indicate that this object has no longer changed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "notifyObservers(arg: Any!)",
      "desc": "If this object has changed, as indicated by the hasChanged method, then notify all of its observers and then call the clearChanged method to indicate that this object has no longer changed."
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "clearChanged()",
      "desc": "Indicates that this object has no longer changed, or that it has already notified all of its observers of its most recent change, so that the hasChanged method will now return false."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setChanged()",
      "desc": "Marks this Observable object as having been changed; the hasChanged method will now return true."
    }
  ]
}