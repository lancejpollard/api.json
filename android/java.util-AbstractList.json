{
  "path": "java.util",
  "name": "AbstractList",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "add(element: E)",
      "desc": "Appends the specified element to the end of this list (optional operation)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "add(index: Int, element: E)",
      "desc": "Inserts the specified element at the specified position in this list (optional operation)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "addAll(index: Int, elements: Collection<E>)",
      "desc": "Inserts all of the elements in the specified collection into this list at the specified position (optional operation)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "clear()",
      "desc": "Removes all of the elements from this list (optional operation)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Compares the specified object with this list for equality."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "E",
      "code": "get(index: Int)",
      "desc": "Returns the element at the specified position in this list."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Returns the hash code value for this list."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "indexOf(element: E?)",
      "desc": "Returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableIterator",
      "code": "iterator()",
      "desc": "Returns an iterator over the elements in this list in proper sequence.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "lastIndexOf(element: E?)",
      "desc": "Returns the index of the last occurrence of the specified element in this list, or -1 if this list does not contain the element."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableListIterator",
      "code": "listIterator()",
      "desc": "Returns a list iterator over the elements in this list (in proper sequence).",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableListIterator",
      "code": "listIterator(index: Int)",
      "desc": "Returns a list iterator over the elements in this list (in proper sequence), starting at the specified position in the list.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "E",
      "code": "removeAt(index: Int)",
      "desc": "Removes the element at the specified position in this list (optional operation)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "E",
      "code": "set(index: Int, element: E)",
      "desc": "Replaces the element at the specified position in this list with the specified element (optional operation)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableList",
      "code": "subList(fromIndex: Int, toIndex: Int)",
      "desc": "Returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "removeRange(fromIndex: Int, toIndex: Int)",
      "desc": "Removes from this list all of the elements whose index is between fromIndex, inclusive, and toIndex, exclusive."
    },
    {
      "type": "inherited-methods",
      "from": "AbstractCollection"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "addAll(elements: Collection<E>)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "contains(element: E?)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "containsAll(elements: Collection<E>)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isEmpty()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "remove(element: E?)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "removeAll(elements: Collection<E>)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "retainAll(elements: Collection<E>)"
    },
    {
      "type": "inherited-methods",
      "from": "Array<Any!>"
    },
    {
      "type": "inherited-methods",
      "from": "toArray()"
    },
    {
      "type": "inherited-methods",
      "from": "0"
    },
    {
      "type": "inherited-methods",
      "from": "size"
    },
    {
      "type": "inherited-methods",
      "from": "Array<T>"
    },
    {
      "type": "inherited-methods",
      "from": "toArray(a: Array<T>)"
    },
    {
      "type": "inherited-methods",
      "from": "toArray()"
    },
    {
      "type": "inherited-methods",
      "from": "0"
    },
    {
      "type": "inherited-methods",
      "from": "size"
    },
    {
      "type": "inherited-methods",
      "from": "String"
    },
    {
      "type": "inherited-methods",
      "from": "toString()"
    },
    {
      "type": "inherited-methods",
      "from": "String#valueOf(Object)"
    }
  ]
}