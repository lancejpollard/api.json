{
  "path": "java.util",
  "name": "Vector",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(initialCapacity: Int, capacityIncrement: Int)\n            Constructs an empty vector with the specified initial capacity and capacity increment."
    },
    {
      "type": "ctor",
      "ctor": "<init>(initialCapacity: Int)\n            Constructs an empty vector with the specified initial capacity and with its capacity increment equal to zero."
    },
    {
      "type": "ctor",
      "ctor": "<init>()\n            Constructs an empty vector so that its internal data array has size 10 and its standard capacity increment is zero."
    },
    {
      "type": "ctor",
      "ctor": "<init>(c: MutableCollection<out E>)\n            Constructs a vector containing the elements of the specified collection, in the order they are returned by the collection's iterator."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "add(element: E)",
      "desc": "Appends the specified element to the end of this Vector."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "add(index: Int, element: E)",
      "desc": "Inserts the specified element at the specified position in this Vector."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "addAll(elements: Collection<E>)",
      "desc": "Appends all of the elements in the specified Collection to the end of this Vector, in the order that they are returned by the specified Collection's Iterator."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "addAll(index: Int, elements: Collection<E>)",
      "desc": "Inserts all of the elements in the specified Collection into this Vector at the specified position."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "addElement(obj: E)",
      "desc": "Adds the specified component to the end of this vector, increasing its size by one."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "capacity()",
      "desc": "Returns the current capacity of this vector."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "clear()",
      "desc": "Removes all of the elements from this Vector."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "clone()",
      "desc": "Returns a clone of this vector."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "contains(element: E?)",
      "desc": "Returns true if this vector contains the specified element."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "containsAll(elements: Collection<E>)",
      "desc": "Returns true if this Vector contains all of the elements in the specified Collection."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "copyInto(anArray: Array<Any!>)",
      "desc": "Copies the components of this vector into the specified array."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "E",
      "code": "elementAt(index: Int)",
      "desc": "Returns the component at the specified index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Enumeration",
      "code": "elements()",
      "desc": "Returns an enumeration of the components of this vector.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "ensureCapacity(minCapacity: Int)",
      "desc": "Increases the capacity of this vector, if necessary, to ensure that it can hold at least the number of components specified by the minimum capacity argument."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Compares the specified Object with this Vector for equality."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "E",
      "code": "firstElement()",
      "desc": "Returns the first component (the item at index 0) of this vector."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEach(action: Consumer<in E>)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "E",
      "code": "get(index: Int)",
      "desc": "Returns the element at the specified position in this Vector."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Returns the hash code value for this Vector."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "indexOf(o: Any?, index: Int)",
      "desc": "Returns the index of the first occurrence of the specified element in this vector, searching forwards from index, or returns -1 if the element is not found."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "indexOf(element: E?)",
      "desc": "Returns the index of the first occurrence of the specified element in this vector, or -1 if this vector does not contain the element."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "insertElementAt(obj: E, index: Int)",
      "desc": "Inserts the specified object as a component in this vector at the specified index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isEmpty()",
      "desc": "Tests if this vector has no components."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableIterator",
      "code": "iterator()",
      "desc": "Returns an iterator over the elements in this list in proper sequence.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "E",
      "code": "lastElement()",
      "desc": "Returns the last component of the vector."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "lastIndexOf(o: Any?, index: Int)",
      "desc": "Returns the index of the last occurrence of the specified element in this vector, searching backwards from index, or returns -1 if the element is not found."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "lastIndexOf(element: E?)",
      "desc": "Returns the index of the last occurrence of the specified element in this vector, or -1 if this vector does not contain the element."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableListIterator",
      "code": "listIterator(index: Int)",
      "desc": "Returns a list iterator over the elements in this list (in proper sequence), starting at the specified position in the list.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableListIterator",
      "code": "listIterator()",
      "desc": "Returns a list iterator over the elements in this list (in proper sequence).",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "remove(element: E?)",
      "desc": "Removes the first occurrence of the specified element in this Vector If the Vector does not contain the element, it is unchanged."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "removeAll(elements: Collection<E>)",
      "desc": "Removes from this Vector all of its elements that are contained in the specified Collection."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "removeAllElements()",
      "desc": "Removes all components from this vector and sets its size to zero."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "E",
      "code": "removeAt(index: Int)",
      "desc": "Removes the element at the specified position in this Vector."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "removeElement(obj: Any?)",
      "desc": "Removes the first (lowest-indexed) occurrence of the argument from this vector."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "removeElementAt(index: Int)",
      "desc": "Deletes the component at the specified index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "removeIf(filter: Predicate<in E>)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "replaceAll(operator: UnaryOperator<E>)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "retainAll(elements: Collection<E>)",
      "desc": "Retains only the elements in this Vector that are contained in the specified Collection."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "E",
      "code": "set(index: Int, element: E)",
      "desc": "Replaces the element at the specified position in this Vector with the specified element."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setElementAt(obj: E, index: Int)",
      "desc": "Sets the component at the specified index of this vector to be the specified object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSize(newSize: Int)",
      "desc": "Sets the size of this vector."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "sort(c: Comparator<in E>?)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Spliterator",
      "code": "spliterator()",
      "desc": "Creates a late-binding and fail-fast Spliterator over the elements in this list.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableList",
      "code": "subList(fromIndex: Int, toIndex: Int)",
      "desc": "Returns a view of the portion of this List between fromIndex, inclusive, and toIndex, exclusive.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "toArray()",
      "desc": "Returns an array containing all of the elements in this Vector in the correct order.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "toArray(a: Array<T>)",
      "desc": "Returns an array containing all of the elements in this Vector in the correct order; the runtime type of the returned array is that of the specified array.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns a string representation of this Vector, containing the String representation of each element."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "trimToSize()",
      "desc": "Trims the capacity of this vector to be the vector's current size."
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "removeRange(fromIndex: Int, toIndex: Int)",
      "desc": "Removes from this list all of the elements whose index is between fromIndex, inclusive, and toIndex, exclusive."
    },
    {
      "type": "inherited-methods",
      "from": "AbstractCollection"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "addAll(elements: Collection<E>)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "contains(element: E?)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "containsAll(elements: Collection<E>)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isEmpty()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "remove(element: E?)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "removeAll(elements: Collection<E>)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "retainAll(elements: Collection<E>)"
    },
    {
      "type": "inherited-methods",
      "from": "Array<Any!>"
    },
    {
      "type": "inherited-methods",
      "from": "toArray()"
    },
    {
      "type": "inherited-methods",
      "from": "0"
    },
    {
      "type": "inherited-methods",
      "from": "size"
    },
    {
      "type": "inherited-methods",
      "from": "Array<T>"
    },
    {
      "type": "inherited-methods",
      "from": "toArray(a: Array<T>)"
    },
    {
      "type": "inherited-methods",
      "from": "toArray()"
    },
    {
      "type": "inherited-methods",
      "from": "0"
    },
    {
      "type": "inherited-methods",
      "from": "size"
    },
    {
      "type": "inherited-methods",
      "from": "String"
    },
    {
      "type": "inherited-methods",
      "from": "toString()"
    },
    {
      "type": "inherited-methods",
      "from": "String#valueOf(Object)"
    }
  ]
}