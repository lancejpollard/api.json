{
  "path": "android.media",
  "name": "AudioManager",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_AUDIO_BECOMING_NOISY",
      "desc": "Broadcast intent, a hint for applications that audio is about to become 'noisy' due to a change in audio outputs."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_HDMI_AUDIO_PLUG",
      "desc": "Broadcast Action: A sticky broadcast indicating an HDMI cable was plugged or unplugged."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_HEADSET_PLUG",
      "desc": "Broadcast Action: Wired Headset plugged in or unplugged."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_MICROPHONE_MUTE_CHANGED",
      "desc": "Broadcast Action: microphone muting state changed."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_SCO_AUDIO_STATE_CHANGED",
      "desc": "Sticky broadcast intent action indicating that the Bluetooth SCO audio connection state has changed."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_SCO_AUDIO_STATE_UPDATED",
      "desc": "Sticky broadcast intent action indicating that the Bluetooth SCO audio connection state has been updated."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_SPEAKERPHONE_STATE_CHANGED",
      "desc": "Broadcast Action: speakerphone state changed."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ADJUST_LOWER",
      "desc": "Decrease the ringer volume."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ADJUST_MUTE",
      "desc": "Mute the volume."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ADJUST_RAISE",
      "desc": "Increase the ringer volume."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ADJUST_SAME",
      "desc": "Maintain the previous ringer volume."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ADJUST_TOGGLE_MUTE",
      "desc": "Toggle the mute state."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ADJUST_UNMUTE",
      "desc": "Unmute the volume."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AUDIOFOCUS_GAIN",
      "desc": "Used to indicate a gain of audio focus, or a request of audio focus, of unknown duration."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AUDIOFOCUS_GAIN_TRANSIENT",
      "desc": "Used to indicate a temporary gain or request of audio focus, anticipated to last a short amount of time."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE",
      "desc": "Used to indicate a temporary request of audio focus, anticipated to last a short amount of time, during which no other applications, or system components, should play anything."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK",
      "desc": "Used to indicate a temporary request of audio focus, anticipated to last a short amount of time, and where it is acceptable for other audio applications to keep playing after having lowered their output level (also referred to as \"ducking\")."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AUDIOFOCUS_LOSS",
      "desc": "Used to indicate a loss of audio focus of unknown duration."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AUDIOFOCUS_LOSS_TRANSIENT",
      "desc": "Used to indicate a transient loss of audio focus."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK",
      "desc": "Used to indicate a transient loss of audio focus where the loser of the audio focus can lower its output volume if it wants to continue playing (also referred to as \"ducking\"), as the new focus owner doesn't require others to be silent."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AUDIOFOCUS_NONE",
      "desc": "Used to indicate no audio focus has been gained or lost, or requested."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AUDIOFOCUS_REQUEST_DELAYED",
      "desc": "A focus change request whose granting is delayed: the request was successful, but the requester will only be granted audio focus once the condition that prevented immediate granting has ended."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AUDIOFOCUS_REQUEST_FAILED",
      "desc": "A failed focus change request."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AUDIOFOCUS_REQUEST_GRANTED",
      "desc": "A successful focus change request."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AUDIO_SESSION_ID_GENERATE",
      "desc": "A special audio session ID to indicate that the audio session ID isn't known and the framework should generate a new value."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ERROR",
      "desc": "A default error code."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ERROR_DEAD_OBJECT",
      "desc": "An error code indicating that the object reporting it is no longer valid and needs to be recreated."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_AUDIO_PLUG_STATE",
      "desc": "Extra used in ACTION_HDMI_AUDIO_PLUG to communicate whether HDMI is plugged in or unplugged."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_ENCODINGS",
      "desc": "Extra used in ACTION_HDMI_AUDIO_PLUG to define the audio encodings supported by the connected HDMI device."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_MAX_CHANNEL_COUNT",
      "desc": "Extra used in ACTION_HDMI_AUDIO_PLUG to define the maximum number of channels supported by the HDMI device."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_RINGER_MODE",
      "desc": "The new ringer mode."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_SCO_AUDIO_PREVIOUS_STATE",
      "desc": "Extra for intent ACTION_SCO_AUDIO_STATE_UPDATED containing the previous bluetooth SCO connection state."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_SCO_AUDIO_STATE",
      "desc": "Extra for intent ACTION_SCO_AUDIO_STATE_CHANGED or ACTION_SCO_AUDIO_STATE_UPDATED containing the new bluetooth SCO connection state."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_VIBRATE_SETTING",
      "desc": "The new vibrate setting for a particular type."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_VIBRATE_TYPE",
      "desc": "The vibrate type whose setting has changed."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_ALLOW_RINGER_MODES",
      "desc": "Whether to include ringer modes as possible options when changing volume."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_PLAY_SOUND",
      "desc": "Whether to play a sound when changing the volume."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_REMOVE_SOUND_AND_VIBRATE",
      "desc": "Removes any sounds/vibrate that may be in the queue, or are playing (related to changing volume)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_SHOW_UI",
      "desc": "Show a toast containing the current volume."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_VIBRATE",
      "desc": "Whether to vibrate if going into the vibrate ringer mode."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FX_FOCUS_NAVIGATION_DOWN",
      "desc": "Focus has moved down"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FX_FOCUS_NAVIGATION_LEFT",
      "desc": "Focus has moved left"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FX_FOCUS_NAVIGATION_RIGHT",
      "desc": "Focus has moved right"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FX_FOCUS_NAVIGATION_UP",
      "desc": "Focus has moved up"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FX_KEYPRESS_DELETE",
      "desc": "IME delete keypress sound"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FX_KEYPRESS_INVALID",
      "desc": "Invalid keypress sound"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FX_KEYPRESS_RETURN",
      "desc": "IME return_keypress sound"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FX_KEYPRESS_SPACEBAR",
      "desc": "IME spacebar keypress sound"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FX_KEYPRESS_STANDARD",
      "desc": "IME standard keypress sound"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FX_KEY_CLICK",
      "desc": "Keyboard and direction pad click sound"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "GET_DEVICES_ALL",
      "desc": "Specifies to the AudioManager#getDevices(int) method to include both source and sink devices."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "GET_DEVICES_INPUTS",
      "desc": "Specifies to the AudioManager#getDevices(int) method to include source (i.e. input) audio devices."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "GET_DEVICES_OUTPUTS",
      "desc": "Specifies to the AudioManager#getDevices(int) method to include sink (i.e. output) audio devices."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MODE_CALL_SCREENING",
      "desc": "Call screening in progress."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MODE_CURRENT",
      "desc": "Current audio mode."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MODE_INVALID",
      "desc": "Invalid audio mode."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MODE_IN_CALL",
      "desc": "In call audio mode."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MODE_IN_COMMUNICATION",
      "desc": "In communication audio mode."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MODE_NORMAL",
      "desc": "Normal audio mode: not ringing and no call established."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MODE_RINGTONE",
      "desc": "Ringing audio mode."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "NUM_STREAMS",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "PROPERTY_OUTPUT_FRAMES_PER_BUFFER",
      "desc": "Used as a key for getProperty to request the native or optimal output buffer size for this device's low latency output stream, in decimal PCM frames."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "PROPERTY_OUTPUT_SAMPLE_RATE",
      "desc": "Used as a key for getProperty to request the native or optimal output sample rate for this device's low latency output stream, in decimal Hz."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED",
      "desc": "Used as a key for getProperty to determine if the unprocessed audio source is available and supported with the expected frequency range and level response."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND",
      "desc": "Used as a key for getProperty to determine if the default microphone audio source supports near-ultrasound frequencies (range of 18 - 21 kHz)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND",
      "desc": "Used as a key for getProperty to determine if the default speaker audio path supports near-ultrasound frequencies (range of 18 - 21 kHz)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "RINGER_MODE_CHANGED_ACTION",
      "desc": "Sticky broadcast intent action indicating that the ringer mode has changed."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "RINGER_MODE_NORMAL",
      "desc": "Ringer mode that may be audible and may vibrate."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "RINGER_MODE_SILENT",
      "desc": "Ringer mode that will be silent and will not vibrate."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "RINGER_MODE_VIBRATE",
      "desc": "Ringer mode that will be silent and will vibrate."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ROUTE_ALL",
      "desc": "Used for mask parameter of setRouting(int,int,int)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ROUTE_BLUETOOTH",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ROUTE_BLUETOOTH_A2DP",
      "desc": "Routing audio output to bluetooth A2DP"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ROUTE_BLUETOOTH_SCO",
      "desc": "Routing audio output to bluetooth SCO"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ROUTE_EARPIECE",
      "desc": "Routing audio output to earpiece"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ROUTE_HEADSET",
      "desc": "Routing audio output to headset"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ROUTE_SPEAKER",
      "desc": "Routing audio output to speaker"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SCO_AUDIO_STATE_CONNECTED",
      "desc": "Value for extra EXTRA_SCO_AUDIO_STATE or EXTRA_SCO_AUDIO_PREVIOUS_STATE indicating that the SCO audio channel is established"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SCO_AUDIO_STATE_CONNECTING",
      "desc": "Value for extra EXTRA_SCO_AUDIO_STATE or EXTRA_SCO_AUDIO_PREVIOUS_STATE indicating that the SCO audio channel is being established"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SCO_AUDIO_STATE_DISCONNECTED",
      "desc": "Value for extra EXTRA_SCO_AUDIO_STATE or EXTRA_SCO_AUDIO_PREVIOUS_STATE indicating that the SCO audio channel is not established"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SCO_AUDIO_STATE_ERROR",
      "desc": "Value for extra EXTRA_SCO_AUDIO_STATE indicating that there was an error trying to obtain the state"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "STREAM_ACCESSIBILITY",
      "desc": "Used to identify the volume of audio streams for accessibility prompts"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "STREAM_ALARM",
      "desc": "Used to identify the volume of audio streams for alarms"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "STREAM_DTMF",
      "desc": "Used to identify the volume of audio streams for DTMF Tones"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "STREAM_MUSIC",
      "desc": "Used to identify the volume of audio streams for music playback"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "STREAM_NOTIFICATION",
      "desc": "Used to identify the volume of audio streams for notifications"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "STREAM_RING",
      "desc": "Used to identify the volume of audio streams for the phone ring"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "STREAM_SYSTEM",
      "desc": "Used to identify the volume of audio streams for system sounds"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "STREAM_VOICE_CALL",
      "desc": "Used to identify the volume of audio streams for phone calls"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "USE_DEFAULT_STREAM_TYPE",
      "desc": "Suggests using the default stream type."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "VIBRATE_SETTING_CHANGED_ACTION",
      "desc": "Broadcast intent action indicating that the vibrate setting has changed."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "VIBRATE_SETTING_OFF",
      "desc": "Vibrate setting that suggests to never vibrate."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "VIBRATE_SETTING_ON",
      "desc": "Vibrate setting that suggests to vibrate when possible."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "VIBRATE_SETTING_ONLY_SILENT",
      "desc": "Vibrate setting that suggests to only vibrate when in the vibrate ringer mode."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "VIBRATE_TYPE_NOTIFICATION",
      "desc": "Vibrate type that corresponds to notifications."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "VIBRATE_TYPE_RINGER",
      "desc": "Vibrate type that corresponds to the ringer."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "abandonAudioFocus(l: AudioManager.OnAudioFocusChangeListener!)",
      "desc": "Abandon audio focus."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "abandonAudioFocusRequest(focusRequest: AudioFocusRequest)",
      "desc": "Abandon audio focus."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "adjustStreamVolume(streamType: Int, direction: Int, flags: Int)",
      "desc": "Adjusts the volume of a particular stream by one step in a direction."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "adjustSuggestedStreamVolume(direction: Int, suggestedStreamType: Int, flags: Int)",
      "desc": "Adjusts the volume of the most relevant stream, or the given fallback stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "adjustVolume(direction: Int, flags: Int)",
      "desc": "Adjusts the volume of the most relevant stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "dispatchMediaKeyEvent(keyEvent: KeyEvent!)",
      "desc": "Sends a simulated key event for a media button."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "generateAudioSessionId()",
      "desc": "Return a new audio session identifier not associated with any player or effect."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableList",
      "code": "getActivePlaybackConfigurations()",
      "desc": "Returns the current active audio playback configurations of the device",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableList",
      "code": "getActiveRecordingConfigurations()",
      "desc": "Returns the current active audio recording configurations of the device.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getAllowedCapturePolicy()",
      "desc": "Return the capture policy."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getDevices(flags: Int)",
      "desc": "Returns an array of AudioDeviceInfo objects corresponding to the audio devices currently connected to the system and meeting the criteria specified in the flags parameter.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableList",
      "code": "getMicrophones()",
      "desc": "Returns a list of MicrophoneInfo that corresponds to the characteristics of all available microphones.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getMode()",
      "desc": "Returns the current audio mode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getParameters(keys: String!)",
      "desc": "Gets a variable number of parameter values from audio hardware.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getProperty(key: String!)",
      "desc": "Returns the value of the property with the specified key.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getRingerMode()",
      "desc": "Returns the current ringtone mode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getRouting(mode: Int)",
      "desc": "Returns the current audio routing bit vector for a specified mode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getStreamMaxVolume(streamType: Int)",
      "desc": "Returns the maximum volume index for a particular stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getStreamMinVolume(streamType: Int)",
      "desc": "Returns the minimum volume index for a particular stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getStreamVolume(streamType: Int)",
      "desc": "Returns the current volume index for a particular stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Float",
      "code": "getStreamVolumeDb(streamType: Int, index: Int, deviceType: Int)",
      "desc": "Returns the volume in dB (decibel) for the given stream type at the given volume index, on the given type of audio output device."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getVibrateSetting(vibrateType: Int)",
      "desc": "Returns whether the user's vibrate setting for a vibrate type."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isBluetoothA2dpOn()",
      "desc": "Checks whether a Bluetooth A2DP audio peripheral is connected or not."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isBluetoothScoAvailableOffCall()",
      "desc": "Indicates if current platform supports use of SCO for off call use cases."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isBluetoothScoOn()",
      "desc": "Checks whether communications use Bluetooth SCO."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isCallScreeningModeSupported()",
      "desc": "Indicates if the platform supports a special call screening and call monitoring mode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isHapticPlaybackSupported()",
      "desc": "Return if audio haptic coupled playback is supported or not."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isMicrophoneMute()",
      "desc": "Checks whether the microphone mute is on or off."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isMusicActive()",
      "desc": "Checks whether any music is active."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isOffloadedPlaybackSupported(format: AudioFormat, attributes: AudioAttributes)",
      "desc": "Returns whether offloaded playback of an audio format is supported on the device."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isSpeakerphoneOn()",
      "desc": "Checks whether the speakerphone is on or off."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isStreamMute(streamType: Int)",
      "desc": "Returns the current mute state for a particular stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isVolumeFixed()",
      "desc": "Indicates if the device implements a fixed volume policy."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isWiredHeadsetOn()",
      "desc": "Checks whether a wired headset is connected or not."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "loadSoundEffects()",
      "desc": "Load Sound effects."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "playSoundEffect(effectType: Int)",
      "desc": "Plays a sound effect (Key clicks, lid open/close...)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "playSoundEffect(effectType: Int, volume: Float)",
      "desc": "Plays a sound effect (Key clicks, lid open/close...)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "registerAudioDeviceCallback(callback: AudioDeviceCallback!, handler: Handler?)",
      "desc": "Registers an AudioDeviceCallback object to receive notifications of changes to the set of connected audio devices."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "registerAudioPlaybackCallback(cb: AudioManager.AudioPlaybackCallback, handler: Handler?)",
      "desc": "Register a callback to be notified of audio playback changes through AudioPlaybackCallback"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "registerAudioRecordingCallback(cb: AudioManager.AudioRecordingCallback, handler: Handler?)",
      "desc": "Register a callback to be notified of audio recording changes through AudioRecordingCallback"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "registerMediaButtonEventReceiver(eventReceiver: ComponentName!)",
      "desc": "Register a component to be the sole receiver of MEDIA_BUTTON intents."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "registerMediaButtonEventReceiver(eventReceiver: PendingIntent!)",
      "desc": "Register a component to be the sole receiver of MEDIA_BUTTON intents."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "registerRemoteControlClient(rcClient: RemoteControlClient!)",
      "desc": "Registers the remote control client for providing information to display on the remote controls."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "registerRemoteController(rctlr: RemoteController!)",
      "desc": "Registers a RemoteController instance for it to receive media metadata updates and playback state information from applications using RemoteControlClient, and control their playback."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "requestAudioFocus(l: AudioManager.OnAudioFocusChangeListener!, streamType: Int, durationHint: Int)",
      "desc": "Request audio focus."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "requestAudioFocus(focusRequest: AudioFocusRequest)",
      "desc": "Request audio focus."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAllowedCapturePolicy(capturePolicy: Int)",
      "desc": "Specifies whether the audio played by this app may or may not be captured by other apps or the system."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setBluetoothA2dpOn(on: Boolean)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setBluetoothScoOn(on: Boolean)",
      "desc": "Request use of Bluetooth SCO headset for communications."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMicrophoneMute(on: Boolean)",
      "desc": "Sets the microphone mute on or off."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMode(mode: Int)",
      "desc": "Sets the audio mode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setParameters(keyValuePairs: String!)",
      "desc": "Sets a variable number of parameter values to audio hardware."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setRingerMode(ringerMode: Int)",
      "desc": "Sets the ringer mode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setRouting(mode: Int, routes: Int, mask: Int)",
      "desc": "Sets the audio routing for a specified mode"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSpeakerphoneOn(on: Boolean)",
      "desc": "Sets the speakerphone on or off."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setStreamMute(streamType: Int, state: Boolean)",
      "desc": "Mute or unmute an audio stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setStreamSolo(streamType: Int, state: Boolean)",
      "desc": "Solo or unsolo a particular stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setStreamVolume(streamType: Int, index: Int, flags: Int)",
      "desc": "Sets the volume index for a particular stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setVibrateSetting(vibrateType: Int, vibrateSetting: Int)",
      "desc": "Sets the setting for when the vibrate type should vibrate."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setWiredHeadsetOn(on: Boolean)",
      "desc": "Sets audio routing to the wired headset on or off."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "shouldVibrate(vibrateType: Int)",
      "desc": "Returns whether a particular type should vibrate according to user settings and the current ringer mode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "startBluetoothSco()",
      "desc": "Start bluetooth SCO audio connection."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "stopBluetoothSco()",
      "desc": "Stop bluetooth SCO audio connection."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "unloadSoundEffects()",
      "desc": "Unload Sound effects."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "unregisterAudioDeviceCallback(callback: AudioDeviceCallback!)",
      "desc": "Unregisters an AudioDeviceCallback object which has been previously registered to receive notifications of changes to the set of connected audio devices."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "unregisterAudioPlaybackCallback(cb: AudioManager.AudioPlaybackCallback)",
      "desc": "Unregister an audio playback callback previously registered with registerAudioPlaybackCallback(android.media.AudioManager.AudioPlaybackCallback,android.os.Handler)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "unregisterAudioRecordingCallback(cb: AudioManager.AudioRecordingCallback)",
      "desc": "Unregister an audio recording callback previously registered with registerAudioRecordingCallback(android.media.AudioManager.AudioRecordingCallback,android.os.Handler)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "unregisterMediaButtonEventReceiver(eventReceiver: ComponentName!)",
      "desc": "Unregister the receiver of MEDIA_BUTTON intents."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "unregisterMediaButtonEventReceiver(eventReceiver: PendingIntent!)",
      "desc": "Unregister the receiver of MEDIA_BUTTON intents."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "unregisterRemoteControlClient(rcClient: RemoteControlClient!)",
      "desc": "Unregisters the remote control client that was providing information to display on the remote controls."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "unregisterRemoteController(rctlr: RemoteController!)",
      "desc": "Unregisters a RemoteController, causing it to no longer receive media metadata and playback state information, and no longer be capable of controlling playback."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "AudioPlaybackCallback",
      "desc": "Interface for receiving update notifications about the playback activity on the system."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "AudioRecordingCallback",
      "desc": "Interface for receiving update notifications about the recording configuration."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnAudioFocusChangeListener",
      "desc": "Interface definition for a callback to be invoked when the audio focus of the system is updated."
    }
  ]
}