{
  "path": "android.media",
  "name": "MediaRecorder",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MEDIA_ERROR_SERVER_DIED",
      "desc": "Media server died."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MEDIA_RECORDER_ERROR_UNKNOWN",
      "desc": "Unspecified media recorder error."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MEDIA_RECORDER_INFO_MAX_DURATION_REACHED",
      "desc": "A maximum duration had been setup and has now been reached."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MEDIA_RECORDER_INFO_MAX_FILESIZE_APPROACHING",
      "desc": "A maximum filesize had been setup and current recorded file size has reached 90% of the limit."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED",
      "desc": "A maximum filesize had been setup and has now been reached."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MEDIA_RECORDER_INFO_NEXT_OUTPUT_FILE_STARTED",
      "desc": "A maximum filesize had been reached and MediaRecorder has switched output to a new file set by application setNextOutputFile."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MEDIA_RECORDER_INFO_UNKNOWN",
      "desc": "Unspecified media recorder info."
    },
    {
      "type": "ctor",
      "ctor": "<init>()\n            Default constructor."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "addOnRoutingChangedListener(listener: AudioRouting.OnRoutingChangedListener!, handler: Handler!)",
      "desc": "Adds an AudioRouting.OnRoutingChangedListener to receive notifications of routing changes on this MediaRecorder."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableList",
      "code": "getActiveMicrophones()",
      "desc": "Return A lists of MicrophoneInfo representing the active microphones.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "AudioRecordingConfiguration",
      "code": "getActiveRecordingConfiguration()",
      "desc": "Returns the current active audio recording for this audio recorder.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "getAudioSourceMax()",
      "desc": "Gets the maximum value for audio sources."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getMaxAmplitude()",
      "desc": "Returns the maximum absolute amplitude that was sampled since the last call to this method."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PersistableBundle",
      "code": "getMetrics()",
      "desc": "Return Metrics data about the current Mediarecorder instance.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "AudioDeviceInfo",
      "code": "getPreferredDevice()",
      "desc": "Returns the selected input device specified by setPreferredDevice.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "AudioDeviceInfo",
      "code": "getRoutedDevice()",
      "desc": "Returns an AudioDeviceInfo identifying the current routing of this MediaRecorder Note: The query is only valid if the MediaRecorder is currently recording.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Surface",
      "code": "getSurface()",
      "desc": "Gets the surface to record from when using SURFACE video source.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isPrivacySensitive()",
      "desc": "Returns whether this MediaRecorder is marked as privacy sensitive or not with regard to audio capture."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "pause()",
      "desc": "Pauses recording."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "prepare()",
      "desc": "Prepares the recorder to begin capturing and encoding data."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "registerAudioRecordingCallback(executor: Executor, cb: AudioManager.AudioRecordingCallback)",
      "desc": "Register a callback to be notified of audio capture changes via a AudioManager.AudioRecordingCallback."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "release()",
      "desc": "Releases resources associated with this MediaRecorder object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "removeOnRoutingChangedListener(listener: AudioRouting.OnRoutingChangedListener!)",
      "desc": "Removes an AudioRouting.OnRoutingChangedListener which has been previously added to receive rerouting notifications."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "reset()",
      "desc": "Restarts the MediaRecorder to its idle state."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "resume()",
      "desc": "Resumes recording."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAudioChannels(numChannels: Int)",
      "desc": "Sets the number of audio channels for recording."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAudioEncoder(audio_encoder: Int)",
      "desc": "Sets the audio encoder to be used for recording."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAudioEncodingBitRate(bitRate: Int)",
      "desc": "Sets the audio encoding bit rate for recording."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAudioSamplingRate(samplingRate: Int)",
      "desc": "Sets the audio sampling rate for recording."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAudioSource(audioSource: Int)",
      "desc": "Sets the audio source to be used for recording."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCamera(c: Camera!)",
      "desc": "Sets a android.hardware.Camera to use for recording."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCaptureRate(fps: Double)",
      "desc": "Set video frame capture rate."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setInputSurface(surface: Surface)",
      "desc": "Configures the recorder to use a persistent surface when using SURFACE video source."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLocation(latitude: Float, longitude: Float)",
      "desc": "Set and store the geodata (latitude and longitude) in the output file."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMaxDuration(max_duration_ms: Int)",
      "desc": "Sets the maximum duration (in ms) of the recording session."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMaxFileSize(max_filesize_bytes: Long)",
      "desc": "Sets the maximum filesize (in bytes) of the recording session."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setNextOutputFile(fd: FileDescriptor!)",
      "desc": "Sets the next output file descriptor to be used when the maximum filesize is reached on the prior output setOutputFile or setNextOutputFile)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setNextOutputFile(file: File!)",
      "desc": "Sets the next output file to be used when the maximum filesize is reached on the prior output setOutputFile or setNextOutputFile)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOnErrorListener(l: MediaRecorder.OnErrorListener!)",
      "desc": "Register a callback to be invoked when an error occurs while recording."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOnInfoListener(listener: MediaRecorder.OnInfoListener!)",
      "desc": "Register a callback to be invoked when an informational event occurs while recording."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOrientationHint(degrees: Int)",
      "desc": "Sets the orientation hint for output video playback."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOutputFile(fd: FileDescriptor!)",
      "desc": "Pass in the file descriptor of the file to be written."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOutputFile(file: File!)",
      "desc": "Pass in the file object to be written."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOutputFile(path: String!)",
      "desc": "Sets the path of the output file to be produced."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOutputFormat(output_format: Int)",
      "desc": "Sets the format of the output file produced during recording."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "setPreferredDevice(deviceInfo: AudioDeviceInfo!)",
      "desc": "Specifies an audio device (via an AudioDeviceInfo object) to route the input from this MediaRecorder."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "setPreferredMicrophoneDirection(direction: Int)",
      "desc": "Specifies the logical microphone (for processing)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "setPreferredMicrophoneFieldDimension(zoom: Float)",
      "desc": "Specifies the zoom factor (i.e. the field dimension) for the selected microphone (for processing)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPreviewDisplay(sv: Surface!)",
      "desc": "Sets a Surface to show a preview of recorded media (video)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPrivacySensitive(privacySensitive: Boolean)",
      "desc": "Indicates that this capture request is privacy sensitive and that any concurrent capture is not permitted."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setProfile(profile: CamcorderProfile!)",
      "desc": "Uses the settings from a CamcorderProfile object for recording."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setVideoEncoder(video_encoder: Int)",
      "desc": "Sets the video encoder to be used for recording."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setVideoEncodingBitRate(bitRate: Int)",
      "desc": "Sets the video encoding bit rate for recording."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setVideoEncodingProfileLevel(profile: Int, level: Int)",
      "desc": "Sets the desired video encoding profile and level for recording."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setVideoFrameRate(rate: Int)",
      "desc": "Sets the frame rate of the video to be captured."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setVideoSize(width: Int, height: Int)",
      "desc": "Sets the width and height of the video to be captured."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setVideoSource(video_source: Int)",
      "desc": "Sets the video source to be used for recording."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "start()",
      "desc": "Begins capturing and encoding data to the file specified with setOutputFile()."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "stop()",
      "desc": "Stops recording."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "unregisterAudioRecordingCallback(cb: AudioManager.AudioRecordingCallback)",
      "desc": "Unregister an audio recording callback previously registered with registerAudioRecordingCallback(java.util.concurrent.Executor,android.media.AudioManager.AudioRecordingCallback)."
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "finalize()",
      "desc": ""
    },
    {
      "type": "inherited-constants",
      "from": "MicrophoneDirection"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "MIC_DIRECTION_AWAY_FROM_USER"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "MIC_DIRECTION_EXTERNAL"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "MIC_DIRECTION_TOWARDS_USER"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "MIC_DIRECTION_UNSPECIFIED"
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "code": "AudioEncoder",
      "desc": "Defines the audio encoding."
    },
    {
      "type": "nested-classes",
      "code": "AudioSource",
      "desc": "Defines the audio source."
    },
    {
      "type": "nested-classes",
      "code": "MetricsConstants",
      "desc": ""
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnErrorListener",
      "desc": "Interface definition for a callback to be invoked when an error occurs while recording."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnInfoListener",
      "desc": "Interface definition of a callback to be invoked to communicate some info and/or warning about the recording."
    },
    {
      "type": "nested-classes",
      "code": "OutputFormat",
      "desc": "Defines the output format."
    },
    {
      "type": "nested-classes",
      "code": "VideoEncoder",
      "desc": "Defines the video encoding."
    },
    {
      "type": "nested-classes",
      "code": "VideoSource",
      "desc": "Defines the video source."
    }
  ]
}