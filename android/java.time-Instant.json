{
  "path": "java.time",
  "name": "Instant",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Temporal",
      "code": "adjustInto(temporal: Temporal!)",
      "desc": "Adjusts the specified temporal object to have this instant.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "OffsetDateTime",
      "code": "atOffset(offset: ZoneOffset!)",
      "desc": "Combines this instant with an offset to create an OffsetDateTime.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ZonedDateTime",
      "code": "atZone(zone: ZoneId!)",
      "desc": "Combines this instant with a time-zone to create a ZonedDateTime.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "compareTo(other: Instant!)",
      "desc": "Compares this instant to the specified instant."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Checks if this instant is equal to the specified instant."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Instant",
      "code": "from(temporal: TemporalAccessor!)",
      "desc": "Obtains an instance of Instant from a temporal object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "get(field: TemporalField!)",
      "desc": "Gets the value of the specified field from this instant as an int."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "getEpochSecond()",
      "desc": "Gets the number of seconds from the Java epoch of 1970-01-01T00:00:00Z."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "getLong(field: TemporalField!)",
      "desc": "Gets the value of the specified field from this instant as a long."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getNano()",
      "desc": "Gets the number of nanoseconds, later along the time-line, from the start of the second."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Returns a hash code for this instant."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isAfter(otherInstant: Instant!)",
      "desc": "Checks if this instant is after the specified instant."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isBefore(otherInstant: Instant!)",
      "desc": "Checks if this instant is before the specified instant."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isSupported(field: TemporalField!)",
      "desc": "Checks if the specified field is supported."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isSupported(unit: TemporalUnit!)",
      "desc": "Checks if the specified unit is supported."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Instant",
      "code": "minus(amountToSubtract: TemporalAmount!)",
      "desc": "Returns a copy of this instant with the specified amount subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Instant",
      "code": "minus(amountToSubtract: Long, unit: TemporalUnit!)",
      "desc": "Returns a copy of this instant with the specified amount subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Instant",
      "code": "minusMillis(millisToSubtract: Long)",
      "desc": "Returns a copy of this instant with the specified duration in milliseconds subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Instant",
      "code": "minusNanos(nanosToSubtract: Long)",
      "desc": "Returns a copy of this instant with the specified duration in nanoseconds subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Instant",
      "code": "minusSeconds(secondsToSubtract: Long)",
      "desc": "Returns a copy of this instant with the specified duration in seconds subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Instant",
      "code": "now()",
      "desc": "Obtains the current instant from the system clock.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Instant",
      "code": "now(clock: Clock!)",
      "desc": "Obtains the current instant from the specified clock.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Instant",
      "code": "ofEpochMilli(epochMilli: Long)",
      "desc": "Obtains an instance of Instant using milliseconds from the epoch of 1970-01-01T00:00:00Z.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Instant",
      "code": "ofEpochSecond(epochSecond: Long)",
      "desc": "Obtains an instance of Instant using seconds from the epoch of 1970-01-01T00:00:00Z.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Instant",
      "code": "ofEpochSecond(epochSecond: Long, nanoAdjustment: Long)",
      "desc": "Obtains an instance of Instant using seconds from the epoch of 1970-01-01T00:00:00Z and nanosecond fraction of second.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Instant",
      "code": "parse(text: CharSequence!)",
      "desc": "Obtains an instance of Instant from a text string such as 2007-12-03T10:15:30.00Z.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Instant",
      "code": "plus(amountToAdd: TemporalAmount!)",
      "desc": "Returns a copy of this instant with the specified amount added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Instant",
      "code": "plus(amountToAdd: Long, unit: TemporalUnit!)",
      "desc": "Returns a copy of this instant with the specified amount added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Instant",
      "code": "plusMillis(millisToAdd: Long)",
      "desc": "Returns a copy of this instant with the specified duration in milliseconds added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Instant",
      "code": "plusNanos(nanosToAdd: Long)",
      "desc": "Returns a copy of this instant with the specified duration in nanoseconds added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Instant",
      "code": "plusSeconds(secondsToAdd: Long)",
      "desc": "Returns a copy of this instant with the specified duration in seconds added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "R",
      "code": "query(query: TemporalQuery<R>!)",
      "desc": "Queries this instant using the specified query."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ValueRange",
      "code": "range(field: TemporalField!)",
      "desc": "Gets the range of valid values for the specified field.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "toEpochMilli()",
      "desc": "Converts this instant to the number of milliseconds from the epoch of 1970-01-01T00:00:00Z."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": "A string representation of this instant using ISO-8601 representation."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Instant",
      "code": "truncatedTo(unit: TemporalUnit!)",
      "desc": "Returns a copy of this Instant truncated to the specified unit.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "until(endExclusive: Temporal!, unit: TemporalUnit!)",
      "desc": "Calculates the amount of time until another instant in terms of the specified unit."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Instant",
      "code": "with(adjuster: TemporalAdjuster!)",
      "desc": "Returns an adjusted copy of this instant.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Instant",
      "code": "with(field: TemporalField!, newValue: Long)",
      "desc": "Returns a copy of this instant with the specified field set to a new value.",
      "symbol": "!"
    }
  ]
}