{
  "path": "android.media.session",
  "name": "MediaController",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(context: Context, token: MediaSession.Token)\n            Create a new MediaController from a session's token."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "adjustVolume(direction: Int, flags: Int)",
      "desc": "Adjust the volume of the output this session is playing on."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "dispatchMediaButtonEvent(keyEvent: KeyEvent)",
      "desc": "Send the specified media button event to the session."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Bundle",
      "code": "getExtras()",
      "desc": "Get the extras for this session.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "getFlags()",
      "desc": "Get the flags for this session."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MediaMetadata",
      "code": "getMetadata()",
      "desc": "Get the current metadata for this session.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getPackageName()",
      "desc": "Get the session owner's package name.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MediaController.PlaybackInfo",
      "code": "getPlaybackInfo()",
      "desc": "Get the current playback info for this session.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "PlaybackState",
      "code": "getPlaybackState()",
      "desc": "Get the current playback state for this session.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MutableList",
      "code": "getQueue()",
      "desc": "Get the current play queue for this session if one is set.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "CharSequence",
      "code": "getQueueTitle()",
      "desc": "Get the queue title for this session.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getRatingType()",
      "desc": "Get the rating type supported by the session."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "PendingIntent",
      "code": "getSessionActivity()",
      "desc": "Get an intent for launching UI associated with this session if one exists.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Bundle",
      "code": "getSessionInfo()",
      "desc": "Gets the additional session information which was set when the session was created."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MediaSession.Token",
      "code": "getSessionToken()",
      "desc": "Get the token for the session this is connected to."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getTag()",
      "desc": "Get the session's tag for debugging purposes."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MediaController.TransportControls",
      "code": "getTransportControls()",
      "desc": "Get a TransportControls instance to send transport actions to the associated session."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "registerCallback(callback: MediaController.Callback)",
      "desc": "Registers a callback to receive updates from the Session."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "registerCallback(callback: MediaController.Callback, handler: Handler?)",
      "desc": "Registers a callback to receive updates from the session."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "sendCommand(command: String, args: Bundle?, cb: ResultReceiver?)",
      "desc": "Sends a generic command to the session."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setVolumeTo(value: Int, flags: Int)",
      "desc": "Set the volume of the output this session is playing on."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "unregisterCallback(callback: MediaController.Callback)",
      "desc": "Unregisters the specified callback."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "Callback",
      "desc": "Callback for receiving updates from the session."
    },
    {
      "type": "nested-classes",
      "code": "PlaybackInfo",
      "desc": "Holds information about the current playback and how audio is handled for this session."
    },
    {
      "type": "nested-classes",
      "code": "TransportControls",
      "desc": "Interface for controlling media playback on a session."
    }
  ]
}