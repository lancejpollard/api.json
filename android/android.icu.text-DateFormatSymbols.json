{
  "path": "android.icu.text",
  "name": "DateFormatSymbols",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ABBREVIATED",
      "desc": "[icu] Constant for width."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FORMAT",
      "desc": "[icu] Constant for context."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "NARROW",
      "desc": "[icu] Constant for width."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SHORT",
      "desc": "[icu] Constant for width; only supported for weekdays."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "STANDALONE",
      "desc": "[icu] Constant for context."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "WIDE",
      "desc": "[icu] Constant for width."
    },
    {
      "type": "ctor",
      "ctor": "<init>()\n            Constructs a DateFormatSymbols object by loading format data from resources for the default FORMAT locale."
    },
    {
      "type": "ctor",
      "ctor": "<init>(locale: Locale!)\n            Constructs a DateFormatSymbols object by loading format data from resources for the given locale."
    },
    {
      "type": "ctor",
      "ctor": "<init>(locale: ULocale!)\n            [icu] Constructs a DateFormatSymbols object by loading format data from resources for the given ulocale."
    },
    {
      "type": "ctor",
      "ctor": "<init>(cal: Calendar!, locale: Locale!)\n            Returns the DateFormatSymbols object that should be used to format a calendar system's dates in the given locale."
    },
    {
      "type": "ctor",
      "ctor": "<init>(cal: Calendar!, locale: ULocale!)\n            Returns the DateFormatSymbols object that should be used to format a calendar system's dates in the given locale."
    },
    {
      "type": "ctor",
      "ctor": "<init>(calendarClass: Class<out Calendar!>!, locale: Locale!)\n            Variant of DateFormatSymbols(Calendar, Locale) that takes the Calendar class instead of a Calendar instance."
    },
    {
      "type": "ctor",
      "ctor": "<init>(calendarClass: Class<out Calendar!>!, locale: ULocale!)\n            Variant of DateFormatSymbols(Calendar, ULocale) that takes the Calendar class instead of a Calendar instance."
    },
    {
      "type": "ctor",
      "ctor": "<init>(bundle: ResourceBundle!, locale: Locale!)\n            Fetches a custom calendar's DateFormatSymbols out of the given resource bundle."
    },
    {
      "type": "ctor",
      "ctor": "<init>(bundle: ResourceBundle!, locale: ULocale!)\n            Fetches a custom calendar's DateFormatSymbols out of the given resource bundle."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "clone()",
      "desc": "Overrides clone."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Overrides equals."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getAmPmStrings()",
      "desc": "Returns am/pm strings.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getAvailableLocales()",
      "desc": "Returns an array of all locales for which the getInstance methods of this class can return localized instances.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getEraNames()",
      "desc": "[icu] Returns full era name strings.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getEras()",
      "desc": "Returns abbreviated era strings.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "DateFormatSymbols",
      "code": "getInstance()",
      "desc": "Returns a DateFormatSymbols instance for the default locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "DateFormatSymbols",
      "code": "getInstance(locale: Locale!)",
      "desc": "Returns a DateFormatSymbols instance for the given locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "DateFormatSymbols",
      "code": "getInstance(locale: ULocale!)",
      "desc": "[icu] Returns a DateFormatSymbols instance for the given locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getLocalPatternChars()",
      "desc": "Returns localized date-time pattern characters.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getMonths()",
      "desc": "Returns month strings.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getMonths(context: Int, width: Int)",
      "desc": "Returns month strings.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getQuarters(context: Int, width: Int)",
      "desc": "[icu] Returns quarter strings.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getShortMonths()",
      "desc": "Returns short month strings.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getShortWeekdays()",
      "desc": "Returns abbreviated weekday strings; for example: \"Sun\", \"Mon\", etc.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getWeekdays()",
      "desc": "Returns wide weekday strings.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getWeekdays(context: Int, width: Int)",
      "desc": "Returns weekday strings.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getYearNames(context: Int, width: Int)",
      "desc": "Returns cyclic year name strings if the calendar has them, for example: \"jia-zi\", \"yi-chou\", etc.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getZodiacNames(context: Int, width: Int)",
      "desc": "Returns calendar zodiac name strings if the calendar has them, for example: \"Rat\", \"Ox\", \"Tiger\", etc.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getZoneStrings()",
      "desc": "Returns time zone strings.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Override hashCode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAmPmStrings(newAmpms: Array<String!>!)",
      "desc": "Sets am/pm strings."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setEraNames(newEraNames: Array<String!>!)",
      "desc": "[icu] Sets full era name strings."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setEras(newEras: Array<String!>!)",
      "desc": "Sets abbreviated era strings."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLocalPatternChars(newLocalPatternChars: String!)",
      "desc": "Sets localized date-time pattern characters."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMonths(newMonths: Array<String!>!)",
      "desc": "Sets month strings."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMonths(newMonths: Array<String!>!, context: Int, width: Int)",
      "desc": "Sets month strings."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setQuarters(newQuarters: Array<String!>!, context: Int, width: Int)",
      "desc": "[icu] Sets quarter strings."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setShortMonths(newShortMonths: Array<String!>!)",
      "desc": "Sets short month strings."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setShortWeekdays(newAbbrevWeekdays: Array<String!>!)",
      "desc": "Sets abbreviated weekday strings; for example: \"Sun\", \"Mon\", etc."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setWeekdays(newWeekdays: Array<String!>!, context: Int, width: Int)",
      "desc": "Sets weekday strings."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setWeekdays(newWeekdays: Array<String!>!)",
      "desc": "Sets wide weekday strings."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setYearNames(yearNames: Array<String!>!, context: Int, width: Int)",
      "desc": "Sets cyclic year name strings, for example: \"jia-zi\", \"yi-chou\", etc."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setZodiacNames(zodiacNames: Array<String!>!, context: Int, width: Int)",
      "desc": "Sets calendar zodiac name strings, for example: \"Rat\", \"Ox\", \"Tiger\", etc."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setZoneStrings(newZoneStrings: Array<Array<String!>!>!)",
      "desc": "Sets time zone strings."
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "initializeData(desiredLocale: ULocale!, type: String!)",
      "desc": "Initializes format symbols for the locale and calendar type"
    }
  ]
}