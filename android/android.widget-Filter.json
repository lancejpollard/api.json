{
  "path": "android.widget",
  "name": "Filter",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()\n            Creates a new asynchronous filter."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CharSequence",
      "code": "convertResultToString(resultValue: Any!)",
      "desc": "Converts a value from the filtered set into a CharSequence.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "filter(constraint: CharSequence!)",
      "desc": "Starts an asynchronous filtering operation."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "filter(constraint: CharSequence!, listener: Filter.FilterListener!)",
      "desc": "Starts an asynchronous filtering operation."
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Filter.FilterResults",
      "code": "performFiltering(constraint: CharSequence!)",
      "desc": "Invoked in a worker thread to filter the data according to the constraint.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "publishResults(constraint: CharSequence!, results: Filter.FilterResults!)",
      "desc": "Invoked in the UI thread to publish the filtering results in the user interface."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "FilterListener",
      "desc": "Listener used to receive a notification upon completion of a filtering operation."
    },
    {
      "type": "nested-classes",
      "keyword": "open",
      "code": "FilterResults",
      "desc": "Holds the results of a filtering operation."
    }
  ]
}