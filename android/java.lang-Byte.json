{
  "path": "java.lang",
  "name": "Byte",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "BYTES",
      "desc": "The number of bytes used to represent a byte value in two's complement binary form."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Byte",
      "code": "MAX_VALUE",
      "desc": "A constant holding the maximum value a byte can have, 27-1."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Byte",
      "code": "MIN_VALUE",
      "desc": "A constant holding the minimum value a byte can have, -27."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SIZE",
      "desc": "The number of bits used to represent a byte value in two's complement binary form."
    },
    {
      "type": "ctor",
      "ctor": "<init>(value: Byte)\n            Constructs a newly allocated Byte object that represents the specified byte value."
    },
    {
      "type": "ctor",
      "ctor": "<init>(s: String)\n            Constructs a newly allocated Byte object that represents the byte value indicated by the String parameter."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "compare(x: Byte, y: Byte)",
      "desc": "Compares two byte values numerically."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "compareTo(other: Byte)",
      "desc": "Compares two Byte objects numerically."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Byte",
      "code": "decode(nm: String)",
      "desc": "Decodes a String into a Byte."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Compares this object to the specified object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Returns a hash code for this Byte; equal to the result of invoking intValue()."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "hashCode(value: Byte)",
      "desc": "Returns a hash code for a byte value; compatible with Byte.hashCode()."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Byte",
      "code": "parseByte(s: String, radix: Int)",
      "desc": "Parses the string argument as a signed byte in the radix specified by the second argument."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Byte",
      "code": "parseByte(s: String)",
      "desc": "Parses the string argument as a signed decimal byte."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Byte",
      "code": "toByte()",
      "desc": "Returns the value of this Byte as a byte."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Double",
      "code": "toDouble()",
      "desc": "Returns the value of this Byte as a double after a widening primitive conversion."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "toFloat()",
      "desc": "Returns the value of this Byte as a float after a widening primitive conversion."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "toInt()",
      "desc": "Returns the value of this Byte as an int after a widening primitive conversion."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "toLong()",
      "desc": "Returns the value of this Byte as a long after a widening primitive conversion."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Short",
      "code": "toShort()",
      "desc": "Returns the value of this Byte as a short after a widening primitive conversion."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns a String object representing this Byte's value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "String",
      "code": "toString(b: Byte)",
      "desc": "Returns a new String object representing the specified byte."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "toUnsignedInt(x: Byte)",
      "desc": "Converts the argument to an int by an unsigned conversion."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Long",
      "code": "toUnsignedLong(x: Byte)",
      "desc": "Converts the argument to a long by an unsigned conversion."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Byte",
      "code": "valueOf(b: Byte)",
      "desc": "Returns a Byte instance representing the specified byte value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Byte",
      "code": "valueOf(s: String, radix: Int)",
      "desc": "Returns a Byte object holding the value extracted from the specified String when parsed with the radix given by the second argument."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Byte",
      "code": "valueOf(s: String)",
      "desc": "Returns a Byte object holding the value given by the specified String."
    }
  ]
}