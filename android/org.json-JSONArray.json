{
  "path": "org.json",
  "name": "JSONArray",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()\n            Creates a JSONArray with no values."
    },
    {
      "type": "ctor",
      "ctor": "<init>(copyFrom: MutableCollection<Any?>!)\n            Creates a new JSONArray by copying all values from the given collection."
    },
    {
      "type": "ctor",
      "ctor": "<init>(readFrom: JSONTokener!)\n            Creates a new JSONArray with values from the next array in the tokener."
    },
    {
      "type": "ctor",
      "ctor": "<init>(json: String!)\n            Creates a new JSONArray with values from the JSON string."
    },
    {
      "type": "ctor",
      "ctor": "<init>(array: Any!)\n            Creates a new JSONArray with values from the given primitive array."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "get(index: Int)",
      "desc": "Returns the value at index.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getBoolean(index: Int)",
      "desc": "Returns the value at index if it exists and is a boolean or can be coerced to a boolean."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Double",
      "code": "getDouble(index: Int)",
      "desc": "Returns the value at index if it exists and is a double or can be coerced to a double."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getInt(index: Int)",
      "desc": "Returns the value at index if it exists and is an int or can be coerced to an int."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "JSONArray",
      "code": "getJSONArray(index: Int)",
      "desc": "Returns the value at index if it exists and is a JSONArray.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "JSONObject",
      "code": "getJSONObject(index: Int)",
      "desc": "Returns the value at index if it exists and is a JSONObject.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "getLong(index: Int)",
      "desc": "Returns the value at index if it exists and is a long or can be coerced to a long."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getString(index: Int)",
      "desc": "Returns the value at index if it exists, coercing it if necessary.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isNull(index: Int)",
      "desc": "Returns true if this array has no value at index, or if its value is the null reference or JSONObject#NULL."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "join(separator: String!)",
      "desc": "Returns a new string by alternating this array's values with separator.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "length()",
      "desc": "Returns the number of values in this array."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "opt(index: Int)",
      "desc": "Returns the value at index, or null if the array has no value at index.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "optBoolean(index: Int)",
      "desc": "Returns the value at index if it exists and is a boolean or can be coerced to a boolean."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "optBoolean(index: Int, fallback: Boolean)",
      "desc": "Returns the value at index if it exists and is a boolean or can be coerced to a boolean."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Double",
      "code": "optDouble(index: Int)",
      "desc": "Returns the value at index if it exists and is a double or can be coerced to a double."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Double",
      "code": "optDouble(index: Int, fallback: Double)",
      "desc": "Returns the value at index if it exists and is a double or can be coerced to a double."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "optInt(index: Int)",
      "desc": "Returns the value at index if it exists and is an int or can be coerced to an int."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "optInt(index: Int, fallback: Int)",
      "desc": "Returns the value at index if it exists and is an int or can be coerced to an int."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "JSONArray",
      "code": "optJSONArray(index: Int)",
      "desc": "Returns the value at index if it exists and is a JSONArray.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "JSONObject",
      "code": "optJSONObject(index: Int)",
      "desc": "Returns the value at index if it exists and is a JSONObject.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "optLong(index: Int)",
      "desc": "Returns the value at index if it exists and is a long or can be coerced to a long."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "optLong(index: Int, fallback: Long)",
      "desc": "Returns the value at index if it exists and is a long or can be coerced to a long."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "optString(index: Int)",
      "desc": "Returns the value at index if it exists, coercing it if necessary.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "optString(index: Int, fallback: String!)",
      "desc": "Returns the value at index if it exists, coercing it if necessary.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "JSONArray",
      "code": "put(value: Boolean)",
      "desc": "Appends value to the end of this array.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "JSONArray",
      "code": "put(value: Double)",
      "desc": "Appends value to the end of this array.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "JSONArray",
      "code": "put(value: Int)",
      "desc": "Appends value to the end of this array.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "JSONArray",
      "code": "put(value: Long)",
      "desc": "Appends value to the end of this array.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "JSONArray",
      "code": "put(value: Any!)",
      "desc": "Appends value to the end of this array.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "JSONArray",
      "code": "put(index: Int, value: Boolean)",
      "desc": "Sets the value at index to value, null padding this array to the required length if necessary.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "JSONArray",
      "code": "put(index: Int, value: Double)",
      "desc": "Sets the value at index to value, null padding this array to the required length if necessary.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "JSONArray",
      "code": "put(index: Int, value: Int)",
      "desc": "Sets the value at index to value, null padding this array to the required length if necessary.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "JSONArray",
      "code": "put(index: Int, value: Long)",
      "desc": "Sets the value at index to value, null padding this array to the required length if necessary.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "JSONArray",
      "code": "put(index: Int, value: Any!)",
      "desc": "Sets the value at index to value, null padding this array to the required length if necessary.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "remove(index: Int)",
      "desc": "Removes and returns the value at index, or null if the array has no value at index.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "JSONObject",
      "code": "toJSONObject(names: JSONArray!)",
      "desc": "Returns a new object whose values are the values in this array, and whose names are the values in names.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": "Encodes this array as a compact JSON string, such as:"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString(indentSpaces: Int)",
      "desc": "Encodes this array as a human readable JSON string for debugging, such as:",
      "symbol": "!"
    }
  ]
}