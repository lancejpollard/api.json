{
  "path": "java.util.logging",
  "name": "MemoryHandler",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()\n            Create a MemoryHandler and configure it based on LogManager configuration properties."
    },
    {
      "type": "ctor",
      "ctor": "<init>(target: Handler!, size: Int, pushLevel: Level!)\n            Create a MemoryHandler."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "close()",
      "desc": "Close the Handler and free all associated resources."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "flush()",
      "desc": "Causes a flush on the target Handler."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Level",
      "code": "getPushLevel()",
      "desc": "Get the pushLevel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isLoggable(record: LogRecord!)",
      "desc": "Check if this Handler would actually log a given LogRecord into its internal buffer."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "publish(record: LogRecord!)",
      "desc": "Store a LogRecord in an internal buffer."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "push()",
      "desc": "Push any buffered output to the target Handler."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPushLevel(newLevel: Level!)",
      "desc": "Set the pushLevel."
    },
    {
      "type": "inherited-methods",
      "from": "Handler"
    },
    {
      "type": "inherited-methods",
      "from": "String!"
    },
    {
      "type": "inherited-methods",
      "from": "getEncoding()"
    },
    {
      "type": "inherited-methods",
      "from": "ErrorManager!"
    },
    {
      "type": "inherited-methods",
      "from": "getErrorManager()"
    },
    {
      "type": "inherited-methods",
      "from": "Filter!"
    },
    {
      "type": "inherited-methods",
      "from": "getFilter()"
    },
    {
      "type": "inherited-methods",
      "from": "Formatter!"
    },
    {
      "type": "inherited-methods",
      "from": "getFormatter()"
    },
    {
      "type": "inherited-methods",
      "from": "Level!"
    },
    {
      "type": "inherited-methods",
      "from": "getLevel()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "reportError(msg: String!, ex: Exception!, code: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setEncoding(encoding: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setErrorManager(em: ErrorManager!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setFilter(newFilter: Filter!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setFormatter(newFormatter: Formatter!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setLevel(newLevel: Level!)"
    }
  ]
}