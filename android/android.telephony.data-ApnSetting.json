{
  "path": "android.telephony.data",
  "name": "ApnSetting",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AUTH_TYPE_CHAP",
      "desc": "Authentication type for CHAP."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AUTH_TYPE_NONE",
      "desc": "No authentication type."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AUTH_TYPE_PAP",
      "desc": "Authentication type for PAP."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AUTH_TYPE_PAP_OR_CHAP",
      "desc": "Authentication type for PAP or CHAP."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MVNO_TYPE_GID",
      "desc": "MVNO type for group identifier level 1."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MVNO_TYPE_ICCID",
      "desc": "MVNO type for ICCID."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MVNO_TYPE_IMSI",
      "desc": "MVNO type for IMSI."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MVNO_TYPE_SPN",
      "desc": "MVNO type for service provider name."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PROTOCOL_IP",
      "desc": "Internet protocol."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PROTOCOL_IPV4V6",
      "desc": "Virtual PDP type introduced to handle dual IP stack UE capability."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PROTOCOL_IPV6",
      "desc": "Internet protocol, version 6."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PROTOCOL_NON_IP",
      "desc": "Transfer of Non-IP data to external packet data network."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PROTOCOL_PPP",
      "desc": "Point to point protocol."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PROTOCOL_UNSTRUCTURED",
      "desc": "Transfer of Unstructured data to the Data Network via N6."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_CBS",
      "desc": "APN type for CBS."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_DEFAULT",
      "desc": "APN type for default data traffic."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_DUN",
      "desc": "APN type for DUN traffic."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_EMERGENCY",
      "desc": "APN type for Emergency PDN."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_FOTA",
      "desc": "APN type for accessing the carrier's FOTA portal, used for over the air updates."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_HIPRI",
      "desc": "APN type for HiPri traffic."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_IA",
      "desc": "APN type for IA Initial Attach APN."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_IMS",
      "desc": "APN type for IMS."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_MCX",
      "desc": "APN type for MCX (Mission Critical Service) where X can be PTT/Video/Data"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_MMS",
      "desc": "APN type for MMS traffic."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_SUPL",
      "desc": "APN type for SUPL assisted GPS."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_XCAP",
      "desc": "APN type for XCAP."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "describeContents()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getApnName()",
      "desc": "Returns the name of the APN.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getApnTypeBitmask()",
      "desc": "Returns the bitmask of APN types."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getAuthType()",
      "desc": "Returns the authentication type of the APN."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getCarrierId()",
      "desc": "Returns the carrier id for this APN."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getEntryName()",
      "desc": "Gets the human-readable name that describes the APN.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getId()",
      "desc": "Returns the unique database id for this entry."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "InetAddress",
      "code": "getMmsProxyAddress()",
      "desc": "Gets the MMS proxy address configured for the APN.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getMmsProxyAddressAsString()",
      "desc": "Returns the MMS proxy address of the APN.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getMmsProxyPort()",
      "desc": "Returns the MMS proxy port of the APN."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Uri",
      "code": "getMmsc()",
      "desc": "Returns the MMSC Uri of the APN.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getMvnoType()",
      "desc": "Returns the MVNO match type for this APN."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getNetworkTypeBitmask()",
      "desc": "Returns a bitmask describing the Radio Technologies(Network Types) which this APN may use."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getOperatorNumeric()",
      "desc": "Returns the numeric operator ID for the APN.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getPassword()",
      "desc": "Returns the APN password of the APN.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getProtocol()",
      "desc": "Returns the protocol to use to connect to this APN."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "InetAddress",
      "code": "getProxyAddress()",
      "desc": "Gets the HTTP proxy address configured for the APN.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getProxyAddressAsString()",
      "desc": "Returns the proxy address of the APN.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getProxyPort()",
      "desc": "Returns the proxy address of the APN."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getRoamingProtocol()",
      "desc": "Returns the protocol to use to connect to this APN while the device is roaming."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getUser()",
      "desc": "Returns the APN username of the APN.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isEnabled()",
      "desc": "Returns the current status of APN."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "writeToParcel(dest: Parcel, flags: Int)",
      "desc": "Flatten this object in to a Parcel."
    },
    {
      "type": "inherited-constants",
      "from": "Parcelable"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "CONTENTS_FILE_DESCRIPTOR"
    },
    {
      "type": "inherited-constants",
      "from": "describeContents()"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "PARCELABLE_WRITE_RETURN_VALUE"
    },
    {
      "type": "inherited-constants",
      "from": "writeToParcel"
    },
    {
      "type": "inherited-constants",
      "from": "Parcelable someFunction()"
    },
    {
      "type": "inherited-constants",
      "from": "void someFunction(out Parcelable)"
    },
    {
      "type": "inherited-constants",
      "from": "void someFunction(inout Parcelable)"
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "open",
      "code": "Builder",
      "desc": "Provides a convenient way to set the fields of a ApnSetting when creating a new instance."
    }
  ]
}