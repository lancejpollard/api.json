{
  "path": "java.time",
  "name": "ZoneId",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Checks if this time-zone ID is equal to another time-zone ID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ZoneId",
      "code": "from(temporal: TemporalAccessor!)",
      "desc": "Obtains an instance of ZoneId from a temporal object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableSet",
      "code": "getAvailableZoneIds()",
      "desc": "Gets the set of available zone IDs.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getDisplayName(style: TextStyle!, locale: Locale!)",
      "desc": "Gets the textual representation of the zone, such as 'British Time' or '+02:00'.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "String",
      "code": "getId()",
      "desc": "Gets the unique time-zone ID.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "ZoneRules",
      "code": "getRules()",
      "desc": "Gets the time-zone rules for this ID allowing calculations to be performed.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "A hash code for this time-zone ID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ZoneId",
      "code": "normalized()",
      "desc": "Normalizes the time-zone ID, returning a ZoneOffset where possible.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ZoneId",
      "code": "of(zoneId: String!, aliasMap: MutableMap<String!, String!>!)",
      "desc": "Obtains an instance of ZoneId using its ID using a map of aliases to supplement the standard zone IDs.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ZoneId",
      "code": "of(zoneId: String!)",
      "desc": "Obtains an instance of ZoneId from an ID ensuring that the ID is valid and available for use.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ZoneId",
      "code": "ofOffset(prefix: String!, offset: ZoneOffset!)",
      "desc": "Obtains an instance of ZoneId wrapping an offset.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ZoneId",
      "code": "systemDefault()",
      "desc": "Gets the system default time-zone.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": "Outputs this zone as a String, using the ID."
    }
  ]
}