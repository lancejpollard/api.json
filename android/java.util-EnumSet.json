{
  "path": "java.util",
  "name": "EnumSet",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "EnumSet",
      "code": "allOf(elementType: Class<E>!)",
      "desc": "Creates an enum set containing all of the elements in the specified element type.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "EnumSet",
      "code": "clone()",
      "desc": "Returns a copy of this set.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "EnumSet",
      "code": "complementOf(s: EnumSet<E>!)",
      "desc": "Creates an enum set with the same element type as the specified enum set, initially containing all the elements of this type that are not contained in the specified set.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "EnumSet",
      "code": "copyOf(s: EnumSet<E>!)",
      "desc": "Creates an enum set with the same element type as the specified enum set, initially containing the same elements (if any).",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "EnumSet",
      "code": "copyOf(c: MutableCollection<E>!)",
      "desc": "Creates an enum set initialized from the specified collection.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "EnumSet",
      "code": "noneOf(elementType: Class<E>!)",
      "desc": "Creates an empty enum set with the specified element type.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "EnumSet",
      "code": "of(e: E)",
      "desc": "Creates an enum set initially containing the specified element.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "EnumSet",
      "code": "of(e1: E, e2: E)",
      "desc": "Creates an enum set initially containing the specified elements.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "EnumSet",
      "code": "of(e1: E, e2: E, e3: E)",
      "desc": "Creates an enum set initially containing the specified elements.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "EnumSet",
      "code": "of(e1: E, e2: E, e3: E, e4: E)",
      "desc": "Creates an enum set initially containing the specified elements.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "EnumSet",
      "code": "of(e1: E, e2: E, e3: E, e4: E, e5: E)",
      "desc": "Creates an enum set initially containing the specified elements.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "EnumSet",
      "code": "of(first: E, vararg rest: E)",
      "desc": "Creates an enum set initially containing the specified elements.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "EnumSet",
      "code": "range(from: E, to: E)",
      "desc": "Creates an enum set initially containing all of the elements in the range defined by the two specified endpoints.",
      "symbol": "<"
    },
    {
      "type": "inherited-methods",
      "from": "AbstractCollection"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "add(element: E)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "addAll(elements: Collection<E>)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "clear()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "contains(element: E?)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "containsAll(elements: Collection<E>)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isEmpty()"
    },
    {
      "type": "inherited-methods",
      "from": "MutableIterator<E>"
    },
    {
      "type": "inherited-methods",
      "from": "iterator()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "remove(element: E?)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "retainAll(elements: Collection<E>)"
    },
    {
      "type": "inherited-methods",
      "from": "Array<Any!>"
    },
    {
      "type": "inherited-methods",
      "from": "toArray()"
    },
    {
      "type": "inherited-methods",
      "from": "0"
    },
    {
      "type": "inherited-methods",
      "from": "size"
    },
    {
      "type": "inherited-methods",
      "from": "Array<T>"
    },
    {
      "type": "inherited-methods",
      "from": "toArray(a: Array<T>)"
    },
    {
      "type": "inherited-methods",
      "from": "toArray()"
    },
    {
      "type": "inherited-methods",
      "from": "0"
    },
    {
      "type": "inherited-methods",
      "from": "size"
    },
    {
      "type": "inherited-methods",
      "from": "String"
    },
    {
      "type": "inherited-methods",
      "from": "toString()"
    },
    {
      "type": "inherited-methods",
      "from": "String#valueOf(Object)"
    },
    {
      "type": "inherited-methods",
      "from": "AbstractSet"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "equals(other: Any?)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "hashCode()"
    },
    {
      "type": "inherited-methods",
      "from": "Object#hashCode"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "removeAll(elements: Collection<E>)"
    }
  ]
}