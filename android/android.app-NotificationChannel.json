{
  "path": "android.app",
  "name": "NotificationChannel",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "DEFAULT_CHANNEL_ID",
      "desc": "The id of the default channel for an app."
    },
    {
      "type": "ctor",
      "ctor": "<init>(id: String!, name: CharSequence!, importance: Int)\n            Creates a notification channel."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "canBubble()",
      "desc": "Returns whether notifications posted to this channel are allowed to display outside of the notification shade, in a floating window on top of other apps."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "canBypassDnd()",
      "desc": "Whether or not notifications posted to this channel can bypass the Do Not Disturb NotificationManager#INTERRUPTION_FILTER_PRIORITY mode."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "canShowBadge()",
      "desc": "Returns whether notifications posted to this channel can appear as badges in a Launcher application."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "describeContents()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "enableLights(lights: Boolean)",
      "desc": "Sets whether notifications posted to this channel should display notification lights, on devices that support that feature."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "enableVibration(vibration: Boolean)",
      "desc": "Sets whether notification posted to this channel should vibrate."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "AudioAttributes",
      "code": "getAudioAttributes()",
      "desc": "Returns the audio attributes for sound played by notifications posted to this channel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getConversationId()",
      "desc": "Returns the ShortcutInfo#getId() of the conversation backing this channel, if it's associated with a conversation.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getDescription()",
      "desc": "Returns the user visible description of this channel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getGroup()",
      "desc": "Returns what group this channel belongs to.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getId()",
      "desc": "Returns the id of this channel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getImportance()",
      "desc": "Returns the user specified importance e."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getLightColor()",
      "desc": "Returns the notification light color for notifications posted to this channel."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getLockscreenVisibility()",
      "desc": "Returns whether or not notifications posted to this channel are shown on the lockscreen in full or redacted form."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "CharSequence",
      "code": "getName()",
      "desc": "Returns the user visible name of this channel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getParentChannelId()",
      "desc": "Returns the id of the parent notification channel to this channel, if it's a conversation related channel.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Uri",
      "code": "getSound()",
      "desc": "Returns the notification sound for this channel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "LongArray",
      "code": "getVibrationPattern()",
      "desc": "Returns the vibration pattern for notifications posted to this channel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hasUserSetImportance()",
      "desc": "Returns whether the user has chosen the importance of this channel, either to affirm the initial selection from the app, or changed it to be higher or lower."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hasUserSetSound()",
      "desc": "Returns whether the user has chosen the sound of this channel."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isImportantConversation()",
      "desc": "Whether or not notifications in this conversation are considered important."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setAllowBubbles(allowBubbles: Boolean)",
      "desc": "As of Android 11 this value is no longer respected."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setBypassDnd(bypassDnd: Boolean)",
      "desc": "Sets whether or not notifications posted to this channel can interrupt the user in android.app.NotificationManager.Policy#INTERRUPTION_FILTER_PRIORITY mode."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setConversationId(parentChannelId: String, conversationId: String)",
      "desc": "Sets this channel as being converastion-centric."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setDescription(description: String!)",
      "desc": "Sets the user visible description of this channel."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setGroup(groupId: String!)",
      "desc": "Sets what group this channel belongs to."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setImportance(importance: Int)",
      "desc": "Sets the level of interruption of this notification channel."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setLightColor(argb: Int)",
      "desc": "Sets the notification light color for notifications posted to this channel, if lights are enabled on this channel and the device supports that feature."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setLockscreenVisibility(lockscreenVisibility: Int)",
      "desc": "Sets whether notifications posted to this channel appear on the lockscreen or not, and if so, whether they appear in a redacted form."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setName(name: CharSequence!)",
      "desc": "Sets the user visible name of this channel."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setShowBadge(showBadge: Boolean)",
      "desc": "Sets whether notifications posted to this channel can appear as application icon badges in a Launcher."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setSound(sound: Uri!, audioAttributes: AudioAttributes!)",
      "desc": "Sets the sound that should be played for notifications posted to this channel and its audio attributes."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setVibrationPattern(vibrationPattern: LongArray!)",
      "desc": "Sets the vibration pattern for notifications posted to this channel."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "shouldShowLights()",
      "desc": "Returns whether notifications posted to this channel trigger notification lights."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "shouldVibrate()",
      "desc": "Returns whether notifications posted to this channel always vibrate."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "writeToParcel(dest: Parcel!, flags: Int)",
      "desc": ""
    },
    {
      "type": "inherited-constants",
      "from": "Parcelable"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "CONTENTS_FILE_DESCRIPTOR"
    },
    {
      "type": "inherited-constants",
      "from": "describeContents()"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "PARCELABLE_WRITE_RETURN_VALUE"
    },
    {
      "type": "inherited-constants",
      "from": "writeToParcel"
    },
    {
      "type": "inherited-constants",
      "from": "Parcelable someFunction()"
    },
    {
      "type": "inherited-constants",
      "from": "void someFunction(out Parcelable)"
    },
    {
      "type": "inherited-constants",
      "from": "void someFunction(inout Parcelable)"
    }
  ]
}