{
  "path": "android.os",
  "name": "MessageQueue",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "addIdleHandler(handler: MessageQueue.IdleHandler)",
      "desc": "Add a new IdleHandler to this message queue."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "addOnFileDescriptorEventListener(fd: FileDescriptor, events: Int, listener: MessageQueue.OnFileDescriptorEventListener)",
      "desc": "Adds a file descriptor listener to receive notification when file descriptor related events occur."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isIdle()",
      "desc": "Returns true if the looper has no pending messages which are due to be processed."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "removeIdleHandler(handler: MessageQueue.IdleHandler)",
      "desc": "Remove an IdleHandler from the queue that was previously added with addIdleHandler."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "removeOnFileDescriptorEventListener(fd: FileDescriptor)",
      "desc": "Removes a file descriptor listener."
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "identifier": "Unit",
      "code": "finalize()",
      "desc": ""
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "IdleHandler",
      "desc": "Callback interface for discovering when a thread is going to block waiting for more messages."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnFileDescriptorEventListener",
      "desc": "A listener which is invoked when file descriptor related events occur."
    }
  ]
}