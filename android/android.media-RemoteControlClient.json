{
  "path": "android.media",
  "name": "RemoteControlClient",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_KEY_MEDIA_FAST_FORWARD",
      "desc": "Flag indicating a RemoteControlClient makes use of the \"fast forward\" media key."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_KEY_MEDIA_NEXT",
      "desc": "Flag indicating a RemoteControlClient makes use of the \"next\" media key."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_KEY_MEDIA_PAUSE",
      "desc": "Flag indicating a RemoteControlClient makes use of the \"pause\" media key."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_KEY_MEDIA_PLAY",
      "desc": "Flag indicating a RemoteControlClient makes use of the \"play\" media key."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_KEY_MEDIA_PLAY_PAUSE",
      "desc": "Flag indicating a RemoteControlClient makes use of the \"play/pause\" media key."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_KEY_MEDIA_POSITION_UPDATE",
      "desc": "Flag indicating a RemoteControlClient can receive changes in the media playback position through the OnPlaybackPositionUpdateListener interface."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_KEY_MEDIA_PREVIOUS",
      "desc": "Flag indicating a RemoteControlClient makes use of the \"previous\" media key."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_KEY_MEDIA_RATING",
      "desc": "Flag indicating a RemoteControlClient supports ratings."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_KEY_MEDIA_REWIND",
      "desc": "Flag indicating a RemoteControlClient makes use of the \"rewind\" media key."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_KEY_MEDIA_STOP",
      "desc": "Flag indicating a RemoteControlClient makes use of the \"stop\" media key."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PLAYSTATE_BUFFERING",
      "desc": "Playback state of a RemoteControlClient which is buffering data to play before it can start or resume playback."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PLAYSTATE_ERROR",
      "desc": "Playback state of a RemoteControlClient which cannot perform any playback related operation because of an internal error."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PLAYSTATE_FAST_FORWARDING",
      "desc": "Playback state of a RemoteControlClient which is fast forwarding in the media it is currently playing."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PLAYSTATE_PAUSED",
      "desc": "Playback state of a RemoteControlClient which is paused."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PLAYSTATE_PLAYING",
      "desc": "Playback state of a RemoteControlClient which is playing media."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PLAYSTATE_REWINDING",
      "desc": "Playback state of a RemoteControlClient which is fast rewinding in the media it is currently playing."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PLAYSTATE_SKIPPING_BACKWARDS",
      "desc": "Playback state of a RemoteControlClient which is skipping back to the previous logical chapter (such as a song in a playlist) in the media it is currently playing."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PLAYSTATE_SKIPPING_FORWARDS",
      "desc": "Playback state of a RemoteControlClient which is skipping to the next logical chapter (such as a song in a playlist) in the media it is currently playing."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PLAYSTATE_STOPPED",
      "desc": "Playback state of a RemoteControlClient which is stopped."
    },
    {
      "type": "ctor",
      "ctor": "<init>(mediaButtonIntent: PendingIntent!)\n            Class constructor."
    },
    {
      "type": "ctor",
      "ctor": "<init>(mediaButtonIntent: PendingIntent!, looper: Looper!)\n            Class constructor for a remote control client whose internal event handling happens on a user-provided Looper."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "RemoteControlClient.MetadataEditor",
      "code": "editMetadata(startEmpty: Boolean)",
      "desc": "Creates a MetadataEditor.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MediaSession",
      "code": "getMediaSession()",
      "desc": "Get a MediaSession associated with this RCC.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMetadataUpdateListener(l: RemoteControlClient.OnMetadataUpdateListener!)",
      "desc": "Sets the listener to be called whenever the metadata is updated."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOnGetPlaybackPositionListener(l: RemoteControlClient.OnGetPlaybackPositionListener!)",
      "desc": "Sets the listener to be called whenever the media current playback position is needed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPlaybackPositionUpdateListener(l: RemoteControlClient.OnPlaybackPositionUpdateListener!)",
      "desc": "Sets the listener to be called whenever the media playback position is requested to be updated."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPlaybackState(state: Int)",
      "desc": "Sets the current playback state."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPlaybackState(state: Int, timeInMs: Long, playbackSpeed: Float)",
      "desc": "Sets the current playback state and the matching media position for the current playback speed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTransportControlFlags(transportControlFlags: Int)",
      "desc": "Sets the flags for the media transport control buttons that this client supports."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "open",
      "code": "MetadataEditor",
      "desc": "Class used to modify metadata in a RemoteControlClient object."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnGetPlaybackPositionListener",
      "desc": "Interface definition for a callback to be invoked when the media playback position is queried."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnMetadataUpdateListener",
      "desc": "Interface definition for a callback to be invoked when one of the metadata values has been updated."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnPlaybackPositionUpdateListener",
      "desc": "Interface definition for a callback to be invoked when the media playback position is requested to be updated."
    }
  ]
}