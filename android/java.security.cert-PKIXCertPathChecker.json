{
  "path": "java.security.cert",
  "name": "PKIXCertPathChecker",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "check(cert: Certificate!, unresolvedCritExts: MutableCollection<String!>!)",
      "desc": "Performs the check(s) on the specified certificate using its internal state and removes any critical extensions that it processes from the specified collection of OID strings that represent the unresolved critical extensions."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "check(cert: Certificate!)",
      "desc": "Performs the check(s) on the specified certificate using its internal state."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "clone()",
      "desc": "Returns a clone of this object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "MutableSet",
      "code": "getSupportedExtensions()",
      "desc": "Returns an immutable Set of X.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "init(forward: Boolean)",
      "desc": "Initializes the internal state of this PKIXCertPathChecker."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "isForwardCheckingSupported()",
      "desc": "Indicates if forward checking is supported."
    }
  ]
}