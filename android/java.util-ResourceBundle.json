{
  "path": "java.util",
  "name": "ResourceBundle",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()\n            Sole constructor."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Unit",
      "code": "clearCache()",
      "desc": "Removes all resource bundles from the cache that have been loaded using the caller's class loader."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Unit",
      "code": "clearCache(loader: ClassLoader!)",
      "desc": "Removes all resource bundles from the cache that have been loaded using the given class loader."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "containsKey(key: String!)",
      "desc": "Determines whether the given key is contained in this ResourceBundle or its parent bundles."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getBaseBundleName()",
      "desc": "Returns the base name of this bundle, if known, or null if unknown.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "ResourceBundle",
      "code": "getBundle(baseName: String!)",
      "desc": "Gets a resource bundle using the specified base name, the default locale, and the caller's class loader.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "ResourceBundle",
      "code": "getBundle(baseName: String!, control: ResourceBundle.Control!)",
      "desc": "Returns a resource bundle using the specified base name, the default locale and the specified control.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "ResourceBundle",
      "code": "getBundle(baseName: String!, locale: Locale!)",
      "desc": "Gets a resource bundle using the specified base name and locale, and the caller's class loader.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "ResourceBundle",
      "code": "getBundle(baseName: String!, targetLocale: Locale!, control: ResourceBundle.Control!)",
      "desc": "Returns a resource bundle using the specified base name, target locale and control, and the caller's class loader.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ResourceBundle",
      "code": "getBundle(baseName: String!, locale: Locale!, loader: ClassLoader!)",
      "desc": "Gets a resource bundle using the specified base name, locale, and class loader.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ResourceBundle",
      "code": "getBundle(baseName: String!, targetLocale: Locale!, loader: ClassLoader!, control: ResourceBundle.Control!)",
      "desc": "Returns a resource bundle using the specified base name, target locale, class loader and control.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Enumeration",
      "code": "getKeys()",
      "desc": "Returns an enumeration of the keys.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Locale",
      "code": "getLocale()",
      "desc": "Returns the locale of this resource bundle.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Any",
      "code": "getObject(key: String!)",
      "desc": "Gets an object for the given key from this resource bundle or one of its parents.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getString(key: String!)",
      "desc": "Gets a string for the given key from this resource bundle or one of its parents.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getStringArray(key: String!)",
      "desc": "Gets a string array for the given key from this resource bundle or one of its parents.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableSet",
      "code": "keySet()",
      "desc": "Returns a Set of all keys contained in this ResourceBundle and its parent bundles.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Any",
      "code": "handleGetObject(key: String!)",
      "desc": "Gets an object for the given key from this resource bundle.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "MutableSet",
      "code": "handleKeySet()",
      "desc": "Returns a Set of the keys contained only in this ResourceBundle.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setParent(parent: ResourceBundle!)",
      "desc": "Sets the parent bundle of this bundle."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "open",
      "code": "Control",
      "desc": "ResourceBundle.Control defines a set of callback methods that are invoked by the ResourceBundle#getBundle(String, factory methods during the bundle loading process."
    }
  ]
}