{
  "path": "android.graphics.drawable",
  "name": "LayerDrawable",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "INSET_UNDEFINED",
      "desc": "Value used for undefined start and end insets."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PADDING_MODE_NEST",
      "desc": "Padding mode used to nest each layer inside the padding of the previous layer."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PADDING_MODE_STACK",
      "desc": "Padding mode used to stack each layer directly atop the previous layer."
    },
    {
      "type": "ctor",
      "ctor": "<init>(layers: Array<Drawable!>)\n            Creates a new layer drawable with the list of specified layers."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "addLayer(dr: Drawable!)",
      "desc": "Adds a new layer containing the specified drawable to the end of the layer list and returns its index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "applyTheme(t: Resources.Theme)",
      "desc": "Applies the specified theme to this Drawable and its children."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "canApplyTheme()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "draw(canvas: Canvas)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Drawable",
      "code": "findDrawableByLayerId(id: Int)",
      "desc": "Looks for a layer with the given ID and returns its Drawable.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "findIndexByLayerId(id: Int)",
      "desc": "Returns the layer with the specified id."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getAlpha()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getBottomPadding()",
      "desc": "Returns the bottom padding in pixels."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getChangingConfigurations()",
      "desc": "Return a mask of the configuration parameters for which this drawable may change, requiring that it be re-created."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Drawable.ConstantState",
      "code": "getConstantState()",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Drawable",
      "code": "getDrawable(index: Int)",
      "desc": "Returns the drawable for the layer at the specified index.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getEndPadding()",
      "desc": "Returns the end padding in pixels."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "getHotspotBounds(outRect: Rect)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getId(index: Int)",
      "desc": "Returns the ID of the specified layer."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getIntrinsicHeight()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getIntrinsicWidth()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getLayerGravity(index: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getLayerHeight(index: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getLayerInsetBottom(index: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getLayerInsetEnd(index: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getLayerInsetLeft(index: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getLayerInsetRight(index: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getLayerInsetStart(index: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getLayerInsetTop(index: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getLayerWidth(index: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getLeftPadding()",
      "desc": "Returns the left padding in pixels."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getNumberOfLayers()",
      "desc": "Returns the number of layers contained within this layer drawable."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getOpacity()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "getOutline(outline: Outline)",
      "desc": "Populates outline with the first available (non-empty) layer outline."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getPadding(padding: Rect)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getPaddingMode()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getRightPadding()",
      "desc": "Returns the right padding in pixels."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getStartPadding()",
      "desc": "Returns the start padding in pixels."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getTopPadding()",
      "desc": "Returns the top padding in pixels."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "inflate(r: Resources, parser: XmlPullParser, attrs: AttributeSet, theme: Resources.Theme?)",
      "desc": "Inflate this Drawable from an XML resource optionally styled by a theme."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "invalidateDrawable(who: Drawable)",
      "desc": "Called when the drawable needs to be redrawn."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isAutoMirrored()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isStateful()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "jumpToCurrentState()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Drawable",
      "code": "mutate()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onLayoutDirectionChanged(layoutDirection: Int)",
      "desc": "Called when the drawable's resolved layout direction changes."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "scheduleDrawable(who: Drawable, what: Runnable, when: Long)",
      "desc": "A Drawable can call this to schedule the next frame of its animation."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAlpha(alpha: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAutoMirrored(mirrored: Boolean)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setColorFilter(colorFilter: ColorFilter?)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setDither(dither: Boolean)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setDrawable(index: Int, drawable: Drawable!)",
      "desc": "Sets the drawable for the layer at the specified index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "setDrawableByLayerId(id: Int, drawable: Drawable!)",
      "desc": "Replaces the Drawable for the layer with the given id."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setHotspot(x: Float, y: Float)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setHotspotBounds(left: Int, top: Int, right: Int, bottom: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setId(index: Int, id: Int)",
      "desc": "Sets the ID of a layer."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLayerGravity(index: Int, gravity: Int)",
      "desc": "Sets the gravity used to position or stretch the specified layer within its container."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLayerHeight(index: Int, h: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLayerInset(index: Int, l: Int, t: Int, r: Int, b: Int)",
      "desc": "Specifies the insets in pixels for the drawable at the specified index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLayerInsetBottom(index: Int, b: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLayerInsetEnd(index: Int, e: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLayerInsetLeft(index: Int, l: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLayerInsetRelative(index: Int, s: Int, t: Int, e: Int, b: Int)",
      "desc": "Specifies the relative insets in pixels for the drawable at the specified index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLayerInsetRight(index: Int, r: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLayerInsetStart(index: Int, s: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLayerInsetTop(index: Int, t: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLayerSize(index: Int, w: Int, h: Int)",
      "desc": "Sets an explicit size for the specified layer."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLayerWidth(index: Int, w: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOpacity(opacity: Int)",
      "desc": "Sets the opacity of this drawable directly instead of collecting the states from the layers."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPadding(left: Int, top: Int, right: Int, bottom: Int)",
      "desc": "Sets the absolute padding."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPaddingMode(mode: Int)",
      "desc": "Specifies how layer padding should affect the bounds of subsequent layers."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPaddingRelative(start: Int, top: Int, end: Int, bottom: Int)",
      "desc": "Sets the relative padding."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTintBlendMode(blendMode: BlendMode!)",
      "desc": "Specifies a tint blending mode for this drawable."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTintList(tint: ColorStateList?)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "setVisible(visible: Boolean, restart: Boolean)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "unscheduleDrawable(who: Drawable, what: Runnable)",
      "desc": "A Drawable can call this to unschedule an action previously scheduled with scheduleDrawable."
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onBoundsChange(bounds: Rect!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onLevelChange(level: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onStateChange(state: IntArray!)",
      "desc": ""
    },
    {
      "type": "inherited-methods",
      "from": "Drawable"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "clearColorFilter()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "copyBounds(bounds: Rect)"
    },
    {
      "type": "inherited-methods",
      "from": "Rect"
    },
    {
      "type": "inherited-methods",
      "from": "copyBounds()"
    },
    {
      "type": "inherited-methods",
      "from": "Drawable?"
    },
    {
      "type": "inherited-methods",
      "from": "createFromPath(pathName: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "Drawable!"
    },
    {
      "type": "inherited-methods",
      "from": "createFromResourceStream(res: Resources!, value: TypedValue!, is: InputStream!, srcName: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "Drawable?"
    },
    {
      "type": "inherited-methods",
      "from": "createFromResourceStream(res: Resources?, value: TypedValue?, is: InputStream?, srcName: String?, opts: BitmapFactory.Options?)"
    },
    {
      "type": "inherited-methods",
      "from": "Drawable!"
    },
    {
      "type": "inherited-methods",
      "from": "createFromStream(is: InputStream!, srcName: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "Drawable"
    },
    {
      "type": "inherited-methods",
      "from": "createFromXml(r: Resources, parser: XmlPullParser)"
    },
    {
      "type": "inherited-methods",
      "from": "Drawable"
    },
    {
      "type": "inherited-methods",
      "from": "createFromXml(r: Resources, parser: XmlPullParser, theme: Resources.Theme?)"
    },
    {
      "type": "inherited-methods",
      "from": "Theme"
    },
    {
      "type": "inherited-methods",
      "from": "Drawable"
    },
    {
      "type": "inherited-methods",
      "from": "createFromXmlInner(r: Resources, parser: XmlPullParser, attrs: AttributeSet)"
    },
    {
      "type": "inherited-methods",
      "from": "Drawable"
    },
    {
      "type": "inherited-methods",
      "from": "createFromXmlInner(r: Resources, parser: XmlPullParser, attrs: AttributeSet, theme: Resources.Theme?)"
    },
    {
      "type": "inherited-methods",
      "from": "Theme"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "Rect"
    },
    {
      "type": "inherited-methods",
      "from": "getBounds()"
    },
    {
      "type": "inherited-methods",
      "from": "Drawable.Callback?"
    },
    {
      "type": "inherited-methods",
      "from": "getCallback()"
    },
    {
      "type": "inherited-methods",
      "from": "Callback"
    },
    {
      "type": "inherited-methods",
      "from": "ColorFilter?"
    },
    {
      "type": "inherited-methods",
      "from": "getColorFilter()"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "Drawable"
    },
    {
      "type": "inherited-methods",
      "from": "getCurrent()"
    },
    {
      "type": "inherited-methods",
      "from": "Rect"
    },
    {
      "type": "inherited-methods",
      "from": "getDirtyBounds()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getLayoutDirection()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getLevel()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getMinimumHeight()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getMinimumWidth()"
    },
    {
      "type": "inherited-methods",
      "from": "Insets"
    },
    {
      "type": "inherited-methods",
      "from": "getOpticalInsets()"
    },
    {
      "type": "inherited-methods",
      "from": "IntArray"
    },
    {
      "type": "inherited-methods",
      "from": "getState()"
    },
    {
      "type": "inherited-methods",
      "from": "android.R.attr#state_focused"
    },
    {
      "type": "inherited-methods",
      "from": "android.R.attr#state_selected"
    },
    {
      "type": "inherited-methods",
      "from": "Region?"
    },
    {
      "type": "inherited-methods",
      "from": "getTransparentRegion()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "inflate(r: Resources, parser: XmlPullParser, attrs: AttributeSet)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "invalidateSelf()"
    },
    {
      "type": "inherited-methods",
      "from": "Callback"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isFilterBitmap()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isVisible()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "resolveOpacity(op1: Int, op2: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "getOpacity"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "scheduleSelf(what: Runnable, when: Long)"
    },
    {
      "type": "inherited-methods",
      "from": "Callback"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setBounds(left: Int, top: Int, right: Int, bottom: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setBounds(bounds: Rect)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setCallback(cb: Drawable.Callback?)"
    },
    {
      "type": "inherited-methods",
      "from": "Callback"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setChangingConfigurations(configs: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setColorFilter(color: Int, mode: PorterDuff.Mode)"
    },
    {
      "type": "inherited-methods",
      "from": "setColorFilter(android.graphics.ColorFilter)"
    },
    {
      "type": "inherited-methods",
      "from": "PorterDuffColorFilter"
    },
    {
      "type": "inherited-methods",
      "from": "tint"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setFilterBitmap(filter: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "setLayoutDirection(layoutDirection: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "setLevel(level: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "invalidateSelf"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "setState(stateSet: IntArray)"
    },
    {
      "type": "inherited-methods",
      "from": "android.R.attr#state_focused"
    },
    {
      "type": "inherited-methods",
      "from": "android.R.attr#state_pressed"
    },
    {
      "type": "inherited-methods",
      "from": "invalidateSelf"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setTint(tintColor: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "setColorFilter(int,android.graphics.PorterDuff.Mode)"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "setTintList(android.content.res.ColorStateList)"
    },
    {
      "type": "inherited-methods",
      "from": "setColorFilter(android.graphics.ColorFilter)"
    },
    {
      "type": "inherited-methods",
      "from": "setColorFilter(int,android.graphics.PorterDuff.Mode)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setTintMode(tintMode: PorterDuff.Mode?)"
    },
    {
      "type": "inherited-methods",
      "from": "PorterDuff.Mode#SRC_IN"
    },
    {
      "type": "inherited-methods",
      "from": "setColorFilter(android.graphics.ColorFilter)"
    },
    {
      "type": "inherited-methods",
      "from": "setColorFilter(int,android.graphics.PorterDuff.Mode)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "unscheduleSelf(what: Runnable)"
    },
    {
      "type": "inherited-methods",
      "from": "Callback"
    }
  ]
}