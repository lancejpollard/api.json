{
  "path": "junit.framework",
  "name": "TestCase",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()\n            No-arg constructor to enable serialization."
    },
    {
      "type": "ctor",
      "ctor": "<init>(name: String!)\n            Constructs a test case with the given name."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "countTestCases()",
      "desc": "Counts the number of test cases executed by run(TestResult result)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getName()",
      "desc": "Gets the name of a TestCase",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TestResult",
      "code": "run()",
      "desc": "A convenience method to run this test, collecting the results with a default TestResult object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "run(result: TestResult!)",
      "desc": "Runs the test case and collects the results in TestResult."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "runBare()",
      "desc": "Runs the bare test sequence."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setName(name: String!)",
      "desc": "Sets the name of a TestCase"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns a string representation of the test case"
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "TestResult",
      "code": "createResult()",
      "desc": "Creates a default TestResult object",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "runTest()",
      "desc": "Override to run the test and assert its state."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setUp()",
      "desc": "Sets up the fixture, for example, open a network connection."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "tearDown()",
      "desc": "Tears down the fixture, for example, close a network connection."
    },
    {
      "type": "inherited-methods",
      "from": "Assert"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(message: String!, expected: Any!, actual: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(expected: Any!, actual: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(message: String!, expected: String!, actual: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(expected: String!, actual: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(message: String!, expected: Double, actual: Double, delta: Double)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(expected: Double, actual: Double, delta: Double)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(message: String!, expected: Float, actual: Float, delta: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(expected: Float, actual: Float, delta: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(message: String!, expected: Long, actual: Long)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(expected: Long, actual: Long)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(message: String!, expected: Boolean, actual: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(expected: Boolean, actual: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(message: String!, expected: Byte, actual: Byte)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(expected: Byte, actual: Byte)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(message: String!, expected: Char, actual: Char)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(expected: Char, actual: Char)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(message: String!, expected: Short, actual: Short)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(expected: Short, actual: Short)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(message: String!, expected: Int, actual: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertEquals(expected: Int, actual: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertFalse(message: String!, condition: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertFalse(condition: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertNotNull(object: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertNotNull(message: String!, object: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertNotSame(message: String!, expected: Any!, actual: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertNotSame(expected: Any!, actual: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertNull(object: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "AssertionError"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertNull(message: String!, object: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertSame(message: String!, expected: Any!, actual: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertSame(expected: Any!, actual: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertTrue(message: String!, condition: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "assertTrue(condition: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "fail(message: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "fail()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "failNotEquals(message: String!, expected: Any!, actual: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "failNotSame(message: String!, expected: Any!, actual: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "failSame(message: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "String!"
    },
    {
      "type": "inherited-methods",
      "from": "format(message: String!, expected: Any!, actual: Any!)"
    }
  ]
}