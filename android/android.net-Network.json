{
  "path": "android.net",
  "name": "Network",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "bindSocket(socket: DatagramSocket!)",
      "desc": "Binds the specified DatagramSocket to this Network."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "bindSocket(socket: Socket!)",
      "desc": "Binds the specified Socket to this Network."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "bindSocket(fd: FileDescriptor!)",
      "desc": "Binds the specified FileDescriptor to this Network."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "describeContents()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Network",
      "code": "fromNetworkHandle(networkHandle: Long)",
      "desc": "Returns a Network object given a handle returned from getNetworkHandle.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getAllByName(host: String!)",
      "desc": "Operates the same as InetAddress.getAllByName except that host resolution is done on this network.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "InetAddress",
      "code": "getByName(host: String!)",
      "desc": "Operates the same as InetAddress.getByName except that host resolution is done on this network.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "getNetworkHandle()",
      "desc": "Returns a handle representing this Network, for use with the NDK API."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "SocketFactory",
      "code": "getSocketFactory()",
      "desc": "Returns a SocketFactory bound to this network.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "URLConnection",
      "code": "openConnection(url: URL!)",
      "desc": "Opens the specified URL on this Network, such that all traffic will be sent on this Network.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "URLConnection",
      "code": "openConnection(url: URL!, proxy: Proxy!)",
      "desc": "Opens the specified URL on this Network, such that all traffic will be sent on this Network.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "writeToParcel(dest: Parcel!, flags: Int)",
      "desc": ""
    },
    {
      "type": "inherited-constants",
      "from": "Parcelable"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "CONTENTS_FILE_DESCRIPTOR"
    },
    {
      "type": "inherited-constants",
      "from": "describeContents()"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "PARCELABLE_WRITE_RETURN_VALUE"
    },
    {
      "type": "inherited-constants",
      "from": "writeToParcel"
    },
    {
      "type": "inherited-constants",
      "from": "Parcelable someFunction()"
    },
    {
      "type": "inherited-constants",
      "from": "void someFunction(out Parcelable)"
    },
    {
      "type": "inherited-constants",
      "from": "void someFunction(inout Parcelable)"
    }
  ]
}