{
  "path": "javax.crypto",
  "name": "KeyAgreement",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Key",
      "code": "doPhase(key: Key!, lastPhase: Boolean)",
      "desc": "Executes the next phase of this key agreement with the given key that was received from one of the other parties involved in this key agreement.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ByteArray",
      "code": "generateSecret()",
      "desc": "Generates the shared secret and returns it in a new buffer.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "generateSecret(sharedSecret: ByteArray!, offset: Int)",
      "desc": "Generates the shared secret, and places it into the buffer sharedSecret, beginning at offset inclusive."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "SecretKey",
      "code": "generateSecret(algorithm: String!)",
      "desc": "Creates the shared secret and returns it as a SecretKey object of the specified algorithm.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getAlgorithm()",
      "desc": "Returns the algorithm name of this KeyAgreement object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "KeyAgreement",
      "code": "getInstance(algorithm: String!)",
      "desc": "Returns a KeyAgreement object that implements the specified key agreement algorithm.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "KeyAgreement",
      "code": "getInstance(algorithm: String!, provider: String!)",
      "desc": "Returns a KeyAgreement object that implements the specified key agreement algorithm.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "KeyAgreement",
      "code": "getInstance(algorithm: String!, provider: Provider!)",
      "desc": "Returns a KeyAgreement object that implements the specified key agreement algorithm.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Provider",
      "code": "getProvider()",
      "desc": "Returns the provider of this KeyAgreement object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "init(key: Key!)",
      "desc": "Initializes this key agreement with the given key, which is required to contain all the algorithm parameters required for this key agreement."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "init(key: Key!, random: SecureRandom!)",
      "desc": "Initializes this key agreement with the given key and source of randomness."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "init(key: Key!, params: AlgorithmParameterSpec!)",
      "desc": "Initializes this key agreement with the given key and set of algorithm parameters."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "init(key: Key!, params: AlgorithmParameterSpec!, random: SecureRandom!)",
      "desc": "Initializes this key agreement with the given key, set of algorithm parameters, and source of randomness."
    }
  ]
}