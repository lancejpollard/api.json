{
  "path": "android.telephony",
  "name": "ServiceState",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DUPLEX_MODE_FDD",
      "desc": "Duplex mode for the phone is frequency-division duplexing."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DUPLEX_MODE_TDD",
      "desc": "Duplex mode for the phone is time-division duplexing."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DUPLEX_MODE_UNKNOWN",
      "desc": "Duplex mode for the phone is unknown."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "STATE_EMERGENCY_ONLY",
      "desc": "The phone is registered and locked."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "STATE_IN_SERVICE",
      "desc": "Normal operation condition, the phone is registered with an operator either in home network or in roaming."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "STATE_OUT_OF_SERVICE",
      "desc": "Phone is not registered with any operator, the phone can be currently searching a new operator to register to, or not searching to registration at all, or registration is denied, or radio signal is not available."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "STATE_POWER_OFF",
      "desc": "Radio of telephony is explicitly powered off."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "UNKNOWN_ID",
      "desc": "Unknown ID."
    },
    {
      "type": "ctor",
      "ctor": "<init>()\n            Empty constructor"
    },
    {
      "type": "ctor",
      "ctor": "<init>(s: ServiceState!)\n            Copy constructors"
    },
    {
      "type": "ctor",
      "ctor": "<init>(in: Parcel!)\n            Construct a ServiceState object from the given parcel."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "describeContents()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getCdmaNetworkId()",
      "desc": "Get the CDMA NID (Network Identification Number), a number uniquely identifying a network within a wireless system."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getCdmaSystemId()",
      "desc": "Get the CDMA SID (System Identification Number), a number uniquely identifying a wireless system."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "IntArray",
      "code": "getCellBandwidths()",
      "desc": "Get an array of cell bandwidths (kHz) for the current serving cells",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getChannelNumber()",
      "desc": "Get the channel number of the current primary serving cell, or -1 if unknown"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getDuplexMode()",
      "desc": "Get the current duplex mode"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getIsManualSelection()",
      "desc": "Get current network selection mode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableList",
      "code": "getNetworkRegistrationInfoList()",
      "desc": "Get all of the available network registration info.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getOperatorAlphaLong()",
      "desc": "Get current registered operator name in long alphanumeric format.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getOperatorAlphaShort()",
      "desc": "Get current registered operator name in short alphanumeric format.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getOperatorNumeric()",
      "desc": "Get current registered operator numeric id.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getRoaming()",
      "desc": "Get current roaming indicator of phone (note: not just decoding from TS 27.007 7.2)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getState()",
      "desc": "Get current voice service state"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isSearching()",
      "desc": "This indicates whether the device is searching for service."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setIsManualSelection(isManual: Boolean)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOperatorName(longName: String!, shortName: String!, numeric: String!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setRoaming(roaming: Boolean)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setState(state: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setStateOff()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setStateOutOfService()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "writeToParcel(out: Parcel!, flags: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "copyFrom(s: ServiceState!)",
      "desc": ""
    },
    {
      "type": "inherited-constants",
      "from": "Parcelable"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "CONTENTS_FILE_DESCRIPTOR"
    },
    {
      "type": "inherited-constants",
      "from": "describeContents()"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "PARCELABLE_WRITE_RETURN_VALUE"
    },
    {
      "type": "inherited-constants",
      "from": "writeToParcel"
    },
    {
      "type": "inherited-constants",
      "from": "Parcelable someFunction()"
    },
    {
      "type": "inherited-constants",
      "from": "void someFunction(out Parcelable)"
    },
    {
      "type": "inherited-constants",
      "from": "void someFunction(inout Parcelable)"
    }
  ]
}