{
  "path": "java.security",
  "name": "DigestInputStream",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(stream: InputStream!, digest: MessageDigest!)\n            Creates a digest input stream, using the specified input stream and message digest."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MessageDigest",
      "code": "getMessageDigest()",
      "desc": "Returns the message digest associated with this stream.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "on(on: Boolean)",
      "desc": "Turns the digest function on or off."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "read()",
      "desc": "Reads a byte, and updates the message digest (if the digest function is on)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "read(b: ByteArray!, off: Int, len: Int)",
      "desc": "Reads into a byte array, and updates the message digest (if the digest function is on)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMessageDigest(digest: MessageDigest!)",
      "desc": "Associates the specified message digest with this stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": "Prints a string representation of this digest input stream and its associated message digest object."
    },
    {
      "type": "inherited-methods",
      "from": "FilterInputStream"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "available()"
    },
    {
      "type": "inherited-methods",
      "from": "in"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "close()"
    },
    {
      "type": "inherited-methods",
      "from": "in.close()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "mark(readlimit: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "reset"
    },
    {
      "type": "inherited-methods",
      "from": "readlimit"
    },
    {
      "type": "inherited-methods",
      "from": "in.mark(readlimit)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "markSupported()"
    },
    {
      "type": "inherited-methods",
      "from": "mark"
    },
    {
      "type": "inherited-methods",
      "from": "reset"
    },
    {
      "type": "inherited-methods",
      "from": "in.markSupported()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "read(b: ByteArray!)"
    },
    {
      "type": "inherited-methods",
      "from": "byte.length"
    },
    {
      "type": "inherited-methods",
      "from": "read(b, 0, b.length)"
    },
    {
      "type": "inherited-methods",
      "from": "in.read(b)"
    },
    {
      "type": "inherited-methods",
      "from": "FilterInputStream"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "reset()"
    },
    {
      "type": "inherited-methods",
      "from": "mark"
    },
    {
      "type": "inherited-methods",
      "from": "in.reset()"
    },
    {
      "type": "inherited-methods",
      "from": "Long"
    },
    {
      "type": "inherited-methods",
      "from": "skip(n: Long)"
    },
    {
      "type": "inherited-methods",
      "from": "n"
    },
    {
      "type": "inherited-methods",
      "from": "skip"
    },
    {
      "type": "inherited-methods",
      "from": "0"
    },
    {
      "type": "inherited-methods",
      "from": "in.skip(n)"
    }
  ]
}