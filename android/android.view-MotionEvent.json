{
  "path": "android.view",
  "name": "MotionEvent",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_BUTTON_PRESS",
      "desc": "Constant for getActionMasked: A button has been pressed."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_BUTTON_RELEASE",
      "desc": "Constant for getActionMasked: A button has been released."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_CANCEL",
      "desc": "Constant for getActionMasked: The current gesture has been aborted."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_DOWN",
      "desc": "Constant for getActionMasked: A pressed gesture has started, the motion contains the initial starting location."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_HOVER_ENTER",
      "desc": "Constant for getActionMasked: The pointer is not down but has entered the boundaries of a window or view."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_HOVER_EXIT",
      "desc": "Constant for getActionMasked: The pointer is not down but has exited the boundaries of a window or view."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_HOVER_MOVE",
      "desc": "Constant for getActionMasked: A change happened but the pointer is not down (unlike ACTION_MOVE)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_MASK",
      "desc": "Bit mask of the parts of the action code that are the action itself."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_MOVE",
      "desc": "Constant for getActionMasked: A change has happened during a press gesture (between ACTION_DOWN and ACTION_UP)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_OUTSIDE",
      "desc": "Constant for getActionMasked: A movement has happened outside of the normal bounds of the UI element."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_POINTER_1_DOWN",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_POINTER_1_UP",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_POINTER_2_DOWN",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_POINTER_2_UP",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_POINTER_3_DOWN",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_POINTER_3_UP",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_POINTER_DOWN",
      "desc": "Constant for getActionMasked: A non-primary pointer has gone down."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_POINTER_ID_MASK",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_POINTER_ID_SHIFT",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_POINTER_INDEX_MASK",
      "desc": "Bits in the action code that represent a pointer index, used with ACTION_POINTER_DOWN and ACTION_POINTER_UP."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_POINTER_INDEX_SHIFT",
      "desc": "Bit shift for the action bits holding the pointer index as defined by ACTION_POINTER_INDEX_MASK."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_POINTER_UP",
      "desc": "Constant for getActionMasked: A non-primary pointer has gone up."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_SCROLL",
      "desc": "Constant for getActionMasked: The motion event contains relative vertical and/or horizontal scroll offsets."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACTION_UP",
      "desc": "Constant for getActionMasked: A pressed gesture has finished, the motion contains the final release location as well as any intermediate points since the last down or move event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_BRAKE",
      "desc": "Axis constant: Brake axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_DISTANCE",
      "desc": "Axis constant: Distance axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_GAS",
      "desc": "Axis constant: Gas axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_GENERIC_1",
      "desc": "Axis constant: Generic 1 axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_GENERIC_10",
      "desc": "Axis constant: Generic 10 axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_GENERIC_11",
      "desc": "Axis constant: Generic 11 axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_GENERIC_12",
      "desc": "Axis constant: Generic 12 axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_GENERIC_13",
      "desc": "Axis constant: Generic 13 axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_GENERIC_14",
      "desc": "Axis constant: Generic 14 axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_GENERIC_15",
      "desc": "Axis constant: Generic 15 axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_GENERIC_16",
      "desc": "Axis constant: Generic 16 axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_GENERIC_2",
      "desc": "Axis constant: Generic 2 axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_GENERIC_3",
      "desc": "Axis constant: Generic 3 axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_GENERIC_4",
      "desc": "Axis constant: Generic 4 axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_GENERIC_5",
      "desc": "Axis constant: Generic 5 axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_GENERIC_6",
      "desc": "Axis constant: Generic 6 axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_GENERIC_7",
      "desc": "Axis constant: Generic 7 axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_GENERIC_8",
      "desc": "Axis constant: Generic 8 axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_GENERIC_9",
      "desc": "Axis constant: Generic 9 axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_HAT_X",
      "desc": "Axis constant: Hat X axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_HAT_Y",
      "desc": "Axis constant: Hat Y axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_HSCROLL",
      "desc": "Axis constant: Horizontal Scroll axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_LTRIGGER",
      "desc": "Axis constant: Left Trigger axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_ORIENTATION",
      "desc": "Axis constant: Orientation axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_PRESSURE",
      "desc": "Axis constant: Pressure axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_RELATIVE_X",
      "desc": "Axis constant: The movement of x position of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_RELATIVE_Y",
      "desc": "Axis constant: The movement of y position of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_RTRIGGER",
      "desc": "Axis constant: Right Trigger axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_RUDDER",
      "desc": "Axis constant: Rudder axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_RX",
      "desc": "Axis constant: X Rotation axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_RY",
      "desc": "Axis constant: Y Rotation axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_RZ",
      "desc": "Axis constant: Z Rotation axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_SCROLL",
      "desc": "Axis constant: Generic scroll axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_SIZE",
      "desc": "Axis constant: Size axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_THROTTLE",
      "desc": "Axis constant: Throttle axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_TILT",
      "desc": "Axis constant: Tilt axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_TOOL_MAJOR",
      "desc": "Axis constant: ToolMajor axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_TOOL_MINOR",
      "desc": "Axis constant: ToolMinor axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_TOUCH_MAJOR",
      "desc": "Axis constant: TouchMajor axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_TOUCH_MINOR",
      "desc": "Axis constant: TouchMinor axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_VSCROLL",
      "desc": "Axis constant: Vertical Scroll axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_WHEEL",
      "desc": "Axis constant: Wheel axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_X",
      "desc": "Axis constant: X axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_Y",
      "desc": "Axis constant: Y axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AXIS_Z",
      "desc": "Axis constant: Z axis of a motion event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "BUTTON_BACK",
      "desc": "Button constant: Back button pressed (mouse back button)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "BUTTON_FORWARD",
      "desc": "Button constant: Forward button pressed (mouse forward button)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "BUTTON_PRIMARY",
      "desc": "Button constant: Primary button (left mouse button)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "BUTTON_SECONDARY",
      "desc": "Button constant: Secondary button (right mouse button)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "BUTTON_STYLUS_PRIMARY",
      "desc": "Button constant: Primary stylus button pressed."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "BUTTON_STYLUS_SECONDARY",
      "desc": "Button constant: Secondary stylus button pressed."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "BUTTON_TERTIARY",
      "desc": "Button constant: Tertiary button (middle mouse button)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "CLASSIFICATION_AMBIGUOUS_GESTURE",
      "desc": "Classification constant: Ambiguous gesture."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "CLASSIFICATION_DEEP_PRESS",
      "desc": "Classification constant: Deep press."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "CLASSIFICATION_NONE",
      "desc": "Classification constant: None."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "EDGE_BOTTOM",
      "desc": "Flag indicating the motion event intersected the bottom edge of the screen."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "EDGE_LEFT",
      "desc": "Flag indicating the motion event intersected the left edge of the screen."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "EDGE_RIGHT",
      "desc": "Flag indicating the motion event intersected the right edge of the screen."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "EDGE_TOP",
      "desc": "Flag indicating the motion event intersected the top edge of the screen."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_WINDOW_IS_OBSCURED",
      "desc": "This flag indicates that the window that received this motion event is partly or wholly obscured by another visible window above it."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_WINDOW_IS_PARTIALLY_OBSCURED",
      "desc": "This flag indicates that the window that received this motion event is partly or wholly obscured by another visible window above it."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "INVALID_POINTER_ID",
      "desc": "An invalid pointer id."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TOOL_TYPE_ERASER",
      "desc": "Tool type constant: The tool is an eraser or a stylus being used in an inverted posture."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TOOL_TYPE_FINGER",
      "desc": "Tool type constant: The tool is a finger."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TOOL_TYPE_MOUSE",
      "desc": "Tool type constant: The tool is a mouse."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TOOL_TYPE_STYLUS",
      "desc": "Tool type constant: The tool is a stylus."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TOOL_TYPE_UNKNOWN",
      "desc": "Tool type constant: Unknown tool type."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "String",
      "code": "actionToString(action: Int)",
      "desc": "Returns a string that represents the symbolic name of the specified unmasked action such as \"ACTION_DOWN\", \"ACTION_POINTER_DOWN(3)\" or an equivalent numeric constant such as \"35\" if unknown.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "addBatch(eventTime: Long, x: Float, y: Float, pressure: Float, size: Float, metaState: Int)",
      "desc": "Add a new movement to the batch of movements in this event."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "addBatch(eventTime: Long, pointerCoords: Array<MotionEvent.PointerCoords!>!, metaState: Int)",
      "desc": "Add a new movement to the batch of movements in this event."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "axisFromString(symbolicName: String!)",
      "desc": "Gets an axis by its symbolic name such as \"AXIS_X\" or an equivalent numeric constant such as \"42\"."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "String",
      "code": "axisToString(axis: Int)",
      "desc": "Returns a string that represents the symbolic name of the specified axis such as \"AXIS_X\" or an equivalent numeric constant such as \"42\" if unknown.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "findPointerIndex(pointerId: Int)",
      "desc": "Given a pointer identifier, find the index of its data in the event."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getAction()",
      "desc": "Return the kind of action being performed."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getActionButton()",
      "desc": "Gets which button has been modified during a press or release action."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getActionIndex()",
      "desc": "For ACTION_POINTER_DOWN or ACTION_POINTER_UP as returned by getActionMasked, this returns the associated pointer index."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getActionMasked()",
      "desc": "Return the masked action being performed, without pointer index information."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getAxisValue(axis: Int)",
      "desc": "getAxisValue(int) for the first pointer index (may be an arbitrary pointer identifier)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getAxisValue(axis: Int, pointerIndex: Int)",
      "desc": "Returns the value of the requested axis for the given pointer index (use getPointerId(int) to find the pointer identifier for this index)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getButtonState()",
      "desc": "Gets the state of all buttons that are pressed such as a mouse or stylus button."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getClassification()",
      "desc": "Returns the classification for the current gesture."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getDeviceId()",
      "desc": "Gets the id for the device that this event came from."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "getDownTime()",
      "desc": "Returns the time (in ms) when the user originally pressed down to start a stream of position events."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getEdgeFlags()",
      "desc": "Returns a bitfield indicating which edges, if any, were touched by this MotionEvent."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "getEventTime()",
      "desc": "Retrieve the time this event occurred, in the android.os.SystemClock#uptimeMillis time base."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getFlags()",
      "desc": "Gets the motion event flags."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getHistoricalAxisValue(axis: Int, pos: Int)",
      "desc": "getHistoricalAxisValue(int,int,int) for the first pointer index (may be an arbitrary pointer identifier)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getHistoricalAxisValue(axis: Int, pointerIndex: Int, pos: Int)",
      "desc": "Returns the historical value of the requested axis, as per getAxisValue(int,int), occurred between this event and the previous event for the given pointer."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "getHistoricalEventTime(pos: Int)",
      "desc": "Returns the time that a historical movement occurred between this event and the previous event, in the android.os.SystemClock#uptimeMillis time base."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getHistoricalOrientation(pos: Int)",
      "desc": "getHistoricalOrientation(int,int) for the first pointer index (may be an arbitrary pointer identifier)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getHistoricalOrientation(pointerIndex: Int, pos: Int)",
      "desc": "Returns a historical orientation coordinate, as per getOrientation(int), that occurred between this event and the previous event for the given pointer."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "getHistoricalPointerCoords(pointerIndex: Int, pos: Int, outPointerCoords: MotionEvent.PointerCoords!)",
      "desc": "Populates a PointerCoords object with historical pointer coordinate data, as per getPointerCoords, that occurred between this event and the previous event for the given pointer."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getHistoricalPressure(pos: Int)",
      "desc": "getHistoricalPressure(int,int) for the first pointer index (may be an arbitrary pointer identifier)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getHistoricalPressure(pointerIndex: Int, pos: Int)",
      "desc": "Returns a historical pressure coordinate, as per getPressure(int), that occurred between this event and the previous event for the given pointer."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getHistoricalSize(pos: Int)",
      "desc": "getHistoricalSize(int,int) for the first pointer index (may be an arbitrary pointer identifier)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getHistoricalSize(pointerIndex: Int, pos: Int)",
      "desc": "Returns a historical size coordinate, as per getSize(int), that occurred between this event and the previous event for the given pointer."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getHistoricalToolMajor(pos: Int)",
      "desc": "getHistoricalToolMajor(int,int) for the first pointer index (may be an arbitrary pointer identifier)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getHistoricalToolMajor(pointerIndex: Int, pos: Int)",
      "desc": "Returns a historical tool major axis coordinate, as per getToolMajor(int), that occurred between this event and the previous event for the given pointer."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getHistoricalToolMinor(pos: Int)",
      "desc": "getHistoricalToolMinor(int,int) for the first pointer index (may be an arbitrary pointer identifier)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getHistoricalToolMinor(pointerIndex: Int, pos: Int)",
      "desc": "Returns a historical tool minor axis coordinate, as per getToolMinor(int), that occurred between this event and the previous event for the given pointer."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getHistoricalTouchMajor(pos: Int)",
      "desc": "getHistoricalTouchMajor(int,int) for the first pointer index (may be an arbitrary pointer identifier)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getHistoricalTouchMajor(pointerIndex: Int, pos: Int)",
      "desc": "Returns a historical touch major axis coordinate, as per getTouchMajor(int), that occurred between this event and the previous event for the given pointer."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getHistoricalTouchMinor(pos: Int)",
      "desc": "getHistoricalTouchMinor(int,int) for the first pointer index (may be an arbitrary pointer identifier)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getHistoricalTouchMinor(pointerIndex: Int, pos: Int)",
      "desc": "Returns a historical touch minor axis coordinate, as per getTouchMinor(int), that occurred between this event and the previous event for the given pointer."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getHistoricalX(pos: Int)",
      "desc": "getHistoricalX(int,int) for the first pointer index (may be an arbitrary pointer identifier)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getHistoricalX(pointerIndex: Int, pos: Int)",
      "desc": "Returns a historical X coordinate, as per getX(int), that occurred between this event and the previous event for the given pointer."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getHistoricalY(pos: Int)",
      "desc": "getHistoricalY(int,int) for the first pointer index (may be an arbitrary pointer identifier)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getHistoricalY(pointerIndex: Int, pos: Int)",
      "desc": "Returns a historical Y coordinate, as per getY(int), that occurred between this event and the previous event for the given pointer."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getHistorySize()",
      "desc": "Returns the number of historical points in this event."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getMetaState()",
      "desc": "Returns the state of any meta / modifier keys that were in effect when the event was generated."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getOrientation()",
      "desc": "getOrientation(int) for the first pointer index (may be an arbitrary pointer identifier)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getOrientation(pointerIndex: Int)",
      "desc": "Returns the orientation of the touch area and tool area in radians clockwise from vertical for the given pointer index (use getPointerId(int) to find the pointer identifier for this index)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "getPointerCoords(pointerIndex: Int, outPointerCoords: MotionEvent.PointerCoords!)",
      "desc": "Populates a PointerCoords object with pointer coordinate data for the specified pointer index."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getPointerCount()",
      "desc": "The number of pointers of data contained in this event."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getPointerId(pointerIndex: Int)",
      "desc": "Return the pointer identifier associated with a particular pointer data index in this event."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "getPointerProperties(pointerIndex: Int, outPointerProperties: MotionEvent.PointerProperties!)",
      "desc": "Populates a PointerProperties object with pointer properties for the specified pointer index."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getPressure()",
      "desc": "getPressure(int) for the first pointer index (may be an arbitrary pointer identifier)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getPressure(pointerIndex: Int)",
      "desc": "Returns the current pressure of this event for the given pointer index (use getPointerId(int) to find the pointer identifier for this index)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getRawX()",
      "desc": "Returns the original raw X coordinate of this event."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getRawX(pointerIndex: Int)",
      "desc": "Returns the original raw X coordinate of this event."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getRawY()",
      "desc": "Returns the original raw Y coordinate of this event."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getRawY(pointerIndex: Int)",
      "desc": "Returns the original raw Y coordinate of this event."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getSize()",
      "desc": "getSize(int) for the first pointer index (may be an arbitrary pointer identifier)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getSize(pointerIndex: Int)",
      "desc": "Returns a scaled value of the approximate size for the given pointer index (use getPointerId(int) to find the pointer identifier for this index)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getSource()",
      "desc": "Gets the source of the event."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getToolMajor()",
      "desc": "getToolMajor(int) for the first pointer index (may be an arbitrary pointer identifier)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getToolMajor(pointerIndex: Int)",
      "desc": "Returns the length of the major axis of an ellipse that describes the size of the approaching tool for the given pointer index (use getPointerId(int) to find the pointer identifier for this index)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getToolMinor()",
      "desc": "getToolMinor(int) for the first pointer index (may be an arbitrary pointer identifier)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getToolMinor(pointerIndex: Int)",
      "desc": "Returns the length of the minor axis of an ellipse that describes the size of the approaching tool for the given pointer index (use getPointerId(int) to find the pointer identifier for this index)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getToolType(pointerIndex: Int)",
      "desc": "Gets the tool type of a pointer for the given pointer index."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getTouchMajor()",
      "desc": "getTouchMajor(int) for the first pointer index (may be an arbitrary pointer identifier)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getTouchMajor(pointerIndex: Int)",
      "desc": "Returns the length of the major axis of an ellipse that describes the touch area at the point of contact for the given pointer index (use getPointerId(int) to find the pointer identifier for this index)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getTouchMinor()",
      "desc": "getTouchMinor(int) for the first pointer index (may be an arbitrary pointer identifier)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getTouchMinor(pointerIndex: Int)",
      "desc": "Returns the length of the minor axis of an ellipse that describes the touch area at the point of contact for the given pointer index (use getPointerId(int) to find the pointer identifier for this index)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getX()",
      "desc": "getX(int) for the first pointer index (may be an arbitrary pointer identifier)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getX(pointerIndex: Int)",
      "desc": "Returns the X coordinate of this event for the given pointer index (use getPointerId(int) to find the pointer identifier for this index)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getXPrecision()",
      "desc": "Return the precision of the X coordinates being reported."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getY()",
      "desc": "getY(int) for the first pointer index (may be an arbitrary pointer identifier)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getY(pointerIndex: Int)",
      "desc": "Returns the Y coordinate of this event for the given pointer index (use getPointerId(int) to find the pointer identifier for this index)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getYPrecision()",
      "desc": "Return the precision of the Y coordinates being reported."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isButtonPressed(button: Int)",
      "desc": "Checks if a mouse or stylus button (or combination of buttons) is pressed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "MotionEvent",
      "code": "obtain(downTime: Long, eventTime: Long, action: Int, pointerCount: Int, pointerProperties: Array<MotionEvent.PointerProperties!>!, pointerCoords: Array<MotionEvent.PointerCoords!>!, metaState: Int, buttonState: Int, xPrecision: Float, yPrecision: Float, deviceId: Int, edgeFlags: Int, source: Int, flags: Int)",
      "desc": "Create a new MotionEvent, filling in all of the basic values that define the motion.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "MotionEvent",
      "code": "obtain(downTime: Long, eventTime: Long, action: Int, pointerCount: Int, pointerIds: IntArray!, pointerCoords: Array<MotionEvent.PointerCoords!>!, metaState: Int, xPrecision: Float, yPrecision: Float, deviceId: Int, edgeFlags: Int, source: Int, flags: Int)",
      "desc": "Create a new MotionEvent, filling in all of the basic values that define the motion.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "MotionEvent",
      "code": "obtain(downTime: Long, eventTime: Long, action: Int, x: Float, y: Float, pressure: Float, size: Float, metaState: Int, xPrecision: Float, yPrecision: Float, deviceId: Int, edgeFlags: Int)",
      "desc": "Create a new MotionEvent, filling in all of the basic values that define the motion.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "MotionEvent",
      "code": "obtain(downTime: Long, eventTime: Long, action: Int, pointerCount: Int, x: Float, y: Float, pressure: Float, size: Float, metaState: Int, xPrecision: Float, yPrecision: Float, deviceId: Int, edgeFlags: Int)",
      "desc": "Create a new MotionEvent, filling in all of the basic values that define the motion.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "MotionEvent",
      "code": "obtain(downTime: Long, eventTime: Long, action: Int, x: Float, y: Float, metaState: Int)",
      "desc": "Create a new MotionEvent, filling in a subset of the basic motion values.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "MotionEvent",
      "code": "obtain(other: MotionEvent!)",
      "desc": "Create a new MotionEvent, copying from an existing one.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "MotionEvent",
      "code": "obtainNoHistory(other: MotionEvent!)",
      "desc": "Create a new MotionEvent, copying from an existing one, but not including any historical point information.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "offsetLocation(deltaX: Float, deltaY: Float)",
      "desc": "Adjust this event's location."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "recycle()",
      "desc": "Recycle the MotionEvent, to be re-used by a later caller."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setAction(action: Int)",
      "desc": "Sets this event's action."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setEdgeFlags(flags: Int)",
      "desc": "Sets the bitfield indicating which edges, if any, were touched by this MotionEvent."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setLocation(x: Float, y: Float)",
      "desc": "Set this event's location."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setSource(source: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "transform(matrix: Matrix!)",
      "desc": "Applies a transformation matrix to all of the points in the event."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "writeToParcel(out: Parcel!, flags: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "identifier": "Unit",
      "code": "finalize()",
      "desc": ""
    },
    {
      "type": "inherited-constants",
      "from": "Parcelable"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "CONTENTS_FILE_DESCRIPTOR"
    },
    {
      "type": "inherited-constants",
      "from": "describeContents()"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "PARCELABLE_WRITE_RETURN_VALUE"
    },
    {
      "type": "inherited-constants",
      "from": "writeToParcel"
    },
    {
      "type": "inherited-constants",
      "from": "Parcelable someFunction()"
    },
    {
      "type": "inherited-constants",
      "from": "void someFunction(out Parcelable)"
    },
    {
      "type": "inherited-constants",
      "from": "void someFunction(inout Parcelable)"
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "code": "PointerCoords",
      "desc": "Transfer object for pointer coordinates."
    },
    {
      "type": "nested-classes",
      "code": "PointerProperties",
      "desc": "Transfer object for pointer properties."
    },
    {
      "type": "inherited-methods",
      "from": "InputEvent"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "describeContents()"
    },
    {
      "type": "inherited-methods",
      "from": "InputDevice!"
    },
    {
      "type": "inherited-methods",
      "from": "getDevice()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isFromSource(source: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Parcelable"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "writeToParcel(dest: Parcel!, flags: Int)"
    }
  ]
}