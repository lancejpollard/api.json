{
  "path": "android.net",
  "name": "Ikev2VpnProfile",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "equals(other:Â Any?)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MutableList",
      "code": "getAllowedAlgorithms()",
      "desc": "Returns all the algorithms allowed by this VPN profile.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getMaxMtu()",
      "desc": "Retrieves the maximum MTU set for this VPN profile."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getPassword()",
      "desc": "Retrieves the password.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ByteArray",
      "code": "getPresharedKey()",
      "desc": "Retrieves the pre-shared key.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ProxyInfo",
      "code": "getProxyInfo()",
      "desc": "Retrieves the proxy information if any was set",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "PrivateKey",
      "code": "getRsaPrivateKey()",
      "desc": "Retrieves the RSA private key.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getServerAddr()",
      "desc": "Retrieves the server address string."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "X509Certificate",
      "code": "getServerRootCaCert()",
      "desc": "Retrieves the certificate for the server's root CA.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "X509Certificate",
      "code": "getUserCert()",
      "desc": "Retrieves the user certificate, if any was set.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getUserIdentity()",
      "desc": "Retrieves the user identity."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getUsername()",
      "desc": "Retrieves the username.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isBypassable()",
      "desc": "Returns whether or not the VPN profile should be bypassable."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isMetered()",
      "desc": "Returns whether or not the VPN profile should be always considered metered."
    },
    {
      "type": "inherited-constants",
      "from": "PlatformVpnProfile"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TYPE_IKEV2_IPSEC_PSK"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TYPE_IKEV2_IPSEC_RSA"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TYPE_IKEV2_IPSEC_USER_PASS"
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "code": "Builder",
      "desc": "A incremental builder for IKEv2 VPN profiles"
    },
    {
      "type": "inherited-methods",
      "from": "PlatformVpnProfile"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getType()"
    },
    {
      "type": "inherited-methods",
      "from": "String"
    },
    {
      "type": "inherited-methods",
      "from": "getTypeString()"
    }
  ]
}