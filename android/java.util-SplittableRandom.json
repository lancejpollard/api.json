{
  "path": "java.util",
  "name": "SplittableRandom",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(seed: Long)\n            Creates a new SplittableRandom instance using the specified initial seed."
    },
    {
      "type": "ctor",
      "ctor": "<init>()\n            Creates a new SplittableRandom instance that is likely to generate sequences of values that are statistically independent of those of any other instances in the current program; and may, and typically does, vary across program invocations."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "DoubleStream",
      "code": "doubles(streamSize: Long)",
      "desc": "Returns a stream producing the given streamSize number of pseudorandom double values from this generator and/or one split from it; each value is between zero (inclusive) and one (exclusive).",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "DoubleStream",
      "code": "doubles()",
      "desc": "Returns an effectively unlimited stream of pseudorandom double values from this generator and/or one split from it; each value is between zero (inclusive) and one (exclusive).",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "DoubleStream",
      "code": "doubles(streamSize: Long, randomNumberOrigin: Double, randomNumberBound: Double)",
      "desc": "Returns a stream producing the given streamSize number of pseudorandom double values from this generator and/or one split from it; each value conforms to the given origin (inclusive) and bound (exclusive).",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "DoubleStream",
      "code": "doubles(randomNumberOrigin: Double, randomNumberBound: Double)",
      "desc": "Returns an effectively unlimited stream of pseudorandom double values from this generator and/or one split from it; each value conforms to the given origin (inclusive) and bound (exclusive).",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "IntStream",
      "code": "ints(streamSize: Long)",
      "desc": "Returns a stream producing the given streamSize number of pseudorandom int values from this generator and/or one split from it.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "IntStream",
      "code": "ints()",
      "desc": "Returns an effectively unlimited stream of pseudorandom int values from this generator and/or one split from it.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "IntStream",
      "code": "ints(streamSize: Long, randomNumberOrigin: Int, randomNumberBound: Int)",
      "desc": "Returns a stream producing the given streamSize number of pseudorandom int values from this generator and/or one split from it; each value conforms to the given origin (inclusive) and bound (exclusive).",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "IntStream",
      "code": "ints(randomNumberOrigin: Int, randomNumberBound: Int)",
      "desc": "Returns an effectively unlimited stream of pseudorandom int values from this generator and/or one split from it; each value conforms to the given origin (inclusive) and bound (exclusive).",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "LongStream",
      "code": "longs(streamSize: Long)",
      "desc": "Returns a stream producing the given streamSize number of pseudorandom long values from this generator and/or one split from it.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "LongStream",
      "code": "longs()",
      "desc": "Returns an effectively unlimited stream of pseudorandom long values from this generator and/or one split from it.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "LongStream",
      "code": "longs(streamSize: Long, randomNumberOrigin: Long, randomNumberBound: Long)",
      "desc": "Returns a stream producing the given streamSize number of pseudorandom long values from this generator and/or one split from it; each value conforms to the given origin (inclusive) and bound (exclusive).",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "LongStream",
      "code": "longs(randomNumberOrigin: Long, randomNumberBound: Long)",
      "desc": "Returns an effectively unlimited stream of pseudorandom long values from this generator and/or one split from it; each value conforms to the given origin (inclusive) and bound (exclusive).",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "nextBoolean()",
      "desc": "Returns a pseudorandom boolean value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Double",
      "code": "nextDouble()",
      "desc": "Returns a pseudorandom double value between zero (inclusive) and one (exclusive)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Double",
      "code": "nextDouble(bound: Double)",
      "desc": "Returns a pseudorandom double value between 0."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Double",
      "code": "nextDouble(origin: Double, bound: Double)",
      "desc": "Returns a pseudorandom double value between the specified origin (inclusive) and bound (exclusive)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "nextInt()",
      "desc": "Returns a pseudorandom int value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "nextInt(bound: Int)",
      "desc": "Returns a pseudorandom int value between zero (inclusive) and the specified bound (exclusive)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "nextInt(origin: Int, bound: Int)",
      "desc": "Returns a pseudorandom int value between the specified origin (inclusive) and the specified bound (exclusive)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "nextLong()",
      "desc": "Returns a pseudorandom long value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "nextLong(bound: Long)",
      "desc": "Returns a pseudorandom long value between zero (inclusive) and the specified bound (exclusive)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "nextLong(origin: Long, bound: Long)",
      "desc": "Returns a pseudorandom long value between the specified origin (inclusive) and the specified bound (exclusive)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "SplittableRandom",
      "code": "split()",
      "desc": "Constructs and returns a new SplittableRandom instance that shares no mutable state with this instance.",
      "symbol": "!"
    }
  ]
}