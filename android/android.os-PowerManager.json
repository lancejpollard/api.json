{
  "path": "android.os",
  "name": "PowerManager",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ACQUIRE_CAUSES_WAKEUP",
      "desc": "Wake lock flag: Turn the screen on when the wake lock is acquired."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_DEVICE_IDLE_MODE_CHANGED",
      "desc": "Intent that is broadcast when the state of isDeviceIdleMode() changes."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_POWER_SAVE_MODE_CHANGED",
      "desc": "Intent that is broadcast when the state of isPowerSaveMode() changes."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FULL_WAKE_LOCK",
      "desc": "Wake lock level: Ensures that the screen and keyboard backlight are on at full brightness."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "LOCATION_MODE_ALL_DISABLED_WHEN_SCREEN_OFF",
      "desc": "All location providers should be disabled when battery saver is on and the device is non-interactive."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "LOCATION_MODE_FOREGROUND_ONLY",
      "desc": "In this mode, all the location providers will be kept available, but location fixes should only be provided to foreground apps."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "LOCATION_MODE_GPS_DISABLED_WHEN_SCREEN_OFF",
      "desc": "In this mode, the GPS based location provider should be disabled when battery saver is on and the device is non-interactive."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "LOCATION_MODE_NO_CHANGE",
      "desc": "Either the location providers shouldn't be affected by battery saver, or battery saver is off."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "LOCATION_MODE_THROTTLE_REQUESTS_WHEN_SCREEN_OFF",
      "desc": "In this mode, location will not be turned off, but LocationManager will throttle all requests to providers when the device is non-interactive."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ON_AFTER_RELEASE",
      "desc": "Wake lock flag: When this wake lock is released, poke the user activity timer so the screen stays on for a little longer."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PARTIAL_WAKE_LOCK",
      "desc": "Wake lock level: Ensures that the CPU is running; the screen and keyboard backlight will be allowed to go off."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PROXIMITY_SCREEN_OFF_WAKE_LOCK",
      "desc": "Wake lock level: Turns the screen off when the proximity sensor activates."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "RELEASE_FLAG_WAIT_FOR_NO_PROXIMITY",
      "desc": "Flag for WakeLock#release: Defer releasing a PROXIMITY_SCREEN_OFF_WAKE_LOCK wake lock until the proximity sensor indicates that an object is not in close proximity."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SCREEN_BRIGHT_WAKE_LOCK",
      "desc": "Wake lock level: Ensures that the screen is on at full brightness; the keyboard backlight will be allowed to go off."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SCREEN_DIM_WAKE_LOCK",
      "desc": "Wake lock level: Ensures that the screen is on (but may be dimmed); the keyboard backlight will be allowed to go off."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "THERMAL_STATUS_CRITICAL",
      "desc": "Thermal status code: Platform has done everything to reduce power."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "THERMAL_STATUS_EMERGENCY",
      "desc": "Thermal status code: Key components in platform are shutting down due to thermal condition."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "THERMAL_STATUS_LIGHT",
      "desc": "Thermal status code: Light throttling where UX is not impacted."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "THERMAL_STATUS_MODERATE",
      "desc": "Thermal status code: Moderate throttling where UX is not largely impacted."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "THERMAL_STATUS_NONE",
      "desc": "Thermal status code: Not under throttling."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "THERMAL_STATUS_SEVERE",
      "desc": "Thermal status code: Severe throttling where UX is largely impacted."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "THERMAL_STATUS_SHUTDOWN",
      "desc": "Thermal status code: Need shutdown immediately."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "addThermalStatusListener(listener: PowerManager.OnThermalStatusChangedListener)",
      "desc": "This function adds a listener for thermal status change, listen call back will be enqueued tasks on the main thread"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "addThermalStatusListener(executor: Executor, listener: PowerManager.OnThermalStatusChangedListener)",
      "desc": "This function adds a listener for thermal status change."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getCurrentThermalStatus()",
      "desc": "This function returns the current thermal status of the device."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getLocationPowerSaveMode()",
      "desc": "Returns how location features should behave when battery saver is on."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getThermalHeadroom(forecastSeconds: Int)",
      "desc": "Provides an estimate of how much thermal headroom the device currently has before hitting severe throttling."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isDeviceIdleMode()",
      "desc": "Returns true if the device is currently in idle mode."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isIgnoringBatteryOptimizations(packageName: String!)",
      "desc": "Return whether the given application package name is on the device's power whitelist."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isInteractive()",
      "desc": "Returns true if the device is in an interactive state."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isPowerSaveMode()",
      "desc": "Returns true if the device is currently in power save mode."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isRebootingUserspaceSupported()",
      "desc": "Returns true if this device supports rebooting userspace."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isScreenOn()",
      "desc": "Returns true if the device is in an interactive state."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isSustainedPerformanceModeSupported()",
      "desc": "This function checks if the device has implemented Sustained Performance Mode."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isWakeLockLevelSupported(level: Int)",
      "desc": "Returns true if the specified wake lock level is supported."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "PowerManager.WakeLock",
      "code": "newWakeLock(levelAndFlags: Int, tag: String!)",
      "desc": "Creates a new wake lock with the specified level and flags.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "reboot(reason: String?)",
      "desc": "Reboot the device."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "removeThermalStatusListener(listener: PowerManager.OnThermalStatusChangedListener)",
      "desc": "This function removes a listener for thermal status change"
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnThermalStatusChangedListener",
      "desc": "Listener passed to PowerManager#addThermalStatusListener and PowerManager#removeThermalStatusListener to notify caller of thermal status has changed."
    },
    {
      "type": "nested-classes",
      "code": "WakeLock",
      "desc": "A wake lock is a mechanism to indicate that your application needs to have the device stay on."
    }
  ]
}