{
  "path": "java.time",
  "name": "Year",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MAX_VALUE",
      "desc": "The maximum supported year, '+999,999,999'."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MIN_VALUE",
      "desc": "The minimum supported year, '-999,999,999'."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Temporal",
      "code": "adjustInto(temporal: Temporal!)",
      "desc": "Adjusts the specified temporal object to have this year.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "LocalDate",
      "code": "atDay(dayOfYear: Int)",
      "desc": "Combines this year with a day-of-year to create a LocalDate.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "YearMonth",
      "code": "atMonth(month: Month!)",
      "desc": "Combines this year with a month to create a YearMonth.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "YearMonth",
      "code": "atMonth(month: Int)",
      "desc": "Combines this year with a month to create a YearMonth.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "LocalDate",
      "code": "atMonthDay(monthDay: MonthDay!)",
      "desc": "Combines this year with a month-day to create a LocalDate.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "compareTo(other: Year!)",
      "desc": "Compares this year to another year."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Checks if this year is equal to another year."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "format(formatter: DateTimeFormatter!)",
      "desc": "Formats this year using the specified formatter.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Year",
      "code": "from(temporal: TemporalAccessor!)",
      "desc": "Obtains an instance of Year from a temporal object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "get(field: TemporalField!)",
      "desc": "Gets the value of the specified field from this year as an int."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "getLong(field: TemporalField!)",
      "desc": "Gets the value of the specified field from this year as a long."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getValue()",
      "desc": "Gets the year value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "A hash code for this year."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isAfter(other: Year!)",
      "desc": "Checks if this year is after the specified year."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isBefore(other: Year!)",
      "desc": "Checks if this year is before the specified year."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isLeap()",
      "desc": "Checks if the year is a leap year, according to the ISO proleptic calendar system rules."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Boolean",
      "code": "isLeap(year: Long)",
      "desc": "Checks if the year is a leap year, according to the ISO proleptic calendar system rules."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isSupported(field: TemporalField!)",
      "desc": "Checks if the specified field is supported."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isSupported(unit: TemporalUnit!)",
      "desc": "Checks if the specified unit is supported."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isValidMonthDay(monthDay: MonthDay!)",
      "desc": "Checks if the month-day is valid for this year."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "length()",
      "desc": "Gets the length of this year in days."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Year",
      "code": "minus(amountToSubtract: TemporalAmount!)",
      "desc": "Returns a copy of this year with the specified amount subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Year",
      "code": "minus(amountToSubtract: Long, unit: TemporalUnit!)",
      "desc": "Returns a copy of this year with the specified amount subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Year",
      "code": "minusYears(yearsToSubtract: Long)",
      "desc": "Returns a copy of this Year with the specified number of years subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Year",
      "code": "now()",
      "desc": "Obtains the current year from the system clock in the default time-zone.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Year",
      "code": "now(zone: ZoneId!)",
      "desc": "Obtains the current year from the system clock in the specified time-zone.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Year",
      "code": "now(clock: Clock!)",
      "desc": "Obtains the current year from the specified clock.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Year",
      "code": "of(isoYear: Int)",
      "desc": "Obtains an instance of Year.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Year",
      "code": "parse(text: CharSequence!)",
      "desc": "Obtains an instance of Year from a text string such as 2007.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Year",
      "code": "parse(text: CharSequence!, formatter: DateTimeFormatter!)",
      "desc": "Obtains an instance of Year from a text string using a specific formatter.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Year",
      "code": "plus(amountToAdd: TemporalAmount!)",
      "desc": "Returns a copy of this year with the specified amount added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Year",
      "code": "plus(amountToAdd: Long, unit: TemporalUnit!)",
      "desc": "Returns a copy of this year with the specified amount added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Year",
      "code": "plusYears(yearsToAdd: Long)",
      "desc": "Returns a copy of this Year with the specified number of years added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "R",
      "code": "query(query: TemporalQuery<R>!)",
      "desc": "Queries this year using the specified query."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ValueRange",
      "code": "range(field: TemporalField!)",
      "desc": "Gets the range of valid values for the specified field.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": "Outputs this year as a String."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "until(endExclusive: Temporal!, unit: TemporalUnit!)",
      "desc": "Calculates the amount of time until another year in terms of the specified unit."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Year",
      "code": "with(adjuster: TemporalAdjuster!)",
      "desc": "Returns an adjusted copy of this year.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Year",
      "code": "with(field: TemporalField!, newValue: Long)",
      "desc": "Returns a copy of this year with the specified field set to a new value.",
      "symbol": "!"
    }
  ]
}