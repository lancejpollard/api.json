{
  "path": "java.nio.channels",
  "name": "AsynchronousSocketChannel",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "AsynchronousSocketChannel",
      "code": "bind(local: SocketAddress!)",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "connect(remote: SocketAddress!, attachment: A, handler: CompletionHandler<Void!, in A>!)",
      "desc": "Connects this channel."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Future",
      "code": "connect(remote: SocketAddress!)",
      "desc": "Connects this channel.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "SocketAddress",
      "code": "getLocalAddress()",
      "desc": "Returns the socket address that this channel's socket is bound to.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "SocketAddress",
      "code": "getRemoteAddress()",
      "desc": "Returns the remote address to which this channel's socket is connected.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "AsynchronousSocketChannel",
      "code": "open(group: AsynchronousChannelGroup!)",
      "desc": "Opens an asynchronous socket channel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "AsynchronousSocketChannel",
      "code": "open()",
      "desc": "Opens an asynchronous socket channel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "AsynchronousChannelProvider",
      "code": "provider()",
      "desc": "Returns the provider that created this channel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "read(dst: ByteBuffer!, timeout: Long, unit: TimeUnit!, attachment: A, handler: CompletionHandler<Int!, in A>!)",
      "desc": "Reads a sequence of bytes from this channel into the given buffer."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "read(dst: ByteBuffer!, attachment: A, handler: CompletionHandler<Int!, in A>!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Future",
      "code": "read(dst: ByteBuffer!)",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "read(dsts: Array<ByteBuffer!>!, offset: Int, length: Int, timeout: Long, unit: TimeUnit!, attachment: A, handler: CompletionHandler<Long!, in A>!)",
      "desc": "Reads a sequence of bytes from this channel into a subsequence of the given buffers."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "AsynchronousSocketChannel",
      "code": "setOption(name: SocketOption<T>!, value: T)",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "AsynchronousSocketChannel",
      "code": "shutdownInput()",
      "desc": "Shutdown the connection for reading without closing the channel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "AsynchronousSocketChannel",
      "code": "shutdownOutput()",
      "desc": "Shutdown the connection for writing without closing the channel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "write(src: ByteBuffer!, timeout: Long, unit: TimeUnit!, attachment: A, handler: CompletionHandler<Int!, in A>!)",
      "desc": "Writes a sequence of bytes to this channel from the given buffer."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "write(src: ByteBuffer!, attachment: A, handler: CompletionHandler<Int!, in A>!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Future",
      "code": "write(src: ByteBuffer!)",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "write(srcs: Array<ByteBuffer!>!, offset: Int, length: Int, timeout: Long, unit: TimeUnit!, attachment: A, handler: CompletionHandler<Long!, in A>!)",
      "desc": "Writes a sequence of bytes to this channel from a subsequence of the given buffers."
    },
    {
      "type": "inherited-methods",
      "from": "Channel"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "close()"
    },
    {
      "type": "inherited-methods",
      "from": "ClosedChannelException"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isOpen()"
    },
    {
      "type": "inherited-methods",
      "from": "NetworkChannel"
    },
    {
      "type": "inherited-methods",
      "from": "T"
    },
    {
      "type": "inherited-methods",
      "from": "getOption(name: SocketOption<T>!)"
    },
    {
      "type": "inherited-methods",
      "from": "MutableSet<SocketOption<*>!>!"
    },
    {
      "type": "inherited-methods",
      "from": "supportedOptions()"
    }
  ]
}