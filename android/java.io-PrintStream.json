{
  "path": "java.io",
  "name": "PrintStream",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(out: OutputStream!)\n            Creates a new print stream."
    },
    {
      "type": "ctor",
      "ctor": "<init>(out: OutputStream!, autoFlush: Boolean)\n            Creates a new print stream."
    },
    {
      "type": "ctor",
      "ctor": "<init>(out: OutputStream!, autoFlush: Boolean, encoding: String!)\n            Creates a new print stream."
    },
    {
      "type": "ctor",
      "ctor": "<init>(fileName: String!)\n            Creates a new print stream, without automatic line flushing, with the specified file name."
    },
    {
      "type": "ctor",
      "ctor": "<init>(fileName: String!, csn: String!)\n            Creates a new print stream, without automatic line flushing, with the specified file name and charset."
    },
    {
      "type": "ctor",
      "ctor": "<init>(file: File!)\n            Creates a new print stream, without automatic line flushing, with the specified file."
    },
    {
      "type": "ctor",
      "ctor": "<init>(file: File!, csn: String!)\n            Creates a new print stream, without automatic line flushing, with the specified file and charset."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PrintStream",
      "code": "append(csq: CharSequence?)",
      "desc": "Appends the specified character sequence to this output stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PrintStream",
      "code": "append(csq: CharSequence?, start: Int, end: Int)",
      "desc": "Appends a subsequence of the specified character sequence to this output stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PrintStream",
      "code": "append(c: Char)",
      "desc": "Appends the specified character to this output stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "checkError()",
      "desc": "Flushes the stream and checks its error state."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "close()",
      "desc": "Closes the stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "flush()",
      "desc": "Flushes the stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PrintStream",
      "code": "format(format: String!, vararg args: Any!)",
      "desc": "Writes a formatted string to this output stream using the specified format string and arguments.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PrintStream",
      "code": "format(l: Locale!, format: String!, vararg args: Any!)",
      "desc": "Writes a formatted string to this output stream using the specified format string and arguments.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "print(b: Boolean)",
      "desc": "Prints a boolean value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "print(c: Char)",
      "desc": "Prints a character."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "print(i: Int)",
      "desc": "Prints an integer."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "print(l: Long)",
      "desc": "Prints a long integer."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "print(f: Float)",
      "desc": "Prints a floating-point number."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "print(d: Double)",
      "desc": "Prints a double-precision floating-point number."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "print(s: CharArray!)",
      "desc": "Prints an array of characters."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "print(s: String!)",
      "desc": "Prints a string."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "print(obj: Any!)",
      "desc": "Prints an object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PrintStream",
      "code": "printf(format: String!, vararg args: Any!)",
      "desc": "A convenience method to write a formatted string to this output stream using the specified format string and arguments.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PrintStream",
      "code": "printf(l: Locale!, format: String!, vararg args: Any!)",
      "desc": "A convenience method to write a formatted string to this output stream using the specified format string and arguments.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "println()",
      "desc": "Terminates the current line by writing the line separator string."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "println(x: Boolean)",
      "desc": "Prints a boolean and then terminate the line."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "println(x: Char)",
      "desc": "Prints a character and then terminate the line."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "println(x: Int)",
      "desc": "Prints an integer and then terminate the line."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "println(x: Long)",
      "desc": "Prints a long and then terminate the line."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "println(x: Float)",
      "desc": "Prints a float and then terminate the line."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "println(x: Double)",
      "desc": "Prints a double and then terminate the line."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "println(x: CharArray!)",
      "desc": "Prints an array of characters and then terminate the line."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "println(x: String!)",
      "desc": "Prints a String and then terminate the line."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "println(x: Any!)",
      "desc": "Prints an Object and then terminate the line."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "write(b: Int)",
      "desc": "Writes the specified byte to this stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "write(buf: ByteArray!, off: Int, len: Int)",
      "desc": "Writes len bytes from the specified byte array starting at offset off to this stream."
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "clearError()",
      "desc": "Clears the internal error state of this stream."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setError()",
      "desc": "Sets the error state of the stream to true."
    },
    {
      "type": "inherited-methods",
      "from": "FilterOutputStream"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "write(b: ByteArray!)"
    },
    {
      "type": "inherited-methods",
      "from": "b.length"
    },
    {
      "type": "inherited-methods",
      "from": "write"
    },
    {
      "type": "inherited-methods",
      "from": "FilterOutputStream"
    },
    {
      "type": "inherited-methods",
      "from": "write"
    },
    {
      "type": "inherited-methods",
      "from": "b"
    },
    {
      "type": "inherited-methods",
      "from": "0"
    },
    {
      "type": "inherited-methods",
      "from": "b.length"
    },
    {
      "type": "inherited-methods",
      "from": "write"
    },
    {
      "type": "inherited-methods",
      "from": "b"
    }
  ]
}