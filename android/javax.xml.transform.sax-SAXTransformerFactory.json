{
  "path": "javax.xml.transform.sax",
  "name": "SAXTransformerFactory",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "FEATURE",
      "desc": "If javax.xml.transform.TransformerFactory#getFeature returns true when passed this value as an argument, the TransformerFactory returned from javax.xml.transform.TransformerFactory#newInstance may be safely cast to a SAXTransformerFactory."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "FEATURE_XMLFILTER",
      "desc": "If javax.xml.transform.TransformerFactory#getFeature returns true when passed this value as an argument, the newXMLFilter(javax.xml.transform.Source) and newXMLFilter(javax.xml.transform.Templates) methods are supported."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "TemplatesHandler",
      "code": "newTemplatesHandler()",
      "desc": "Get a TemplatesHandler object that can process SAX ContentHandler events into a Templates object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "TransformerHandler",
      "code": "newTransformerHandler(src: Source!)",
      "desc": "Get a TransformerHandler object that can process SAX ContentHandler events into a Result, based on the transformation instructions specified by the argument.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "TransformerHandler",
      "code": "newTransformerHandler(templates: Templates!)",
      "desc": "Get a TransformerHandler object that can process SAX ContentHandler events into a Result, based on the Templates argument.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "TransformerHandler",
      "code": "newTransformerHandler()",
      "desc": "Get a TransformerHandler object that can process SAX ContentHandler events into a Result.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "XMLFilter",
      "code": "newXMLFilter(src: Source!)",
      "desc": "Create an XMLFilter that uses the given Source as the transformation instructions.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "XMLFilter",
      "code": "newXMLFilter(templates: Templates!)",
      "desc": "Create an XMLFilter, based on the Templates argument.",
      "symbol": "!"
    },
    {
      "type": "inherited-methods",
      "from": "TransformerFactory"
    },
    {
      "type": "inherited-methods",
      "from": "Source!"
    },
    {
      "type": "inherited-methods",
      "from": "getAssociatedStylesheet(source: Source!, media: String!, title: String!, charset: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "Source"
    },
    {
      "type": "inherited-methods",
      "from": "Any!"
    },
    {
      "type": "inherited-methods",
      "from": "getAttribute(name: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "IllegalArgumentException"
    },
    {
      "type": "inherited-methods",
      "from": "ErrorListener!"
    },
    {
      "type": "inherited-methods",
      "from": "getErrorListener()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "getFeature(name: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "java.net.URI"
    },
    {
      "type": "inherited-methods",
      "from": "false"
    },
    {
      "type": "inherited-methods",
      "from": "TransformerFactory"
    },
    {
      "type": "inherited-methods",
      "from": "Transformer"
    },
    {
      "type": "inherited-methods",
      "from": "Template"
    },
    {
      "type": "inherited-methods",
      "from": "TransformerFactory"
    },
    {
      "type": "inherited-methods",
      "from": "URIResolver!"
    },
    {
      "type": "inherited-methods",
      "from": "getURIResolver()"
    },
    {
      "type": "inherited-methods",
      "from": "TransformerFactory!"
    },
    {
      "type": "inherited-methods",
      "from": "newInstance()"
    },
    {
      "type": "inherited-methods",
      "from": "TransformerFactory"
    },
    {
      "type": "inherited-methods",
      "from": "TransformerFactory!"
    },
    {
      "type": "inherited-methods",
      "from": "newInstance(factoryClassName: String!, classLoader: ClassLoader!)"
    },
    {
      "type": "inherited-methods",
      "from": "TransformerFactory"
    },
    {
      "type": "inherited-methods",
      "from": "Templates!"
    },
    {
      "type": "inherited-methods",
      "from": "newTemplates(source: Source!)"
    },
    {
      "type": "inherited-methods",
      "from": "Transformer!"
    },
    {
      "type": "inherited-methods",
      "from": "newTransformer(source: Source!)"
    },
    {
      "type": "inherited-methods",
      "from": "Source"
    },
    {
      "type": "inherited-methods",
      "from": "Transformer"
    },
    {
      "type": "inherited-methods",
      "from": "Object"
    },
    {
      "type": "inherited-methods",
      "from": "Source"
    },
    {
      "type": "inherited-methods",
      "from": "Transformer"
    },
    {
      "type": "inherited-methods",
      "from": "Thread"
    },
    {
      "type": "inherited-methods",
      "from": "TransformerFactories"
    },
    {
      "type": "inherited-methods",
      "from": "Thread"
    },
    {
      "type": "inherited-methods",
      "from": "Transformer!"
    },
    {
      "type": "inherited-methods",
      "from": "newTransformer()"
    },
    {
      "type": "inherited-methods",
      "from": "Transformer"
    },
    {
      "type": "inherited-methods",
      "from": "Source"
    },
    {
      "type": "inherited-methods",
      "from": "Result"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setAttribute(name: String!, value: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "IllegalArgumentException"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setErrorListener(listener: ErrorListener!)"
    },
    {
      "type": "inherited-methods",
      "from": "IllegalArgumentException"
    },
    {
      "type": "inherited-methods",
      "from": "ErrorListener"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setFeature(name: String!, value: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "TransformerFactory"
    },
    {
      "type": "inherited-methods",
      "from": "Transformer"
    },
    {
      "type": "inherited-methods",
      "from": "Template"
    },
    {
      "type": "inherited-methods",
      "from": "java.net.URI"
    },
    {
      "type": "inherited-methods",
      "from": "TransformerConfigurationException"
    },
    {
      "type": "inherited-methods",
      "from": "TransformerFactory"
    },
    {
      "type": "inherited-methods",
      "from": "Transformer"
    },
    {
      "type": "inherited-methods",
      "from": "Template"
    },
    {
      "type": "inherited-methods",
      "from": "TransformerFactory"
    },
    {
      "type": "inherited-methods",
      "from": "javax.xml.XMLConstants#FEATURE_SECURE_PROCESSING"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "ErrorListener#fatalError(TransformerException exception)"
    },
    {
      "type": "inherited-methods",
      "from": "setErrorListener(javax.xml.transform.ErrorListener)"
    },
    {
      "type": "inherited-methods",
      "from": "false"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setURIResolver(resolver: URIResolver!)"
    }
  ]
}