{
  "path": "android.widget",
  "name": "TextView",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AUTO_SIZE_TEXT_TYPE_NONE",
      "desc": "The TextView does not auto-size text (default)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AUTO_SIZE_TEXT_TYPE_UNIFORM",
      "desc": "The TextView scales text size both horizontally and vertically to fit within the container."
    },
    {
      "type": "ctor",
      "ctor": "<init>(context: Context!)"
    },
    {
      "type": "ctor",
      "ctor": "<init>(context: Context!, attrs: AttributeSet?)"
    },
    {
      "type": "ctor",
      "ctor": "<init>(context: Context!, attrs: AttributeSet?, defStyleAttr: Int)"
    },
    {
      "type": "ctor",
      "ctor": "<init>(context: Context!, attrs: AttributeSet?, defStyleAttr: Int, defStyleRes: Int)"
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "addExtraDataToAccessibilityNodeInfo(info: AccessibilityNodeInfo, extraDataKey: String, arguments: Bundle?)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "addTextChangedListener(watcher: TextWatcher!)",
      "desc": "Adds a TextWatcher to the list of those whose methods are called whenever this TextView's text changes."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "append(text: CharSequence!)",
      "desc": "Convenience method to append the specified text to the TextView's display buffer, upgrading it to android.widget.TextView.BufferType#EDITABLE if it was not already editable."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "append(text: CharSequence!, start: Int, end: Int)",
      "desc": "Convenience method to append the specified text slice to the TextView's display buffer, upgrading it to android.widget.TextView.BufferType#EDITABLE if it was not already editable."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "autofill(value: AutofillValue!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "beginBatchEdit()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "bringPointIntoView(offset: Int)",
      "desc": "Move the point, specified by the offset, into the view if it is needed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "cancelLongPress()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "clearComposingText()",
      "desc": "Use BaseInputConnection#removeComposingSpans to remove any IME composing state from this text view."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "computeScroll()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "debug(depth: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "didTouchFocusSelect()",
      "desc": "Returns true, only while processing a touch gesture, if the initial touch down event caused focus to move to the text view and as a result its selection changed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "drawableHotspotChanged(x: Float, y: Float)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "endBatchEdit()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "extractText(request: ExtractedTextRequest!, outText: ExtractedText!)",
      "desc": "If this TextView contains editable content, extract a portion of it based on the information in request in to outText."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "findViewsWithText(outViews: ArrayList<View!>!, searched: CharSequence!, flags: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CharSequence",
      "code": "getAccessibilityClassName()",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getAutoLinkMask()",
      "desc": "Gets the autolink mask of the text."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getAutoSizeMaxTextSize()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getAutoSizeMinTextSize()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getAutoSizeStepGranularity()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "IntArray",
      "code": "getAutoSizeTextAvailableSizes()",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getAutoSizeTextType()",
      "desc": "Returns the type of auto-size set for this widget."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getAutofillType()",
      "desc": "Describes the autofill type of this view, so an android.service.autofill.AutofillService can create the proper AutofillValue when autofilling the view."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "AutofillValue",
      "code": "getAutofillValue()",
      "desc": "Gets the TextView's current text for AutoFill.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getBaseline()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getBreakStrategy()",
      "desc": "Gets the current strategy for breaking paragraphs into lines."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getCompoundDrawablePadding()",
      "desc": "Returns the padding between the compound drawables and the text."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "BlendMode",
      "code": "getCompoundDrawableTintBlendMode()",
      "desc": "Returns the blending mode used to apply the tint to the compound drawables, if specified.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ColorStateList",
      "code": "getCompoundDrawableTintList()",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PorterDuff.Mode",
      "code": "getCompoundDrawableTintMode()",
      "desc": "Returns the blending mode used to apply the tint to the compound drawables, if specified.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getCompoundDrawables()",
      "desc": "Returns drawables for the left, top, right, and bottom borders.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getCompoundDrawablesRelative()",
      "desc": "Returns drawables for the start, top, end, and bottom borders.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getCompoundPaddingBottom()",
      "desc": "Returns the bottom padding of the view, plus space for the bottom Drawable if any."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getCompoundPaddingEnd()",
      "desc": "Returns the end padding of the view, plus space for the end Drawable if any."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getCompoundPaddingLeft()",
      "desc": "Returns the left padding of the view, plus space for the left Drawable if any."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getCompoundPaddingRight()",
      "desc": "Returns the right padding of the view, plus space for the right Drawable if any."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getCompoundPaddingStart()",
      "desc": "Returns the start padding of the view, plus space for the start Drawable if any."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getCompoundPaddingTop()",
      "desc": "Returns the top padding of the view, plus space for the top Drawable if any."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getCurrentHintTextColor()",
      "desc": "Return the current color selected to paint the hint text."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getCurrentTextColor()",
      "desc": "Return the current color selected for normal text."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ActionMode.Callback",
      "code": "getCustomInsertionActionModeCallback()",
      "desc": "Retrieves the value set in setCustomInsertionActionModeCallback.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ActionMode.Callback",
      "code": "getCustomSelectionActionModeCallback()",
      "desc": "Retrieves the value set in setCustomSelectionActionModeCallback.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Editable",
      "code": "getEditableText()",
      "desc": "Return the text that TextView is displaying as an Editable object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TextUtils.TruncateAt",
      "code": "getEllipsize()",
      "desc": "Returns where, if anywhere, words that are longer than the view is wide should be ellipsized.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CharSequence",
      "code": "getError()",
      "desc": "Returns the error message that was set to be displayed with setError, or null if no error was set or if it the error was cleared by the widget after user input.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getExtendedPaddingBottom()",
      "desc": "Returns the extended bottom padding of the view, including both the bottom Drawable if any and any extra space to keep more than maxLines of text from showing."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getExtendedPaddingTop()",
      "desc": "Returns the extended top padding of the view, including both the top Drawable if any and any extra space to keep more than maxLines of text from showing."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getFilters()",
      "desc": "Returns the current list of input filters.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getFirstBaselineToTopHeight()",
      "desc": "Returns the distance between the first text baseline and the top of this TextView."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "getFocusedRect(r: Rect!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getFontFeatureSettings()",
      "desc": "Returns the font feature settings.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getFontVariationSettings()",
      "desc": "Returns the font variation settings.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getFreezesText()",
      "desc": "Return whether this text view is including its entire text contents in frozen icicles."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getGravity()",
      "desc": "Returns the horizontal and vertical alignment of this TextView."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getHighlightColor()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CharSequence",
      "code": "getHint()",
      "desc": "Returns the hint that is displayed when the text of the TextView is empty.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ColorStateList",
      "code": "getHintTextColors()",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getHyphenationFrequency()",
      "desc": "Gets the current frequency of automatic hyphenation to be used when determining word breaks."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getImeActionId()",
      "desc": "Get the IME action ID previous set with setImeActionLabel."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CharSequence",
      "code": "getImeActionLabel()",
      "desc": "Get the IME action label previous set with setImeActionLabel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "LocaleList",
      "code": "getImeHintLocales()",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getImeOptions()",
      "desc": "Get the type of the Input Method Editor (IME)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getIncludeFontPadding()",
      "desc": "Gets whether the TextView includes extra top and bottom padding to make room for accents that go above the normal ascent and descent."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Bundle",
      "code": "getInputExtras(create: Boolean)",
      "desc": "Retrieve the input extras currently associated with the text view, which can be viewed as well as modified.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getInputType()",
      "desc": "Get the type of the editable content."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getJustificationMode()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "KeyListener",
      "code": "getKeyListener()",
      "desc": "Gets the current KeyListener for the TextView.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getLastBaselineToBottomHeight()",
      "desc": "Returns the distance between the last text baseline and the bottom of this TextView."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Layout",
      "code": "getLayout()",
      "desc": "Gets the android.text.Layout that is currently being used to display the text.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Float",
      "code": "getLetterSpacing()",
      "desc": "Gets the text letter-space value, which determines the spacing between characters."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getLineBounds(line: Int, bounds: Rect!)",
      "desc": "Return the baseline for the specified line (0...getLineCount() - 1) If bounds is not null, return the top, left, right, bottom extents of the specified line in it."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getLineCount()",
      "desc": "Return the number of lines of text, or 0 if the internal Layout has not been built."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getLineHeight()",
      "desc": "Gets the vertical distance between lines of text, in pixels."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Float",
      "code": "getLineSpacingExtra()",
      "desc": "Gets the line spacing extra space"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Float",
      "code": "getLineSpacingMultiplier()",
      "desc": "Gets the line spacing multiplier"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ColorStateList",
      "code": "getLinkTextColors()",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "getLinksClickable()",
      "desc": "Returns whether the movement method will automatically be set to LinkMovementMethod if setAutoLinkMask has been set to nonzero and links are detected in setText."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getMarqueeRepeatLimit()",
      "desc": "Gets the number of times the marquee animation is repeated."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getMaxEms()",
      "desc": "Returns the maximum width of TextView in terms of ems or -1 if the maximum width was set using setMaxWidth(int) or setWidth(int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getMaxHeight()",
      "desc": "Returns the maximum height of TextView in terms of pixels or -1 if the maximum height was set using setMaxLines(int) or setLines(int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getMaxLines()",
      "desc": "Returns the maximum height of TextView in terms of number of lines or -1 if the maximum height was set using setMaxHeight(int) or setHeight(int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getMaxWidth()",
      "desc": "Returns the maximum width of TextView in terms of pixels or -1 if the maximum width was set using setMaxEms(int) or setEms(int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getMinEms()",
      "desc": "Returns the minimum width of TextView in terms of ems or -1 if the minimum width was set using setMinWidth(int) or setWidth(int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getMinHeight()",
      "desc": "Returns the minimum height of TextView in terms of pixels or -1 if the minimum height was set using setMinLines(int) or setLines(int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getMinLines()",
      "desc": "Returns the minimum height of TextView in terms of number of lines or -1 if the minimum height was set using setMinHeight(int) or setHeight(int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getMinWidth()",
      "desc": "Returns the minimum width of TextView in terms of pixels or -1 if the minimum width was set using setMinEms(int) or setEms(int)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MovementMethod",
      "code": "getMovementMethod()",
      "desc": "Gets the android.text.method.MovementMethod being used for this TextView, which provides positioning, scrolling, and text selection functionality.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getOffsetForPosition(x: Float, y: Float)",
      "desc": "Get the character offset closest to the specified absolute position."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TextPaint",
      "code": "getPaint()",
      "desc": "Gets the TextPaint used for the text.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getPaintFlags()",
      "desc": "Gets the flags on the Paint being used to display the text."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getPrivateImeOptions()",
      "desc": "Get the private type of the content.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getSelectionEnd()",
      "desc": "Convenience for Selection#getSelectionEnd."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getSelectionStart()",
      "desc": "Convenience for Selection#getSelectionStart."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getShadowColor()",
      "desc": "Gets the color of the shadow layer."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Float",
      "code": "getShadowDx()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Float",
      "code": "getShadowDy()",
      "desc": "Gets the vertical offset of the shadow layer."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Float",
      "code": "getShadowRadius()",
      "desc": "Gets the radius of the shadow layer."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "getShowSoftInputOnFocus()",
      "desc": "Returns whether the soft input method will be made visible when this TextView gets focused."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CharSequence",
      "code": "getText()",
      "desc": "Return the text that TextView is displaying.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TextClassifier",
      "code": "getTextClassifier()",
      "desc": "Returns the TextClassifier used by this TextView."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ColorStateList",
      "code": "getTextColors()",
      "desc": "Gets the text colors for the different states (normal, selected, focused) of the TextView.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Drawable",
      "code": "getTextCursorDrawable()",
      "desc": "Returns the Drawable corresponding to the text cursor.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TextDirectionHeuristic",
      "code": "getTextDirectionHeuristic()",
      "desc": "Returns resolved TextDirectionHeuristic that will be used for text layout."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Locale",
      "code": "getTextLocale()",
      "desc": "Get the default primary Locale of the text in this TextView."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "LocaleList",
      "code": "getTextLocales()",
      "desc": "Get the default LocaleList of the text in this TextView."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PrecomputedText.Params",
      "code": "getTextMetricsParams()",
      "desc": "Gets the parameters for text layout precomputation, for use with PrecomputedText."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Float",
      "code": "getTextScaleX()",
      "desc": "Gets the extent by which text should be stretched horizontally."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Drawable",
      "code": "getTextSelectHandle()",
      "desc": "Returns the Drawable corresponding to the selection handle used for positioning the cursor within text.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Drawable",
      "code": "getTextSelectHandleLeft()",
      "desc": "Returns the Drawable corresponding to the left handle used for selecting text.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Drawable",
      "code": "getTextSelectHandleRight()",
      "desc": "Returns the Drawable corresponding to the right handle used for selecting text.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Float",
      "code": "getTextSize()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getTextSizeUnit()",
      "desc": "Gets the text size unit defined by the developer."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getTotalPaddingBottom()",
      "desc": "Returns the total bottom padding of the view, including the bottom Drawable if any, the extra space to keep more than maxLines from showing, and the vertical offset for gravity, if any."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getTotalPaddingEnd()",
      "desc": "Returns the total end padding of the view, including the end Drawable if any."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getTotalPaddingLeft()",
      "desc": "Returns the total left padding of the view, including the left Drawable if any."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getTotalPaddingRight()",
      "desc": "Returns the total right padding of the view, including the right Drawable if any."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getTotalPaddingStart()",
      "desc": "Returns the total start padding of the view, including the start Drawable if any."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getTotalPaddingTop()",
      "desc": "Returns the total top padding of the view, including the top Drawable if any, the extra space to keep more than maxLines from showing, and the vertical offset for gravity, if any."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "TransformationMethod",
      "code": "getTransformationMethod()",
      "desc": "Gets the current android.text.method.TransformationMethod for the TextView.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Typeface",
      "code": "getTypeface()",
      "desc": "Gets the current Typeface that is used to style the text.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getUrls()",
      "desc": "Returns the list of URLSpans attached to the text (by Linkify or otherwise) if any.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "hasOverlappingRendering()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "hasSelection()",
      "desc": "Return true iff there is a selection of nonzero length inside this text view."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "invalidateDrawable(drawable: Drawable)",
      "desc": "Invalidates the specified Drawable."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isAllCaps()",
      "desc": "Checks whether the transformation method applied to this TextView is set to ALL CAPS."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isCursorVisible()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isElegantTextHeight()",
      "desc": "Get the value of the TextView's elegant height metrics flag."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isFallbackLineSpacing()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isHorizontallyScrollable()",
      "desc": "Returns whether the text is allowed to be wider than the View."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isInputMethodTarget()",
      "desc": "Returns whether this text view is a current input method target."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isSingleLine()",
      "desc": "Returns if the text is constrained to a single horizontally scrolling line ignoring new line characters instead of letting it wrap onto multiple lines."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isSuggestionsEnabled()",
      "desc": "Return whether or not suggestions are enabled on this TextView."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isTextSelectable()",
      "desc": "Returns the state of the textIsSelectable flag (See setTextIsSelectable())."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "jumpDrawablesToCurrentState()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "length()",
      "desc": "Returns the length, in characters, of the text managed by this TextView"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "moveCursorToVisibleOffset()",
      "desc": "Move the cursor, if needed, so that it is at an offset that is visible to the user."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onBeginBatchEdit()",
      "desc": "Called by the framework in response to a request to begin a batch of edit operations through a call to link beginBatchEdit()."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onCheckIsTextEditor()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onCommitCompletion(text: CompletionInfo!)",
      "desc": "Called by the framework in response to a text completion from the current input method, provided by it calling InputConnection#commitCompletion."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onCommitCorrection(info: CorrectionInfo!)",
      "desc": "Called by the framework in response to a text auto-correction (such as fixing a typo using a dictionary) from the current input method, provided by it calling InputConnection#commitCorrection(CorrectionInfo)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "InputConnection",
      "code": "onCreateInputConnection(outAttrs: EditorInfo!)",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onDragEvent(event: DragEvent!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onEditorAction(actionCode: Int)",
      "desc": "Called when an attached input method calls InputConnection#performEditorAction(int) for this text view."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onEndBatchEdit()",
      "desc": "Called by the framework in response to a request to end a batch of edit operations through a call to link endBatchEdit."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onGenericMotionEvent(event: MotionEvent!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onKeyDown(keyCode: Int, event: KeyEvent!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onKeyMultiple(keyCode: Int, repeatCount: Int, event: KeyEvent!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onKeyPreIme(keyCode: Int, event: KeyEvent!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onKeyShortcut(keyCode: Int, event: KeyEvent!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onKeyUp(keyCode: Int, event: KeyEvent!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onPreDraw()",
      "desc": "Callback method to be invoked when the view tree is about to be drawn."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onPrivateIMECommand(action: String!, data: Bundle!)",
      "desc": "Called by the framework in response to a private command from the current method, provided by it calling InputConnection#performPrivateCommand."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PointerIcon",
      "code": "onResolvePointerIcon(event: MotionEvent!, pointerIndex: Int)",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onRestoreInstanceState(state: Parcelable!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onRtlPropertiesChanged(layoutDirection: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Parcelable",
      "code": "onSaveInstanceState()",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onScreenStateChanged(screenState: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onTextContextMenuItem(id: Int)",
      "desc": "Called when a context menu option for the text view is selected."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onTouchEvent(event: MotionEvent!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onTrackballEvent(event: MotionEvent!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onWindowFocusChanged(hasWindowFocus: Boolean)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "performLongClick()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "removeTextChangedListener(watcher: TextWatcher!)",
      "desc": "Removes the specified TextWatcher from the list of those whose methods are called whenever this TextView's text changes."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "sendAccessibilityEventUnchecked(event: AccessibilityEvent!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAllCaps(allCaps: Boolean)",
      "desc": "Sets the properties of this field to transform input to ALL CAPS display."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setAutoLinkMask(mask: Int)",
      "desc": "Sets the autolink mask of the text."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAutoSizeTextTypeUniformWithConfiguration(autoSizeMinTextSize: Int, autoSizeMaxTextSize: Int, autoSizeStepGranularity: Int, unit: Int)",
      "desc": "Specify whether this widget should automatically scale the text to try to perfectly fit within the layout bounds."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAutoSizeTextTypeUniformWithPresetSizes(presetSizes: IntArray, unit: Int)",
      "desc": "Specify whether this widget should automatically scale the text to try to perfectly fit within the layout bounds."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAutoSizeTextTypeWithDefaults(autoSizeTextType: Int)",
      "desc": "Specify whether this widget should automatically scale the text to try to perfectly fit within the layout bounds by using the default auto-size configuration."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setBreakStrategy(breakStrategy: Int)",
      "desc": "Sets the break strategy for breaking paragraphs into lines."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCompoundDrawablePadding(pad: Int)",
      "desc": "Sets the size of the padding between the compound drawables and the text."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCompoundDrawableTintBlendMode(blendMode: BlendMode?)",
      "desc": "Specifies the blending mode used to apply the tint specified by setCompoundDrawableTintList(android.content.res.ColorStateList) to the compound drawables."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCompoundDrawableTintList(tint: ColorStateList?)",
      "desc": "Applies a tint to the compound drawables."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCompoundDrawableTintMode(tintMode: PorterDuff.Mode?)",
      "desc": "Specifies the blending mode used to apply the tint specified by setCompoundDrawableTintList(android.content.res.ColorStateList) to the compound drawables."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCompoundDrawables(left: Drawable?, top: Drawable?, right: Drawable?, bottom: Drawable?)",
      "desc": "Sets the Drawables (if any) to appear to the left of, above, to the right of, and below the text."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCompoundDrawablesRelative(start: Drawable?, top: Drawable?, end: Drawable?, bottom: Drawable?)",
      "desc": "Sets the Drawables (if any) to appear to the start of, above, to the end of, and below the text."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCompoundDrawablesRelativeWithIntrinsicBounds(start: Int, top: Int, end: Int, bottom: Int)",
      "desc": "Sets the Drawables (if any) to appear to the start of, above, to the end of, and below the text."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCompoundDrawablesRelativeWithIntrinsicBounds(start: Drawable?, top: Drawable?, end: Drawable?, bottom: Drawable?)",
      "desc": "Sets the Drawables (if any) to appear to the start of, above, to the end of, and below the text."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCompoundDrawablesWithIntrinsicBounds(left: Int, top: Int, right: Int, bottom: Int)",
      "desc": "Sets the Drawables (if any) to appear to the left of, above, to the right of, and below the text."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCompoundDrawablesWithIntrinsicBounds(left: Drawable?, top: Drawable?, right: Drawable?, bottom: Drawable?)",
      "desc": "Sets the Drawables (if any) to appear to the left of, above, to the right of, and below the text."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCursorVisible(visible: Boolean)",
      "desc": "Set whether the cursor is visible."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCustomInsertionActionModeCallback(actionModeCallback: ActionMode.Callback!)",
      "desc": "If provided, this ActionMode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCustomSelectionActionModeCallback(actionModeCallback: ActionMode.Callback!)",
      "desc": "If provided, this ActionMode."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setEditableFactory(factory: Editable.Factory!)",
      "desc": "Sets the Factory used to create new Editable."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setElegantTextHeight(elegant: Boolean)",
      "desc": "Set the TextView's elegant height metrics flag."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setEllipsize(where: TextUtils.TruncateAt!)",
      "desc": "Causes words in the text that are longer than the view's width to be ellipsized instead of broken in the middle."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setEms(ems: Int)",
      "desc": "Sets the width of the TextView to be exactly ems wide."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setEnabled(enabled: Boolean)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setError(error: CharSequence!)",
      "desc": "Sets the right-hand compound drawable of the TextView to the \"error\" icon and sets an error message that will be displayed in a popup when the TextView has focus."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setError(error: CharSequence!, icon: Drawable!)",
      "desc": "Sets the right-hand compound drawable of the TextView to the specified icon and sets an error message that will be displayed in a popup when the TextView has focus."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setExtractedText(text: ExtractedText!)",
      "desc": "Apply to this text view the given extracted text, as previously returned by extractText(android.view.inputmethod.ExtractedTextRequest,android.view.inputmethod.ExtractedText)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFallbackLineSpacing(enabled: Boolean)",
      "desc": "Set whether to respect the ascent and descent of the fallback fonts that are used in displaying the text (which is needed to avoid text from consecutive lines running into each other)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFilters(filters: Array<InputFilter!>!)",
      "desc": "Sets the list of input filters that will be used if the buffer is Editable."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFirstBaselineToTopHeight(firstBaselineToTopHeight: Int)",
      "desc": "Updates the top padding of the TextView so that  is the distance between the top of the TextView and first line's baseline."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFontFeatureSettings(fontFeatureSettings: String?)",
      "desc": "Sets font feature settings."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "setFontVariationSettings(fontVariationSettings: String?)",
      "desc": "Sets TrueType or OpenType font variation settings."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFreezesText(freezesText: Boolean)",
      "desc": "Control whether this text view saves its entire text contents when freezing to an icicle, in addition to dynamic state such as cursor position."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setGravity(gravity: Int)",
      "desc": "Sets the horizontal alignment of the text and the vertical gravity that will be used when there is extra space in the TextView beyond what is required for the text itself."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setHeight(pixels: Int)",
      "desc": "Sets the height of the TextView to be exactly pixels tall."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setHighlightColor(color: Int)",
      "desc": "Sets the color used to display the selection highlight."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setHint(hint: CharSequence!)",
      "desc": "Sets the text to be displayed when the text of the TextView is empty."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setHint(resid: Int)",
      "desc": "Sets the text to be displayed when the text of the TextView is empty, from a resource."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setHintTextColor(color: Int)",
      "desc": "Sets the color of the hint text for all the states (disabled, focussed, selected...) of this TextView."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setHintTextColor(colors: ColorStateList!)",
      "desc": "Sets the color of the hint text."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setHorizontallyScrolling(whether: Boolean)",
      "desc": "Sets whether the text should be allowed to be wider than the View is."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setHyphenationFrequency(hyphenationFrequency: Int)",
      "desc": "Sets the frequency of automatic hyphenation to use when determining word breaks."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setImeActionLabel(label: CharSequence!, actionId: Int)",
      "desc": "Change the custom IME action associated with the text view, which will be reported to an IME with EditorInfo#actionLabel and EditorInfo#actionId when it has focus."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setImeHintLocales(hintLocales: LocaleList?)",
      "desc": "Change \"hint\" locales associated with the text view, which will be reported to an IME with EditorInfo#hintLocales when it has focus."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setImeOptions(imeOptions: Int)",
      "desc": "Change the editor type integer associated with the text view, which is reported to an Input Method Editor (IME) with EditorInfo#imeOptions when it has focus."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setIncludeFontPadding(includepad: Boolean)",
      "desc": "Set whether the TextView includes extra top and bottom padding to make room for accents that go above the normal ascent and descent."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setInputExtras(xmlResId: Int)",
      "desc": "Set the extra input data of the text, which is the EditorInfo#extras Bundle that will be filled in when creating an input connection."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setInputType(type: Int)",
      "desc": "Set the type of the content with a constant as defined for EditorInfo#inputType."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setJustificationMode(justificationMode: Int)",
      "desc": "Set justification mode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setKeyListener(input: KeyListener!)",
      "desc": "Sets the key listener to be used with this TextView."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLastBaselineToBottomHeight(lastBaselineToBottomHeight: Int)",
      "desc": "Updates the bottom padding of the TextView so that  is the distance between the bottom of the TextView and the last line's baseline."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLetterSpacing(letterSpacing: Float)",
      "desc": "Sets text letter-spacing in em units."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLineHeight(lineHeight: Int)",
      "desc": "Sets an explicit line height for this TextView."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLineSpacing(add: Float, mult: Float)",
      "desc": "Sets line spacing for this TextView."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLines(lines: Int)",
      "desc": "Sets the height of the TextView to be exactly lines tall."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setLinkTextColor(color: Int)",
      "desc": "Sets the color of links in the text."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setLinkTextColor(colors: ColorStateList!)",
      "desc": "Sets the color of links in the text."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setLinksClickable(whether: Boolean)",
      "desc": "Sets whether the movement method will automatically be set to LinkMovementMethod if setAutoLinkMask has been set to nonzero and links are detected in setText."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMarqueeRepeatLimit(marqueeLimit: Int)",
      "desc": "Sets how many times to repeat the marquee animation."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMaxEms(maxEms: Int)",
      "desc": "Sets the width of the TextView to be at most maxEms wide."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMaxHeight(maxPixels: Int)",
      "desc": "Sets the height of the TextView to be at most maxPixels tall."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMaxLines(maxLines: Int)",
      "desc": "Sets the height of the TextView to be at most maxLines tall."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMaxWidth(maxPixels: Int)",
      "desc": "Sets the width of the TextView to be at most maxPixels wide."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMinEms(minEms: Int)",
      "desc": "Sets the width of the TextView to be at least minEms wide."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMinHeight(minPixels: Int)",
      "desc": "Sets the height of the TextView to be at least minPixels tall."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMinLines(minLines: Int)",
      "desc": "Sets the height of the TextView to be at least minLines tall."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMinWidth(minPixels: Int)",
      "desc": "Sets the width of the TextView to be at least minPixels wide."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setMovementMethod(movement: MovementMethod!)",
      "desc": "Sets the android.text.method.MovementMethod for handling arrow key movement for this TextView."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOnEditorActionListener(l: TextView.OnEditorActionListener!)",
      "desc": "Set a special listener to be called when an action is performed on the text view."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPadding(left: Int, top: Int, right: Int, bottom: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPaddingRelative(start: Int, top: Int, end: Int, bottom: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPaintFlags(flags: Int)",
      "desc": "Sets flags on the Paint being used to display the text and reflows the text if they are different from the old flags."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPrivateImeOptions(type: String!)",
      "desc": "Set the private content type of the text, which is the EditorInfo#privateImeOptions field that will be filled in when creating an input connection."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setRawInputType(type: Int)",
      "desc": "Directly change the content type integer of the text view, without modifying any other state."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setScroller(s: Scroller!)",
      "desc": "Sets the Scroller used for producing a scrolling animation"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSelectAllOnFocus(selectAllOnFocus: Boolean)",
      "desc": "Set the TextView so that when it takes focus, all the text is selected."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSelected(selected: Boolean)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setShadowLayer(radius: Float, dx: Float, dy: Float, color: Int)",
      "desc": "Gives the text a shadow of the specified blur radius and color, the specified distance from its drawn position."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setShowSoftInputOnFocus(show: Boolean)",
      "desc": "Sets whether the soft input method will be made visible when this TextView gets focused."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSingleLine()",
      "desc": "Sets the properties of this field (lines, horizontally scrolling, transformation method) to be for a single-line input."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSingleLine(singleLine: Boolean)",
      "desc": "If true, sets the properties of this field (number of lines, horizontally scrolling, transformation method) to be for a single-line input; if false, restores these to the default conditions."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setSpannableFactory(factory: Spannable.Factory!)",
      "desc": "Sets the Factory used to create new Spannable."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setText(text: CharSequence!)",
      "desc": "Sets the text to be displayed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setText(text: CharSequence!, type: TextView.BufferType!)",
      "desc": "Sets the text to be displayed and the android.widget.TextView.BufferType."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setText(text: CharArray!, start: Int, len: Int)",
      "desc": "Sets the TextView to display the specified slice of the specified char array."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setText(resid: Int)",
      "desc": "Sets the text to be displayed using a string resource identifier."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setText(resid: Int, type: TextView.BufferType!)",
      "desc": "Sets the text to be displayed using a string resource identifier and the android.widget.TextView.BufferType."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextAppearance(resId: Int)",
      "desc": "Sets the text appearance from the specified style resource."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextAppearance(context: Context!, resId: Int)",
      "desc": "Sets the text color, size, style, hint color, and highlight color from the specified TextAppearance resource."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextClassifier(textClassifier: TextClassifier?)",
      "desc": "Sets the TextClassifier for this TextView."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextColor(color: Int)",
      "desc": "Sets the text color for all the states (normal, selected, focused) to be this color."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextColor(colors: ColorStateList!)",
      "desc": "Sets the text color."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextCursorDrawable(textCursorDrawable: Drawable?)",
      "desc": "Sets the Drawable corresponding to the text cursor."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextCursorDrawable(textCursorDrawable: Int)",
      "desc": "Sets the Drawable corresponding to the text cursor."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextIsSelectable(selectable: Boolean)",
      "desc": "Sets whether the content of this view is selectable by the user."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setTextKeepState(text: CharSequence!)",
      "desc": "Sets the text to be displayed but retains the cursor position."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setTextKeepState(text: CharSequence!, type: TextView.BufferType!)",
      "desc": "Sets the text to be displayed and the android.widget.TextView.BufferType but retains the cursor position."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextLocale(locale: Locale)",
      "desc": "Set the default Locale of the text in this TextView to a one-member LocaleList containing just the given Locale."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextLocales(locales: LocaleList)",
      "desc": "Set the default LocaleList of the text in this TextView to the given value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextMetricsParams(params: PrecomputedText.Params)",
      "desc": "Apply the text layout parameter."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextScaleX(size: Float)",
      "desc": "Sets the horizontal scale factor for text."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextSelectHandle(textSelectHandle: Drawable)",
      "desc": "Sets the Drawable corresponding to the selection handle used for positioning the cursor within text."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextSelectHandle(textSelectHandle: Int)",
      "desc": "Sets the Drawable corresponding to the selection handle used for positioning the cursor within text."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextSelectHandleLeft(textSelectHandleLeft: Drawable)",
      "desc": "Sets the Drawable corresponding to the left handle used for selecting text."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextSelectHandleLeft(textSelectHandleLeft: Int)",
      "desc": "Sets the Drawable corresponding to the left handle used for selecting text."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextSelectHandleRight(textSelectHandleRight: Drawable)",
      "desc": "Sets the Drawable corresponding to the right handle used for selecting text."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextSelectHandleRight(textSelectHandleRight: Int)",
      "desc": "Sets the Drawable corresponding to the right handle used for selecting text."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextSize(size: Float)",
      "desc": "Set the default text size to the given value, interpreted as \"scaled pixel\" units."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextSize(unit: Int, size: Float)",
      "desc": "Set the default text size to a given unit and value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setTransformationMethod(method: TransformationMethod!)",
      "desc": "Sets the transformation that is applied to the text that this TextView is displaying."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTypeface(tf: Typeface?, style: Int)",
      "desc": "Sets the typeface and style in which the text should be displayed, and turns on the fake bold and italic bits in the Paint if the Typeface that you provided does not have all the bits in the style that you specified."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTypeface(tf: Typeface?)",
      "desc": "Sets the typeface and style in which the text should be displayed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setWidth(pixels: Int)",
      "desc": "Sets the width of the TextView to be exactly pixels wide."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "showContextMenu()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "showContextMenu(x: Float, y: Float)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "computeHorizontalScrollRange()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "computeVerticalScrollExtent()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "computeVerticalScrollRange()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "drawableStateChanged()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "getBottomPaddingOffset()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getDefaultEditable()",
      "desc": "Subclasses override this to specify that they have a KeyListener by default even if not specifically called for in the XML options."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "MovementMethod",
      "code": "getDefaultMovementMethod()",
      "desc": "Subclasses override this to specify a default movement method.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Float",
      "code": "getLeftFadingEdgeStrength()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "getLeftPaddingOffset()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Float",
      "code": "getRightFadingEdgeStrength()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "getRightPaddingOffset()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "getTopPaddingOffset()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isPaddingOffsetRequired()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onAttachedToWindow()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onConfigurationChanged(newConfig: Configuration!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onCreateContextMenu(menu: ContextMenu!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "IntArray",
      "code": "onCreateDrawableState(extraSpace: Int)",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onDraw(canvas: Canvas!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onFocusChanged(focused: Boolean, direction: Int, previouslyFocusedRect: Rect?)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onLayout(changed: Boolean, left: Int, top: Int, right: Int, bottom: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onMeasure(widthMeasureSpec: Int, heightMeasureSpec: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onScrollChanged(horiz: Int, vert: Int, oldHoriz: Int, oldVert: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onSelectionChanged(selStart: Int, selEnd: Int)",
      "desc": "This method is called when the selection has changed, in case any subclasses would like to know."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onTextChanged(text: CharSequence!, start: Int, lengthBefore: Int, lengthAfter: Int)",
      "desc": "This method is called when the text is changed, in case any subclasses would like to know."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onVisibilityChanged(changedView: View, visibility: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "setFrame(l: Int, t: Int, r: Int, b: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "verifyDrawable(who: Drawable)",
      "desc": "If your view subclass is displaying its own Drawable objects, it should override this function and return true for any Drawable it is displaying."
    },
    {
      "type": "inherited-constants",
      "from": "View"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "ACCESSIBILITY_LIVE_REGION_ASSERTIVE"
    },
    {
      "type": "inherited-constants",
      "from": "setAccessibilityLiveRegion(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "ACCESSIBILITY_LIVE_REGION_NONE"
    },
    {
      "type": "inherited-constants",
      "from": "setAccessibilityLiveRegion(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "ACCESSIBILITY_LIVE_REGION_POLITE"
    },
    {
      "type": "inherited-constants",
      "from": "setAccessibilityLiveRegion(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS"
    },
    {
      "type": "inherited-constants",
      "from": "setImportantForAutofill(int)"
    },
    {
      "type": "inherited-constants",
      "from": "ViewStructure"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DATE"
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DAY"
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_MONTH"
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_YEAR"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String[])"
    },
    {
      "type": "inherited-constants",
      "from": "android:autofillHint"
    },
    {
      "type": "inherited-constants",
      "from": "{@value #AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DATE}"
    },
    {
      "type": "inherited-constants",
      "from": "\"04/2020\""
    },
    {
      "type": "inherited-constants",
      "from": "\"4/2020\""
    },
    {
      "type": "inherited-constants",
      "from": "\"2020/04\""
    },
    {
      "type": "inherited-constants",
      "from": "\"2020/4\""
    },
    {
      "type": "inherited-constants",
      "from": "\"April/2020\""
    },
    {
      "type": "inherited-constants",
      "from": "\"Apr/2020\""
    },
    {
      "type": "inherited-constants",
      "from": "getAutofillType()"
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_TYPE_DATE"
    },
    {
      "type": "inherited-constants",
      "from": "getAutofillValue()"
    },
    {
      "type": "inherited-constants",
      "from": "AutofillValue#forDate(long)"
    },
    {
      "type": "inherited-constants",
      "from": "autofill(android.view.autofill.AutofillValue)"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String...)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DAY"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String[])"
    },
    {
      "type": "inherited-constants",
      "from": "android:autofillHint"
    },
    {
      "type": "inherited-constants",
      "from": "{@value #AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DAY}"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String...)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_MONTH"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String[])"
    },
    {
      "type": "inherited-constants",
      "from": "android:autofillHint"
    },
    {
      "type": "inherited-constants",
      "from": "{@value #AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_MONTH}"
    },
    {
      "type": "inherited-constants",
      "from": "1"
    },
    {
      "type": "inherited-constants",
      "from": "\"1\""
    },
    {
      "type": "inherited-constants",
      "from": "\"0\""
    },
    {
      "type": "inherited-constants",
      "from": "Calendar#MONTH"
    },
    {
      "type": "inherited-constants",
      "from": "\"January\""
    },
    {
      "type": "inherited-constants",
      "from": "\"jan\""
    },
    {
      "type": "inherited-constants",
      "from": "\"Janeiro\""
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DATE"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String...)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_YEAR"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String[])"
    },
    {
      "type": "inherited-constants",
      "from": "android:autofillHint"
    },
    {
      "type": "inherited-constants",
      "from": "{@value #AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_YEAR}"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String...)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_HINT_CREDIT_CARD_NUMBER"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String[])"
    },
    {
      "type": "inherited-constants",
      "from": "android:autofillHint"
    },
    {
      "type": "inherited-constants",
      "from": "{@value #AUTOFILL_HINT_CREDIT_CARD_NUMBER}"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String...)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_HINT_CREDIT_CARD_SECURITY_CODE"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String[])"
    },
    {
      "type": "inherited-constants",
      "from": "android:autofillHint"
    },
    {
      "type": "inherited-constants",
      "from": "{@value #AUTOFILL_HINT_CREDIT_CARD_SECURITY_CODE}"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String...)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_HINT_EMAIL_ADDRESS"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String[])"
    },
    {
      "type": "inherited-constants",
      "from": "android:autofillHint"
    },
    {
      "type": "inherited-constants",
      "from": "{@value #AUTOFILL_HINT_EMAIL_ADDRESS}"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String...)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_HINT_NAME"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String[])"
    },
    {
      "type": "inherited-constants",
      "from": "android:autofillHint"
    },
    {
      "type": "inherited-constants",
      "from": "{@value #AUTOFILL_HINT_NAME}"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String...)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_HINT_PASSWORD"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String[])"
    },
    {
      "type": "inherited-constants",
      "from": "android:autofillHint"
    },
    {
      "type": "inherited-constants",
      "from": "{@value #AUTOFILL_HINT_PASSWORD}"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String...)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_HINT_PHONE"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String[])"
    },
    {
      "type": "inherited-constants",
      "from": "android:autofillHint"
    },
    {
      "type": "inherited-constants",
      "from": "{@value #AUTOFILL_HINT_PHONE}"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String...)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_HINT_POSTAL_ADDRESS"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String[])"
    },
    {
      "type": "inherited-constants",
      "from": "android:autofillHint"
    },
    {
      "type": "inherited-constants",
      "from": "{@value #AUTOFILL_HINT_POSTAL_ADDRESS}"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String...)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_HINT_POSTAL_CODE"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String[])"
    },
    {
      "type": "inherited-constants",
      "from": "android:autofillHint"
    },
    {
      "type": "inherited-constants",
      "from": "{@value #AUTOFILL_HINT_POSTAL_CODE}"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String...)"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_HINT_USERNAME"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String[])"
    },
    {
      "type": "inherited-constants",
      "from": "android:autofillHint"
    },
    {
      "type": "inherited-constants",
      "from": "{@value #AUTOFILL_HINT_USERNAME}"
    },
    {
      "type": "inherited-constants",
      "from": "setAutofillHints(java.lang.String...)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_TYPE_DATE"
    },
    {
      "type": "inherited-constants",
      "from": "java.util.Date#getTime()"
    },
    {
      "type": "inherited-constants",
      "from": "AutofillValue"
    },
    {
      "type": "inherited-constants",
      "from": "View"
    },
    {
      "type": "inherited-constants",
      "from": "AutofillValue#forDate(long)"
    },
    {
      "type": "inherited-constants",
      "from": "View"
    },
    {
      "type": "inherited-constants",
      "from": "AutofillValue#getDateValue()"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_TYPE_LIST"
    },
    {
      "type": "inherited-constants",
      "from": "int"
    },
    {
      "type": "inherited-constants",
      "from": "0"
    },
    {
      "type": "inherited-constants",
      "from": "AutofillValue"
    },
    {
      "type": "inherited-constants",
      "from": "View"
    },
    {
      "type": "inherited-constants",
      "from": "AutofillValue#forList(int)"
    },
    {
      "type": "inherited-constants",
      "from": "View"
    },
    {
      "type": "inherited-constants",
      "from": "AutofillValue#getListValue()"
    },
    {
      "type": "inherited-constants",
      "from": "android.app.assist.AssistStructure.ViewNode#getAutofillOptions()"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_TYPE_NONE"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_TYPE_TEXT"
    },
    {
      "type": "inherited-constants",
      "from": "CharSequence"
    },
    {
      "type": "inherited-constants",
      "from": "AutofillValue"
    },
    {
      "type": "inherited-constants",
      "from": "View"
    },
    {
      "type": "inherited-constants",
      "from": "AutofillValue#forText(CharSequence)"
    },
    {
      "type": "inherited-constants",
      "from": "View"
    },
    {
      "type": "inherited-constants",
      "from": "AutofillValue#getTextValue()"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "AUTOFILL_TYPE_TOGGLE"
    },
    {
      "type": "inherited-constants",
      "from": "boolean"
    },
    {
      "type": "inherited-constants",
      "from": "AutofillValue"
    },
    {
      "type": "inherited-constants",
      "from": "View"
    },
    {
      "type": "inherited-constants",
      "from": "AutofillValue#forToggle(boolean)"
    },
    {
      "type": "inherited-constants",
      "from": "View"
    },
    {
      "type": "inherited-constants",
      "from": "AutofillValue#getToggleValue()"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "DRAG_FLAG_GLOBAL"
    },
    {
      "type": "inherited-constants",
      "from": "startDragAndDrop(android.content.ClipData,android.view.View.DragShadowBuilder,java.lang.Object,int)"
    },
    {
      "type": "inherited-constants",
      "from": "API 24"
    },
    {
      "type": "inherited-constants",
      "from": "ClipData"
    },
    {
      "type": "inherited-constants",
      "from": "ClipData"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "DRAG_FLAG_GLOBAL_PERSISTABLE_URI_PERMISSION"
    },
    {
      "type": "inherited-constants",
      "from": "DRAG_FLAG_GLOBAL_URI_READ"
    },
    {
      "type": "inherited-constants",
      "from": ""
    },
    {
      "type": "inherited-constants",
      "from": "android.content.Context#revokeUriPermission(Uri, int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "DRAG_FLAG_GLOBAL_PREFIX_URI_PERMISSION"
    },
    {
      "type": "inherited-constants",
      "from": "DRAG_FLAG_GLOBAL_URI_READ"
    },
    {
      "type": "inherited-constants",
      "from": ""
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "DRAG_FLAG_GLOBAL_URI_READ"
    },
    {
      "type": "inherited-constants",
      "from": "DRAG_FLAG_GLOBAL"
    },
    {
      "type": "inherited-constants",
      "from": "ClipData"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "DRAG_FLAG_GLOBAL_URI_WRITE"
    },
    {
      "type": "inherited-constants",
      "from": "DRAG_FLAG_GLOBAL"
    },
    {
      "type": "inherited-constants",
      "from": "ClipData"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "DRAG_FLAG_OPAQUE"
    },
    {
      "type": "inherited-constants",
      "from": "startDragAndDrop(android.content.ClipData,android.view.View.DragShadowBuilder,java.lang.Object,int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "DRAWING_CACHE_QUALITY_AUTO"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "DRAWING_CACHE_QUALITY_HIGH"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "DRAWING_CACHE_QUALITY_LOW"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "FIND_VIEWS_WITH_CONTENT_DESCRIPTION"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "FIND_VIEWS_WITH_TEXT"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "FOCUSABLE"
    },
    {
      "type": "inherited-constants",
      "from": "setFocusable(int)"
    },
    {
      "type": "inherited-constants",
      "from": "android:focusable"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "FOCUSABLES_ALL"
    },
    {
      "type": "inherited-constants",
      "from": "addFocusables(java.util.ArrayList,int,int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "FOCUSABLES_TOUCH_MODE"
    },
    {
      "type": "inherited-constants",
      "from": "addFocusables(java.util.ArrayList,int,int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "FOCUSABLE_AUTO"
    },
    {
      "type": "inherited-constants",
      "from": "setFocusable(int)"
    },
    {
      "type": "inherited-constants",
      "from": "android:focusable"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "FOCUS_BACKWARD"
    },
    {
      "type": "inherited-constants",
      "from": "focusSearch(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "FOCUS_DOWN"
    },
    {
      "type": "inherited-constants",
      "from": "focusSearch(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "FOCUS_FORWARD"
    },
    {
      "type": "inherited-constants",
      "from": "focusSearch(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "FOCUS_LEFT"
    },
    {
      "type": "inherited-constants",
      "from": "focusSearch(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "FOCUS_RIGHT"
    },
    {
      "type": "inherited-constants",
      "from": "focusSearch(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "FOCUS_UP"
    },
    {
      "type": "inherited-constants",
      "from": "focusSearch(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "GONE"
    },
    {
      "type": "inherited-constants",
      "from": "setVisibility"
    },
    {
      "type": "inherited-constants",
      "from": "android:visibility"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "HAPTIC_FEEDBACK_ENABLED"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "IMPORTANT_FOR_ACCESSIBILITY_AUTO"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "IMPORTANT_FOR_ACCESSIBILITY_NO"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "IMPORTANT_FOR_ACCESSIBILITY_YES"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "IMPORTANT_FOR_AUTOFILL_AUTO"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "IMPORTANT_FOR_AUTOFILL_NO"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "IMPORTANT_FOR_AUTOFILL_YES"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "IMPORTANT_FOR_AUTOFILL_YES_EXCLUDE_DESCENDANTS"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "IMPORTANT_FOR_CONTENT_CAPTURE_AUTO"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "IMPORTANT_FOR_CONTENT_CAPTURE_NO"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "IMPORTANT_FOR_CONTENT_CAPTURE_NO_EXCLUDE_DESCENDANTS"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "IMPORTANT_FOR_CONTENT_CAPTURE_YES"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "IMPORTANT_FOR_CONTENT_CAPTURE_YES_EXCLUDE_DESCENDANTS"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "INVISIBLE"
    },
    {
      "type": "inherited-constants",
      "from": "setVisibility"
    },
    {
      "type": "inherited-constants",
      "from": "android:visibility"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "KEEP_SCREEN_ON"
    },
    {
      "type": "inherited-constants",
      "from": "WindowManager.LayoutParams#FLAG_KEEP_SCREEN_ON"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "LAYER_TYPE_HARDWARE"
    },
    {
      "type": "inherited-constants",
      "from": "software layers"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "LAYER_TYPE_NONE"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "LAYER_TYPE_SOFTWARE"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "LAYOUT_DIRECTION_INHERIT"
    },
    {
      "type": "inherited-constants",
      "from": "setLayoutDirection"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "LAYOUT_DIRECTION_LOCALE"
    },
    {
      "type": "inherited-constants",
      "from": "setLayoutDirection"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "LAYOUT_DIRECTION_LTR"
    },
    {
      "type": "inherited-constants",
      "from": "setLayoutDirection"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "LAYOUT_DIRECTION_RTL"
    },
    {
      "type": "inherited-constants",
      "from": "setLayoutDirection"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "MEASURED_HEIGHT_STATE_SHIFT"
    },
    {
      "type": "inherited-constants",
      "from": "MEASURED_STATE_MASK"
    },
    {
      "type": "inherited-constants",
      "from": "getMeasuredState()"
    },
    {
      "type": "inherited-constants",
      "from": "resolveSizeAndState(int,int,int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "MEASURED_SIZE_MASK"
    },
    {
      "type": "inherited-constants",
      "from": "getMeasuredWidthAndState()"
    },
    {
      "type": "inherited-constants",
      "from": "getMeasuredWidthAndState()"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "MEASURED_STATE_MASK"
    },
    {
      "type": "inherited-constants",
      "from": "getMeasuredWidthAndState()"
    },
    {
      "type": "inherited-constants",
      "from": "getMeasuredWidthAndState()"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "MEASURED_STATE_TOO_SMALL"
    },
    {
      "type": "inherited-constants",
      "from": "getMeasuredWidthAndState()"
    },
    {
      "type": "inherited-constants",
      "from": "getMeasuredWidthAndState()"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "NOT_FOCUSABLE"
    },
    {
      "type": "inherited-constants",
      "from": "setFocusable(int)"
    },
    {
      "type": "inherited-constants",
      "from": "android:focusable"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "NO_ID"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "OVER_SCROLL_ALWAYS"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "OVER_SCROLL_IF_CONTENT_SCROLLS"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "OVER_SCROLL_NEVER"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SCREEN_STATE_OFF"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SCREEN_STATE_ON"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SCROLLBARS_INSIDE_INSET"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SCROLLBARS_INSIDE_OVERLAY"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SCROLLBARS_OUTSIDE_INSET"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SCROLLBARS_OUTSIDE_OVERLAY"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SCROLLBAR_POSITION_DEFAULT"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SCROLLBAR_POSITION_LEFT"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SCROLLBAR_POSITION_RIGHT"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SCROLL_AXIS_HORIZONTAL"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SCROLL_AXIS_NONE"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SCROLL_AXIS_VERTICAL"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SCROLL_INDICATOR_BOTTOM"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SCROLL_INDICATOR_END"
    },
    {
      "type": "inherited-constants",
      "from": "getLayoutDirection()"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SCROLL_INDICATOR_LEFT"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SCROLL_INDICATOR_RIGHT"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SCROLL_INDICATOR_START"
    },
    {
      "type": "inherited-constants",
      "from": "getLayoutDirection()"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SCROLL_INDICATOR_TOP"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SOUND_EFFECTS_ENABLED"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "STATUS_BAR_HIDDEN"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "STATUS_BAR_VISIBLE"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_FULLSCREEN"
    },
    {
      "type": "inherited-constants",
      "from": "setSystemUiVisibility(int)"
    },
    {
      "type": "inherited-constants",
      "from": "WindowManager.LayoutParams.FLAG_FULLSCREEN"
    },
    {
      "type": "inherited-constants",
      "from": "Window#FEATURE_ACTION_BAR_OVERLAY"
    },
    {
      "type": "inherited-constants",
      "from": "window flag"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_HIDE_NAVIGATION"
    },
    {
      "type": "inherited-constants",
      "from": "setSystemUiVisibility(int)"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_LOW_PROFILE"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_HIDE_NAVIGATION"
    },
    {
      "type": "inherited-constants",
      "from": "FLAG_FULLSCREEN"
    },
    {
      "type": "inherited-constants",
      "from": "FLAG_LAYOUT_IN_SCREEN"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_FULLSCREEN"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_IMMERSIVE"
    },
    {
      "type": "inherited-constants",
      "from": "setSystemUiVisibility(int)"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_HIDE_NAVIGATION"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_HIDE_NAVIGATION"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_HIDE_NAVIGATION"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_IMMERSIVE_STICKY"
    },
    {
      "type": "inherited-constants",
      "from": "setSystemUiVisibility(int)"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_FULLSCREEN"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_HIDE_NAVIGATION"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_HIDE_NAVIGATION"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_FULLSCREEN"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_FULLSCREEN"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_HIDE_NAVIGATION"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN"
    },
    {
      "type": "inherited-constants",
      "from": "setSystemUiVisibility(int)"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_FULLSCREEN"
    },
    {
      "type": "inherited-constants",
      "from": "fitSystemWindows(android.graphics.Rect)"
    },
    {
      "type": "inherited-constants",
      "from": "DisplayCutout"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_FULLSCREEN"
    },
    {
      "type": "inherited-constants",
      "from": "WindowManager.LayoutParams#layoutInDisplayCutoutMode"
    },
    {
      "type": "inherited-constants",
      "from": "WindowManager.LayoutParams#LAYOUT_IN_DISPLAY_CUTOUT_MODE_DEFAULT"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION"
    },
    {
      "type": "inherited-constants",
      "from": "setSystemUiVisibility(int)"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_HIDE_NAVIGATION"
    },
    {
      "type": "inherited-constants",
      "from": "fitSystemWindows(android.graphics.Rect)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_LAYOUT_STABLE"
    },
    {
      "type": "inherited-constants",
      "from": "setSystemUiVisibility(int)"
    },
    {
      "type": "inherited-constants",
      "from": "fitSystemWindows(android.graphics.Rect)"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_FULLSCREEN"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_FULLSCREEN"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_HIDE_NAVIGATION"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION"
    },
    {
      "type": "inherited-constants",
      "from": "WindowManager.LayoutParams#FLAG_FULLSCREEN"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_FULLSCREEN"
    },
    {
      "type": "inherited-constants",
      "from": "Window#FEATURE_ACTION_BAR_OVERLAY"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_LIGHT_NAVIGATION_BAR"
    },
    {
      "type": "inherited-constants",
      "from": "setSystemUiVisibility(int)"
    },
    {
      "type": "inherited-constants",
      "from": "FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS"
    },
    {
      "type": "inherited-constants",
      "from": "FLAG_TRANSLUCENT_NAVIGATION"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_LIGHT_STATUS_BAR"
    },
    {
      "type": "inherited-constants",
      "from": "setSystemUiVisibility(int)"
    },
    {
      "type": "inherited-constants",
      "from": "FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS"
    },
    {
      "type": "inherited-constants",
      "from": "FLAG_TRANSLUCENT_STATUS"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_LOW_PROFILE"
    },
    {
      "type": "inherited-constants",
      "from": "setSystemUiVisibility(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_FLAG_VISIBLE"
    },
    {
      "type": "inherited-constants",
      "from": "setSystemUiVisibility(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SYSTEM_UI_LAYOUT_FLAGS"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TEXT_ALIGNMENT_CENTER"
    },
    {
      "type": "inherited-constants",
      "from": "setTextAlignment(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TEXT_ALIGNMENT_GRAVITY"
    },
    {
      "type": "inherited-constants",
      "from": "setTextAlignment(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TEXT_ALIGNMENT_INHERIT"
    },
    {
      "type": "inherited-constants",
      "from": "setTextAlignment(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TEXT_ALIGNMENT_TEXT_END"
    },
    {
      "type": "inherited-constants",
      "from": "setTextAlignment(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TEXT_ALIGNMENT_TEXT_START"
    },
    {
      "type": "inherited-constants",
      "from": "setTextAlignment(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TEXT_ALIGNMENT_VIEW_END"
    },
    {
      "type": "inherited-constants",
      "from": "setTextAlignment(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TEXT_ALIGNMENT_VIEW_START"
    },
    {
      "type": "inherited-constants",
      "from": "setTextAlignment(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TEXT_DIRECTION_ANY_RTL"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TEXT_DIRECTION_FIRST_STRONG"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TEXT_DIRECTION_FIRST_STRONG_LTR"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TEXT_DIRECTION_FIRST_STRONG_RTL"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TEXT_DIRECTION_INHERIT"
    },
    {
      "type": "inherited-constants",
      "from": "ViewGroup"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TEXT_DIRECTION_LOCALE"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TEXT_DIRECTION_LTR"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TEXT_DIRECTION_RTL"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "VIEW_LOG_TAG"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "VISIBLE"
    },
    {
      "type": "inherited-constants",
      "from": "setVisibility"
    },
    {
      "type": "inherited-constants",
      "from": "android:visibility"
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "code": "BufferType",
      "desc": "Type of the text buffer that defines the characteristics of the text such as static, styleable, or editable."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnEditorActionListener",
      "desc": "Interface definition for a callback to be invoked when an action is performed on the editor."
    },
    {
      "type": "nested-classes",
      "keyword": "open",
      "code": "SavedState",
      "desc": "User interface state that is stored by TextView for implementing View#onSaveInstanceState."
    },
    {
      "type": "inherited-methods",
      "from": "View"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "addChildrenForAccessibility(outChildren: ArrayList<View!>!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "addFocusables(views: ArrayList<View!>!, direction: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "addFocusables(views: ArrayList<View!>!, direction: Int, focusableMode: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "addKeyboardNavigationClusters(views: MutableCollection<View!>, direction: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "addOnAttachStateChangeListener(listener: View.OnAttachStateChangeListener!)"
    },
    {
      "type": "inherited-methods",
      "from": "removeOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "addOnLayoutChangeListener(listener: View.OnLayoutChangeListener!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "addOnUnhandledKeyEventListener(listener: View.OnUnhandledKeyEventListener!)"
    },
    {
      "type": "inherited-methods",
      "from": "KeyEvent"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "addTouchables(views: ArrayList<View!>!)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewPropertyAnimator!"
    },
    {
      "type": "inherited-methods",
      "from": "animate()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "announceForAccessibility(text: CharSequence!)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityEvent#TYPE_ANNOUNCEMENT"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityEvent"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "autofill(values: SparseArray<AutofillValue!>)"
    },
    {
      "type": "inherited-methods",
      "from": "onProvideAutofillVirtualStructure(android.view.ViewStructure,int)"
    },
    {
      "type": "inherited-methods",
      "from": "autofill(android.view.autofill.AutofillValue)"
    },
    {
      "type": "inherited-methods",
      "from": "onProvideAutofillVirtualStructure(android.view.ViewStructure,int)"
    },
    {
      "type": "inherited-methods",
      "from": "AutofillManager#notifyValueChanged(View, int, AutofillValue)"
    },
    {
      "type": "inherited-methods",
      "from": "?android:attr/autofilledHighlight"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "awakenScrollBars()"
    },
    {
      "type": "inherited-methods",
      "from": "isHorizontalScrollBarEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "isVerticalScrollBarEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "invalidate()"
    },
    {
      "type": "inherited-methods",
      "from": "invalidate()"
    },
    {
      "type": "inherited-methods",
      "from": "scrollBy(int,int)"
    },
    {
      "type": "inherited-methods",
      "from": "scrollTo(int,int)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "awakenScrollBars(startDelay: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "isHorizontalScrollBarEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "isVerticalScrollBarEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "invalidate()"
    },
    {
      "type": "inherited-methods",
      "from": "invalidate()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "awakenScrollBars(startDelay: Int, invalidate: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "isHorizontalScrollBarEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "isVerticalScrollBarEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "invalidate()"
    },
    {
      "type": "inherited-methods",
      "from": "invalidate()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "bringToFront()"
    },
    {
      "type": "inherited-methods",
      "from": "android.os.Build.VERSION_CODES#KITKAT"
    },
    {
      "type": "inherited-methods",
      "from": "requestLayout()"
    },
    {
      "type": "inherited-methods",
      "from": "View#invalidate()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "buildDrawingCache()"
    },
    {
      "type": "inherited-methods",
      "from": "buildDrawingCache(false)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "buildDrawingCache(autoScale: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "buildDrawingCache()"
    },
    {
      "type": "inherited-methods",
      "from": "setDrawingCacheEnabled(true)"
    },
    {
      "type": "inherited-methods",
      "from": "destroyDrawingCache()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "buildLayer()"
    },
    {
      "type": "inherited-methods",
      "from": "LAYER_TYPE_NONE"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "callOnClick()"
    },
    {
      "type": "inherited-methods",
      "from": "performClick()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "canResolveLayoutDirection()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "canResolveTextAlignment()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "canResolveTextDirection()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "canScrollHorizontally(direction: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "canScrollVertically(direction: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "cancelDragAndDrop()"
    },
    {
      "type": "inherited-methods",
      "from": "android.view.DragEvent"
    },
    {
      "type": "inherited-methods",
      "from": "android.view.DragEvent#getAction()"
    },
    {
      "type": "inherited-methods",
      "from": "android.view.DragEvent#ACTION_DRAG_ENDED"
    },
    {
      "type": "inherited-methods",
      "from": "android.view.DragEvent#getResult()"
    },
    {
      "type": "inherited-methods",
      "from": "false"
    },
    {
      "type": "inherited-methods",
      "from": "android.view.DragEvent#ACTION_DRAG_STARTED"
    },
    {
      "type": "inherited-methods",
      "from": "startDragAndDrop"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "cancelPendingInputEvents()"
    },
    {
      "type": "inherited-methods",
      "from": "onCancelPendingInputEvents()"
    },
    {
      "type": "inherited-methods",
      "from": "setEnabled(false)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "checkInputConnectionProxy(view: View!)"
    },
    {
      "type": "inherited-methods",
      "from": "android.view.inputmethod.InputMethodManager"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "clearAnimation()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "clearFocus()"
    },
    {
      "type": "inherited-methods",
      "from": "onFocusChanged(boolean,int,android.graphics.Rect)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "combineMeasuredStates(curState: Int, newState: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "getMeasuredState()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "computeHorizontalScrollExtent()"
    },
    {
      "type": "inherited-methods",
      "from": "computeHorizontalScrollRange()"
    },
    {
      "type": "inherited-methods",
      "from": "computeHorizontalScrollOffset()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "computeHorizontalScrollOffset()"
    },
    {
      "type": "inherited-methods",
      "from": "computeHorizontalScrollRange()"
    },
    {
      "type": "inherited-methods",
      "from": "computeHorizontalScrollExtent()"
    },
    {
      "type": "inherited-methods",
      "from": "WindowInsets!"
    },
    {
      "type": "inherited-methods",
      "from": "computeSystemWindowInsets(in: WindowInsets!, outLocalInsets: Rect!)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "computeVerticalScrollOffset()"
    },
    {
      "type": "inherited-methods",
      "from": "computeVerticalScrollRange()"
    },
    {
      "type": "inherited-methods",
      "from": "computeVerticalScrollExtent()"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityNodeInfo!"
    },
    {
      "type": "inherited-methods",
      "from": "createAccessibilityNodeInfo()"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityNodeInfo"
    },
    {
      "type": "inherited-methods",
      "from": "android.accessibilityservice.AccessibilityService"
    },
    {
      "type": "inherited-methods",
      "from": "onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityNodeInfo#recycle()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "createContextMenu(menu: ContextMenu!)"
    },
    {
      "type": "inherited-methods",
      "from": "onCreateContextMenu(android.view.ContextMenu)"
    },
    {
      "type": "inherited-methods",
      "from": "OnCreateContextMenuListener"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "destroyDrawingCache()"
    },
    {
      "type": "inherited-methods",
      "from": "buildDrawingCache()"
    },
    {
      "type": "inherited-methods",
      "from": "setDrawingCacheEnabled(true)"
    },
    {
      "type": "inherited-methods",
      "from": "WindowInsets!"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchApplyWindowInsets(insets: WindowInsets!)"
    },
    {
      "type": "inherited-methods",
      "from": "onApplyWindowInsets(android.view.WindowInsets)"
    },
    {
      "type": "inherited-methods",
      "from": "OnApplyWindowInsetsListener"
    },
    {
      "type": "inherited-methods",
      "from": "setOnApplyWindowInsetsListener"
    },
    {
      "type": "inherited-methods",
      "from": "fitSystemWindows"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchCapturedPointerEvent(event: MotionEvent!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchConfigurationChanged(newConfig: Configuration!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchDisplayHint(hint: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchDragEvent(event: DragEvent!)"
    },
    {
      "type": "inherited-methods",
      "from": "android.view.DragEvent"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "onDragEvent()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchDraw(canvas: Canvas!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchDrawableHotspotChanged(x: Float, y: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchFinishTemporaryDetach()"
    },
    {
      "type": "inherited-methods",
      "from": "onFinishTemporaryDetach()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchGenericFocusedEvent(event: MotionEvent!)"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchGenericMotionEvent(android.view.MotionEvent)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchGenericMotionEvent(event: MotionEvent!)"
    },
    {
      "type": "inherited-methods",
      "from": "InputDevice#SOURCE_CLASS_POINTER"
    },
    {
      "type": "inherited-methods",
      "from": "onHoverEvent(android.view.MotionEvent)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchGenericPointerEvent(event: MotionEvent!)"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchGenericMotionEvent(android.view.MotionEvent)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchHoverEvent(event: MotionEvent!)"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchGenericMotionEvent(android.view.MotionEvent)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchKeyEvent(event: KeyEvent!)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchKeyEventPreIme(event: KeyEvent!)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchKeyShortcutEvent(event: KeyEvent!)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchNestedFling(velocityX: Float, velocityY: Float, consumed: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "VelocityTracker"
    },
    {
      "type": "inherited-methods",
      "from": "ViewConfiguration#getScaledMinimumFlingVelocity()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchNestedPreFling(velocityX: Float, velocityY: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchNestedPreFling"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchNestedPreFling"
    },
    {
      "type": "inherited-methods",
      "from": "ScrollView"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchNestedPrePerformAccessibilityAction(action: Int, arguments: Bundle!)"
    },
    {
      "type": "inherited-methods",
      "from": "performAccessibilityAction(int,android.os.Bundle)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewParent#onNestedPrePerformAccessibilityAction(View, int, android.os.Bundle)"
    },
    {
      "type": "inherited-methods",
      "from": "isNestedScrollingEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchNestedPreScroll(dx: Int, dy: Int, consumed: IntArray?, offsetInWindow: IntArray?)"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchNestedPreScroll"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchNestedScroll(dxConsumed: Int, dyConsumed: Int, dxUnconsumed: Int, dyUnconsumed: Int, offsetInWindow: IntArray?)"
    },
    {
      "type": "inherited-methods",
      "from": "enabled"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchNestedPreScroll"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchPointerCaptureChanged(hasCapture: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchPopulateAccessibilityEvent(event: AccessibilityEvent!)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityEvent"
    },
    {
      "type": "inherited-methods",
      "from": "View"
    },
    {
      "type": "inherited-methods",
      "from": "onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityDelegate"
    },
    {
      "type": "inherited-methods",
      "from": "setAccessibilityDelegate(android.view.View.AccessibilityDelegate)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityDelegate#dispatchPopulateAccessibilityEvent(View, AccessibilityEvent)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityEvent"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchProvideAutofillStructure(structure: ViewStructure, flags: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure"
    },
    {
      "type": "inherited-methods",
      "from": "AutofillId"
    },
    {
      "type": "inherited-methods",
      "from": "onProvideAutofillStructure(android.view.ViewStructure,int)"
    },
    {
      "type": "inherited-methods",
      "from": "onProvideAutofillVirtualStructure(android.view.ViewStructure,int)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewGroup"
    },
    {
      "type": "inherited-methods",
      "from": "onProvideAutofillStructure(android.view.ViewStructure,int)"
    },
    {
      "type": "inherited-methods",
      "from": "onProvideAutofillVirtualStructure(android.view.ViewStructure,int)"
    },
    {
      "type": "inherited-methods",
      "from": "super.dispatchProvideAutofillStructure(structure, flags)"
    },
    {
      "type": "inherited-methods",
      "from": "AutofillId"
    },
    {
      "type": "inherited-methods",
      "from": "structure.setAutofillId(getAutofillId())"
    },
    {
      "type": "inherited-methods",
      "from": "AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS"
    },
    {
      "type": "inherited-methods",
      "from": "isImportantForAutofill()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchProvideStructure(structure: ViewStructure!)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure"
    },
    {
      "type": "inherited-methods",
      "from": "onProvideStructure"
    },
    {
      "type": "inherited-methods",
      "from": "onProvideVirtualStructure"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchRestoreInstanceState(container: SparseArray<Parcelable!>!)"
    },
    {
      "type": "inherited-methods",
      "from": "restoreHierarchyState(android.util.SparseArray)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchSaveInstanceState(container: SparseArray<Parcelable!>!)"
    },
    {
      "type": "inherited-methods",
      "from": "saveHierarchyState(android.util.SparseArray)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchSetActivated(activated: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchSetPressed(pressed: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchSetSelected(selected: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchStartTemporaryDetach()"
    },
    {
      "type": "inherited-methods",
      "from": "onStartTemporaryDetach()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchSystemUiVisibilityChanged(visibility: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "setOnSystemUiVisibilityChangeListener"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchTouchEvent(event: MotionEvent!)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchTrackballEvent(event: MotionEvent!)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchUnhandledMove(focused: View!, direction: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchVisibilityChanged(changedView: View, visibility: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchWindowFocusChanged(hasFocus: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchWindowInsetsAnimationEnd(animation: WindowInsetsAnimation)"
    },
    {
      "type": "inherited-methods",
      "from": "WindowInsetsAnimation.Callback#onEnd(WindowInsetsAnimation)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchWindowInsetsAnimationPrepare(animation: WindowInsetsAnimation)"
    },
    {
      "type": "inherited-methods",
      "from": "WindowInsetsAnimation.Callback#onPrepare(WindowInsetsAnimation)"
    },
    {
      "type": "inherited-methods",
      "from": "WindowInsets"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchWindowInsetsAnimationProgress(insets: WindowInsets, runningAnimations: MutableList<WindowInsetsAnimation!>)"
    },
    {
      "type": "inherited-methods",
      "from": "WindowInsetsAnimation.Callback#onProgress(WindowInsets, List)"
    },
    {
      "type": "inherited-methods",
      "from": "WindowInsetsAnimation.Bounds"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchWindowInsetsAnimationStart(animation: WindowInsetsAnimation, bounds: WindowInsetsAnimation.Bounds)"
    },
    {
      "type": "inherited-methods",
      "from": "WindowInsetsAnimation.Callback#onStart(WindowInsetsAnimation, Bounds)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchWindowSystemUiVisiblityChanged(visible: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "onWindowSystemUiVisibilityChanged(int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchWindowVisibilityChanged(visibility: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "draw(canvas: Canvas!)"
    },
    {
      "type": "inherited-methods",
      "from": "onDraw(android.graphics.Canvas)"
    },
    {
      "type": "inherited-methods",
      "from": "View!"
    },
    {
      "type": "inherited-methods",
      "from": "findFocus()"
    },
    {
      "type": "inherited-methods",
      "from": "T"
    },
    {
      "type": "inherited-methods",
      "from": "findViewById(id: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "getId()"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "T"
    },
    {
      "type": "inherited-methods",
      "from": "findViewWithTag(tag: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "fitSystemWindows(insets: Rect!)"
    },
    {
      "type": "inherited-methods",
      "from": "SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN"
    },
    {
      "type": "inherited-methods",
      "from": "SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION"
    },
    {
      "type": "inherited-methods",
      "from": "setFitsSystemWindows(boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "setSystemUiVisibility(int)"
    },
    {
      "type": "inherited-methods",
      "from": "View!"
    },
    {
      "type": "inherited-methods",
      "from": "focusSearch(direction: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "forceHasOverlappingRendering(hasOverlappingRendering: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": ""
    },
    {
      "type": "inherited-methods",
      "from": "hasOverlappingRendering()"
    },
    {
      "type": "inherited-methods",
      "from": ""
    },
    {
      "type": "inherited-methods",
      "from": ""
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "forceLayout()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "generateViewId()"
    },
    {
      "type": "inherited-methods",
      "from": "setId(int)"
    },
    {
      "type": "inherited-methods",
      "from": "View.AccessibilityDelegate!"
    },
    {
      "type": "inherited-methods",
      "from": "getAccessibilityDelegate()"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityDelegate"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getAccessibilityLiveRegion()"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityNodeProvider!"
    },
    {
      "type": "inherited-methods",
      "from": "getAccessibilityNodeProvider()"
    },
    {
      "type": "inherited-methods",
      "from": "android.accessibilityservice.AccessibilityService"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityNodeInfo"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityDelegate"
    },
    {
      "type": "inherited-methods",
      "from": "setAccessibilityDelegate(android.view.View.AccessibilityDelegate)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityDelegate#getAccessibilityNodeProvider(View)"
    },
    {
      "type": "inherited-methods",
      "from": "CharSequence?"
    },
    {
      "type": "inherited-methods",
      "from": "getAccessibilityPaneTitle()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getAccessibilityTraversalAfter()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getAccessibilityTraversalBefore()"
    },
    {
      "type": "inherited-methods",
      "from": "Float"
    },
    {
      "type": "inherited-methods",
      "from": "getAlpha()"
    },
    {
      "type": "inherited-methods",
      "from": "Animation!"
    },
    {
      "type": "inherited-methods",
      "from": "getAnimation()"
    },
    {
      "type": "inherited-methods",
      "from": "Matrix?"
    },
    {
      "type": "inherited-methods",
      "from": "getAnimationMatrix()"
    },
    {
      "type": "inherited-methods",
      "from": "android.transition.Transition"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "setAnimationMatrix(android.graphics.Matrix)"
    },
    {
      "type": "inherited-methods",
      "from": "setRotation(float)"
    },
    {
      "type": "inherited-methods",
      "from": "setScaleX(float)"
    },
    {
      "type": "inherited-methods",
      "from": "setScaleX(float)"
    },
    {
      "type": "inherited-methods",
      "from": "setTranslationX(float)"
    },
    {
      "type": "inherited-methods",
      "from": "setTranslationY(float)"
    },
    {
      "type": "inherited-methods",
      "from": "IBinder!"
    },
    {
      "type": "inherited-methods",
      "from": "getApplicationWindowToken()"
    },
    {
      "type": "inherited-methods",
      "from": "getWindowToken"
    },
    {
      "type": "inherited-methods",
      "from": "IntArray"
    },
    {
      "type": "inherited-methods",
      "from": "getAttributeResolutionStack(attribute: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "View"
    },
    {
      "type": "inherited-methods",
      "from": "style=\"...\""
    },
    {
      "type": "inherited-methods",
      "from": "MutableMap<Int!, Int!>"
    },
    {
      "type": "inherited-methods",
      "from": "getAttributeSourceResourceMap()"
    },
    {
      "type": "inherited-methods",
      "from": "getAttributeSourceResourceMap()"
    },
    {
      "type": "inherited-methods",
      "from": "Array<String!>?"
    },
    {
      "type": "inherited-methods",
      "from": "getAutofillHints()"
    },
    {
      "type": "inherited-methods",
      "from": "android.service.autofill.AutofillService"
    },
    {
      "type": "inherited-methods",
      "from": "setAutofillHints(java.lang.String...)"
    },
    {
      "type": "inherited-methods",
      "from": "AutofillId!"
    },
    {
      "type": "inherited-methods",
      "from": "getAutofillId()"
    },
    {
      "type": "inherited-methods",
      "from": "setAutofillId(android.view.autofill.AutofillId)"
    },
    {
      "type": "inherited-methods",
      "from": "setAutofillId(android.view.autofill.AutofillId)"
    },
    {
      "type": "inherited-methods",
      "from": "Drawable!"
    },
    {
      "type": "inherited-methods",
      "from": "getBackground()"
    },
    {
      "type": "inherited-methods",
      "from": "BlendMode?"
    },
    {
      "type": "inherited-methods",
      "from": "getBackgroundTintBlendMode()"
    },
    {
      "type": "inherited-methods",
      "from": "ColorStateList?"
    },
    {
      "type": "inherited-methods",
      "from": "getBackgroundTintList()"
    },
    {
      "type": "inherited-methods",
      "from": "PorterDuff.Mode?"
    },
    {
      "type": "inherited-methods",
      "from": "getBackgroundTintMode()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getBottom()"
    },
    {
      "type": "inherited-methods",
      "from": "Float"
    },
    {
      "type": "inherited-methods",
      "from": "getBottomFadingEdgeStrength()"
    },
    {
      "type": "inherited-methods",
      "from": "Float"
    },
    {
      "type": "inherited-methods",
      "from": "getCameraDistance()"
    },
    {
      "type": "inherited-methods",
      "from": "Rect!"
    },
    {
      "type": "inherited-methods",
      "from": "getClipBounds()"
    },
    {
      "type": "inherited-methods",
      "from": "clipBounds"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "getClipBounds(outRect: Rect!)"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "false"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "getClipToOutline()"
    },
    {
      "type": "inherited-methods",
      "from": "Outline#canClip()"
    },
    {
      "type": "inherited-methods",
      "from": "ContentCaptureSession?"
    },
    {
      "type": "inherited-methods",
      "from": "getContentCaptureSession()"
    },
    {
      "type": "inherited-methods",
      "from": "CharSequence!"
    },
    {
      "type": "inherited-methods",
      "from": "getContentDescription()"
    },
    {
      "type": "inherited-methods",
      "from": "View"
    },
    {
      "type": "inherited-methods",
      "from": "setContentDescription(java.lang.CharSequence)"
    },
    {
      "type": "inherited-methods",
      "from": "Context!"
    },
    {
      "type": "inherited-methods",
      "from": "getContext()"
    },
    {
      "type": "inherited-methods",
      "from": "ContextMenu.ContextMenuInfo!"
    },
    {
      "type": "inherited-methods",
      "from": "getContextMenuInfo()"
    },
    {
      "type": "inherited-methods",
      "from": "OnCreateContextMenuListener#onCreateContextMenu(ContextMenu, View, ContextMenuInfo)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "getDefaultFocusHighlightEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "android.R.attr#state_focused"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getDefaultSize(size: Int, measureSpec: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Display!"
    },
    {
      "type": "inherited-methods",
      "from": "getDisplay()"
    },
    {
      "type": "inherited-methods",
      "from": "IntArray!"
    },
    {
      "type": "inherited-methods",
      "from": "getDrawableState()"
    },
    {
      "type": "inherited-methods",
      "from": "Bitmap!"
    },
    {
      "type": "inherited-methods",
      "from": "getDrawingCache()"
    },
    {
      "type": "inherited-methods",
      "from": "getDrawingCache(false)"
    },
    {
      "type": "inherited-methods",
      "from": "Bitmap!"
    },
    {
      "type": "inherited-methods",
      "from": "getDrawingCache(autoScale: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "draw(android.graphics.Canvas)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getDrawingCacheBackgroundColor()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getDrawingCacheQuality()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "getDrawingRect(outRect: Rect!)"
    },
    {
      "type": "inherited-methods",
      "from": "setScaleX(float)"
    },
    {
      "type": "inherited-methods",
      "from": "setRotation(float)"
    },
    {
      "type": "inherited-methods",
      "from": "Long"
    },
    {
      "type": "inherited-methods",
      "from": "getDrawingTime()"
    },
    {
      "type": "inherited-methods",
      "from": "Float"
    },
    {
      "type": "inherited-methods",
      "from": "getElevation()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getExplicitStyle()"
    },
    {
      "type": "inherited-methods",
      "from": "style=\"...\""
    },
    {
      "type": "inherited-methods",
      "from": "AttributeSet"
    },
    {
      "type": "inherited-methods",
      "from": "Resources#ID_NULL"
    },
    {
      "type": "inherited-methods",
      "from": "View"
    },
    {
      "type": "inherited-methods",
      "from": "View"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "getFilterTouchesWhenObscured()"
    },
    {
      "type": "inherited-methods",
      "from": "View"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "getFitsSystemWindows()"
    },
    {
      "type": "inherited-methods",
      "from": "setFitsSystemWindows(boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "fitSystemWindows(android.graphics.Rect)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getFocusable()"
    },
    {
      "type": "inherited-methods",
      "from": "ArrayList<View!>!"
    },
    {
      "type": "inherited-methods",
      "from": "getFocusables(direction: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Drawable!"
    },
    {
      "type": "inherited-methods",
      "from": "getForeground()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getForegroundGravity()"
    },
    {
      "type": "inherited-methods",
      "from": "BlendMode?"
    },
    {
      "type": "inherited-methods",
      "from": "getForegroundTintBlendMode()"
    },
    {
      "type": "inherited-methods",
      "from": "ColorStateList?"
    },
    {
      "type": "inherited-methods",
      "from": "getForegroundTintList()"
    },
    {
      "type": "inherited-methods",
      "from": "PorterDuff.Mode?"
    },
    {
      "type": "inherited-methods",
      "from": "getForegroundTintMode()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "getGlobalVisibleRect(r: Rect!, globalOffset: Point!)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "getGlobalVisibleRect(r: Rect!)"
    },
    {
      "type": "inherited-methods",
      "from": "Handler!"
    },
    {
      "type": "inherited-methods",
      "from": "getHandler()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "getHasOverlappingRendering()"
    },
    {
      "type": "inherited-methods",
      "from": "forceHasOverlappingRendering(boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "hasOverlappingRendering()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getHeight()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "getHitRect(outRect: Rect!)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getHorizontalFadingEdgeLength()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getHorizontalScrollbarHeight()"
    },
    {
      "type": "inherited-methods",
      "from": "Drawable?"
    },
    {
      "type": "inherited-methods",
      "from": "getHorizontalScrollbarThumbDrawable()"
    },
    {
      "type": "inherited-methods",
      "from": "Drawable?"
    },
    {
      "type": "inherited-methods",
      "from": "getHorizontalScrollbarTrackDrawable()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getId()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getImportantForAccessibility()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getImportantForAutofill()"
    },
    {
      "type": "inherited-methods",
      "from": "setImportantForAutofill(int)"
    },
    {
      "type": "inherited-methods",
      "from": "isImportantForAutofill()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getImportantForContentCapture()"
    },
    {
      "type": "inherited-methods",
      "from": "setImportantForContentCapture(int)"
    },
    {
      "type": "inherited-methods",
      "from": "isImportantForContentCapture()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "getKeepScreenOn()"
    },
    {
      "type": "inherited-methods",
      "from": "KEEP_SCREEN_ON"
    },
    {
      "type": "inherited-methods",
      "from": "KeyEvent.DispatcherState!"
    },
    {
      "type": "inherited-methods",
      "from": "getKeyDispatcherState()"
    },
    {
      "type": "inherited-methods",
      "from": "KeyEvent.DispatcherState"
    },
    {
      "type": "inherited-methods",
      "from": "onKeyDown(int,android.view.KeyEvent)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getLabelFor()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getLayerType()"
    },
    {
      "type": "inherited-methods",
      "from": "LAYER_TYPE_NONE"
    },
    {
      "type": "inherited-methods",
      "from": "setLayerType(int,android.graphics.Paint)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getLayoutDirection()"
    },
    {
      "type": "inherited-methods",
      "from": "ViewGroup.LayoutParams!"
    },
    {
      "type": "inherited-methods",
      "from": "getLayoutParams()"
    },
    {
      "type": "inherited-methods",
      "from": "setLayoutParams(android.view.ViewGroup.LayoutParams)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getLeft()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "getLocalVisibleRect(r: Rect!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "getLocationInSurface(location: IntArray)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "getLocationInWindow(outLocation: IntArray!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "getLocationOnScreen(outLocation: IntArray!)"
    },
    {
      "type": "inherited-methods",
      "from": "Matrix!"
    },
    {
      "type": "inherited-methods",
      "from": "getMatrix()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getMeasuredHeight()"
    },
    {
      "type": "inherited-methods",
      "from": "getMeasuredHeightAndState()"
    },
    {
      "type": "inherited-methods",
      "from": "MEASURED_SIZE_MASK"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getMeasuredHeightAndState()"
    },
    {
      "type": "inherited-methods",
      "from": "measure(int,int)"
    },
    {
      "type": "inherited-methods",
      "from": "MEASURED_SIZE_MASK"
    },
    {
      "type": "inherited-methods",
      "from": "MEASURED_STATE_TOO_SMALL"
    },
    {
      "type": "inherited-methods",
      "from": "getHeight()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getMeasuredState()"
    },
    {
      "type": "inherited-methods",
      "from": "getMeasuredWidthAndState()"
    },
    {
      "type": "inherited-methods",
      "from": "getMeasuredHeightAndState()"
    },
    {
      "type": "inherited-methods",
      "from": "MEASURED_STATE_MASK"
    },
    {
      "type": "inherited-methods",
      "from": "MEASURED_HEIGHT_STATE_SHIFT"
    },
    {
      "type": "inherited-methods",
      "from": "MEASURED_STATE_MASK"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getMeasuredWidth()"
    },
    {
      "type": "inherited-methods",
      "from": "getMeasuredWidthAndState()"
    },
    {
      "type": "inherited-methods",
      "from": "MEASURED_SIZE_MASK"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getMeasuredWidthAndState()"
    },
    {
      "type": "inherited-methods",
      "from": "measure(int,int)"
    },
    {
      "type": "inherited-methods",
      "from": "MEASURED_SIZE_MASK"
    },
    {
      "type": "inherited-methods",
      "from": "MEASURED_STATE_TOO_SMALL"
    },
    {
      "type": "inherited-methods",
      "from": "getWidth()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getMinimumHeight()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getMinimumWidth()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getNextClusterForwardId()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getNextFocusDownId()"
    },
    {
      "type": "inherited-methods",
      "from": "FOCUS_DOWN"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getNextFocusForwardId()"
    },
    {
      "type": "inherited-methods",
      "from": "FOCUS_FORWARD"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getNextFocusLeftId()"
    },
    {
      "type": "inherited-methods",
      "from": "FOCUS_LEFT"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getNextFocusRightId()"
    },
    {
      "type": "inherited-methods",
      "from": "FOCUS_RIGHT"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getNextFocusUpId()"
    },
    {
      "type": "inherited-methods",
      "from": "FOCUS_UP"
    },
    {
      "type": "inherited-methods",
      "from": "View.OnFocusChangeListener!"
    },
    {
      "type": "inherited-methods",
      "from": "getOnFocusChangeListener()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getOutlineAmbientShadowColor()"
    },
    {
      "type": "inherited-methods",
      "from": "ViewOutlineProvider!"
    },
    {
      "type": "inherited-methods",
      "from": "getOutlineProvider()"
    },
    {
      "type": "inherited-methods",
      "from": "ViewOutlineProvider"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getOutlineSpotShadowColor()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getOverScrollMode()"
    },
    {
      "type": "inherited-methods",
      "from": "OVER_SCROLL_ALWAYS"
    },
    {
      "type": "inherited-methods",
      "from": "OVER_SCROLL_IF_CONTENT_SCROLLS"
    },
    {
      "type": "inherited-methods",
      "from": "OVER_SCROLL_NEVER"
    },
    {
      "type": "inherited-methods",
      "from": "ViewOverlay!"
    },
    {
      "type": "inherited-methods",
      "from": "getOverlay()"
    },
    {
      "type": "inherited-methods",
      "from": "SurfaceView"
    },
    {
      "type": "inherited-methods",
      "from": "TextureView"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getPaddingBottom()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getPaddingEnd()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getPaddingLeft()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getPaddingRight()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getPaddingStart()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getPaddingTop()"
    },
    {
      "type": "inherited-methods",
      "from": "ViewParent!"
    },
    {
      "type": "inherited-methods",
      "from": "getParent()"
    },
    {
      "type": "inherited-methods",
      "from": "ViewParent!"
    },
    {
      "type": "inherited-methods",
      "from": "getParentForAccessibility()"
    },
    {
      "type": "inherited-methods",
      "from": "Float"
    },
    {
      "type": "inherited-methods",
      "from": "getPivotX()"
    },
    {
      "type": "inherited-methods",
      "from": "rotated"
    },
    {
      "type": "inherited-methods",
      "from": "scaled"
    },
    {
      "type": "inherited-methods",
      "from": "Float"
    },
    {
      "type": "inherited-methods",
      "from": "getPivotY()"
    },
    {
      "type": "inherited-methods",
      "from": "rotated"
    },
    {
      "type": "inherited-methods",
      "from": "scaled"
    },
    {
      "type": "inherited-methods",
      "from": "PointerIcon!"
    },
    {
      "type": "inherited-methods",
      "from": "getPointerIcon()"
    },
    {
      "type": "inherited-methods",
      "from": "Resources!"
    },
    {
      "type": "inherited-methods",
      "from": "getResources()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "getRevealOnFocusHint()"
    },
    {
      "type": "inherited-methods",
      "from": "ViewParent#requestChildFocus(View, View)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getRight()"
    },
    {
      "type": "inherited-methods",
      "from": "View!"
    },
    {
      "type": "inherited-methods",
      "from": "getRootView()"
    },
    {
      "type": "inherited-methods",
      "from": "WindowInsets!"
    },
    {
      "type": "inherited-methods",
      "from": "getRootWindowInsets()"
    },
    {
      "type": "inherited-methods",
      "from": "Float"
    },
    {
      "type": "inherited-methods",
      "from": "getRotation()"
    },
    {
      "type": "inherited-methods",
      "from": "Float"
    },
    {
      "type": "inherited-methods",
      "from": "getRotationX()"
    },
    {
      "type": "inherited-methods",
      "from": "Float"
    },
    {
      "type": "inherited-methods",
      "from": "getRotationY()"
    },
    {
      "type": "inherited-methods",
      "from": "Float"
    },
    {
      "type": "inherited-methods",
      "from": "getScaleX()"
    },
    {
      "type": "inherited-methods",
      "from": "Float"
    },
    {
      "type": "inherited-methods",
      "from": "getScaleY()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getScrollBarDefaultDelayBeforeFade()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getScrollBarFadeDuration()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getScrollBarSize()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getScrollBarStyle()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getScrollIndicators()"
    },
    {
      "type": "inherited-methods",
      "from": "View.SCROLL_INDICATOR_TOP | View.SCROLL_INDICATOR_LEFT"
    },
    {
      "type": "inherited-methods",
      "from": "(getScrollIndicators() & View.SCROLL_INDICATOR_BOTTOM) != 0"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getScrollX()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getScrollY()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getSolidColor()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getSourceLayoutResId()"
    },
    {
      "type": "inherited-methods",
      "from": "View"
    },
    {
      "type": "inherited-methods",
      "from": "CharSequence?"
    },
    {
      "type": "inherited-methods",
      "from": "getStateDescription()"
    },
    {
      "type": "inherited-methods",
      "from": "View"
    },
    {
      "type": "inherited-methods",
      "from": "setStateDescription(java.lang.CharSequence)"
    },
    {
      "type": "inherited-methods",
      "from": "StateListAnimator!"
    },
    {
      "type": "inherited-methods",
      "from": "getStateListAnimator()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getSuggestedMinimumHeight()"
    },
    {
      "type": "inherited-methods",
      "from": "android.graphics.drawable.Drawable#getMinimumHeight()"
    },
    {
      "type": "inherited-methods",
      "from": "onMeasure(int,int)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getSuggestedMinimumWidth()"
    },
    {
      "type": "inherited-methods",
      "from": "android.graphics.drawable.Drawable#getMinimumWidth()"
    },
    {
      "type": "inherited-methods",
      "from": "onMeasure(int,int)"
    },
    {
      "type": "inherited-methods",
      "from": "MutableList<Rect!>"
    },
    {
      "type": "inherited-methods",
      "from": "getSystemGestureExclusionRects()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getSystemUiVisibility()"
    },
    {
      "type": "inherited-methods",
      "from": "setSystemUiVisibility(int)"
    },
    {
      "type": "inherited-methods",
      "from": "Any!"
    },
    {
      "type": "inherited-methods",
      "from": "getTag()"
    },
    {
      "type": "inherited-methods",
      "from": "Any!"
    },
    {
      "type": "inherited-methods",
      "from": "getTag(key: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getTextAlignment()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getTextDirection()"
    },
    {
      "type": "inherited-methods",
      "from": "CharSequence?"
    },
    {
      "type": "inherited-methods",
      "from": "getTooltipText()"
    },
    {
      "type": "inherited-methods",
      "from": "setTooltipText(java.lang.CharSequence)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getTop()"
    },
    {
      "type": "inherited-methods",
      "from": "Float"
    },
    {
      "type": "inherited-methods",
      "from": "getTopFadingEdgeStrength()"
    },
    {
      "type": "inherited-methods",
      "from": "TouchDelegate!"
    },
    {
      "type": "inherited-methods",
      "from": "getTouchDelegate()"
    },
    {
      "type": "inherited-methods",
      "from": "ArrayList<View!>!"
    },
    {
      "type": "inherited-methods",
      "from": "getTouchables()"
    },
    {
      "type": "inherited-methods",
      "from": "Float"
    },
    {
      "type": "inherited-methods",
      "from": "getTransitionAlpha()"
    },
    {
      "type": "inherited-methods",
      "from": "String!"
    },
    {
      "type": "inherited-methods",
      "from": "getTransitionName()"
    },
    {
      "type": "inherited-methods",
      "from": "Float"
    },
    {
      "type": "inherited-methods",
      "from": "getTranslationX()"
    },
    {
      "type": "inherited-methods",
      "from": "left"
    },
    {
      "type": "inherited-methods",
      "from": "Float"
    },
    {
      "type": "inherited-methods",
      "from": "getTranslationY()"
    },
    {
      "type": "inherited-methods",
      "from": "top"
    },
    {
      "type": "inherited-methods",
      "from": "Float"
    },
    {
      "type": "inherited-methods",
      "from": "getTranslationZ()"
    },
    {
      "type": "inherited-methods",
      "from": "elevation"
    },
    {
      "type": "inherited-methods",
      "from": "Long"
    },
    {
      "type": "inherited-methods",
      "from": "getUniqueDrawingId()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getVerticalFadingEdgeLength()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getVerticalScrollbarPosition()"
    },
    {
      "type": "inherited-methods",
      "from": "Drawable?"
    },
    {
      "type": "inherited-methods",
      "from": "getVerticalScrollbarThumbDrawable()"
    },
    {
      "type": "inherited-methods",
      "from": "Drawable?"
    },
    {
      "type": "inherited-methods",
      "from": "getVerticalScrollbarTrackDrawable()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getVerticalScrollbarWidth()"
    },
    {
      "type": "inherited-methods",
      "from": "ViewTreeObserver!"
    },
    {
      "type": "inherited-methods",
      "from": "getViewTreeObserver()"
    },
    {
      "type": "inherited-methods",
      "from": "ViewTreeObserver#isAlive()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getVisibility()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getWidth()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getWindowAttachCount()"
    },
    {
      "type": "inherited-methods",
      "from": "WindowId!"
    },
    {
      "type": "inherited-methods",
      "from": "getWindowId()"
    },
    {
      "type": "inherited-methods",
      "from": "WindowId"
    },
    {
      "type": "inherited-methods",
      "from": "WindowInsetsController?"
    },
    {
      "type": "inherited-methods",
      "from": "getWindowInsetsController()"
    },
    {
      "type": "inherited-methods",
      "from": "WindowInsetsController"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getWindowSystemUiVisibility()"
    },
    {
      "type": "inherited-methods",
      "from": "setSystemUiVisibility(int)"
    },
    {
      "type": "inherited-methods",
      "from": "IBinder!"
    },
    {
      "type": "inherited-methods",
      "from": "getWindowToken()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getWindowVisibility()"
    },
    {
      "type": "inherited-methods",
      "from": "GONE"
    },
    {
      "type": "inherited-methods",
      "from": "INVISIBLE"
    },
    {
      "type": "inherited-methods",
      "from": "VISIBLE"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "getWindowVisibleDisplayFrame(outRect: Rect!)"
    },
    {
      "type": "inherited-methods",
      "from": "Float"
    },
    {
      "type": "inherited-methods",
      "from": "getX()"
    },
    {
      "type": "inherited-methods",
      "from": "translationX"
    },
    {
      "type": "inherited-methods",
      "from": "left"
    },
    {
      "type": "inherited-methods",
      "from": "Float"
    },
    {
      "type": "inherited-methods",
      "from": "getY()"
    },
    {
      "type": "inherited-methods",
      "from": "translationY"
    },
    {
      "type": "inherited-methods",
      "from": "top"
    },
    {
      "type": "inherited-methods",
      "from": "Float"
    },
    {
      "type": "inherited-methods",
      "from": "getZ()"
    },
    {
      "type": "inherited-methods",
      "from": "translationZ"
    },
    {
      "type": "inherited-methods",
      "from": "elevation"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "hasExplicitFocusable()"
    },
    {
      "type": "inherited-methods",
      "from": "hasExplicitFocusable()"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "VISIBLE"
    },
    {
      "type": "inherited-methods",
      "from": "getFocusable()"
    },
    {
      "type": "inherited-methods",
      "from": "FOCUSABLE"
    },
    {
      "type": "inherited-methods",
      "from": "Build.VERSION_CODES#O"
    },
    {
      "type": "inherited-methods",
      "from": "hasFocusable()"
    },
    {
      "type": "inherited-methods",
      "from": "FOCUSABLE_AUTO"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "hasFocus()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "hasFocusable()"
    },
    {
      "type": "inherited-methods",
      "from": "hasFocusable()"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "VISIBLE"
    },
    {
      "type": "inherited-methods",
      "from": "Build.VERSION_CODES#O"
    },
    {
      "type": "inherited-methods",
      "from": "FOCUSABLE_AUTO"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "android.content.pm.ApplicationInfo#targetSdkVersion"
    },
    {
      "type": "inherited-methods",
      "from": "Build.VERSION_CODES#O"
    },
    {
      "type": "inherited-methods",
      "from": "false"
    },
    {
      "type": "inherited-methods",
      "from": "hasExplicitFocusable()"
    },
    {
      "type": "inherited-methods",
      "from": "Build.VERSION_CODES#O"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "hasNestedScrollingParent()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "hasOnClickListeners()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "hasOnLongClickListeners()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "hasPointerCapture()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "hasTransientState()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "hasWindowFocus()"
    },
    {
      "type": "inherited-methods",
      "from": "View!"
    },
    {
      "type": "inherited-methods",
      "from": "inflate(context: Context!, resource: Int, root: ViewGroup!)"
    },
    {
      "type": "inherited-methods",
      "from": "LayoutInflater"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "invalidate(dirty: Rect!)"
    },
    {
      "type": "inherited-methods",
      "from": "onDraw(android.graphics.Canvas)"
    },
    {
      "type": "inherited-methods",
      "from": "postInvalidate()"
    },
    {
      "type": "inherited-methods",
      "from": "dirty"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "invalidate(l: Int, t: Int, r: Int, b: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "onDraw(android.graphics.Canvas)"
    },
    {
      "type": "inherited-methods",
      "from": "postInvalidate()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "invalidate()"
    },
    {
      "type": "inherited-methods",
      "from": "onDraw(android.graphics.Canvas)"
    },
    {
      "type": "inherited-methods",
      "from": "postInvalidate()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "invalidateOutline()"
    },
    {
      "type": "inherited-methods",
      "from": "ViewOutlineProvider"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isAccessibilityFocused()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isAccessibilityHeading()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isActivated()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isAttachedToWindow()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isClickable()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isContextClickable()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isDirty()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isDrawingCacheEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isDuplicateParentStateEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isFocusable()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isFocusableInTouchMode()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isFocused()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isFocusedByDefault()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isForceDarkAllowed()"
    },
    {
      "type": "inherited-methods",
      "from": "setForceDarkAllowed(boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isHapticFeedbackEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isHardwareAccelerated()"
    },
    {
      "type": "inherited-methods",
      "from": "draw(android.graphics.Canvas)"
    },
    {
      "type": "inherited-methods",
      "from": "android.graphics.Canvas"
    },
    {
      "type": "inherited-methods",
      "from": "android.graphics.Bitmap"
    },
    {
      "type": "inherited-methods",
      "from": "android.graphics.Canvas#isHardwareAccelerated()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isHorizontalFadingEdgeEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isHorizontalScrollBarEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isHovered()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isImportantForAccessibility()"
    },
    {
      "type": "inherited-methods",
      "from": "IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS"
    },
    {
      "type": "inherited-methods",
      "from": "false"
    },
    {
      "type": "inherited-methods",
      "from": "getImportantForAccessibility()"
    },
    {
      "type": "inherited-methods",
      "from": "IMPORTANT_FOR_ACCESSIBILITY_NO"
    },
    {
      "type": "inherited-methods",
      "from": "IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS"
    },
    {
      "type": "inherited-methods",
      "from": "false"
    },
    {
      "type": "inherited-methods",
      "from": "IMPORTANT_FOR_ACCESSIBILITY_YES"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "IMPORTANT_FOR_ACCESSIBILITY_AUTO"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "isClickable()"
    },
    {
      "type": "inherited-methods",
      "from": "isLongClickable()"
    },
    {
      "type": "inherited-methods",
      "from": "isFocusable()"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityDelegate"
    },
    {
      "type": "inherited-methods",
      "from": "OnTouchListener"
    },
    {
      "type": "inherited-methods",
      "from": "OnKeyListener"
    },
    {
      "type": "inherited-methods",
      "from": "getAccessibilityLiveRegion()"
    },
    {
      "type": "inherited-methods",
      "from": "ACCESSIBILITY_LIVE_REGION_NONE"
    },
    {
      "type": "inherited-methods",
      "from": "setAccessibilityPaneTitle"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isImportantForAutofill()"
    },
    {
      "type": "inherited-methods",
      "from": "android.app.assist.AssistStructure.ViewNode"
    },
    {
      "type": "inherited-methods",
      "from": "android.service.autofill.AutofillService"
    },
    {
      "type": "inherited-methods",
      "from": "android.service.autofill.AutofillService"
    },
    {
      "type": "inherited-methods",
      "from": "false"
    },
    {
      "type": "inherited-methods",
      "from": "credentials"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "false"
    },
    {
      "type": "inherited-methods",
      "from": "getImportantForAutofill()"
    },
    {
      "type": "inherited-methods",
      "from": "IMPORTANT_FOR_AUTOFILL_YES"
    },
    {
      "type": "inherited-methods",
      "from": "IMPORTANT_FOR_AUTOFILL_YES_EXCLUDE_DESCENDANTS"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "IMPORTANT_FOR_AUTOFILL_NO"
    },
    {
      "type": "inherited-methods",
      "from": "IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS"
    },
    {
      "type": "inherited-methods",
      "from": "false"
    },
    {
      "type": "inherited-methods",
      "from": "IMPORTANT_FOR_AUTOFILL_AUTO"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "false"
    },
    {
      "type": "inherited-methods",
      "from": "false"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure"
    },
    {
      "type": "inherited-methods",
      "from": "AutofillManager#requestAutofill(View)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure"
    },
    {
      "type": "inherited-methods",
      "from": "AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isImportantForContentCapture()"
    },
    {
      "type": "inherited-methods",
      "from": "setImportantForContentCapture(int)"
    },
    {
      "type": "inherited-methods",
      "from": "IMPORTANT_FOR_CONTENT_CAPTURE_AUTO"
    },
    {
      "type": "inherited-methods",
      "from": "ContentCaptureManager"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isInEditMode()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isInLayout()"
    },
    {
      "type": "inherited-methods",
      "from": "requestLayout()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isInTouchMode()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isKeyboardNavigationCluster()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isLaidOut()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isLayoutDirectionResolved()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isLayoutRequested()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isLongClickable()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isNestedScrollingEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isOpaque()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isPaddingRelative()"
    },
    {
      "type": "inherited-methods",
      "from": "setPaddingRelative(int,int,int,int)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isPivotSet()"
    },
    {
      "type": "inherited-methods",
      "from": "setPivotX(float)"
    },
    {
      "type": "inherited-methods",
      "from": "setPivotY(float)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isPressed()"
    },
    {
      "type": "inherited-methods",
      "from": "setPressed(boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isSaveEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "onSaveInstanceState"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isSaveFromParentEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "saveHierarchyState(android.util.SparseArray)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isScreenReaderFocusable()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isScrollContainer()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isScrollbarFadingEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isSelected()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isShowingLayoutBounds()"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "false"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isShown()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isSoundEffectsEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isTemporarilyDetached()"
    },
    {
      "type": "inherited-methods",
      "from": "View"
    },
    {
      "type": "inherited-methods",
      "from": "onStartTemporaryDetach()"
    },
    {
      "type": "inherited-methods",
      "from": "onFinishTemporaryDetach()"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "onStartTemporaryDetach()"
    },
    {
      "type": "inherited-methods",
      "from": "onFinishTemporaryDetach()"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "API 24"
    },
    {
      "type": "inherited-methods",
      "from": "false"
    },
    {
      "type": "inherited-methods",
      "from": "API 25"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isTextAlignmentResolved()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isTextDirectionResolved()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isVerticalFadingEdgeEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isVerticalScrollBarEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isVisibleToUserForAutofill(virtualId: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "View!"
    },
    {
      "type": "inherited-methods",
      "from": "keyboardNavigationClusterSearch(currentCluster: View!, direction: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "layout(l: Int, t: Int, r: Int, b: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "measure(widthMeasureSpec: Int, heightMeasureSpec: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "onMeasure(int,int)"
    },
    {
      "type": "inherited-methods",
      "from": "onMeasure(int,int)"
    },
    {
      "type": "inherited-methods",
      "from": "IntArray!"
    },
    {
      "type": "inherited-methods",
      "from": "mergeDrawableStates(baseState: IntArray!, additionalState: IntArray!)"
    },
    {
      "type": "inherited-methods",
      "from": "onCreateDrawableState(int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "offsetLeftAndRight(offset: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "offsetTopAndBottom(offset: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onAnimationEnd()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onAnimationStart()"
    },
    {
      "type": "inherited-methods",
      "from": "WindowInsets!"
    },
    {
      "type": "inherited-methods",
      "from": "onApplyWindowInsets(insets: WindowInsets!)"
    },
    {
      "type": "inherited-methods",
      "from": "WindowInsets"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchApplyWindowInsets(android.view.WindowInsets)"
    },
    {
      "type": "inherited-methods",
      "from": "OnApplyWindowInsetsListener"
    },
    {
      "type": "inherited-methods",
      "from": "WindowInsets"
    },
    {
      "type": "inherited-methods",
      "from": "fitsSystemWindows"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onCancelPendingInputEvents()"
    },
    {
      "type": "inherited-methods",
      "from": "cancelPendingInputEvents()"
    },
    {
      "type": "inherited-methods",
      "from": "post(java.lang.Runnable)"
    },
    {
      "type": "inherited-methods",
      "from": "postDelayed(java.lang.Runnable,long)"
    },
    {
      "type": "inherited-methods",
      "from": "android.os.Handler"
    },
    {
      "type": "inherited-methods",
      "from": "super.onCancelPendingInputEvents()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "onCapturedPointerEvent(event: MotionEvent!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onDetachedFromWindow()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onDisplayHint(hint: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onDrawForeground(canvas: Canvas!)"
    },
    {
      "type": "inherited-methods",
      "from": "foreground"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onDrawScrollBars(canvas: Canvas!)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "onFilterTouchEventForSecurity(event: MotionEvent!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onFinishInflate()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onFinishTemporaryDetach()"
    },
    {
      "type": "inherited-methods",
      "from": "onStartTemporaryDetach"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onHoverChanged(hovered: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "setHovered"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "onHoverEvent(event: MotionEvent!)"
    },
    {
      "type": "inherited-methods",
      "from": "MotionEvent#ACTION_HOVER_ENTER"
    },
    {
      "type": "inherited-methods",
      "from": "MotionEvent#ACTION_HOVER_MOVE"
    },
    {
      "type": "inherited-methods",
      "from": "MotionEvent#ACTION_HOVER_EXIT"
    },
    {
      "type": "inherited-methods",
      "from": "MotionEvent#ACTION_HOVER_ENTER"
    },
    {
      "type": "inherited-methods",
      "from": "MotionEvent#ACTION_HOVER_MOVE"
    },
    {
      "type": "inherited-methods",
      "from": "MotionEvent#ACTION_HOVER_EXIT"
    },
    {
      "type": "inherited-methods",
      "from": "setHovered"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onInitializeAccessibilityEvent(event: AccessibilityEvent!)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityEvent"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityDelegate"
    },
    {
      "type": "inherited-methods",
      "from": "setAccessibilityDelegate(android.view.View.AccessibilityDelegate)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityDelegate#onInitializeAccessibilityEvent(View, AccessibilityEvent)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onInitializeAccessibilityNodeInfo(info: AccessibilityNodeInfo!)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityNodeInfo"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityNodeInfo#setParent(View)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityNodeInfo#setBoundsInParent(Rect)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityNodeInfo#setBoundsInScreen(Rect)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityNodeInfo#setPackageName(CharSequence)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityNodeInfo#setClassName(CharSequence)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityNodeInfo#setContentDescription(CharSequence)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityNodeInfo#setEnabled(boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityNodeInfo#setClickable(boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityNodeInfo#setFocusable(boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityNodeInfo#setFocused(boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityNodeInfo#setLongClickable(boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityNodeInfo#setSelected(boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityNodeInfo#setContextClickable(boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityDelegate"
    },
    {
      "type": "inherited-methods",
      "from": "setAccessibilityDelegate(android.view.View.AccessibilityDelegate)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityDelegate#onInitializeAccessibilityNodeInfo(View, AccessibilityNodeInfo)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "onKeyLongPress(keyCode: Int, event: KeyEvent!)"
    },
    {
      "type": "inherited-methods",
      "from": "KeyEvent.Callback#onKeyLongPress(int, KeyEvent)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onOverScrolled(scrollX: Int, scrollY: Int, clampedX: Boolean, clampedY: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "overScrollBy(int,int,int,int,int,int,int,int,boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onPointerCaptureChange(hasCapture: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onPopulateAccessibilityEvent(event: AccessibilityEvent!)"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
    },
    {
      "type": "inherited-methods",
      "from": "onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityDelegate"
    },
    {
      "type": "inherited-methods",
      "from": "setAccessibilityDelegate(android.view.View.AccessibilityDelegate)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityDelegate#onPopulateAccessibilityEvent(View, AccessibilityEvent)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onProvideAutofillStructure(structure: ViewStructure!, flags: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setAutofillId(AutofillId, int)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setAutofillType(int)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setAutofillValue(AutofillValue)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setDataIsSensitive(boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "android.service.autofill.AutofillService"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setAutofillHints(String[])"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setAutofillOptions(CharSequence[])"
    },
    {
      "type": "inherited-methods",
      "from": "AUTOFILL_TYPE_LIST"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setId(int, String, String, String)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setClassName(String)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setContentDescription(CharSequence)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setVisibility(int)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setDimens(int, int, int, int, int, int)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setOpaque(boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setText(CharSequence)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setHint(CharSequence)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setInputType(int)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setWebDomain(String)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setHtmlInfo(android.view.ViewStructure.HtmlInfo)"
    },
    {
      "type": "inherited-methods",
      "from": "View"
    },
    {
      "type": "inherited-methods",
      "from": "getAutofillId()"
    },
    {
      "type": "inherited-methods",
      "from": "getAutofillType()"
    },
    {
      "type": "inherited-methods",
      "from": "android.widget.TextView"
    },
    {
      "type": "inherited-methods",
      "from": "super.onProvideAutofillStructure()"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setDataIsSensitive(boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "false"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setAutofillOptions(CharSequence[])"
    },
    {
      "type": "inherited-methods",
      "from": "left"
    },
    {
      "type": "inherited-methods",
      "from": "top"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setDimens(int, int, int, int, int, int)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewGroup#isImportantForAutofill()"
    },
    {
      "type": "inherited-methods",
      "from": "AutofillManager#notifyValueChanged(View)"
    },
    {
      "type": "inherited-methods",
      "from": "autofill(android.view.autofill.AutofillValue)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onProvideAutofillVirtualStructure(structure: ViewStructure!, flags: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure"
    },
    {
      "type": "inherited-methods",
      "from": "draw(android.graphics.Canvas)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#newChild(int)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#asyncNewChild(int)"
    },
    {
      "type": "inherited-methods",
      "from": "id"
    },
    {
      "type": "inherited-methods",
      "from": "autofill(android.util.SparseArray)"
    },
    {
      "type": "inherited-methods",
      "from": "onProvideAutofillStructure(android.view.ViewStructure,int)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setAutofillId(AutofillId, int)"
    },
    {
      "type": "inherited-methods",
      "from": "android.view.autofill.AutofillManager#notifyViewEntered(View, int, Rect)"
    },
    {
      "type": "inherited-methods",
      "from": "android.view.autofill.AutofillManager#notifyViewExited(View, int)"
    },
    {
      "type": "inherited-methods",
      "from": "isVisibleToUserForAutofill(int)"
    },
    {
      "type": "inherited-methods",
      "from": "android.view.autofill.AutofillManager#notifyValueChanged(View, int, AutofillValue)"
    },
    {
      "type": "inherited-methods",
      "from": ""
    },
    {
      "type": "inherited-methods",
      "from": "android.view.autofill.AutofillManager#notifyViewClicked(View, int)"
    },
    {
      "type": "inherited-methods",
      "from": "AutofillManager#commit()"
    },
    {
      "type": "inherited-methods",
      "from": "SUBMIT"
    },
    {
      "type": "inherited-methods",
      "from": "AutofillManager#cancel()"
    },
    {
      "type": "inherited-methods",
      "from": "CANCEL"
    },
    {
      "type": "inherited-methods",
      "from": "AutofillManager#requestAutofill(View, int, Rect)"
    },
    {
      "type": "inherited-methods",
      "from": "left"
    },
    {
      "type": "inherited-methods",
      "from": "top"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setDimens(int, int, int, int, int, int)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewGroup#isImportantForAutofill()"
    },
    {
      "type": "inherited-methods",
      "from": "autofill(android.util.SparseArray)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onProvideContentCaptureStructure(structure: ViewStructure, flags: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure"
    },
    {
      "type": "inherited-methods",
      "from": "isImportantForAutofill()"
    },
    {
      "type": "inherited-methods",
      "from": "ContentCaptureSession#notifyViewAppeared(ViewStructure)"
    },
    {
      "type": "inherited-methods",
      "from": "ContentCaptureSession#notifyViewAppeared(ViewStructure)"
    },
    {
      "type": "inherited-methods",
      "from": "ContentCaptureSession#notifyViewDisappeared(AutofillId)"
    },
    {
      "type": "inherited-methods",
      "from": "ContentCaptureSession#notifyViewTextChanged(AutofillId, CharSequence)"
    },
    {
      "type": "inherited-methods",
      "from": "ContentCaptureSession#newVirtualViewStructure(AutofillId, long)"
    },
    {
      "type": "inherited-methods",
      "from": "autofillId"
    },
    {
      "type": "inherited-methods",
      "from": "childStructure.getAutofillId()"
    },
    {
      "type": "inherited-methods",
      "from": "ContentCaptureSession#newAutofillId(AutofillId, long)"
    },
    {
      "type": "inherited-methods",
      "from": "ContentCaptureManager#getContentCaptureConditions()"
    },
    {
      "type": "inherited-methods",
      "from": "ContentCaptureSession"
    },
    {
      "type": "inherited-methods",
      "from": "IFRAME"
    },
    {
      "type": "inherited-methods",
      "from": "structure"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setChildCount(int)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#addChildCount(int)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#getChildCount()"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#newChild(int)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#asyncNewChild(int)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#asyncCommit()"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setWebDomain(String)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#newHtmlInfoBuilder(String)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setHtmlInfo(android.view.ViewStructure.HtmlInfo)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setDataIsSensitive(boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setAlpha(float)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setElevation(float)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewStructure#setTransformation(Matrix)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onProvideStructure(structure: ViewStructure!)"
    },
    {
      "type": "inherited-methods",
      "from": "Activity.onProvideAssistData"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onProvideVirtualStructure(structure: ViewStructure!)"
    },
    {
      "type": "inherited-methods",
      "from": "Activity.onProvideAssistData"
    },
    {
      "type": "inherited-methods",
      "from": "getAccessibilityNodeProvider()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "onSetAlpha(alpha: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onSizeChanged(w: Int, h: Int, oldw: Int, oldh: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onStartTemporaryDetach()"
    },
    {
      "type": "inherited-methods",
      "from": "ViewGroup#detachViewFromParent(View)"
    },
    {
      "type": "inherited-methods",
      "from": "onFinishTemporaryDetach()"
    },
    {
      "type": "inherited-methods",
      "from": "onDetachedFromWindow()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onVisibilityAggregated(isVisible: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onWindowSystemUiVisibilityChanged(visible: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "getWindowSystemUiVisibility()"
    },
    {
      "type": "inherited-methods",
      "from": "setOnSystemUiVisibilityChangeListener(android.view.View.OnSystemUiVisibilityChangeListener)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onWindowVisibilityChanged(visibility: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "GONE"
    },
    {
      "type": "inherited-methods",
      "from": "INVISIBLE"
    },
    {
      "type": "inherited-methods",
      "from": "VISIBLE"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "overScrollBy(deltaX: Int, deltaY: Int, scrollX: Int, scrollY: Int, scrollRangeX: Int, scrollRangeY: Int, maxOverScrollX: Int, maxOverScrollY: Int, isTouchEvent: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "onOverScrolled(int,int,boolean,boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "performAccessibilityAction(action: Int, arguments: Bundle!)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityNodeInfo"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityDelegate"
    },
    {
      "type": "inherited-methods",
      "from": "setAccessibilityDelegate(android.view.View.AccessibilityDelegate)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityDelegate#performAccessibilityAction(View, int, Bundle)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityNodeInfo#ACTION_SCROLL_BACKWARD"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityNodeInfo#ACTION_SCROLL_FORWARD"
    },
    {
      "type": "inherited-methods",
      "from": "nested scrolling is enabled"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "performClick()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "performContextClick(x: Float, y: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "performContextClick()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "performHapticFeedback(feedbackConstant: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "isHapticFeedbackEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "performHapticFeedback(feedbackConstant: Int, flags: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "performHapticFeedback(int)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "performLongClick(x: Float, y: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "playSoundEffect(soundConstant: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "isSoundEffectsEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "post(action: Runnable!)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "postDelayed(action: Runnable!, delayMillis: Long)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "postInvalidate()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "postInvalidate(left: Int, top: Int, right: Int, bottom: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "postInvalidateDelayed(delayMilliseconds: Long)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "postInvalidateDelayed(delayMilliseconds: Long, left: Int, top: Int, right: Int, bottom: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "postInvalidateOnAnimation()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "postInvalidateOnAnimation(left: Int, top: Int, right: Int, bottom: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "postOnAnimation(action: Runnable!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "postOnAnimationDelayed(action: Runnable!, delayMillis: Long)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "refreshDrawableState()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "releasePointerCapture()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "removeCallbacks(action: Runnable!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "removeOnAttachStateChangeListener(listener: View.OnAttachStateChangeListener!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "removeOnLayoutChangeListener(listener: View.OnLayoutChangeListener!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "removeOnUnhandledKeyEventListener(listener: View.OnUnhandledKeyEventListener!)"
    },
    {
      "type": "inherited-methods",
      "from": "KeyEvent"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "requestApplyInsets()"
    },
    {
      "type": "inherited-methods",
      "from": "onApplyWindowInsets(android.view.WindowInsets)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "requestFitSystemWindows()"
    },
    {
      "type": "inherited-methods",
      "from": "fitSystemWindows(android.graphics.Rect)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "requestFocus()"
    },
    {
      "type": "inherited-methods",
      "from": "isFocusable"
    },
    {
      "type": "inherited-methods",
      "from": "isFocusableInTouchMode"
    },
    {
      "type": "inherited-methods",
      "from": "focusSearch(int)"
    },
    {
      "type": "inherited-methods",
      "from": "requestFocus(int,android.graphics.Rect)"
    },
    {
      "type": "inherited-methods",
      "from": "FOCUS_DOWN"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "requestFocus(direction: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "isFocusable"
    },
    {
      "type": "inherited-methods",
      "from": "isFocusableInTouchMode"
    },
    {
      "type": "inherited-methods",
      "from": "focusSearch(int)"
    },
    {
      "type": "inherited-methods",
      "from": "requestFocus(int,android.graphics.Rect)"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "requestFocus(direction: Int, previouslyFocusedRect: Rect!)"
    },
    {
      "type": "inherited-methods",
      "from": "isFocusable"
    },
    {
      "type": "inherited-methods",
      "from": "isFocusableInTouchMode"
    },
    {
      "type": "inherited-methods",
      "from": "android.view.ViewGroup#getDescendantFocusability()"
    },
    {
      "type": "inherited-methods",
      "from": "ViewGroup#FOCUS_BLOCK_DESCENDANTS"
    },
    {
      "type": "inherited-methods",
      "from": "focusSearch(int)"
    },
    {
      "type": "inherited-methods",
      "from": "View"
    },
    {
      "type": "inherited-methods",
      "from": "View"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "requestFocusFromTouch()"
    },
    {
      "type": "inherited-methods",
      "from": "requestFocus()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "requestLayout()"
    },
    {
      "type": "inherited-methods",
      "from": "isInLayout()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "requestPointerCapture()"
    },
    {
      "type": "inherited-methods",
      "from": "InputDevice#SOURCE_MOUSE_RELATIVE"
    },
    {
      "type": "inherited-methods",
      "from": "MotionEvent#getX"
    },
    {
      "type": "inherited-methods",
      "from": "MotionEvent#getY"
    },
    {
      "type": "inherited-methods",
      "from": "releasePointerCapture()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "requestRectangleOnScreen(rectangle: Rect!)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "requestRectangleOnScreen(rectangle: Rect!, immediate: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "immediate"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "requestUnbufferedDispatch(event: MotionEvent!)"
    },
    {
      "type": "inherited-methods",
      "from": "MotionEvent#ACTION_UP"
    },
    {
      "type": "inherited-methods",
      "from": "MotionEvent"
    },
    {
      "type": "inherited-methods",
      "from": "requestUnbufferedDispatch(android.view.MotionEvent)"
    },
    {
      "type": "inherited-methods",
      "from": "requestUnbufferedDispatch(int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "requestUnbufferedDispatch(source: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "View#requestUnbufferedDispatch(MotionEvent)"
    },
    {
      "type": "inherited-methods",
      "from": "T"
    },
    {
      "type": "inherited-methods",
      "from": "requireViewById(id: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "getId()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "resetPivot()"
    },
    {
      "type": "inherited-methods",
      "from": "setPivotX(float)"
    },
    {
      "type": "inherited-methods",
      "from": "setPivotY(float)"
    },
    {
      "type": "inherited-methods",
      "from": "isPivotSet()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "resolveSize(size: Int, measureSpec: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "resolveSizeAndState(int,int,int)"
    },
    {
      "type": "inherited-methods",
      "from": "MEASURED_SIZE_MASK"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "resolveSizeAndState(size: Int, measureSpec: Int, childMeasuredState: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "MEASURED_SIZE_MASK"
    },
    {
      "type": "inherited-methods",
      "from": "MEASURED_STATE_TOO_SMALL"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "restoreDefaultFocus()"
    },
    {
      "type": "inherited-methods",
      "from": "requestFocus(int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "restoreHierarchyState(container: SparseArray<Parcelable!>!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "saveAttributeDataForStyleable(context: Context, styleable: IntArray, attrs: AttributeSet?, t: TypedArray, defStyleAttr: Int, defStyleRes: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "View"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "saveHierarchyState(container: SparseArray<Parcelable!>!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "scheduleDrawable(who: Drawable, what: Runnable, when: Long)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "scrollBy(x: Int, y: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "onScrollChanged(int,int,int,int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "scrollTo(x: Int, y: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "onScrollChanged(int,int,int,int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "sendAccessibilityEvent(eventType: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewParent#requestSendAccessibilityEvent(View, AccessibilityEvent)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityDelegate"
    },
    {
      "type": "inherited-methods",
      "from": "setAccessibilityDelegate(android.view.View.AccessibilityDelegate)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityDelegate#sendAccessibilityEvent(View, int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setAccessibilityDelegate(delegate: View.AccessibilityDelegate?)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityDelegate"
    },
    {
      "type": "inherited-methods",
      "from": "API 23"
    },
    {
      "type": "inherited-methods",
      "from": "android.widget.*"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityDelegate#onInitializeAccessibilityNodeInfo(View, AccessibilityNodeInfo)"
    },
    {
      "type": "inherited-methods",
      "from": "API 23"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setAccessibilityHeading(isHeading: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setAccessibilityLiveRegion(mode: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "ACCESSIBILITY_LIVE_REGION_POLITE"
    },
    {
      "type": "inherited-methods",
      "from": "ACCESSIBILITY_LIVE_REGION_NONE"
    },
    {
      "type": "inherited-methods",
      "from": "ACCESSIBILITY_LIVE_REGION_POLITE"
    },
    {
      "type": "inherited-methods",
      "from": "ACCESSIBILITY_LIVE_REGION_ASSERTIVE"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setAccessibilityPaneTitle(accessibilityPaneTitle: CharSequence?)"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibilityEvent"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setAccessibilityTraversalAfter(afterId: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setAccessibilityTraversalBefore(beforeId: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setActivated(activated: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setAlpha(alpha: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "hasOverlappingRendering()"
    },
    {
      "type": "inherited-methods",
      "from": "false"
    },
    {
      "type": "inherited-methods",
      "from": "layer type"
    },
    {
      "type": "inherited-methods",
      "from": "android.os.Build.VERSION_CODES#M"
    },
    {
      "type": "inherited-methods",
      "from": "android.os.Build.VERSION_CODES#M"
    },
    {
      "type": "inherited-methods",
      "from": "LAYER_TYPE_HARDWARE"
    },
    {
      "type": "inherited-methods",
      "from": "onSetAlpha(int)"
    },
    {
      "type": "inherited-methods",
      "from": "android.os.Build.VERSION_CODES#LOLLIPOP_MR1"
    },
    {
      "type": "inherited-methods",
      "from": "layer"
    },
    {
      "type": "inherited-methods",
      "from": "layer paint"
    },
    {
      "type": "inherited-methods",
      "from": "android.os.Build.VERSION_CODES#M"
    },
    {
      "type": "inherited-methods",
      "from": "false"
    },
    {
      "type": "inherited-methods",
      "from": "hasOverlappingRendering"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setAnimation(animation: Animation!)"
    },
    {
      "type": "inherited-methods",
      "from": "startAnimation(android.view.animation.Animation)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setAnimationMatrix(matrix: Matrix?)"
    },
    {
      "type": "inherited-methods",
      "from": "android.transition.Transition"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "setRotation(float)"
    },
    {
      "type": "inherited-methods",
      "from": "setScaleX(float)"
    },
    {
      "type": "inherited-methods",
      "from": "setScaleX(float)"
    },
    {
      "type": "inherited-methods",
      "from": "setTranslationX(float)"
    },
    {
      "type": "inherited-methods",
      "from": "setTranslationY(float)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setAutofillHints(vararg autofillHints: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "android.service.autofill.AutofillService"
    },
    {
      "type": "inherited-methods",
      "from": "AUTOFILL_HINT_"
    },
    {
      "type": "inherited-methods",
      "from": "AUTOFILL_HINT_USERNAME"
    },
    {
      "type": "inherited-methods",
      "from": "AUTOFILL_HINT_PASSWORD"
    },
    {
      "type": "inherited-methods",
      "from": "AUTOFILL_HINT_EMAIL_ADDRESS"
    },
    {
      "type": "inherited-methods",
      "from": "AUTOFILL_HINT_NAME"
    },
    {
      "type": "inherited-methods",
      "from": "AUTOFILL_HINT_PHONE"
    },
    {
      "type": "inherited-methods",
      "from": "AUTOFILL_HINT_POSTAL_ADDRESS"
    },
    {
      "type": "inherited-methods",
      "from": "AUTOFILL_HINT_POSTAL_CODE"
    },
    {
      "type": "inherited-methods",
      "from": "AUTOFILL_HINT_CREDIT_CARD_NUMBER"
    },
    {
      "type": "inherited-methods",
      "from": "AUTOFILL_HINT_CREDIT_CARD_SECURITY_CODE"
    },
    {
      "type": "inherited-methods",
      "from": "AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DATE"
    },
    {
      "type": "inherited-methods",
      "from": "AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DAY"
    },
    {
      "type": "inherited-methods",
      "from": "AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_MONTH"
    },
    {
      "type": "inherited-methods",
      "from": "AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_YEAR"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setAutofillId(id: AutofillId?)"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchProvideAutofillStructure(android.view.ViewStructure,int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setBackground(background: Drawable!)"
    },
    {
      "type": "inherited-methods",
      "from": "setPadding(int,int,int,int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setBackgroundColor(color: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setBackgroundDrawable(background: Drawable!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setBackgroundResource(resid: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setBackgroundTintBlendMode(blendMode: BlendMode?)"
    },
    {
      "type": "inherited-methods",
      "from": "setBackgroundTintList(android.content.res.ColorStateList)"
    },
    {
      "type": "inherited-methods",
      "from": "BlendMode#SRC_IN"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setBackgroundTintList(tint: ColorStateList?)"
    },
    {
      "type": "inherited-methods",
      "from": "BlendMode#SRC_IN"
    },
    {
      "type": "inherited-methods",
      "from": "setBackground(android.graphics.drawable.Drawable)"
    },
    {
      "type": "inherited-methods",
      "from": "Drawable#setTintList(ColorStateList)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setBackgroundTintMode(tintMode: PorterDuff.Mode?)"
    },
    {
      "type": "inherited-methods",
      "from": "setBackgroundTintList(android.content.res.ColorStateList)"
    },
    {
      "type": "inherited-methods",
      "from": "PorterDuff.Mode#SRC_IN"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setBottom(bottom: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setCameraDistance(distance: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setClickable(clickable: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setClipBounds(clipBounds: Rect!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setClipToOutline(clipToOutline: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewAnimationUtils#createCircularReveal(View, int, int, float, float)"
    },
    {
      "type": "inherited-methods",
      "from": "Outline#canClip()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setContentCaptureSession(contentCaptureSession: ContentCaptureSession?)"
    },
    {
      "type": "inherited-methods",
      "from": "ContentCaptureSession"
    },
    {
      "type": "inherited-methods",
      "from": "ContentCaptureContext"
    },
    {
      "type": "inherited-methods",
      "from": "ViewGroup"
    },
    {
      "type": "inherited-methods",
      "from": "IFRAME"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setContentDescription(contentDescription: CharSequence!)"
    },
    {
      "type": "inherited-methods",
      "from": "View"
    },
    {
      "type": "inherited-methods",
      "from": "android.widget.ImageButton"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setContextClickable(contextClickable: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setDefaultFocusHighlightEnabled(defaultFocusHighlightEnabled: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "android.R.attr#state_focused"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setDrawingCacheBackgroundColor(color: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setDrawingCacheEnabled(enabled: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "getDrawingCache()"
    },
    {
      "type": "inherited-methods",
      "from": "buildDrawingCache()"
    },
    {
      "type": "inherited-methods",
      "from": "draw(android.graphics.Canvas)"
    },
    {
      "type": "inherited-methods",
      "from": "getDrawingCache()"
    },
    {
      "type": "inherited-methods",
      "from": "setting a layer"
    },
    {
      "type": "inherited-methods",
      "from": "setLayerType(int,android.graphics.Paint)"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "getDrawingCache()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setDrawingCacheQuality(quality: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setDuplicateParentStateEnabled(enabled: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setElevation(elevation: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setFadingEdgeLength(length: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "setVerticalFadingEdgeEnabled(boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "setHorizontalFadingEdgeEnabled(boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setFilterTouchesWhenObscured(enabled: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "View"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setFitsSystemWindows(fitSystemWindows: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "fitSystemWindows(android.graphics.Rect)"
    },
    {
      "type": "inherited-methods",
      "from": "fitSystemWindows(android.graphics.Rect)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setFocusable(focusable: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setFocusable(focusable: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "FOCUSABLE_AUTO"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setFocusableInTouchMode(focusableInTouchMode: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setFocusedByDefault(isFocusedByDefault: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setForceDarkAllowed(allow: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "isLightTheme"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setForeground(foreground: Drawable!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setForegroundGravity(gravity: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setForegroundTintBlendMode(blendMode: BlendMode?)"
    },
    {
      "type": "inherited-methods",
      "from": "setForegroundTintList(android.content.res.ColorStateList)"
    },
    {
      "type": "inherited-methods",
      "from": "BlendMode#SRC_IN"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setForegroundTintList(tint: ColorStateList?)"
    },
    {
      "type": "inherited-methods",
      "from": "PorterDuff.Mode#SRC_IN"
    },
    {
      "type": "inherited-methods",
      "from": "setForeground(android.graphics.drawable.Drawable)"
    },
    {
      "type": "inherited-methods",
      "from": "Drawable#setTintList(ColorStateList)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setForegroundTintMode(tintMode: PorterDuff.Mode?)"
    },
    {
      "type": "inherited-methods",
      "from": "setForegroundTintList(android.content.res.ColorStateList)"
    },
    {
      "type": "inherited-methods",
      "from": "PorterDuff.Mode#SRC_IN"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setHapticFeedbackEnabled(hapticFeedbackEnabled: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setHasTransientState(hasTransientState: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setHorizontalFadingEdgeEnabled(horizontalFadingEdgeEnabled: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setHorizontalScrollBarEnabled(horizontalScrollBarEnabled: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setHorizontalScrollbarThumbDrawable(drawable: Drawable?)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setHorizontalScrollbarTrackDrawable(drawable: Drawable?)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setHovered(hovered: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "onHoverChanged"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setId(id: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setImportantForAccessibility(mode: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setImportantForAutofill(mode: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "IMPORTANT_FOR_AUTOFILL_NO"
    },
    {
      "type": "inherited-methods",
      "from": "IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS"
    },
    {
      "type": "inherited-methods",
      "from": "IMPORTANT_FOR_AUTOFILL_YES_EXCLUDE_DESCENDANTS"
    },
    {
      "type": "inherited-methods",
      "from": "IMPORTANT_FOR_AUTOFILL_NO"
    },
    {
      "type": "inherited-methods",
      "from": "IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS"
    },
    {
      "type": "inherited-methods",
      "from": "isImportantForAutofill()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setImportantForContentCapture(mode: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "IMPORTANT_FOR_CONTENT_CAPTURE_YES"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setKeepScreenOn(keepScreenOn: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "KEEP_SCREEN_ON"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setKeyboardNavigationCluster(isCluster: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setLabelFor(id: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setLayerPaint(paint: Paint?)"
    },
    {
      "type": "inherited-methods",
      "from": "Paint"
    },
    {
      "type": "inherited-methods",
      "from": "LAYER_TYPE_NONE"
    },
    {
      "type": "inherited-methods",
      "from": "setLayerType(int,android.graphics.Paint)"
    },
    {
      "type": "inherited-methods",
      "from": "setLayerPaint(android.graphics.Paint)"
    },
    {
      "type": "inherited-methods",
      "from": "android.graphics.Paint"
    },
    {
      "type": "inherited-methods",
      "from": "Translucency (alpha)"
    },
    {
      "type": "inherited-methods",
      "from": "Blending mode"
    },
    {
      "type": "inherited-methods",
      "from": "Color filter"
    },
    {
      "type": "inherited-methods",
      "from": "setAlpha(float)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setLayerType(layerType: Int, paint: Paint?)"
    },
    {
      "type": "inherited-methods",
      "from": "LAYER_TYPE_NONE"
    },
    {
      "type": "inherited-methods",
      "from": "LAYER_TYPE_SOFTWARE"
    },
    {
      "type": "inherited-methods",
      "from": "LAYER_TYPE_HARDWARE"
    },
    {
      "type": "inherited-methods",
      "from": "android.graphics.Paint"
    },
    {
      "type": "inherited-methods",
      "from": "Translucency (alpha)"
    },
    {
      "type": "inherited-methods",
      "from": "Blending mode"
    },
    {
      "type": "inherited-methods",
      "from": "Color filter"
    },
    {
      "type": "inherited-methods",
      "from": "setAlpha(float)"
    },
    {
      "type": "inherited-methods",
      "from": "LAYER_TYPE_NONE"
    },
    {
      "type": "inherited-methods",
      "from": "LAYER_TYPE_SOFTWARE"
    },
    {
      "type": "inherited-methods",
      "from": "LAYER_TYPE_HARDWARE"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setLayoutDirection(layoutDirection: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setLayoutParams(params: ViewGroup.LayoutParams!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setLeft(left: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setLeftTopRightBottom(left: Int, top: Int, right: Int, bottom: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setLongClickable(longClickable: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setMeasuredDimension(measuredWidth: Int, measuredHeight: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "onMeasure(int,int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setMinimumHeight(minHeight: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setMinimumWidth(minWidth: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setNestedScrollingEnabled(enabled: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "stopping"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setNextClusterForwardId(nextClusterForwardId: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setNextFocusDownId(nextFocusDownId: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "FOCUS_DOWN"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setNextFocusForwardId(nextFocusForwardId: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "FOCUS_FORWARD"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setNextFocusLeftId(nextFocusLeftId: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "FOCUS_LEFT"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setNextFocusRightId(nextFocusRightId: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "FOCUS_RIGHT"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setNextFocusUpId(nextFocusUpId: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "FOCUS_UP"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setOnApplyWindowInsetsListener(listener: View.OnApplyWindowInsetsListener!)"
    },
    {
      "type": "inherited-methods",
      "from": "OnApplyWindowInsetsListener"
    },
    {
      "type": "inherited-methods",
      "from": "OnApplyWindowInsetsListener#onApplyWindowInsets(View, WindowInsets)"
    },
    {
      "type": "inherited-methods",
      "from": "onApplyWindowInsets"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setOnCapturedPointerListener(l: View.OnCapturedPointerListener!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setOnClickListener(l: View.OnClickListener?)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setOnContextClickListener(l: View.OnContextClickListener?)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setOnCreateContextMenuListener(l: View.OnCreateContextMenuListener!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setOnDragListener(l: View.OnDragListener!)"
    },
    {
      "type": "inherited-methods",
      "from": "android.view.View.OnDragListener"
    },
    {
      "type": "inherited-methods",
      "from": "android.view.View.OnDragListener#onDrag(View,DragEvent)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setOnFocusChangeListener(l: View.OnFocusChangeListener!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setOnGenericMotionListener(l: View.OnGenericMotionListener!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setOnHoverListener(l: View.OnHoverListener!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setOnKeyListener(l: View.OnKeyListener!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setOnLongClickListener(l: View.OnLongClickListener?)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setOnScrollChangeListener(l: View.OnScrollChangeListener!)"
    },
    {
      "type": "inherited-methods",
      "from": "ListView"
    },
    {
      "type": "inherited-methods",
      "from": "AbsListView.OnScrollListener"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setOnSystemUiVisibilityChangeListener(l: View.OnSystemUiVisibilityChangeListener!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setOnTouchListener(l: View.OnTouchListener!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setOutlineAmbientShadowColor(color: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "android.R.attr#ambientShadowAlpha"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setOutlineProvider(provider: ViewOutlineProvider!)"
    },
    {
      "type": "inherited-methods",
      "from": "ViewOutlineProvider"
    },
    {
      "type": "inherited-methods",
      "from": "ViewOutlineProvider#BACKGROUND"
    },
    {
      "type": "inherited-methods",
      "from": "Drawable#getOutline(Outline)"
    },
    {
      "type": "inherited-methods",
      "from": "Outline#isEmpty()"
    },
    {
      "type": "inherited-methods",
      "from": "Outline#canClip()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setOutlineSpotShadowColor(color: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "android.R.attr#spotShadowAlpha"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setOverScrollMode(overScrollMode: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "OVER_SCROLL_ALWAYS"
    },
    {
      "type": "inherited-methods",
      "from": "OVER_SCROLL_IF_CONTENT_SCROLLS"
    },
    {
      "type": "inherited-methods",
      "from": "OVER_SCROLL_NEVER"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setPivotX(pivotX: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "rotated"
    },
    {
      "type": "inherited-methods",
      "from": "scaled"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setPivotY(pivotY: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "rotated"
    },
    {
      "type": "inherited-methods",
      "from": "scaled"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setPointerIcon(pointerIcon: PointerIcon!)"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setPressed(pressed: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setRevealOnFocusHint(revealOnFocus: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setRight(right: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setRotation(rotation: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setRotationX(rotationX: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "setCameraDistance(float)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setRotationY(rotationY: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "setCameraDistance(float)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setSaveEnabled(enabled: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "onSaveInstanceState"
    },
    {
      "type": "inherited-methods",
      "from": "setId(int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setSaveFromParentEnabled(enabled: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "saveHierarchyState(android.util.SparseArray)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setScaleX(scaleX: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setScaleY(scaleY: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setScreenReaderFocusable(screenReaderFocusable: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "android:focusable"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setScrollBarDefaultDelayBeforeFade(scrollBarDefaultDelayBeforeFade: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setScrollBarFadeDuration(scrollBarFadeDuration: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setScrollBarSize(scrollBarSize: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setScrollBarStyle(style: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setScrollContainer(isScrollContainer: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setScrollIndicators(indicators: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "setScrollIndicators(int,int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setScrollIndicators(indicators: Int, mask: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "setScrollIndicators(int)"
    },
    {
      "type": "inherited-methods",
      "from": "setScrollIndicators indicators the indicator direction, or the logical OR of multiple indicator directions. One or more of: <ul> <li>{ #SCROLL_INDICATOR_TOP}</li> <li>{ #SCROLL_INDICATOR_BOTTOM}</li> <li>{ #SCROLL_INDICATOR_LEFT}</li> <li>{ #SCROLL_INDICATOR_RIGHT}</li> <li>{ #SCROLL_INDICATOR_START}</li> <li>{ #SCROLL_INDICATOR_END}</li> </ul> #setScrollIndicators(int) #getScrollIndicators() ref android.R.styleable#View_scrollIndicators indicators Value is either <code>0</code> or a combination of { android.view.View#SCROLL_INDICATOR_TOP}, { android.view.View#SCROLL_INDICATOR_BOTTOM}, { android.view.View#SCROLL_INDICATOR_LEFT}, { android.view.View#SCROLL_INDICATOR_RIGHT}, { android.view.View#SCROLL_INDICATOR_START}, and { android.view.View#SCROLL_INDICATOR_END} mask Value is either <code>0</code> or a combination of { android.view.View#SCROLL_INDICATOR_TOP}, { android.view.View#SCROLL_INDICATOR_BOTTOM}, { android.view.View#SCROLL_INDICATOR_LEFT}, { android.view.View#SCROLL_INDICATOR_RIGHT}, { android.view.View#SCROLL_INDICATOR_START}, and { android.view.View#SCROLL_INDICATOR_END} 23"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setScrollX(value: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "onScrollChanged(int,int,int,int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setScrollY(value: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "onScrollChanged(int,int,int,int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setScrollbarFadingEnabled(fadeScrollbars: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setSoundEffectsEnabled(soundEffectsEnabled: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setStateDescription(stateDescription: CharSequence?)"
    },
    {
      "type": "inherited-methods",
      "from": "View"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setStateListAnimator(stateListAnimator: StateListAnimator!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setSystemGestureExclusionRects(rects: MutableList<Rect!>)"
    },
    {
      "type": "inherited-methods",
      "from": "onLayout(boolean,int,int,int,int)"
    },
    {
      "type": "inherited-methods",
      "from": "onDraw(android.graphics.Canvas)"
    },
    {
      "type": "inherited-methods",
      "from": "ScrollView"
    },
    {
      "type": "inherited-methods",
      "from": "Button"
    },
    {
      "type": "inherited-methods",
      "from": "SeekBar"
    },
    {
      "type": "inherited-methods",
      "from": "200dp"
    },
    {
      "type": "inherited-methods",
      "from": "stickily"
    },
    {
      "type": "inherited-methods",
      "from": "input method"
    },
    {
      "type": "inherited-methods",
      "from": "Intent#CATEGORY_HOME"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setSystemUiVisibility(visibility: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Window#FEATURE_ACTION_BAR_OVERLAY"
    },
    {
      "type": "inherited-methods",
      "from": "fitSystemWindows(android.graphics.Rect)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setTag(tag: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setTag(key: Int, tag: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "IllegalArgumentException"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setTextAlignment(textAlignment: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setTextDirection(textDirection: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setTooltipText(tooltipText: CharSequence?)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setTop(top: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setTouchDelegate(delegate: TouchDelegate!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setTransitionAlpha(alpha: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setTransitionName(transitionName: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setTransitionVisibility(visibility: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "android.transition.Transition"
    },
    {
      "type": "inherited-methods",
      "from": "setVisibility"
    },
    {
      "type": "inherited-methods",
      "from": "setVisibility"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setTranslationX(translationX: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "left"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setTranslationY(translationY: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "top"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setTranslationZ(translationZ: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "elevation"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setVerticalFadingEdgeEnabled(verticalFadingEdgeEnabled: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setVerticalScrollBarEnabled(verticalScrollBarEnabled: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setVerticalScrollbarPosition(position: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "SCROLLBAR_POSITION_DEFAULT"
    },
    {
      "type": "inherited-methods",
      "from": "SCROLLBAR_POSITION_LEFT"
    },
    {
      "type": "inherited-methods",
      "from": "SCROLLBAR_POSITION_RIGHT"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setVerticalScrollbarThumbDrawable(drawable: Drawable?)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setVerticalScrollbarTrackDrawable(drawable: Drawable?)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setVisibility(visibility: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setWillNotCacheDrawing(willNotCacheDrawing: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setWillNotDraw(willNotDraw: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "onDraw(android.graphics.Canvas)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setWindowInsetsAnimationCallback(callback: WindowInsetsAnimation.Callback?)"
    },
    {
      "type": "inherited-methods",
      "from": "WindowInsetsAnimation.Callback"
    },
    {
      "type": "inherited-methods",
      "from": "WindowInsetsAnimation.Callback#getDispatchMode()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setX(x: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "translationX"
    },
    {
      "type": "inherited-methods",
      "from": "left"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setY(y: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "translationY"
    },
    {
      "type": "inherited-methods",
      "from": "top"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setZ(z: Float)"
    },
    {
      "type": "inherited-methods",
      "from": "translationZ"
    },
    {
      "type": "inherited-methods",
      "from": "elevation"
    },
    {
      "type": "inherited-methods",
      "from": "ActionMode!"
    },
    {
      "type": "inherited-methods",
      "from": "startActionMode(callback: ActionMode.Callback!)"
    },
    {
      "type": "inherited-methods",
      "from": "ActionMode#TYPE_PRIMARY"
    },
    {
      "type": "inherited-methods",
      "from": "ActionMode!"
    },
    {
      "type": "inherited-methods",
      "from": "startActionMode(callback: ActionMode.Callback!, type: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "startAnimation(animation: Animation!)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "startDrag(data: ClipData!, shadowBuilder: View.DragShadowBuilder!, myLocalState: Any!, flags: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "startDragAndDrop(data: ClipData!, shadowBuilder: View.DragShadowBuilder!, myLocalState: Any!, flags: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "android.view.View.DragShadowBuilder"
    },
    {
      "type": "inherited-methods",
      "from": "DragShadowBuilder#onProvideShadowMetrics(Point, Point)"
    },
    {
      "type": "inherited-methods",
      "from": "DragShadowBuilder#onDrawShadow(Canvas)"
    },
    {
      "type": "inherited-methods",
      "from": "onDrag()"
    },
    {
      "type": "inherited-methods",
      "from": "onDragEvent()"
    },
    {
      "type": "inherited-methods",
      "from": "android.view.DragEvent"
    },
    {
      "type": "inherited-methods",
      "from": "android.view.DragEvent#getAction()"
    },
    {
      "type": "inherited-methods",
      "from": "android.view.DragEvent#ACTION_DRAG_STARTED"
    },
    {
      "type": "inherited-methods",
      "from": "startDragAndDrop()"
    },
    {
      "type": "inherited-methods",
      "from": "android.view.View.DragShadowBuilder"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "startNestedScroll(axes: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "MotionEvent#ACTION_DOWN"
    },
    {
      "type": "inherited-methods",
      "from": "ViewParent#requestDisallowInterceptTouchEvent(boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "stopNestedScroll()"
    },
    {
      "type": "inherited-methods",
      "from": "startNestedScroll"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchNestedPreScroll"
    },
    {
      "type": "inherited-methods",
      "from": "dispatchNestedScroll"
    },
    {
      "type": "inherited-methods",
      "from": "ViewParent#onNestedScroll(View, int, int, int, int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "stopNestedScroll()"
    },
    {
      "type": "inherited-methods",
      "from": "String"
    },
    {
      "type": "inherited-methods",
      "from": "toString()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "transformMatrixToGlobal(matrix: Matrix)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "transformMatrixToLocal(matrix: Matrix)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "unscheduleDrawable(who: Drawable, what: Runnable)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "unscheduleDrawable(who: Drawable!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "updateDragShadow(shadowBuilder: View.DragShadowBuilder!)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "willNotCacheDrawing()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "willNotDraw()"
    }
  ]
}