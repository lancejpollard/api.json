{
  "path": "javax.crypto.spec",
  "name": "DESKeySpec",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DES_KEY_LEN",
      "desc": "The constant which defines the length of a DES key in bytes."
    },
    {
      "type": "ctor",
      "ctor": "<init>(key: ByteArray!)\n            Creates a DESKeySpec object using the first 8 bytes in key as the key material for the DES key."
    },
    {
      "type": "ctor",
      "ctor": "<init>(key: ByteArray!, offset: Int)\n            Creates a DESKeySpec object using the first 8 bytes in key, beginning at offset inclusive, as the key material for the DES key."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ByteArray",
      "code": "getKey()",
      "desc": "Returns the DES key material.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isParityAdjusted(key: ByteArray!, offset: Int)",
      "desc": "Checks if the given DES key material, starting at offset inclusive, is parity-adjusted."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isWeak(key: ByteArray!, offset: Int)",
      "desc": "Checks if the given DES key material is weak or semi-weak."
    }
  ]
}