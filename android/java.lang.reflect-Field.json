{
  "path": "java.lang.reflect",
  "name": "Field",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Compares this Field against the specified object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Any",
      "code": "get(obj: Any?)",
      "desc": "Returns the value of the field represented by this Field, on the specified object.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "T",
      "code": "getAnnotation(annotationClass: Class<T>)",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getAnnotationsByType(annotationClass: Class<T>)",
      "desc": "Returns annotations that are associated with this element.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "getBoolean(obj: Any?)",
      "desc": "Gets the value of a static or instance boolean field."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Byte",
      "code": "getByte(obj: Any?)",
      "desc": "Gets the value of a static or instance byte field."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Char",
      "code": "getChar(obj: Any?)",
      "desc": "Gets the value of a static or instance field of type char or of another primitive type convertible to type char via a widening conversion."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getDeclaredAnnotations()",
      "desc": "Returns annotations that are directly present on this element.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Class",
      "code": "getDeclaringClass()",
      "desc": "Returns the Class object representing the class or interface that declares the field represented by this Field object.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Double",
      "code": "getDouble(obj: Any?)",
      "desc": "Gets the value of a static or instance field of type double or of another primitive type convertible to type double via a widening conversion."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getFloat(obj: Any?)",
      "desc": "Gets the value of a static or instance field of type float or of another primitive type convertible to type float via a widening conversion."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Type",
      "code": "getGenericType()",
      "desc": "Returns a Type object that represents the declared type for the field represented by this Field object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getInt(obj: Any?)",
      "desc": "Gets the value of a static or instance field of type int or of another primitive type convertible to type int via a widening conversion."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "getLong(obj: Any?)",
      "desc": "Gets the value of a static or instance field of type long or of another primitive type convertible to type long via a widening conversion."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getModifiers()",
      "desc": "Returns the Java language modifiers for the field represented by this Field object, as an integer."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getName()",
      "desc": "Returns the name of the field represented by this Field object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Short",
      "code": "getShort(obj: Any?)",
      "desc": "Gets the value of a static or instance field of type short or of another primitive type convertible to type short via a widening conversion."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Class",
      "code": "getType()",
      "desc": "Returns a Class object that identifies the declared type for the field represented by this Field object.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Returns a hashcode for this Field."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isAnnotationPresent(annotationType: Class<out Annotation!>)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isEnumConstant()",
      "desc": "Returns true if this field represents an element of an enumerated type; returns false otherwise."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isSynthetic()",
      "desc": "Returns true if this field is a synthetic field; returns false otherwise."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "set(obj: Any?, value: Any?)",
      "desc": "Sets the field represented by this Field object on the specified object argument to the specified new value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setBoolean(obj: Any?, z: Boolean)",
      "desc": "Sets the value of a field as a boolean on the specified object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setByte(obj: Any?, b: Byte)",
      "desc": "Sets the value of a field as a byte on the specified object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setChar(obj: Any?, c: Char)",
      "desc": "Sets the value of a field as a char on the specified object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setDouble(obj: Any?, d: Double)",
      "desc": "Sets the value of a field as a double on the specified object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setFloat(obj: Any?, f: Float)",
      "desc": "Sets the value of a field as a float on the specified object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setInt(obj: Any?, i: Int)",
      "desc": "Sets the value of a field as an int on the specified object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setLong(obj: Any?, l: Long)",
      "desc": "Sets the value of a field as a long on the specified object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setShort(obj: Any?, s: Short)",
      "desc": "Sets the value of a field as a short on the specified object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toGenericString()",
      "desc": "Returns a string describing this Field, including its generic type."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns a string describing this Field."
    },
    {
      "type": "inherited-constants",
      "from": "Member"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "DECLARED"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "PUBLIC"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibleObject"
    },
    {
      "type": "inherited-methods",
      "from": "Array<Annotation!>"
    },
    {
      "type": "inherited-methods",
      "from": "getAnnotations()"
    },
    {
      "type": "inherited-methods",
      "from": "T?"
    },
    {
      "type": "inherited-methods",
      "from": "getDeclaredAnnotation(annotationClass: Class<T>)"
    },
    {
      "type": "inherited-methods",
      "from": "Array<T>!"
    },
    {
      "type": "inherited-methods",
      "from": "getDeclaredAnnotationsByType(annotationClass: Class<T>)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isAccessible()"
    },
    {
      "type": "inherited-methods",
      "from": "accessible"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setAccessible(flag: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "accessible"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "false"
    },
    {
      "type": "inherited-methods",
      "from": "checkPermission"
    },
    {
      "type": "inherited-methods",
      "from": "ReflectPermission(\"suppressAccessChecks\")"
    },
    {
      "type": "inherited-methods",
      "from": "SecurityException"
    },
    {
      "type": "inherited-methods",
      "from": "flag"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "Constructor"
    },
    {
      "type": "inherited-methods",
      "from": "java.lang.Class"
    },
    {
      "type": "inherited-methods",
      "from": "SecurityException"
    },
    {
      "type": "inherited-methods",
      "from": "java.lang.Class"
    },
    {
      "type": "inherited-methods",
      "from": "flag"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setAccessible(array: Array<AccessibleObject!>!, flag: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "accessible"
    },
    {
      "type": "inherited-methods",
      "from": "checkPermission"
    },
    {
      "type": "inherited-methods",
      "from": "ReflectPermission(\"suppressAccessChecks\")"
    },
    {
      "type": "inherited-methods",
      "from": "SecurityException"
    },
    {
      "type": "inherited-methods",
      "from": "flag"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "array"
    },
    {
      "type": "inherited-methods",
      "from": "Constructor"
    },
    {
      "type": "inherited-methods",
      "from": "flag"
    }
  ]
}