{
  "path": "android.graphics",
  "name": "Outline",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()\n            Constructs an empty Outline."
    },
    {
      "type": "ctor",
      "ctor": "<init>(src: Outline)\n            Constructs an Outline with a copy of the data in src."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "canClip()",
      "desc": "Returns whether the outline can be used to clip a View."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getAlpha()",
      "desc": "Returns the alpha represented by the Outline."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getRadius()",
      "desc": "Returns the rounded rect radius, if set, or a value less than 0 if a path has been set via setPath(android.graphics.Path)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "getRect(outRect: Rect)",
      "desc": "Populates outBounds with the outline bounds, if set, and returns true."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isEmpty()",
      "desc": "Returns whether the Outline is empty."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "offset(dx: Int, dy: Int)",
      "desc": "Offsets the Outline by (dx,dy)"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "set(src: Outline)",
      "desc": "Replace the contents of this Outline with the contents of src."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setAlpha(alpha: Float)",
      "desc": "Sets the alpha represented by the Outline - the degree to which the producer is guaranteed to be opaque over the Outline's shape."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setConvexPath(convexPath: Path)",
      "desc": "Sets the Outline to a convex path."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setEmpty()",
      "desc": "Sets the outline to be empty."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setOval(left: Int, top: Int, right: Int, bottom: Int)",
      "desc": "Sets the outline to the oval defined by input rect."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setOval(rect: Rect)",
      "desc": "Convenience for setOval(int,int,int,int)"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setPath(path: Path)",
      "desc": "Sets the Outline to a path."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setRect(left: Int, top: Int, right: Int, bottom: Int)",
      "desc": "Sets the Outline to the rounded rect defined by the input rect, and corner radius."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setRect(rect: Rect)",
      "desc": "Convenience for setRect(int,int,int,int)"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setRoundRect(left: Int, top: Int, right: Int, bottom: Int, radius: Float)",
      "desc": "Sets the Outline to the rounded rect defined by the input rect, and corner radius."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setRoundRect(rect: Rect, radius: Float)",
      "desc": "Convenience for setRoundRect(int,int,int,int,float)"
    }
  ]
}