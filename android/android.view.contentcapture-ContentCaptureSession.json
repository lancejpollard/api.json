{
  "path": "android.view.contentcapture",
  "name": "ContentCaptureSession",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ContentCaptureSession",
      "code": "createContentCaptureSession(context: ContentCaptureContext)",
      "desc": "Creates a new ContentCaptureSession."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "destroy()",
      "desc": "Destroys this session, flushing out all pending notifications to the service."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ContentCaptureContext",
      "code": "getContentCaptureContext()",
      "desc": "Gets the ContentCaptureContext associated with the session.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ContentCaptureSessionId",
      "code": "getContentCaptureSessionId()",
      "desc": "Gets the id used to identify this session."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "AutofillId",
      "code": "newAutofillId(hostId: AutofillId, virtualChildId: Long)",
      "desc": "Creates a new AutofillId for a virtual child, so it can be used to uniquely identify the children in the session."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ViewStructure",
      "code": "newViewStructure(view: View)",
      "desc": "Creates a ViewStructure for a \"standard\" view."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ViewStructure",
      "code": "newVirtualViewStructure(parentId: AutofillId, virtualId: Long)",
      "desc": "Creates a ViewStructure for a \"virtual\" view, so it can be passed to notifyViewAppeared(android.view.ViewStructure) by the view managing the virtual view hierarchy."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "notifySessionPaused()",
      "desc": "Notifies the Content Capture Service that a session has paused."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "notifySessionResumed()",
      "desc": "Notifies the Content Capture Service that a session has resumed."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "notifyViewAppeared(node: ViewStructure)",
      "desc": "Notifies the Content Capture Service that a node has been added to the view structure."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "notifyViewDisappeared(id: AutofillId)",
      "desc": "Notifies the Content Capture Service that a node has been removed from the view structure."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "notifyViewInsetsChanged(viewInsets: Insets)",
      "desc": "Notifies the Intelligence Service that the insets of a view have changed."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "notifyViewTextChanged(id: AutofillId, text: CharSequence?)",
      "desc": "Notifies the Intelligence Service that the value of a text node has been changed."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "notifyViewsDisappeared(hostId: AutofillId, virtualIds: LongArray)",
      "desc": "Notifies the Content Capture Service that many nodes has been removed from a virtual view structure."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setContentCaptureContext(context: ContentCaptureContext?)",
      "desc": "Sets the ContentCaptureContext associated with the session."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": ""
    }
  ]
}