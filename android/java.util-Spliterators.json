{
  "path": "java.util",
  "name": "Spliterators",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Spliterator.OfDouble",
      "code": "emptyDoubleSpliterator()",
      "desc": "Creates an empty Spliterator.OfDouble",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Spliterator.OfInt",
      "code": "emptyIntSpliterator()",
      "desc": "Creates an empty Spliterator.OfInt",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Spliterator.OfLong",
      "code": "emptyLongSpliterator()",
      "desc": "Creates an empty Spliterator.OfLong",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Spliterator",
      "code": "emptySpliterator()",
      "desc": "Creates an empty Spliterator",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "MutableIterator",
      "code": "iterator(spliterator: Spliterator<out T>!)",
      "desc": "Creates an Iterator from a Spliterator.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "PrimitiveIterator.OfInt",
      "code": "iterator(spliterator: Spliterator.OfInt!)",
      "desc": "Creates an PrimitiveIterator.OfInt from a Spliterator.OfInt.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "PrimitiveIterator.OfLong",
      "code": "iterator(spliterator: Spliterator.OfLong!)",
      "desc": "Creates an PrimitiveIterator.OfLong from a Spliterator.OfLong.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "PrimitiveIterator.OfDouble",
      "code": "iterator(spliterator: Spliterator.OfDouble!)",
      "desc": "Creates an PrimitiveIterator.OfDouble from a Spliterator.OfDouble.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Spliterator",
      "code": "spliterator(array: Array<Any!>!, additionalCharacteristics: Int)",
      "desc": "Creates a Spliterator covering the elements of a given array, using a customized set of spliterator characteristics.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Spliterator",
      "code": "spliterator(array: Array<Any!>!, fromIndex: Int, toIndex: Int, additionalCharacteristics: Int)",
      "desc": "Creates a Spliterator covering a range of elements of a given array, using a customized set of spliterator characteristics.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Spliterator.OfInt",
      "code": "spliterator(array: IntArray!, additionalCharacteristics: Int)",
      "desc": "Creates a Spliterator.OfInt covering the elements of a given array, using a customized set of spliterator characteristics.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Spliterator.OfInt",
      "code": "spliterator(array: IntArray!, fromIndex: Int, toIndex: Int, additionalCharacteristics: Int)",
      "desc": "Creates a Spliterator.OfInt covering a range of elements of a given array, using a customized set of spliterator characteristics.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Spliterator.OfLong",
      "code": "spliterator(array: LongArray!, additionalCharacteristics: Int)",
      "desc": "Creates a Spliterator.OfLong covering the elements of a given array, using a customized set of spliterator characteristics.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Spliterator.OfLong",
      "code": "spliterator(array: LongArray!, fromIndex: Int, toIndex: Int, additionalCharacteristics: Int)",
      "desc": "Creates a Spliterator.OfLong covering a range of elements of a given array, using a customized set of spliterator characteristics.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Spliterator.OfDouble",
      "code": "spliterator(array: DoubleArray!, additionalCharacteristics: Int)",
      "desc": "Creates a Spliterator.OfDouble covering the elements of a given array, using a customized set of spliterator characteristics.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Spliterator.OfDouble",
      "code": "spliterator(array: DoubleArray!, fromIndex: Int, toIndex: Int, additionalCharacteristics: Int)",
      "desc": "Creates a Spliterator.OfDouble covering a range of elements of a given array, using a customized set of spliterator characteristics.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Spliterator",
      "code": "spliterator(c: MutableCollection<out T>!, characteristics: Int)",
      "desc": "Creates a Spliterator using the given collection's java.util.Collection#iterator() as the source of elements, and reporting its java.util.Collection#size() as its initial size.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Spliterator",
      "code": "spliterator(iterator: MutableIterator<T>!, size: Long, characteristics: Int)",
      "desc": "Creates a Spliterator using a given Iterator as the source of elements, and with a given initially reported size.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Spliterator.OfInt",
      "code": "spliterator(iterator: PrimitiveIterator.OfInt!, size: Long, characteristics: Int)",
      "desc": "Creates a Spliterator.OfInt using a given IntStream.IntIterator as the source of elements, and with a given initially reported size.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Spliterator.OfLong",
      "code": "spliterator(iterator: PrimitiveIterator.OfLong!, size: Long, characteristics: Int)",
      "desc": "Creates a Spliterator.OfLong using a given LongStream.LongIterator as the source of elements, and with a given initially reported size.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Spliterator.OfDouble",
      "code": "spliterator(iterator: PrimitiveIterator.OfDouble!, size: Long, characteristics: Int)",
      "desc": "Creates a Spliterator.OfDouble using a given DoubleStream.DoubleIterator as the source of elements, and with a given initially reported size.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Spliterator",
      "code": "spliteratorUnknownSize(iterator: MutableIterator<T>!, characteristics: Int)",
      "desc": "Creates a Spliterator using a given Iterator as the source of elements, with no initial size estimate.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Spliterator.OfInt",
      "code": "spliteratorUnknownSize(iterator: PrimitiveIterator.OfInt!, characteristics: Int)",
      "desc": "Creates a Spliterator.OfInt using a given IntStream.IntIterator as the source of elements, with no initial size estimate.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Spliterator.OfLong",
      "code": "spliteratorUnknownSize(iterator: PrimitiveIterator.OfLong!, characteristics: Int)",
      "desc": "Creates a Spliterator.OfLong using a given LongStream.LongIterator as the source of elements, with no initial size estimate.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Spliterator.OfDouble",
      "code": "spliteratorUnknownSize(iterator: PrimitiveIterator.OfDouble!, characteristics: Int)",
      "desc": "Creates a Spliterator.OfDouble using a given DoubleStream.DoubleIterator as the source of elements, with no initial size estimate.",
      "symbol": "!"
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "AbstractDoubleSpliterator",
      "desc": "An abstract Spliterator.OfDouble that implements trySplit to permit limited parallelism."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "AbstractIntSpliterator",
      "desc": "An abstract Spliterator.OfInt that implements trySplit to permit limited parallelism."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "AbstractLongSpliterator",
      "desc": "An abstract Spliterator.OfLong that implements trySplit to permit limited parallelism."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "AbstractSpliterator",
      "desc": "An abstract Spliterator that implements trySplit to permit limited parallelism."
    }
  ]
}