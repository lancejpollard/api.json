{
  "path": "java.util.concurrent",
  "name": "ExecutorCompletionService",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(executor: Executor!)\n            Creates an ExecutorCompletionService using the supplied executor for base task execution and a LinkedBlockingQueue as a completion queue."
    },
    {
      "type": "ctor",
      "ctor": "<init>(executor: Executor!, completionQueue: BlockingQueue<Future<V>!>!)\n            Creates an ExecutorCompletionService using the supplied executor for base task execution and the supplied queue as its completion queue."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Future",
      "code": "poll()",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Future",
      "code": "poll(timeout: Long, unit: TimeUnit!)",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Future",
      "code": "submit(task: Callable<V>!)",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Future",
      "code": "submit(task: Runnable!, result: V)",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Future",
      "code": "take()",
      "desc": "",
      "symbol": "<"
    }
  ]
}