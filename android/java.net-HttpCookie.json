{
  "path": "java.net",
  "name": "HttpCookie",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(name: String!, value: String!)\n            Constructs a cookie with a specified name and value."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Any",
      "code": "clone()",
      "desc": "Create and return a copy of this object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Boolean",
      "code": "domainMatches(domain: String!, host: String!)",
      "desc": "The utility method to check whether a host name is in a domain or not."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Test the equality of two HTTP cookies."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getComment()",
      "desc": "Returns the comment describing the purpose of this cookie, or null if the cookie has no comment.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getCommentURL()",
      "desc": "Returns the comment URL describing the purpose of this cookie, or null if the cookie has no comment URL.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "getDiscard()",
      "desc": "Returns the discard attribute of the cookie"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getDomain()",
      "desc": "Returns the domain name set for this cookie.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "getMaxAge()",
      "desc": "Returns the maximum age of the cookie, specified in seconds."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getName()",
      "desc": "Returns the name of the cookie.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getPath()",
      "desc": "Returns the path on the server to which the browser returns this cookie.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getPortlist()",
      "desc": "Returns the port list attribute of the cookie",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "getSecure()",
      "desc": "Returns true if sending this cookie should be restricted to a secure protocol, or false if the it can be sent using any protocol."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getValue()",
      "desc": "Returns the value of the cookie.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getVersion()",
      "desc": "Returns the version of the protocol this cookie complies with."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hasExpired()",
      "desc": "Reports whether this HTTP cookie has expired or not."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Returns the hash code of this HTTP cookie."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isHttpOnly()",
      "desc": "Returns true if this cookie contains the HttpOnly attribute."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "MutableList",
      "code": "parse(header: String!)",
      "desc": "Constructs cookies from set-cookie or set-cookie2 header string.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setComment(purpose: String!)",
      "desc": "Specifies a comment that describes a cookie's purpose."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setCommentURL(purpose: String!)",
      "desc": "Specifies a comment URL that describes a cookie's purpose."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setDiscard(discard: Boolean)",
      "desc": "Specify whether user agent should discard the cookie unconditionally."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setDomain(pattern: String!)",
      "desc": "Specifies the domain within which this cookie should be presented."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setHttpOnly(httpOnly: Boolean)",
      "desc": "Indicates whether the cookie should be considered HTTP Only."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setMaxAge(expiry: Long)",
      "desc": "Sets the maximum age of the cookie in seconds."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setPath(uri: String!)",
      "desc": "Specifies a path for the cookie to which the client should return the cookie."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setPortlist(ports: String!)",
      "desc": "Specify the portlist of the cookie, which restricts the port(s) to which a cookie may be sent back in a Cookie header."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setSecure(flag: Boolean)",
      "desc": "Indicates whether the cookie should only be sent using a secure protocol, such as HTTPS or SSL."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setValue(newValue: String!)",
      "desc": "Assigns a new value to a cookie after the cookie is created."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setVersion(v: Int)",
      "desc": "Sets the version of the cookie protocol this cookie complies with."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": "Constructs a cookie header string representation of this cookie, which is in the format defined by corresponding cookie specification, but without the leading \"Cookie:\" token."
    }
  ]
}