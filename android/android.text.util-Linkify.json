{
  "path": "android.text.util",
  "name": "Linkify",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ALL",
      "desc": "Bit mask indicating that all available patterns should be matched in methods that take an options mask"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "EMAIL_ADDRESSES",
      "desc": "Bit field indicating that email addresses should be matched in methods that take an options mask"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MAP_ADDRESSES",
      "desc": "Bit field indicating that street addresses should be matched in methods that take an options mask."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PHONE_NUMBERS",
      "desc": "Bit field indicating that phone numbers should be matched in methods that take an options mask"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "WEB_URLS",
      "desc": "Bit field indicating that web URLs should be matched in methods that take an options mask"
    },
    {
      "type": "ctor",
      "ctor": "<init>()"
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Boolean",
      "code": "addLinks(text: Spannable, mask: Int)",
      "desc": "Scans the text of the provided Spannable and turns all occurrences of the link types indicated in the mask into clickable links."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Boolean",
      "code": "addLinks(text: Spannable, mask: Int, urlSpanFactory: Function<String!, URLSpan!>?)",
      "desc": "Scans the text of the provided Spannable and turns all occurrences of the link types indicated in the mask into clickable links."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Boolean",
      "code": "addLinks(text: TextView, mask: Int)",
      "desc": "Scans the text of the provided TextView and turns all occurrences of the link types indicated in the mask into clickable links."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Unit",
      "code": "addLinks(text: TextView, pattern: Pattern, scheme: String?)",
      "desc": "Applies a regex to the text of a TextView turning the matches into links."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Unit",
      "code": "addLinks(text: TextView, pattern: Pattern, scheme: String?, matchFilter: Linkify.MatchFilter?, transformFilter: Linkify.TransformFilter?)",
      "desc": "Applies a regex to the text of a TextView turning the matches into links."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Unit",
      "code": "addLinks(text: TextView, pattern: Pattern, defaultScheme: String?, schemes: Array<String!>?, matchFilter: Linkify.MatchFilter?, transformFilter: Linkify.TransformFilter?)",
      "desc": "Applies a regex to the text of a TextView turning the matches into links."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Boolean",
      "code": "addLinks(text: Spannable, pattern: Pattern, scheme: String?)",
      "desc": "Applies a regex to a Spannable turning the matches into links."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Boolean",
      "code": "addLinks(spannable: Spannable, pattern: Pattern, scheme: String?, matchFilter: Linkify.MatchFilter?, transformFilter: Linkify.TransformFilter?)",
      "desc": "Applies a regex to a Spannable turning the matches into links."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Boolean",
      "code": "addLinks(spannable: Spannable, pattern: Pattern, defaultScheme: String?, schemes: Array<String!>?, matchFilter: Linkify.MatchFilter?, transformFilter: Linkify.TransformFilter?)",
      "desc": "Applies a regex to a Spannable turning the matches into links."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Boolean",
      "code": "addLinks(spannable: Spannable, pattern: Pattern, defaultScheme: String?, schemes: Array<String!>?, matchFilter: Linkify.MatchFilter?, transformFilter: Linkify.TransformFilter?, urlSpanFactory: Function<String!, URLSpan!>?)",
      "desc": "Applies a regex to a Spannable turning the matches into links."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "MatchFilter",
      "desc": "MatchFilter enables client code to have more control over what is allowed to match and become a link, and what is not."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "TransformFilter",
      "desc": "TransformFilter enables client code to have more control over how matched patterns are represented as URLs."
    }
  ]
}