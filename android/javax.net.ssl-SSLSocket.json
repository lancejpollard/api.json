{
  "path": "javax.net.ssl",
  "name": "SSLSocket",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "addHandshakeCompletedListener(listener: HandshakeCompletedListener!)",
      "desc": "Registers an event listener to receive notifications that an SSL handshake has completed on this connection."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getApplicationProtocol()",
      "desc": "Returns the most recent application protocol value negotiated for this connection.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getEnableSessionCreation()",
      "desc": "Returns true if new SSL sessions may be established by this socket."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Array",
      "code": "getEnabledCipherSuites()",
      "desc": "Returns the names of the SSL cipher suites which are currently enabled for use on this connection.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Array",
      "code": "getEnabledProtocols()",
      "desc": "Returns the names of the protocol versions which are currently enabled for use on this connection.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getHandshakeApplicationProtocol()",
      "desc": "Returns the application protocol value negotiated on a SSL/TLS handshake currently in progress.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "BiFunction",
      "code": "getHandshakeApplicationProtocolSelector()",
      "desc": "Retrieves the callback function that selects an application protocol value during a SSL/TLS handshake.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "SSLSession",
      "code": "getHandshakeSession()",
      "desc": "Returns the SSLSession being constructed during a SSL/TLS handshake.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getNeedClientAuth()",
      "desc": "Returns true if the socket will require client authentication."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "SSLParameters",
      "code": "getSSLParameters()",
      "desc": "Returns the SSLParameters in effect for this SSLSocket.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "SSLSession",
      "code": "getSession()",
      "desc": "Returns the SSL Session in use by this connection.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Array",
      "code": "getSupportedCipherSuites()",
      "desc": "Returns the names of the cipher suites which could be enabled for use on this connection.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Array",
      "code": "getSupportedProtocols()",
      "desc": "Returns the names of the protocols which could be enabled for use on an SSL connection.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getUseClientMode()",
      "desc": "Returns true if the socket is set to use client mode when handshaking."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getWantClientAuth()",
      "desc": "Returns true if the socket will request client authentication."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "removeHandshakeCompletedListener(listener: HandshakeCompletedListener!)",
      "desc": "Removes a previously registered handshake completion listener."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setEnableSessionCreation(flag: Boolean)",
      "desc": "Controls whether new SSL sessions may be established by this socket."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setEnabledCipherSuites(suites: Array<String!>!)",
      "desc": "Sets the cipher suites enabled for use on this connection."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setEnabledProtocols(protocols: Array<String!>!)",
      "desc": "Sets the protocol versions enabled for use on this connection."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setHandshakeApplicationProtocolSelector(selector: BiFunction<SSLSocket!, MutableList<String!>!, String!>!)",
      "desc": "Registers a callback function that selects an application protocol value for a SSL/TLS handshake."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setNeedClientAuth(need: Boolean)",
      "desc": "Configures the socket to require client authentication."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSSLParameters(params: SSLParameters!)",
      "desc": "Applies SSLParameters to this socket."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setUseClientMode(mode: Boolean)",
      "desc": "Configures the socket to use client (or server) mode when handshaking."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setWantClientAuth(want: Boolean)",
      "desc": "Configures the socket to request client authentication."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "startHandshake()",
      "desc": "Starts an SSL handshake on this connection."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": ""
    },
    {
      "type": "inherited-methods",
      "from": "Socket"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "bind(bindpoint: SocketAddress!)"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "close()"
    },
    {
      "type": "inherited-methods",
      "from": "SocketException"
    },
    {
      "type": "inherited-methods",
      "from": "InputStream"
    },
    {
      "type": "inherited-methods",
      "from": "OutputStream"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "connect(endpoint: SocketAddress!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "connect(endpoint: SocketAddress!, timeout: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "SocketChannel!"
    },
    {
      "type": "inherited-methods",
      "from": "getChannel()"
    },
    {
      "type": "inherited-methods",
      "from": "SocketChannel"
    },
    {
      "type": "inherited-methods",
      "from": "SocketChannel.open"
    },
    {
      "type": "inherited-methods",
      "from": ""
    },
    {
      "type": "inherited-methods",
      "from": "InetAddress!"
    },
    {
      "type": "inherited-methods",
      "from": "getInetAddress()"
    },
    {
      "type": "inherited-methods",
      "from": "closed"
    },
    {
      "type": "inherited-methods",
      "from": "InputStream!"
    },
    {
      "type": "inherited-methods",
      "from": "getInputStream()"
    },
    {
      "type": "inherited-methods",
      "from": "read"
    },
    {
      "type": "inherited-methods",
      "from": "java.nio.channels.IllegalBlockingModeException"
    },
    {
      "type": "inherited-methods",
      "from": "read"
    },
    {
      "type": "inherited-methods",
      "from": "read"
    },
    {
      "type": "inherited-methods",
      "from": "read"
    },
    {
      "type": "inherited-methods",
      "from": "IOException"
    },
    {
      "type": "inherited-methods",
      "from": "close"
    },
    {
      "type": "inherited-methods",
      "from": "available"
    },
    {
      "type": "inherited-methods",
      "from": "0"
    },
    {
      "type": "inherited-methods",
      "from": "InputStream"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "getKeepAlive()"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#SO_KEEPALIVE"
    },
    {
      "type": "inherited-methods",
      "from": "InetAddress!"
    },
    {
      "type": "inherited-methods",
      "from": "getLocalAddress()"
    },
    {
      "type": "inherited-methods",
      "from": "checkConnect"
    },
    {
      "type": "inherited-methods",
      "from": "-1"
    },
    {
      "type": "inherited-methods",
      "from": "InetAddress#getLoopbackAddress"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getLocalPort()"
    },
    {
      "type": "inherited-methods",
      "from": "closed"
    },
    {
      "type": "inherited-methods",
      "from": "SocketAddress!"
    },
    {
      "type": "inherited-methods",
      "from": "getLocalSocketAddress()"
    },
    {
      "type": "inherited-methods",
      "from": "InetSocketAddress"
    },
    {
      "type": "inherited-methods",
      "from": "closed"
    },
    {
      "type": "inherited-methods",
      "from": "InetSocketAddress"
    },
    {
      "type": "inherited-methods",
      "from": "InetSocketAddress"
    },
    {
      "type": "inherited-methods",
      "from": "InetAddress#isAnyLocalAddress"
    },
    {
      "type": "inherited-methods",
      "from": "checkConnect"
    },
    {
      "type": "inherited-methods",
      "from": "-1"
    },
    {
      "type": "inherited-methods",
      "from": "SocketAddress"
    },
    {
      "type": "inherited-methods",
      "from": "InetAddress#getLoopbackAddress"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "getOOBInline()"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#SO_OOBINLINE"
    },
    {
      "type": "inherited-methods",
      "from": "OutputStream!"
    },
    {
      "type": "inherited-methods",
      "from": "getOutputStream()"
    },
    {
      "type": "inherited-methods",
      "from": "write"
    },
    {
      "type": "inherited-methods",
      "from": "OutputStream"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getPort()"
    },
    {
      "type": "inherited-methods",
      "from": "closed"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getReceiveBufferSize()"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#SO_RCVBUF"
    },
    {
      "type": "inherited-methods",
      "from": "Socket"
    },
    {
      "type": "inherited-methods",
      "from": "Socket"
    },
    {
      "type": "inherited-methods",
      "from": "SocketAddress!"
    },
    {
      "type": "inherited-methods",
      "from": "getRemoteSocketAddress()"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "closed"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "getReuseAddress()"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#SO_REUSEADDR"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getSendBufferSize()"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#SO_SNDBUF"
    },
    {
      "type": "inherited-methods",
      "from": "Socket"
    },
    {
      "type": "inherited-methods",
      "from": "Socket"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getSoLinger()"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#SO_LINGER"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getSoTimeout()"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#SO_TIMEOUT"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "getTcpNoDelay()"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#TCP_NODELAY"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getTrafficClass()"
    },
    {
      "type": "inherited-methods",
      "from": "setTrafficClass(int)"
    },
    {
      "type": "inherited-methods",
      "from": "setTrafficClass(int)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isBound()"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "isClosed()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isClosed()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isConnected()"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "isClosed()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isInputShutdown()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isOutputShutdown()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "sendUrgentData(data: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setKeepAlive(on: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#SO_KEEPALIVE"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setOOBInline(on: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#SO_OOBINLINE"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setPerformancePreferences(connectionTime: Int, latency: Int, bandwidth: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "(1, 0, 0)"
    },
    {
      "type": "inherited-methods",
      "from": "(0, 1, 2)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setReceiveBufferSize(size: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#SO_RCVBUF"
    },
    {
      "type": "inherited-methods",
      "from": "Socket"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#SO_RCVBUF"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#SO_RCVBUF"
    },
    {
      "type": "inherited-methods",
      "from": "getReceiveBufferSize()"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#SO_RCVBUF"
    },
    {
      "type": "inherited-methods",
      "from": "ServerSocket#setReceiveBufferSize(int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setReuseAddress(on: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#SO_REUSEADDR"
    },
    {
      "type": "inherited-methods",
      "from": "TIME_WAIT"
    },
    {
      "type": "inherited-methods",
      "from": "2MSL"
    },
    {
      "type": "inherited-methods",
      "from": "SocketAddress"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#SO_REUSEADDR"
    },
    {
      "type": "inherited-methods",
      "from": "bind(java.net.SocketAddress)"
    },
    {
      "type": "inherited-methods",
      "from": "Socket"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#SO_REUSEADDR"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#SO_REUSEADDR"
    },
    {
      "type": "inherited-methods",
      "from": "isBound()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setSendBufferSize(size: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#SO_SNDBUF"
    },
    {
      "type": "inherited-methods",
      "from": "Socket"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#SO_SNDBUF"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#SO_SNDBUF"
    },
    {
      "type": "inherited-methods",
      "from": "getSendBufferSize()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setSoLinger(on: Boolean, linger: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#SO_LINGER"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setSoTimeout(timeout: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#SO_TIMEOUT"
    },
    {
      "type": "inherited-methods",
      "from": "> 0"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setSocketImplFactory(fac: SocketImplFactory!)"
    },
    {
      "type": "inherited-methods",
      "from": "createSocketImpl"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "checkSetFactory"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setTcpNoDelay(on: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "SocketOptions#TCP_NODELAY"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setTrafficClass(tc: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "0 <= tc <= 255"
    },
    {
      "type": "inherited-methods",
      "from": "integer"
    },
    {
      "type": "inherited-methods",
      "from": "IPTOS_LOWCOST (0x02)"
    },
    {
      "type": "inherited-methods",
      "from": "IPTOS_RELIABILITY (0x04)"
    },
    {
      "type": "inherited-methods",
      "from": "IPTOS_THROUGHPUT (0x08)"
    },
    {
      "type": "inherited-methods",
      "from": "IPTOS_LOWDELAY (0x10)"
    },
    {
      "type": "inherited-methods",
      "from": "tc"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "shutdownInput()"
    },
    {
      "type": "inherited-methods",
      "from": "available"
    },
    {
      "type": "inherited-methods",
      "from": "read"
    },
    {
      "type": "inherited-methods",
      "from": "-1"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "shutdownOutput()"
    }
  ]
}