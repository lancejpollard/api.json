{
  "path": "android.widget",
  "name": "CursorAdapter",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_AUTO_REQUERY",
      "desc": "If set the adapter will call requery() on the cursor whenever a content change notification is delivered."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_REGISTER_CONTENT_OBSERVER",
      "desc": "If set the adapter will register a content observer on the cursor and will call onContentChanged() when a notification comes in."
    },
    {
      "type": "ctor",
      "ctor": "<init>(context: Context!, c: Cursor!)\n            Constructor that always enables auto-requery."
    },
    {
      "type": "ctor",
      "ctor": "<init>(context: Context!, c: Cursor!, autoRequery: Boolean)\n            Constructor that allows control over auto-requery."
    },
    {
      "type": "ctor",
      "ctor": "<init>(context: Context!, c: Cursor!, flags: Int)\n            Recommended constructor."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "bindView(view: View!, context: Context!, cursor: Cursor!)",
      "desc": "Bind an existing view to the data pointed to by cursor"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "changeCursor(cursor: Cursor!)",
      "desc": "Change the underlying cursor to a new cursor."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CharSequence",
      "code": "convertToString(cursor: Cursor!)",
      "desc": "Converts the cursor into a CharSequence.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getCount()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Cursor",
      "code": "getCursor()",
      "desc": "Returns the cursor.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View",
      "code": "getDropDownView(position: Int, convertView: View!, parent: ViewGroup!)",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Resources.Theme",
      "code": "getDropDownViewTheme()",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Filter",
      "code": "getFilter()",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "FilterQueryProvider",
      "code": "getFilterQueryProvider()",
      "desc": "Returns the query filter provider used for filtering.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "getItem(position: Int)",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "getItemId(position: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View",
      "code": "getView(position: Int, convertView: View!, parent: ViewGroup!)",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "hasStableIds()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View",
      "code": "newDropDownView(context: Context!, cursor: Cursor!, parent: ViewGroup!)",
      "desc": "Makes a new drop down view to hold the data pointed to by cursor.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "View",
      "code": "newView(context: Context!, cursor: Cursor!, parent: ViewGroup!)",
      "desc": "Makes a new view to hold the data pointed to by cursor.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Cursor",
      "code": "runQueryOnBackgroundThread(constraint: CharSequence!)",
      "desc": "Runs a query with the specified constraint.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setDropDownViewTheme(theme: Resources.Theme?)",
      "desc": "Sets the Resources.Theme against which drop-down views are inflated."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFilterQueryProvider(filterQueryProvider: FilterQueryProvider!)",
      "desc": "Sets the query filter provider used to filter the current Cursor."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Cursor",
      "code": "swapCursor(newCursor: Cursor!)",
      "desc": "Swap in a new Cursor, returning the old Cursor.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "init(context: Context!, c: Cursor!, autoRequery: Boolean)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onContentChanged()",
      "desc": "Called when the ContentObserver on the cursor receives a change notification."
    },
    {
      "type": "inherited-methods",
      "from": "BaseAdapter"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "areAllItemsEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "Array<CharSequence!>?"
    },
    {
      "type": "inherited-methods",
      "from": "getAutofillOptions()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getItemViewType(position: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getViewTypeCount()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isEmpty()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isEnabled(position: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "notifyDataSetChanged()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "notifyDataSetInvalidated()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "registerDataSetObserver(observer: DataSetObserver!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setAutofillOptions(vararg options: CharSequence!)"
    },
    {
      "type": "inherited-methods",
      "from": "getAutofillOptions()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "unregisterDataSetObserver(observer: DataSetObserver!)"
    }
  ]
}