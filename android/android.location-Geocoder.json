{
  "path": "android.location",
  "name": "Geocoder",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(context: Context!, locale: Locale!)\n            Constructs a Geocoder whose responses will be localized for the given Locale."
    },
    {
      "type": "ctor",
      "ctor": "<init>(context: Context!)\n            Constructs a Geocoder whose responses will be localized for the default system Locale."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MutableList",
      "code": "getFromLocation(latitude: Double, longitude: Double, maxResults: Int)",
      "desc": "Returns an array of Addresses that are known to describe the area immediately surrounding the given latitude and longitude.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MutableList",
      "code": "getFromLocationName(locationName: String!, maxResults: Int)",
      "desc": "Returns an array of Addresses that are known to describe the named location, which may be a place name such as \"Dalvik, Iceland\", an address such as \"1600 Amphitheatre Parkway, Mountain View, CA\", an airport code such as \"SFO\", etc.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MutableList",
      "code": "getFromLocationName(locationName: String!, maxResults: Int, lowerLeftLatitude: Double, lowerLeftLongitude: Double, upperRightLatitude: Double, upperRightLongitude: Double)",
      "desc": "Returns an array of Addresses that are known to describe the named location, which may be a place name such as \"Dalvik, Iceland\", an address such as \"1600 Amphitheatre Parkway, Mountain View, CA\", an airport code such as \"SFO\", etc.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Boolean",
      "code": "isPresent()",
      "desc": "Returns true if the Geocoder methods getFromLocation and getFromLocationName are implemented."
    }
  ]
}