{
  "path": "android.telephony.gsm",
  "name": "SmsMessage",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ENCODING_16BIT",
      "desc": "16-bit encoding scheme (see TS 23.038)"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ENCODING_7BIT",
      "desc": "7-bit encoding scheme (see TS 23.038)"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ENCODING_8BIT",
      "desc": "8-bit encoding scheme (see TS 23.038)"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ENCODING_UNKNOWN",
      "desc": "Unknown encoding scheme (see TS 23.038)"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MAX_USER_DATA_BYTES",
      "desc": "The maximum number of payload bytes per message"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MAX_USER_DATA_SEPTETS",
      "desc": "The maximum number of payload septets per message"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MAX_USER_DATA_SEPTETS_WITH_HEADER",
      "desc": "The maximum number of payload septets per message if a user data header is present."
    },
    {
      "type": "ctor",
      "ctor": "<init>()"
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "IntArray",
      "code": "calculateLength(messageBody: CharSequence!, use7bitOnly: Boolean)",
      "desc": "Calculates the number of SMS's required to encode the message body and the number of characters remaining until the next message, given the current encoding.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "IntArray",
      "code": "calculateLength(messageBody: String!, use7bitOnly: Boolean)",
      "desc": "Calculates the number of SMS's required to encode the message body and the number of characters remaining until the next message, given the current encoding.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "SmsMessage",
      "code": "createFromPdu(pdu: ByteArray!)",
      "desc": "Create an SmsMessage from a raw PDU.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getDisplayMessageBody()",
      "desc": "Returns the message body, or email message body if this message was from an email gateway.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getDisplayOriginatingAddress()",
      "desc": "Returns the originating address, or email from address if this message was from an email gateway.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getEmailBody()",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getEmailFrom()",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getIndexOnSim()",
      "desc": "Returns the record index of the message on the SIM (1-based index)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getMessageBody()",
      "desc": "Returns the message body as a String, if it exists and is text based.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "SmsMessage.MessageClass",
      "code": "getMessageClass()",
      "desc": "Returns the class of this message.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getOriginatingAddress()",
      "desc": "Returns the originating address (sender) of this SMS message in String form or null if unavailable",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ByteArray",
      "code": "getPdu()",
      "desc": "Returns the raw PDU for the message.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getProtocolIdentifier()",
      "desc": "Get protocol identifier."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getPseudoSubject()",
      "desc": "Unofficial convention of a subject line enclosed in parens empty string if not present",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getServiceCenterAddress()",
      "desc": "Returns the address of the SMS service center that relayed this message or null if there is none.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getStatus()",
      "desc": "GSM: For an SMS-STATUS-REPORT message, this returns the status field from the status report."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getStatusOnSim()",
      "desc": "Returns the status of the message on the SIM (read, unread, sent, unsent)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "SmsMessage.SubmitPdu",
      "code": "getSubmitPdu(scAddress: String!, destinationAddress: String!, message: String!, statusReportRequested: Boolean)",
      "desc": "Get an SMS-SUBMIT PDU for a destination address and a message",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "SmsMessage.SubmitPdu",
      "code": "getSubmitPdu(scAddress: String!, destinationAddress: String!, destinationPort: Short, data: ByteArray!, statusReportRequested: Boolean)",
      "desc": "Get an SMS-SUBMIT PDU for a data message to a destination address & port",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getTPLayerLengthForPDU(pdu: String!)",
      "desc": "Get the TP-Layer-Length for the given SMS-SUBMIT PDU Basically, the length in bytes (not hex chars) less the SMSC header"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "getTimestampMillis()",
      "desc": "Returns the service centre timestamp in currentTimeMillis() format"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ByteArray",
      "code": "getUserData()",
      "desc": "returns the user data section minus the user data header if one was present.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isCphsMwiMessage()",
      "desc": "Returns true for CPHS MWI toggle message."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isEmail()",
      "desc": "Returns true if message is an email."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isMWIClearMessage()",
      "desc": "returns true if this message is a CPHS voicemail / message waiting indicator (MWI) clear message"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isMWISetMessage()",
      "desc": "returns true if this message is a CPHS voicemail / message waiting indicator (MWI) set message"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isMwiDontStore()",
      "desc": "returns true if this message is a \"Message Waiting Indication Group: Discard Message\" notification and should not be stored."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isReplace()",
      "desc": "See TS 23."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isReplyPathPresent()",
      "desc": "Returns true iff the TP-Reply-Path bit is set in this message."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isStatusReportMessage()",
      "desc": "Return true iff the message is a SMS-STATUS-REPORT message."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "code": "MessageClass",
      "desc": "SMS Class enumeration."
    },
    {
      "type": "nested-classes",
      "keyword": "open",
      "code": "SubmitPdu",
      "desc": ""
    }
  ]
}