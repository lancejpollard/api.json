{
  "path": "java.net",
  "name": "MulticastSocket",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()\n            Create a multicast socket."
    },
    {
      "type": "ctor",
      "ctor": "<init>(port: Int)\n            Create a multicast socket and bind it to a specific port."
    },
    {
      "type": "ctor",
      "ctor": "<init>(bindaddr: SocketAddress!)\n            Create a MulticastSocket bound to the specified socket address."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "InetAddress",
      "code": "getInterface()",
      "desc": "Retrieve the address of the network interface used for multicast packets.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getLoopbackMode()",
      "desc": "Get the setting for local loopback of multicast datagrams."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "NetworkInterface",
      "code": "getNetworkInterface()",
      "desc": "Get the multicast network interface set.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Byte",
      "code": "getTTL()",
      "desc": "Get the default time-to-live for multicast packets sent out on the socket."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getTimeToLive()",
      "desc": "Get the default time-to-live for multicast packets sent out on the socket."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "joinGroup(mcastaddr: InetAddress!)",
      "desc": "Joins a multicast group."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "joinGroup(mcastaddr: SocketAddress!, netIf: NetworkInterface!)",
      "desc": "Joins the specified multicast group at the specified interface."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "leaveGroup(mcastaddr: InetAddress!)",
      "desc": "Leave a multicast group."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "leaveGroup(mcastaddr: SocketAddress!, netIf: NetworkInterface!)",
      "desc": "Leave a multicast group on a specified local interface."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "send(p: DatagramPacket!, ttl: Byte)",
      "desc": "Sends a datagram packet to the destination, with a TTL (time- to-live) other than the default for the socket."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setInterface(inf: InetAddress!)",
      "desc": "Set the multicast network interface used by methods whose behavior would be affected by the value of the network interface."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLoopbackMode(disable: Boolean)",
      "desc": "Disable/Enable local loopback of multicast datagrams The option is used by the platform's networking code as a hint for setting whether multicast data will be looped back to the local socket."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setNetworkInterface(netIf: NetworkInterface!)",
      "desc": "Specify the network interface for outgoing multicast datagrams sent on this socket."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTTL(ttl: Byte)",
      "desc": "Set the default time-to-live for multicast packets sent out on this MulticastSocket in order to control the scope of the multicasts."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTimeToLive(ttl: Int)",
      "desc": "Set the default time-to-live for multicast packets sent out on this MulticastSocket in order to control the scope of the multicasts."
    },
    {
      "type": "inherited-methods",
      "from": "DatagramSocket"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "bind(addr: SocketAddress!)"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "close()"
    },
    {
      "type": "inherited-methods",
      "from": "receive"
    },
    {
      "type": "inherited-methods",
      "from": "SocketException"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "connect(address: InetAddress!, port: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "address"
    },
    {
      "type": "inherited-methods",
      "from": "InetAddress#isMulticastAddress"
    },
    {
      "type": "inherited-methods",
      "from": ""
    },
    {
      "type": "inherited-methods",
      "from": "address"
    },
    {
      "type": "inherited-methods",
      "from": ""
    },
    {
      "type": "inherited-methods",
      "from": "checkAccept"
    },
    {
      "type": "inherited-methods",
      "from": "address"
    },
    {
      "type": "inherited-methods",
      "from": "port"
    },
    {
      "type": "inherited-methods",
      "from": "receive"
    },
    {
      "type": "inherited-methods",
      "from": "send"
    },
    {
      "type": "inherited-methods",
      "from": "IllegalArgumentException"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "connect(addr: SocketAddress!)"
    },
    {
      "type": "inherited-methods",
      "from": "InetSocketAddress"
    },
    {
      "type": "inherited-methods",
      "from": "connect(InetAddress,int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "disconnect()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "getBroadcast()"
    },
    {
      "type": "inherited-methods",
      "from": "DatagramChannel!"
    },
    {
      "type": "inherited-methods",
      "from": "getChannel()"
    },
    {
      "type": "inherited-methods",
      "from": "java.nio.channels.DatagramChannel"
    },
    {
      "type": "inherited-methods",
      "from": "DatagramChannel.open"
    },
    {
      "type": "inherited-methods",
      "from": "InetAddress!"
    },
    {
      "type": "inherited-methods",
      "from": "getInetAddress()"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "closed"
    },
    {
      "type": "inherited-methods",
      "from": "InetAddress!"
    },
    {
      "type": "inherited-methods",
      "from": "getLocalAddress()"
    },
    {
      "type": "inherited-methods",
      "from": "checkConnect"
    },
    {
      "type": "inherited-methods",
      "from": "-1"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getLocalPort()"
    },
    {
      "type": "inherited-methods",
      "from": "SocketAddress!"
    },
    {
      "type": "inherited-methods",
      "from": "getLocalSocketAddress()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getPort()"
    },
    {
      "type": "inherited-methods",
      "from": "-1"
    },
    {
      "type": "inherited-methods",
      "from": "closed"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getReceiveBufferSize()"
    },
    {
      "type": "inherited-methods",
      "from": "DatagramSocket"
    },
    {
      "type": "inherited-methods",
      "from": "DatagramSocket"
    },
    {
      "type": "inherited-methods",
      "from": "SocketAddress!"
    },
    {
      "type": "inherited-methods",
      "from": "getRemoteSocketAddress()"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "closed"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "getReuseAddress()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getSendBufferSize()"
    },
    {
      "type": "inherited-methods",
      "from": "DatagramSocket"
    },
    {
      "type": "inherited-methods",
      "from": "DatagramSocket"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getSoTimeout()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getTrafficClass()"
    },
    {
      "type": "inherited-methods",
      "from": "setTrafficClass(int)"
    },
    {
      "type": "inherited-methods",
      "from": "setTrafficClass(int)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isBound()"
    },
    {
      "type": "inherited-methods",
      "from": "closed"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isClosed()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isConnected()"
    },
    {
      "type": "inherited-methods",
      "from": "closed"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "receive(p: DatagramPacket!)"
    },
    {
      "type": "inherited-methods",
      "from": "DatagramPacket"
    },
    {
      "type": "inherited-methods",
      "from": "length"
    },
    {
      "type": "inherited-methods",
      "from": "checkAccept"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "send(p: DatagramPacket!)"
    },
    {
      "type": "inherited-methods",
      "from": "DatagramPacket"
    },
    {
      "type": "inherited-methods",
      "from": "p.getAddress().isMulticastAddress()"
    },
    {
      "type": "inherited-methods",
      "from": "checkMulticast"
    },
    {
      "type": "inherited-methods",
      "from": "p.getAddress()"
    },
    {
      "type": "inherited-methods",
      "from": "checkConnect"
    },
    {
      "type": "inherited-methods",
      "from": "p.getAddress().getHostAddress()"
    },
    {
      "type": "inherited-methods",
      "from": "p.getPort()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setBroadcast(on: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setDatagramSocketImplFactory(fac: DatagramSocketImplFactory!)"
    },
    {
      "type": "inherited-methods",
      "from": "createDatagramSocketImpl"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "checkSetFactory"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setReceiveBufferSize(size: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "DatagramSocket"
    },
    {
      "type": "inherited-methods",
      "from": "getReceiveBufferSize()"
    },
    {
      "type": "inherited-methods",
      "from": "receive(java.net.DatagramPacket)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setReuseAddress(on: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "java.net.MulticastSocket"
    },
    {
      "type": "inherited-methods",
      "from": "SO_REUSEADDR"
    },
    {
      "type": "inherited-methods",
      "from": "SO_REUSEADDR"
    },
    {
      "type": "inherited-methods",
      "from": "bind(java.net.SocketAddress)"
    },
    {
      "type": "inherited-methods",
      "from": "getReuseAddress()"
    },
    {
      "type": "inherited-methods",
      "from": "false"
    },
    {
      "type": "inherited-methods",
      "from": "DatagramSocket"
    },
    {
      "type": "inherited-methods",
      "from": "SO_REUSEADDR"
    },
    {
      "type": "inherited-methods",
      "from": "SO_REUSEADDR"
    },
    {
      "type": "inherited-methods",
      "from": "isBound()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setSendBufferSize(size: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "DatagramSocket"
    },
    {
      "type": "inherited-methods",
      "from": "getSendBufferSize()"
    },
    {
      "type": "inherited-methods",
      "from": "send(java.net.DatagramPacket)"
    },
    {
      "type": "inherited-methods",
      "from": "DatagramPacket"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setSoTimeout(timeout: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "> 0"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setTrafficClass(tc: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "0 <= tc <= 255"
    },
    {
      "type": "inherited-methods",
      "from": "integer"
    },
    {
      "type": "inherited-methods",
      "from": "IPTOS_LOWCOST (0x02)"
    },
    {
      "type": "inherited-methods",
      "from": "IPTOS_RELIABILITY (0x04)"
    },
    {
      "type": "inherited-methods",
      "from": "IPTOS_THROUGHPUT (0x08)"
    },
    {
      "type": "inherited-methods",
      "from": "IPTOS_LOWDELAY (0x10)"
    },
    {
      "type": "inherited-methods",
      "from": "tc"
    }
  ]
}