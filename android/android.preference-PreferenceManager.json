{
  "path": "android.preference",
  "name": "PreferenceManager",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "KEY_HAS_SET_DEFAULT_VALUES",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "METADATA_KEY_PREFERENCES",
      "desc": "The Activity meta-data key for its XML preference hierarchy."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PreferenceScreen",
      "code": "createPreferenceScreen(context: Context!)",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Preference",
      "code": "findPreference(key: CharSequence!)",
      "desc": "Finds a Preference based on its key.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "SharedPreferences",
      "code": "getDefaultSharedPreferences(context: Context!)",
      "desc": "Gets a SharedPreferences instance that points to the default file that is used by the preference framework in the given context.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getDefaultSharedPreferencesName(context: Context!)",
      "desc": "Returns the name used for storing default shared preferences.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PreferenceDataStore",
      "code": "getPreferenceDataStore()",
      "desc": "Returns the PreferenceDataStore associated with this manager or null if the default android.content.SharedPreferences are used instead.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "SharedPreferences",
      "code": "getSharedPreferences()",
      "desc": "Gets a SharedPreferences instance that preferences managed by this will use.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getSharedPreferencesMode()",
      "desc": "Returns the current mode of the SharedPreferences file that preferences managed by this will use."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getSharedPreferencesName()",
      "desc": "Returns the current name of the SharedPreferences file that preferences managed by this will use.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isStorageDefault()",
      "desc": "Indicates if the storage location used internally by this class is the default provided by the hosting Context."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isStorageDeviceProtected()",
      "desc": "Indicates if the storage location used internally by this class is backed by device-protected storage."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setDefaultValues(context: Context!, resId: Int, readAgain: Boolean)",
      "desc": "Sets the default values from an XML preference file by reading the values defined by each Preference item's android:defaultValue attribute."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setDefaultValues(context: Context!, sharedPreferencesName: String!, sharedPreferencesMode: Int, resId: Int, readAgain: Boolean)",
      "desc": "Similar to setDefaultValues(android.content.Context,int,boolean) but allows the client to provide the filename and mode of the shared preferences file."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPreferenceDataStore(dataStore: PreferenceDataStore!)",
      "desc": "Sets a PreferenceDataStore to be used by all Preferences associated with this manager that don't have a custom PreferenceDataStore assigned via Preference#setPreferenceDataStore(PreferenceDataStore)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSharedPreferencesMode(sharedPreferencesMode: Int)",
      "desc": "Sets the mode of the SharedPreferences file that preferences managed by this will use."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSharedPreferencesName(sharedPreferencesName: String!)",
      "desc": "Sets the name of the SharedPreferences file that preferences managed by this will use."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setStorageDefault()",
      "desc": "Sets the storage location used internally by this class to be the default provided by the hosting Context."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setStorageDeviceProtected()",
      "desc": "Explicitly set the storage location used internally by this class to be device-protected storage."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnActivityDestroyListener",
      "desc": "Interface definition for a class that will be called when the container's activity is destroyed."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnActivityResultListener",
      "desc": "Interface definition for a class that will be called when the container's activity receives an activity result."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnActivityStopListener",
      "desc": "Interface definition for a class that will be called when the container's activity is stopped."
    }
  ]
}