{
  "path": "javax.xml.transform.dom",
  "name": "DOMResult",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "FEATURE",
      "desc": "If javax.xml.transform.TransformerFactory#getFeature returns true when passed this value as an argument, the Transformer supports Result output of this type."
    },
    {
      "type": "ctor",
      "ctor": "<init>()\n            Zero-argument default constructor."
    },
    {
      "type": "ctor",
      "ctor": "<init>(node: Node!)\n            Use a DOM node to create a new output target."
    },
    {
      "type": "ctor",
      "ctor": "<init>(node: Node!, systemId: String!)\n            Use a DOM node to create a new output target with the specified System ID."
    },
    {
      "type": "ctor",
      "ctor": "<init>(node: Node!, nextSibling: Node!)\n            Use a DOM node to create a new output target specifying the child node where the result nodes should be inserted before."
    },
    {
      "type": "ctor",
      "ctor": "<init>(node: Node!, nextSibling: Node!, systemId: String!)\n            Use a DOM node to create a new output target specifying the child node where the result nodes should be inserted before and the specified System ID."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Node",
      "code": "getNextSibling()",
      "desc": "Get the child node before which the result nodes will be inserted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Node",
      "code": "getNode()",
      "desc": "Get the node that will contain the result DOM tree.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getSystemId()",
      "desc": "Get the System Identifier.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setNextSibling(nextSibling: Node!)",
      "desc": "Set the child node before which the result nodes will be inserted."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setNode(node: Node!)",
      "desc": "Set the node that will contain the result DOM tree."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSystemId(systemId: String!)",
      "desc": "Set the systemId that may be used in association with the node."
    },
    {
      "type": "inherited-constants",
      "from": "Result"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "PI_DISABLE_OUTPUT_ESCAPING"
    },
    {
      "type": "inherited-constants",
      "from": "String"
    },
    {
      "type": "inherited-constants",
      "from": "PI_ENABLE_OUTPUT_ESCAPING"
    }
  ]
}