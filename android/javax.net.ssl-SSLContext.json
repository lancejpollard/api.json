{
  "path": "javax.net.ssl",
  "name": "SSLContext",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "SSLEngine",
      "code": "createSSLEngine()",
      "desc": "Creates a new SSLEngine using this context.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "SSLEngine",
      "code": "createSSLEngine(peerHost: String!, peerPort: Int)",
      "desc": "Creates a new SSLEngine using this context using advisory peer information.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "SSLSessionContext",
      "code": "getClientSessionContext()",
      "desc": "Returns the client session context, which represents the set of SSL sessions available for use during the handshake phase of client-side SSL sockets.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "SSLContext",
      "code": "getDefault()",
      "desc": "Returns the default SSL context.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "SSLParameters",
      "code": "getDefaultSSLParameters()",
      "desc": "Returns a copy of the SSLParameters indicating the default settings for this SSL context.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "SSLContext",
      "code": "getInstance(protocol: String!)",
      "desc": "Returns a SSLContext object that implements the specified secure socket protocol.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "SSLContext",
      "code": "getInstance(protocol: String!, provider: String!)",
      "desc": "Returns a SSLContext object that implements the specified secure socket protocol.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "SSLContext",
      "code": "getInstance(protocol: String!, provider: Provider!)",
      "desc": "Returns a SSLContext object that implements the specified secure socket protocol.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getProtocol()",
      "desc": "Returns the protocol name of this SSLContext object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Provider",
      "code": "getProvider()",
      "desc": "Returns the provider of this SSLContext object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "SSLSessionContext",
      "code": "getServerSessionContext()",
      "desc": "Returns the server session context, which represents the set of SSL sessions available for use during the handshake phase of server-side SSL sockets.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "SSLServerSocketFactory",
      "code": "getServerSocketFactory()",
      "desc": "Returns a ServerSocketFactory object for this context.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "SSLSocketFactory",
      "code": "getSocketFactory()",
      "desc": "Returns a SocketFactory object for this context.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "SSLParameters",
      "code": "getSupportedSSLParameters()",
      "desc": "Returns a copy of the SSLParameters indicating the supported settings for this SSL context.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "init(km: Array<KeyManager!>!, tm: Array<TrustManager!>!, random: SecureRandom!)",
      "desc": "Initializes this context."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setDefault(context: SSLContext!)",
      "desc": "Sets the default SSL context."
    }
  ]
}