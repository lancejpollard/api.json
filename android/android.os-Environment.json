{
  "path": "android.os",
  "name": "Environment",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "MEDIA_BAD_REMOVAL",
      "desc": "Storage state if the media was removed before it was unmounted."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "MEDIA_CHECKING",
      "desc": "Storage state if the media is present and being disk-checked."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "MEDIA_EJECTING",
      "desc": "Storage state if the media is in the process of being ejected."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "MEDIA_MOUNTED",
      "desc": "Storage state if the media is present and mounted at its mount point with read/write access."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "MEDIA_MOUNTED_READ_ONLY",
      "desc": "Storage state if the media is present and mounted at its mount point with read-only access."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "MEDIA_NOFS",
      "desc": "Storage state if the media is present but is blank or is using an unsupported filesystem."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "MEDIA_REMOVED",
      "desc": "Storage state if the media is not present."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "MEDIA_SHARED",
      "desc": "Storage state if the media is present not mounted, and shared via USB mass storage."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "MEDIA_UNKNOWN",
      "desc": "Unknown storage state, such as when a path isn't backed by known storage media."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "MEDIA_UNMOUNTABLE",
      "desc": "Storage state if the media is present but cannot be mounted."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "MEDIA_UNMOUNTED",
      "desc": "Storage state if the media is present but not mounted."
    },
    {
      "type": "ctor",
      "ctor": "<init>()"
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "File",
      "code": "getDataDirectory()",
      "desc": "Return the user data directory.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "File",
      "code": "getDownloadCacheDirectory()",
      "desc": "Return the download/cache content directory.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "File",
      "code": "getExternalStorageDirectory()",
      "desc": "Return the primary shared/external storage directory.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "File",
      "code": "getExternalStoragePublicDirectory(type: String!)",
      "desc": "Get a top-level shared/external storage directory for placing files of a particular type.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getExternalStorageState()",
      "desc": "Returns the current state of the primary shared/external storage media.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getExternalStorageState(path: File!)",
      "desc": "Returns the current state of the shared/external storage media at the given path.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "File",
      "code": "getRootDirectory()",
      "desc": "Return root of the \"system\" partition holding the core Android OS."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "File",
      "code": "getStorageDirectory()",
      "desc": "Return root directory where all external storage devices will be mounted."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getStorageState(path: File!)",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isExternalStorageEmulated()",
      "desc": "Returns whether the primary shared/external storage media is emulated."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isExternalStorageEmulated(path: File)",
      "desc": "Returns whether the shared/external storage media at the given path is emulated."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isExternalStorageLegacy()",
      "desc": "Returns whether the shared/external storage media is a legacy view that includes files not owned by the app."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isExternalStorageLegacy(path: File)",
      "desc": "Returns whether the shared/external storage media is a legacy view that includes files not owned by the app."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isExternalStorageManager()",
      "desc": "Returns whether the calling app has All Files Access on the primary shared/external storage media."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isExternalStorageManager(path: File)",
      "desc": "Returns whether the calling app has All Files Access at the given path"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isExternalStorageRemovable()",
      "desc": "Returns whether the primary shared/external storage media is physically removable."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isExternalStorageRemovable(path: File)",
      "desc": "Returns whether the shared/external storage media at the given path is physically removable."
    }
  ]
}