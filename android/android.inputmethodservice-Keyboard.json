{
  "path": "android.inputmethodservice",
  "name": "Keyboard",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "EDGE_BOTTOM",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "EDGE_LEFT",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "EDGE_RIGHT",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "EDGE_TOP",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "KEYCODE_ALT",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "KEYCODE_CANCEL",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "KEYCODE_DELETE",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "KEYCODE_DONE",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "KEYCODE_MODE_CHANGE",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "KEYCODE_SHIFT",
      "desc": ""
    },
    {
      "type": "ctor",
      "ctor": "<init>(context: Context!, xmlLayoutResId: Int)\n            Creates a keyboard from the given xml key layout file."
    },
    {
      "type": "ctor",
      "ctor": "<init>(context: Context!, xmlLayoutResId: Int, modeId: Int, width: Int, height: Int)\n            Creates a keyboard from the given xml key layout file."
    },
    {
      "type": "ctor",
      "ctor": "<init>(context: Context!, xmlLayoutResId: Int, modeId: Int)\n            Creates a keyboard from the given xml key layout file."
    },
    {
      "type": "ctor",
      "ctor": "<init>(context: Context!, layoutTemplateResId: Int, characters: CharSequence!, columns: Int, horizontalPadding: Int)\n            Creates a blank keyboard from the given resource file and populates it with the specified characters in left-to-right, top-to-bottom fashion, using the specified number of columns."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getHeight()",
      "desc": "Returns the total height of the keyboard"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableList",
      "code": "getKeys()",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getMinWidth()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableList",
      "code": "getModifierKeys()",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "IntArray",
      "code": "getNearestKeys(x: Int, y: Int)",
      "desc": "Returns the indices of the keys that are closest to the given point.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getShiftKeyIndex()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isShifted()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "setShifted(shiftState: Boolean)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Keyboard.Key",
      "code": "createKeyFromXml(res: Resources!, parent: Keyboard.Row!, x: Int, y: Int, parser: XmlResourceParser!)",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Keyboard.Row",
      "code": "createRowFromXml(res: Resources!, parser: XmlResourceParser!)",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "getHorizontalGap()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "getKeyHeight()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "getKeyWidth()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "getVerticalGap()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setHorizontalGap(gap: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setKeyHeight(height: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setKeyWidth(width: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setVerticalGap(gap: Int)",
      "desc": ""
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "open",
      "code": "Key",
      "desc": "Class for describing the position and characteristics of a single key in the keyboard."
    },
    {
      "type": "nested-classes",
      "keyword": "open",
      "code": "Row",
      "desc": "Container for keys in the keyboard."
    }
  ]
}