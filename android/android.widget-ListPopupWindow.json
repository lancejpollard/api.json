{
  "path": "android.widget",
  "name": "ListPopupWindow",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "INPUT_METHOD_FROM_FOCUSABLE",
      "desc": "Mode for setInputMethodMode(int): the requirements for the input method should be based on the focusability of the popup."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "INPUT_METHOD_NEEDED",
      "desc": "Mode for setInputMethodMode(int): this popup always needs to work with an input method, regardless of whether it is focusable."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "INPUT_METHOD_NOT_NEEDED",
      "desc": "Mode for setInputMethodMode(int): this popup never needs to work with an input method, regardless of whether it is focusable."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MATCH_PARENT",
      "desc": "Alias for ViewGroup.LayoutParams#MATCH_PARENT."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "POSITION_PROMPT_ABOVE",
      "desc": "The provided prompt view should appear above list content."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "POSITION_PROMPT_BELOW",
      "desc": "The provided prompt view should appear below list content."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "WRAP_CONTENT",
      "desc": "Alias for ViewGroup.LayoutParams#WRAP_CONTENT."
    },
    {
      "type": "ctor",
      "ctor": "<init>(context: Context)\n            Create a new, empty popup window capable of displaying items from a ListAdapter."
    },
    {
      "type": "ctor",
      "ctor": "<init>(context: Context, attrs: AttributeSet?)\n            Create a new, empty popup window capable of displaying items from a ListAdapter."
    },
    {
      "type": "ctor",
      "ctor": "<init>(context: Context, attrs: AttributeSet?, defStyleAttr: Int)\n            Create a new, empty popup window capable of displaying items from a ListAdapter."
    },
    {
      "type": "ctor",
      "ctor": "<init>(context: Context, attrs: AttributeSet?, defStyleAttr: Int, defStyleRes: Int)\n            Create a new, empty popup window capable of displaying items from a ListAdapter."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "clearListSelection()",
      "desc": "Clear any current list selection."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View.OnTouchListener",
      "code": "createDragToOpenListener(src: View!)",
      "desc": "Returns an OnTouchListener that can be added to the source view to implement drag-to-open behavior.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "dismiss()",
      "desc": "Dismiss the popup window."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View",
      "code": "getAnchorView()",
      "desc": "Returns the view that will be used to anchor this popup.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getAnimationStyle()",
      "desc": "Returns the animation style that will be used when the popup window is shown or dismissed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Drawable",
      "code": "getBackground()",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Rect",
      "code": "getEpicenterBounds()",
      "desc": "Returns bounds which are used as a popup's epicenter of the enter and exit transitions.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getHeight()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getHorizontalOffset()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getInputMethodMode()",
      "desc": "Return the current value in setInputMethodMode(int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ListView",
      "code": "getListView()",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getPromptPosition()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "getSelectedItem()",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "getSelectedItemId()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getSelectedItemPosition()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View",
      "code": "getSelectedView()",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getSoftInputMode()",
      "desc": "Returns the current value in setSoftInputMode(int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getVerticalOffset()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getWidth()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isInputMethodNotNeeded()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isModal()",
      "desc": "Returns whether the popup window will be modal when shown."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isShowing()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onKeyDown(keyCode: Int, event: KeyEvent)",
      "desc": "Filter key down events."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onKeyPreIme(keyCode: Int, event: KeyEvent)",
      "desc": "Filter pre-IME key events."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onKeyUp(keyCode: Int, event: KeyEvent)",
      "desc": "Filter key up events."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "performItemClick(position: Int)",
      "desc": "Perform an item click operation on the specified list adapter position."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "postShow()",
      "desc": "Post a show() call to the UI thread."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAdapter(adapter: ListAdapter?)",
      "desc": "Sets the adapter that provides the data and the views to represent the data in this popup window."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAnchorView(anchor: View?)",
      "desc": "Sets the popup's anchor view."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAnimationStyle(animationStyle: Int)",
      "desc": "Set an animation style to use when the popup window is shown or dismissed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setBackgroundDrawable(d: Drawable?)",
      "desc": "Sets a drawable to be the background for the popup window."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setContentWidth(width: Int)",
      "desc": "Sets the width of the popup window by the size of its content."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setDropDownGravity(gravity: Int)",
      "desc": "Set the gravity of the dropdown list."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setEpicenterBounds(bounds: Rect?)",
      "desc": "Specifies the anchor-relative bounds of the popup's transition epicenter."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setHeight(height: Int)",
      "desc": "Sets the height of the popup window in pixels."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setHorizontalOffset(offset: Int)",
      "desc": "Set the horizontal offset of this popup from its anchor view in pixels."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setInputMethodMode(mode: Int)",
      "desc": "Control how the popup operates with an input method: one of INPUT_METHOD_FROM_FOCUSABLE, INPUT_METHOD_NEEDED, or INPUT_METHOD_NOT_NEEDED."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setListSelector(selector: Drawable!)",
      "desc": "Sets a drawable to use as the list item selector."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setModal(modal: Boolean)",
      "desc": "Set whether this window should be modal when shown."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOnDismissListener(listener: PopupWindow.OnDismissListener?)",
      "desc": "Set a listener to receive a callback when the popup is dismissed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOnItemClickListener(clickListener: AdapterView.OnItemClickListener?)",
      "desc": "Sets a listener to receive events when a list item is clicked."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOnItemSelectedListener(selectedListener: AdapterView.OnItemSelectedListener?)",
      "desc": "Sets a listener to receive events when a list item is selected."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPromptPosition(position: Int)",
      "desc": "Set where the optional prompt view should appear."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPromptView(prompt: View?)",
      "desc": "Set a view to act as a user prompt for this popup window."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSelection(position: Int)",
      "desc": "Set the selected position of the list."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSoftInputMode(mode: Int)",
      "desc": "Sets the operating mode for the soft input area."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setVerticalOffset(offset: Int)",
      "desc": "Set the vertical offset of this popup from its anchor view in pixels."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setWidth(width: Int)",
      "desc": "Sets the width of the popup window in pixels."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setWindowLayoutType(layoutType: Int)",
      "desc": "Set the layout type for this popup window."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "show()",
      "desc": "Show the popup list."
    }
  ]
}