{
  "path": "java.util.concurrent.atomic",
  "name": "AtomicIntegerArray",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(length: Int)\n            Creates a new AtomicIntegerArray of the given length, with all elements initially zero."
    },
    {
      "type": "ctor",
      "ctor": "<init>(array: IntArray!)\n            Creates a new AtomicIntegerArray with the same length as, and all elements copied from, the given array."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "accumulateAndGet(i: Int, x: Int, accumulatorFunction: IntBinaryOperator!)",
      "desc": "Atomically updates the element at index i with the results of applying the given function to the current and given values, returning the updated value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "addAndGet(i: Int, delta: Int)",
      "desc": "Atomically adds the given value to the element at index i."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "compareAndSet(i: Int, expect: Int, update: Int)",
      "desc": "Atomically sets the element at position i to the given updated value if the current value == the expected value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "decrementAndGet(i: Int)",
      "desc": "Atomically decrements by one the element at index i."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "get(i: Int)",
      "desc": "Gets the current value at position i."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getAndAccumulate(i: Int, x: Int, accumulatorFunction: IntBinaryOperator!)",
      "desc": "Atomically updates the element at index i with the results of applying the given function to the current and given values, returning the previous value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getAndAdd(i: Int, delta: Int)",
      "desc": "Atomically adds the given value to the element at index i."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getAndDecrement(i: Int)",
      "desc": "Atomically decrements by one the element at index i."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getAndIncrement(i: Int)",
      "desc": "Atomically increments by one the element at index i."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getAndSet(i: Int, newValue: Int)",
      "desc": "Atomically sets the element at position i to the given value and returns the old value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getAndUpdate(i: Int, updateFunction: IntUnaryOperator!)",
      "desc": "Atomically updates the element at index i with the results of applying the given function, returning the previous value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "incrementAndGet(i: Int)",
      "desc": "Atomically increments by one the element at index i."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "lazySet(i: Int, newValue: Int)",
      "desc": "Eventually sets the element at position i to the given value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "length()",
      "desc": "Returns the length of the array."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "set(i: Int, newValue: Int)",
      "desc": "Sets the element at position i to the given value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns the String representation of the current values of array."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "updateAndGet(i: Int, updateFunction: IntUnaryOperator!)",
      "desc": "Atomically updates the element at index i with the results of applying the given function, returning the updated value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "weakCompareAndSet(i: Int, expect: Int, update: Int)",
      "desc": "Atomically sets the element at position i to the given updated value if the current value == the expected value."
    }
  ]
}