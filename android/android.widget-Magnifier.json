{
  "path": "android.widget",
  "name": "Magnifier",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SOURCE_BOUND_MAX_IN_SURFACE",
      "desc": "A source bound that will extend as much as possible, while remaining within the surface the content is copied from."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SOURCE_BOUND_MAX_VISIBLE",
      "desc": "A source bound that will extend as much as possible, while remaining within the visible region of the magnified view, as determined by View#getGlobalVisibleRect(Rect)."
    },
    {
      "type": "ctor",
      "ctor": "<init>(view: View)\n            Initializes a magnifier."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "dismiss()",
      "desc": "Dismisses the magnifier from the screen."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getCornerRadius()",
      "desc": "This units of this value are pixels."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getDefaultHorizontalSourceToMagnifierOffset()",
      "desc": "Returns the horizontal offset, in pixels, to be applied to the source center position to obtain the magnifier center position when show(float,float) is called."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getDefaultVerticalSourceToMagnifierOffset()",
      "desc": "Returns the vertical offset, in pixels, to be applied to the source center position to obtain the magnifier center position when show(float,float) is called."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getElevation()",
      "desc": "This units of this value are pixels."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getHeight()",
      "desc": "This units of this value are pixels."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Drawable",
      "code": "getOverlay()",
      "desc": "Returns the overlay to be drawn on the top of the magnifier, or null if no overlay should be drawn.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Point",
      "code": "getPosition()",
      "desc": "Returns the top left coordinates of the magnifier, relative to the main application window.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getSourceHeight()",
      "desc": "This units of this value are pixels."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Point",
      "code": "getSourcePosition()",
      "desc": "Returns the top left coordinates of the magnifier source (i.e. the view region going to be magnified and copied to the magnifier), relative to the window or surface the content is copied from.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getSourceWidth()",
      "desc": "This units of this value are pixels."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getWidth()",
      "desc": "This units of this value are pixels."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getZoom()",
      "desc": "Returns the zoom to be applied to the magnified view region copied to the magnifier."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isClippingEnabled()",
      "desc": "Returns whether the magnifier position will be adjusted such that the magnifier will be fully within the bounds of the main application window, by also avoiding any overlap with system insets (such as the one corresponding to the status bar) i."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setZoom(zoom: Float)",
      "desc": "Sets the zoom to be applied to the chosen content before being copied to the magnifier popup."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "show(sourceCenterX: Float, sourceCenterY: Float)",
      "desc": "Shows the magnifier on the screen."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "show(sourceCenterX: Float, sourceCenterY: Float, magnifierCenterX: Float, magnifierCenterY: Float)",
      "desc": "Shows the magnifier on the screen at a position that is independent from its content position."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "update()",
      "desc": "Asks the magnifier to update its content."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "code": "Builder",
      "desc": "Builder class for Magnifier objects."
    }
  ]
}