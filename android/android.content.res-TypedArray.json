{
  "path": "android.content.res",
  "name": "TypedArray",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getBoolean(index: Int, defValue: Boolean)",
      "desc": "Retrieve the boolean value for the attribute at index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getChangingConfigurations()",
      "desc": "Return a mask of the configuration parameters for which the values in this typed array may change."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getColor(index: Int, defValue: Int)",
      "desc": "Retrieve the color value for the attribute at index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ColorStateList",
      "code": "getColorStateList(index: Int)",
      "desc": "Retrieve the ColorStateList for the attribute at index.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Float",
      "code": "getDimension(index: Int, defValue: Float)",
      "desc": "Retrieve a dimensional unit attribute at index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getDimensionPixelOffset(index: Int, defValue: Int)",
      "desc": "Retrieve a dimensional unit attribute at index for use as an offset in raw pixels."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getDimensionPixelSize(index: Int, defValue: Int)",
      "desc": "Retrieve a dimensional unit attribute at index for use as a size in raw pixels."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Drawable",
      "code": "getDrawable(index: Int)",
      "desc": "Retrieve the Drawable for the attribute at index.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Float",
      "code": "getFloat(index: Int, defValue: Float)",
      "desc": "Retrieve the float value for the attribute at index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Typeface",
      "code": "getFont(index: Int)",
      "desc": "Retrieve the Typeface for the attribute at index.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Float",
      "code": "getFraction(index: Int, base: Int, pbase: Int, defValue: Float)",
      "desc": "Retrieves a fractional unit attribute at index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getIndex(at: Int)",
      "desc": "Returns an index in the array that has data."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getIndexCount()",
      "desc": "Returns the number of indices in the array that actually have data."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getInt(index: Int, defValue: Int)",
      "desc": "Retrieve the integer value for the attribute at index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getInteger(index: Int, defValue: Int)",
      "desc": "Retrieve the integer value for the attribute at index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getLayoutDimension(index: Int, name: String!)",
      "desc": "Special version of getDimensionPixelSize for retrieving android.view.ViewGroup's layout_width and layout_height attributes."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getLayoutDimension(index: Int, defValue: Int)",
      "desc": "Special version of getDimensionPixelSize for retrieving android.view.ViewGroup's layout_width and layout_height attributes."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getNonResourceString(index: Int)",
      "desc": "Retrieves the string value for the attribute at index, but only if that string comes from an immediate value in an XML file.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getPositionDescription()",
      "desc": "Returns a message about the parser state suitable for printing error messages.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getResourceId(index: Int, defValue: Int)",
      "desc": "Retrieves the resource identifier for the attribute at index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Resources",
      "code": "getResources()",
      "desc": "Returns the Resources object this array was loaded from.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getSourceResourceId(index: Int, defaultValue: Int)",
      "desc": "Returns the resource ID of the style or layout against which the specified attribute was resolved, otherwise returns defValue."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getString(index: Int)",
      "desc": "Retrieves the string value for the attribute at index.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CharSequence",
      "code": "getText(index: Int)",
      "desc": "Retrieves the styled string value for the attribute at index.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getTextArray(index: Int)",
      "desc": "Retrieve the CharSequence[] for the attribute at index.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getType(index: Int)",
      "desc": "Returns the type of attribute at the specified index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getValue(index: Int, outValue: TypedValue!)",
      "desc": "Retrieve the raw TypedValue for the attribute at index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "hasValue(index: Int)",
      "desc": "Determines whether there is an attribute at index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "hasValueOrEmpty(index: Int)",
      "desc": "Determines whether there is an attribute at index, returning true if the attribute was explicitly set to @empty and false only if the attribute was undefined."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "length()",
      "desc": "Returns the number of values in this array."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TypedValue",
      "code": "peekValue(index: Int)",
      "desc": "Retrieve the raw TypedValue for the attribute at index and return a temporary object holding its data.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "recycle()",
      "desc": "Recycles the TypedArray, to be re-used by a later caller."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": ""
    }
  ]
}