{
  "path": "java.util",
  "name": "OptionalLong",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "OptionalLong",
      "code": "empty()",
      "desc": "Returns an empty OptionalLong instance.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Indicates whether some other object is \"equal to\" this OptionalLong."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "getAsLong()",
      "desc": "If a value is present in this OptionalLong, returns the value, otherwise throws NoSuchElementException."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Returns the hash code value of the present value, if any, or 0 (zero) if no value is present."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "ifPresent(consumer: LongConsumer!)",
      "desc": "Have the specified consumer accept the value if a value is present, otherwise do nothing."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isPresent()",
      "desc": "Return true if there is a value present, otherwise false."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "OptionalLong",
      "code": "of(value: Long)",
      "desc": "Return an OptionalLong with the specified value present.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "orElse(other: Long)",
      "desc": "Return the value if present, otherwise return other."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "orElseGet(other: LongSupplier!)",
      "desc": "Return the value if present, otherwise invoke other and return the result of that invocation."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "orElseThrow(exceptionSupplier: Supplier<X>!)",
      "desc": "Return the contained value, if present, otherwise throw an exception to be created by the provided supplier."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns a string representation of the object."
    }
  ]
}