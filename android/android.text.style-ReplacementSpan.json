{
  "path": "android.text.style",
  "name": "ReplacementSpan",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()"
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "draw(canvas: Canvas, text: CharSequence!, start: Int, end: Int, x: Float, top: Int, y: Int, bottom: Int, paint: Paint)",
      "desc": "Draws the span into the canvas."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CharSequence",
      "code": "getContentDescription()",
      "desc": "Gets a brief description of this ReplacementSpan for use in accessibility support.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Int",
      "code": "getSize(paint: Paint, text: CharSequence!, start: Int, end: Int, fm: Paint.FontMetricsInt?)",
      "desc": "Returns the width of the span."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setContentDescription(contentDescription: CharSequence?)",
      "desc": "Sets the specific content description into ReplacementSpan."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "updateDrawState(ds: TextPaint!)",
      "desc": "This method does nothing, since ReplacementSpans are drawn explicitly instead of affecting Paint properties."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "updateMeasureState(p: TextPaint)",
      "desc": "This method does nothing, since ReplacementSpans are measured explicitly instead of affecting Paint properties."
    },
    {
      "type": "inherited-methods",
      "from": "MetricAffectingSpan"
    },
    {
      "type": "inherited-methods",
      "from": "MetricAffectingSpan!"
    },
    {
      "type": "inherited-methods",
      "from": "getUnderlying()"
    },
    {
      "type": "inherited-methods",
      "from": "wrap"
    },
    {
      "type": "inherited-methods",
      "from": "CharacterStyle"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "updateDrawState(tp: TextPaint!)"
    },
    {
      "type": "inherited-methods",
      "from": "CharacterStyle!"
    },
    {
      "type": "inherited-methods",
      "from": "wrap(cs: CharacterStyle!)"
    }
  ]
}