{
  "path": "junit.framework",
  "name": "TestSuite",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()\n            Constructs an empty TestSuite."
    },
    {
      "type": "ctor",
      "ctor": "<init>(theClass: Class<*>!)\n            Constructs a TestSuite from the given class."
    },
    {
      "type": "ctor",
      "ctor": "<init>(theClass: Class<out TestCase!>!, name: String!)\n            Constructs a TestSuite from the given class with the given name."
    },
    {
      "type": "ctor",
      "ctor": "<init>(name: String!)\n            Constructs an empty TestSuite."
    },
    {
      "type": "ctor",
      "ctor": "<init>(vararg classes: Class<*>!)\n            Constructs a TestSuite from the given array of classes."
    },
    {
      "type": "ctor",
      "ctor": "<init>(classes: Array<Class<out TestCase!>!>!, name: String!)\n            Constructs a TestSuite from the given array of classes with the given name."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "addTest(test: Test!)",
      "desc": "Adds a test to the suite."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "addTestSuite(testClass: Class<out TestCase!>!)",
      "desc": "Adds the tests from the given class to the suite"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "countTestCases()",
      "desc": "Counts the number of test cases that will be run by this test."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Test",
      "code": "createTest(theClass: Class<*>!, name: String!)",
      "desc": ".",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getName()",
      "desc": "Returns the name of the suite.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Constructor",
      "code": "getTestConstructor(theClass: Class<*>!)",
      "desc": "Gets a constructor which takes a single String as its argument or a no arg constructor.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "run(result: TestResult!)",
      "desc": "Runs the tests and collects their result in a TestResult."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "runTest(test: Test!, result: TestResult!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setName(name: String!)",
      "desc": "Sets the name of the suite."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Test",
      "code": "testAt(index: Int)",
      "desc": "Returns the test at the given index",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "testCount()",
      "desc": "Returns the number of tests in this suite"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Enumeration",
      "code": "tests()",
      "desc": "Returns the tests as an enumeration",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Test",
      "code": "warning(message: String!)",
      "desc": "Returns a test which will fail and log a warning message.",
      "symbol": "!"
    }
  ]
}