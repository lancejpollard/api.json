{
  "path": "java.text",
  "name": "RuleBasedCollator",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(rules: String!)\n            RuleBasedCollator constructor."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "clone()",
      "desc": "Standard override; no change in semantics."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "compare(source: String!, target: String!)",
      "desc": "Compares the character data stored in two different strings based on the collation rules."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Compares the equality of two collation objects."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CollationElementIterator",
      "code": "getCollationElementIterator(source: String!)",
      "desc": "Returns a CollationElementIterator for the given String.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CollationElementIterator",
      "code": "getCollationElementIterator(source: CharacterIterator!)",
      "desc": "Returns a CollationElementIterator for the given CharacterIterator.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CollationKey",
      "code": "getCollationKey(source: String!)",
      "desc": "Transforms the string into a series of characters that can be compared with CollationKey.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getRules()",
      "desc": "Gets the table-based rules for the collation object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Generates the hash code for the table-based collation object"
    },
    {
      "type": "inherited-constants",
      "from": "Collator"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "CANONICAL_DECOMPOSITION"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "FULL_DECOMPOSITION"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "IDENTICAL"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "NO_DECOMPOSITION"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "PRIMARY"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "SECONDARY"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TERTIARY"
    },
    {
      "type": "inherited-methods",
      "from": "Collator"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "compare(o1: Any!, o2: Any!)"
    },
    {
      "type": "inherited-methods",
      "from": "compare((String)o1, (String)o2)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "equals(source: String!, target: String!)"
    },
    {
      "type": "inherited-methods",
      "from": "Array<Locale!>!"
    },
    {
      "type": "inherited-methods",
      "from": "getAvailableLocales()"
    },
    {
      "type": "inherited-methods",
      "from": "getInstance"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getDecomposition()"
    },
    {
      "type": "inherited-methods",
      "from": "Collator!"
    },
    {
      "type": "inherited-methods",
      "from": "getInstance()"
    },
    {
      "type": "inherited-methods",
      "from": "Collator!"
    },
    {
      "type": "inherited-methods",
      "from": "getInstance(desiredLocale: Locale!)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getStrength()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setDecomposition(decompositionMode: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setStrength(newStrength: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Comparator"
    },
    {
      "type": "inherited-methods",
      "from": "Comparator<T>!"
    },
    {
      "type": "inherited-methods",
      "from": "reversed()"
    },
    {
      "type": "inherited-methods",
      "from": "Comparator<T>!"
    },
    {
      "type": "inherited-methods",
      "from": "thenComparing(other: Comparator<in T>!)"
    },
    {
      "type": "inherited-methods",
      "from": "Comparator"
    },
    {
      "type": "inherited-methods",
      "from": "compare(a, b) == 0"
    },
    {
      "type": "inherited-methods",
      "from": "other"
    },
    {
      "type": "inherited-methods",
      "from": "Comparator<T>!"
    },
    {
      "type": "inherited-methods",
      "from": "thenComparing(keyExtractor: Function<in T, out U>!, keyComparator: Comparator<in U>!)"
    },
    {
      "type": "inherited-methods",
      "from": "Comparator"
    },
    {
      "type": "inherited-methods",
      "from": "Comparator<T>!"
    },
    {
      "type": "inherited-methods",
      "from": "thenComparing(keyExtractor: Function<in T, out U>!)"
    },
    {
      "type": "inherited-methods",
      "from": "Comparable"
    },
    {
      "type": "inherited-methods",
      "from": "Comparator<T>!"
    },
    {
      "type": "inherited-methods",
      "from": "thenComparingDouble(keyExtractor: ToDoubleFunction<in T>!)"
    },
    {
      "type": "inherited-methods",
      "from": "double"
    },
    {
      "type": "inherited-methods",
      "from": "Comparator<T>!"
    },
    {
      "type": "inherited-methods",
      "from": "thenComparingInt(keyExtractor: ToIntFunction<in T>!)"
    },
    {
      "type": "inherited-methods",
      "from": "int"
    },
    {
      "type": "inherited-methods",
      "from": "Comparator<T>!"
    },
    {
      "type": "inherited-methods",
      "from": "thenComparingLong(keyExtractor: ToLongFunction<in T>!)"
    },
    {
      "type": "inherited-methods",
      "from": "long"
    }
  ]
}