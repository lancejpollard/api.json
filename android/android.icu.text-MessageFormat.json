{
  "path": "android.icu.text",
  "name": "MessageFormat",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(pattern: String!)\n            Constructs a MessageFormat for the default FORMAT locale and the specified pattern."
    },
    {
      "type": "ctor",
      "ctor": "<init>(pattern: String!, locale: Locale!)\n            Constructs a MessageFormat for the specified locale and pattern."
    },
    {
      "type": "ctor",
      "ctor": "<init>(pattern: String!, locale: ULocale!)\n            Constructs a MessageFormat for the specified locale and pattern."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "applyPattern(pttrn: String!)",
      "desc": "Sets the pattern used by this message format."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "applyPattern(pattern: String!, aposMode: MessagePattern.ApostropheMode!)",
      "desc": "[icu] Sets the ApostropheMode and the pattern used by this message format."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "autoQuoteApostrophe(pattern: String!)",
      "desc": "[icu] Converts an 'apostrophe-friendly' pattern into a standard pattern.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "clone()",
      "desc": "Creates and returns a copy of this object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Indicates whether some other object is \"equal to\" this one."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "StringBuffer",
      "code": "format(arguments: Array<Any!>!, result: StringBuffer!, pos: FieldPosition!)",
      "desc": "Formats an array of objects and appends the MessageFormat's pattern, with arguments replaced by the formatted objects, to the provided StringBuffer.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "StringBuffer",
      "code": "format(arguments: MutableMap<String!, Any!>!, result: StringBuffer!, pos: FieldPosition!)",
      "desc": "Formats a map of objects and appends the MessageFormat's pattern, with arguments replaced by the formatted objects, to the provided StringBuffer.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "StringBuffer",
      "code": "format(arguments: Any!, result: StringBuffer!, pos: FieldPosition!)",
      "desc": "Formats a map or array of objects and appends the MessageFormat's pattern, with format elements replaced by the formatted objects, to the provided StringBuffer.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "format(pattern: String!, vararg arguments: Any!)",
      "desc": "Creates a MessageFormat with the given pattern and uses it to format the given arguments.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "format(pattern: String!, arguments: MutableMap<String!, Any!>!)",
      "desc": "Creates a MessageFormat with the given pattern and uses it to format the given arguments.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "AttributedCharacterIterator",
      "code": "formatToCharacterIterator(arguments: Any!)",
      "desc": "Formats an array of objects and inserts them into the MessageFormat's pattern, producing an AttributedCharacterIterator.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MessagePattern.ApostropheMode",
      "code": "getApostropheMode()",
      "desc": "[icu]",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableSet",
      "code": "getArgumentNames()",
      "desc": "[icu] Returns the top-level argument names.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Format",
      "code": "getFormatByArgumentName(argumentName: String!)",
      "desc": "[icu] Returns the first top-level format associated with the given argument name.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getFormats()",
      "desc": "Returns the Format objects used for the format elements in the previously set pattern string.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getFormatsByArgumentIndex()",
      "desc": "Returns the Format objects used for the values passed into format methods or returned from parse methods.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Locale",
      "code": "getLocale()",
      "desc": "Returns the locale that's used when creating or comparing subformats.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ULocale",
      "code": "getULocale()",
      "desc": "[icu] Returns the locale that's used when creating argument Format objects.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Returns a hash code value for the object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "parse(source: String!, pos: ParsePosition!)",
      "desc": "Parses the string.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "parse(source: String!)",
      "desc": "Parses text from the beginning of the given string to produce an object array.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "parseObject(source: String!, pos: ParsePosition!)",
      "desc": "Parses text from a string to produce an object array or Map.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableMap",
      "code": "parseToMap(source: String!, pos: ParsePosition!)",
      "desc": "[icu] Parses the string, returning the results in a Map.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableMap",
      "code": "parseToMap(source: String!)",
      "desc": "[icu] Parses text from the beginning of the given string to produce a map from argument to values.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFormat(formatElementIndex: Int, newFormat: Format!)",
      "desc": "Sets the Format object to use for the format element with the given format element index within the previously set pattern string."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFormatByArgumentIndex(argumentIndex: Int, newFormat: Format!)",
      "desc": "Sets the Format object to use for the format elements within the previously set pattern string that use the given argument index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFormatByArgumentName(argumentName: String!, newFormat: Format!)",
      "desc": "[icu] Sets the Format object to use for the format elements within the previously set pattern string that use the given argument name."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFormats(newFormats: Array<Format!>!)",
      "desc": "Sets the Format objects to use for the format elements in the previously set pattern string."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFormatsByArgumentIndex(newFormats: Array<Format!>!)",
      "desc": "Sets the Format objects to use for the values passed into format methods or returned from parse methods."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFormatsByArgumentName(newFormats: MutableMap<String!, Format!>!)",
      "desc": "[icu] Sets the Format objects to use for the values passed into format methods or returned from parse methods."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLocale(locale: Locale!)",
      "desc": "Sets the locale to be used for creating argument Format objects."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLocale(locale: ULocale!)",
      "desc": "Sets the locale to be used for creating argument Format objects."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toPattern()",
      "desc": "Returns the applied pattern string.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "usesNamedArguments()",
      "desc": "[icu] Returns true if this MessageFormat uses named arguments, and false otherwise."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "open",
      "code": "Field",
      "desc": "Defines constants that are used as attribute keys in the AttributedCharacterIterator returned from MessageFormat.formatToCharacterIterator."
    }
  ]
}