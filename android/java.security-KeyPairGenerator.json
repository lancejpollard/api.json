{
  "path": "java.security",
  "name": "KeyPairGenerator",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "KeyPair",
      "code": "genKeyPair()",
      "desc": "Generates a key pair.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "KeyPair",
      "code": "generateKeyPair()",
      "desc": "Generates a key pair.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getAlgorithm()",
      "desc": "Returns the standard name of the algorithm for this key pair generator.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "KeyPairGenerator",
      "code": "getInstance(algorithm: String!)",
      "desc": "Returns a KeyPairGenerator object that generates public/private key pairs for the specified algorithm.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "KeyPairGenerator",
      "code": "getInstance(algorithm: String!, provider: String!)",
      "desc": "Returns a KeyPairGenerator object that generates public/private key pairs for the specified algorithm.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "KeyPairGenerator",
      "code": "getInstance(algorithm: String!, provider: Provider!)",
      "desc": "Returns a KeyPairGenerator object that generates public/private key pairs for the specified algorithm.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Provider",
      "code": "getProvider()",
      "desc": "Returns the provider of this key pair generator object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "initialize(keysize: Int)",
      "desc": "Initializes the key pair generator for a certain keysize using a default parameter set and the SecureRandom implementation of the highest-priority installed provider as the source of randomness."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "initialize(keysize: Int, random: SecureRandom!)",
      "desc": "Initializes the key pair generator for a certain keysize with the given source of randomness (and a default parameter set)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "initialize(params: AlgorithmParameterSpec!)",
      "desc": "Initializes the key pair generator using the specified parameter set and the SecureRandom implementation of the highest-priority installed provider as the source of randomness."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "initialize(params: AlgorithmParameterSpec!, random: SecureRandom!)",
      "desc": "Initializes the key pair generator with the given parameter set and source of randomness."
    }
  ]
}