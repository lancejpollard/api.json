{
  "path": "javax.crypto",
  "name": "CipherSpi",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()"
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "ByteArray",
      "code": "engineDoFinal(input: ByteArray!, inputOffset: Int, inputLen: Int)",
      "desc": "Encrypts or decrypts data in a single-part operation, or finishes a multiple-part operation.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Int",
      "code": "engineDoFinal(input: ByteArray!, inputOffset: Int, inputLen: Int, output: ByteArray!, outputOffset: Int)",
      "desc": "Encrypts or decrypts data in a single-part operation, or finishes a multiple-part operation."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "engineDoFinal(input: ByteBuffer!, output: ByteBuffer!)",
      "desc": "Encrypts or decrypts data in a single-part operation, or finishes a multiple-part operation."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Int",
      "code": "engineGetBlockSize()",
      "desc": "Returns the block size (in bytes)."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "ByteArray",
      "code": "engineGetIV()",
      "desc": "Returns the initialization vector (IV) in a new buffer.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "engineGetKeySize(key: Key!)",
      "desc": "Returns the key size of the given key object in bits."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Int",
      "code": "engineGetOutputSize(inputLen: Int)",
      "desc": "Returns the length in bytes that an output buffer would need to be in order to hold the result of the next update or doFinal operation, given the input length inputLen (in bytes)."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "AlgorithmParameters",
      "code": "engineGetParameters()",
      "desc": "Returns the parameters used with this cipher.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "engineInit(opmode: Int, key: Key!, random: SecureRandom!)",
      "desc": "Initializes this cipher with a key and a source of randomness."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "engineInit(opmode: Int, key: Key!, params: AlgorithmParameterSpec!, random: SecureRandom!)",
      "desc": "Initializes this cipher with a key, a set of algorithm parameters, and a source of randomness."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "engineInit(opmode: Int, key: Key!, params: AlgorithmParameters!, random: SecureRandom!)",
      "desc": "Initializes this cipher with a key, a set of algorithm parameters, and a source of randomness."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "engineSetMode(mode: String!)",
      "desc": "Sets the mode of this cipher."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "engineSetPadding(padding: String!)",
      "desc": "Sets the padding mechanism of this cipher."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Key",
      "code": "engineUnwrap(wrappedKey: ByteArray!, wrappedKeyAlgorithm: String!, wrappedKeyType: Int)",
      "desc": "Unwrap a previously wrapped key.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "ByteArray",
      "code": "engineUpdate(input: ByteArray!, inputOffset: Int, inputLen: Int)",
      "desc": "Continues a multiple-part encryption or decryption operation (depending on how this cipher was initialized), processing another data part.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Int",
      "code": "engineUpdate(input: ByteArray!, inputOffset: Int, inputLen: Int, output: ByteArray!, outputOffset: Int)",
      "desc": "Continues a multiple-part encryption or decryption operation (depending on how this cipher was initialized), processing another data part."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "engineUpdate(input: ByteBuffer!, output: ByteBuffer!)",
      "desc": "Continues a multiple-part encryption or decryption operation (depending on how this cipher was initialized), processing another data part."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "engineUpdateAAD(src: ByteArray!, offset: Int, len: Int)",
      "desc": "Continues a multi-part update of the Additional Authentication Data (AAD), using a subset of the provided buffer."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "engineUpdateAAD(src: ByteBuffer!)",
      "desc": "Continues a multi-part update of the Additional Authentication Data (AAD)."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "ByteArray",
      "code": "engineWrap(key: Key!)",
      "desc": "Wrap a key.",
      "symbol": "!"
    }
  ]
}