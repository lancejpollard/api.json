{
  "path": "android.util",
  "name": "Range",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(lower: T, upper: T)\n            Create a new immutable range."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "T",
      "code": "clamp(value: T)",
      "desc": "Clamps value to this range."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "contains(value: T)",
      "desc": "Checks if the value is within the bounds of this range."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "contains(range: Range<T>!)",
      "desc": "Checks if another range is within the bounds of this range."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Range",
      "code": "create(lower: T, upper: T)",
      "desc": "Create a new immutable range, with the argument types inferred.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Compare two ranges for equality."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Range",
      "code": "extend(range: Range<T>!)",
      "desc": "Returns the smallest range that includes this range and another range.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Range",
      "code": "extend(lower: T, upper: T)",
      "desc": "Returns the smallest range that includes this range and the inclusive range specified by [lower, upper].",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Range",
      "code": "extend(value: T)",
      "desc": "Returns the smallest range that includes this range and the value.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "T",
      "code": "getLower()",
      "desc": "Get the lower endpoint."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "T",
      "code": "getUpper()",
      "desc": "Get the upper endpoint."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Returns a hash code value for the object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Range",
      "code": "intersect(range: Range<T>!)",
      "desc": "Returns the intersection of this range and another range.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Range",
      "code": "intersect(lower: T, upper: T)",
      "desc": "Returns the intersection of this range and the inclusive range specified by [lower, upper].",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": "Return the range as a string representation \"[lower, upper]\"."
    }
  ]
}