{
  "path": "java.util.concurrent",
  "name": "FutureTask",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(callable: Callable<V>!)\n            Creates a FutureTask that will, upon running, execute the given Callable."
    },
    {
      "type": "ctor",
      "ctor": "<init>(runnable: Runnable!, result: V)\n            Creates a FutureTask that will, upon running, execute the given Runnable, and arrange that get will return the given result on successful completion."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "cancel(mayInterruptIfRunning: Boolean)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "V",
      "code": "get()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "V",
      "code": "get(timeout: Long, unit: TimeUnit!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isCancelled()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isDone()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "run()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "done()",
      "desc": "Protected method invoked when this task transitions to state isDone (whether normally or via cancellation)."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "runAndReset()",
      "desc": "Executes the computation without setting its result, and then resets this future to initial state, failing to do so if the computation encounters an exception or is cancelled."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "set(v: V)",
      "desc": "Sets the result of this future to the given value unless this future has already been set or has been cancelled."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setException(t: Throwable!)",
      "desc": "Causes this future to report an ExecutionException with the given throwable as its cause, unless this future has already been set or has been cancelled."
    }
  ]
}