{
  "path": "java.lang",
  "name": "Short",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "BYTES",
      "desc": "The number of bytes used to represent a short value in two's complement binary form."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Short",
      "code": "MAX_VALUE",
      "desc": "A constant holding the maximum value a short can have, 215-1."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Short",
      "code": "MIN_VALUE",
      "desc": "A constant holding the minimum value a short can have, -215."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SIZE",
      "desc": "The number of bits used to represent a short value in two's complement binary form."
    },
    {
      "type": "ctor",
      "ctor": "<init>(value: Short)\n            Constructs a newly allocated Short object that represents the specified short value."
    },
    {
      "type": "ctor",
      "ctor": "<init>(s: String!)\n            Constructs a newly allocated Short object that represents the short value indicated by the String parameter."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "compare(x: Short, y: Short)",
      "desc": "Compares two short values numerically."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "compareTo(other: Short!)",
      "desc": "Compares two Short objects numerically."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Short",
      "code": "decode(nm: String!)",
      "desc": "Decodes a String into a Short.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Compares this object to the specified object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Returns a hash code for this Short; equal to the result of invoking intValue()."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "hashCode(value: Short)",
      "desc": "Returns a hash code for a short value; compatible with Short.hashCode()."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Short",
      "code": "parseShort(s: String!, radix: Int)",
      "desc": "Parses the string argument as a signed short in the radix specified by the second argument."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Short",
      "code": "parseShort(s: String!)",
      "desc": "Parses the string argument as a signed decimal short."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Short",
      "code": "reverseBytes(i: Short)",
      "desc": "Returns the value obtained by reversing the order of the bytes in the two's complement representation of the specified short value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Byte",
      "code": "toByte()",
      "desc": "Returns the value of this Short as a byte after a narrowing primitive conversion."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Double",
      "code": "toDouble()",
      "desc": "Returns the value of this Short as a double after a widening primitive conversion."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "toFloat()",
      "desc": "Returns the value of this Short as a float after a widening primitive conversion."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "toInt()",
      "desc": "Returns the value of this Short as an int after a widening primitive conversion."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "toLong()",
      "desc": "Returns the value of this Short as a long after a widening primitive conversion."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Short",
      "code": "toShort()",
      "desc": "Returns the value of this Short as a short."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns a String object representing this Short's value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "String",
      "code": "toString(s: Short)",
      "desc": "Returns a new String object representing the specified short.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "toUnsignedInt(x: Short)",
      "desc": "Converts the argument to an int by an unsigned conversion."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Long",
      "code": "toUnsignedLong(x: Short)",
      "desc": "Converts the argument to a long by an unsigned conversion."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Short",
      "code": "valueOf(s: String!, radix: Int)",
      "desc": "Returns a Short object holding the value extracted from the specified String when parsed with the radix given by the second argument.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Short",
      "code": "valueOf(s: String!)",
      "desc": "Returns a Short object holding the value given by the specified String.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Short",
      "code": "valueOf(s: Short)",
      "desc": "Returns a Short instance representing the specified short value.",
      "symbol": "!"
    }
  ]
}