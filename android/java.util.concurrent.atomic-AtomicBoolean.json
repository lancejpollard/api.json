{
  "path": "java.util.concurrent.atomic",
  "name": "AtomicBoolean",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(initialValue: Boolean)\n            Creates a new AtomicBoolean with the given initial value."
    },
    {
      "type": "ctor",
      "ctor": "<init>()\n            Creates a new AtomicBoolean with initial value false."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "compareAndSet(expect: Boolean, update: Boolean)",
      "desc": "Atomically sets the value to the given updated value if the current value == the expected value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "get()",
      "desc": "Returns the current value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "getAndSet(newValue: Boolean)",
      "desc": "Atomically sets to the given value and returns the previous value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "lazySet(newValue: Boolean)",
      "desc": "Eventually sets to the given value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "set(newValue: Boolean)",
      "desc": "Unconditionally sets to the given value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns the String representation of the current value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "weakCompareAndSet(expect: Boolean, update: Boolean)",
      "desc": "Atomically sets the value to the given updated value if the current value == the expected value."
    }
  ]
}