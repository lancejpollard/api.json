{
  "path": "java.util.regex",
  "name": "Matcher",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Matcher",
      "code": "appendReplacement(sb: StringBuffer, replacement: String)",
      "desc": "Implements a non-terminal append-and-replace step."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "StringBuffer",
      "code": "appendTail(sb: StringBuffer)",
      "desc": "Implements a terminal append-and-replace step."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "end()",
      "desc": "Returns the offset after the last character matched."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "end(group: Int)",
      "desc": "Returns the offset after the last character of the subsequence captured by the given group during the previous match operation."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "end(name: String)",
      "desc": "Returns the offset after the last character of the subsequence captured by the given named-capturing group during the previous match operation."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "find()",
      "desc": "Attempts to find the next subsequence of the input sequence that matches the pattern."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "find(start: Int)",
      "desc": "Resets this matcher and then attempts to find the next subsequence of the input sequence that matches the pattern, starting at the specified index."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "group()",
      "desc": "Returns the input subsequence matched by the previous match."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "group(group: Int)",
      "desc": "Returns the input subsequence captured by the given group during the previous match operation.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "group(name: String)",
      "desc": "Returns the input subsequence captured by the given named-capturing group during the previous match operation.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "groupCount()",
      "desc": "Returns the number of capturing groups in this matcher's pattern."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hasAnchoringBounds()",
      "desc": "Queries the anchoring of region bounds for this matcher."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hasTransparentBounds()",
      "desc": "Queries the transparency of region bounds for this matcher."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hitEnd()",
      "desc": "Returns true if the end of input was hit by the search engine in the last match operation performed by this matcher."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "lookingAt()",
      "desc": "Attempts to match the input sequence, starting at the beginning of the region, against the pattern."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "matches()",
      "desc": "Attempts to match the entire region against the pattern."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Pattern",
      "code": "pattern()",
      "desc": "Returns the pattern that is interpreted by this matcher."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "String",
      "code": "quoteReplacement(s: String)",
      "desc": "Returns a literal replacement String for the specified String."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Matcher",
      "code": "region(start: Int, end: Int)",
      "desc": "Sets the limits of this matcher's region."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "regionEnd()",
      "desc": "Reports the end index (exclusive) of this matcher's region."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "regionStart()",
      "desc": "Reports the start index of this matcher's region."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "replaceAll(replacement: String)",
      "desc": "Replaces every subsequence of the input sequence that matches the pattern with the given replacement string."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "replaceFirst(replacement: String)",
      "desc": "Replaces the first subsequence of the input sequence that matches the pattern with the given replacement string."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "requireEnd()",
      "desc": "Returns true if more input could change a positive match into a negative one."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Matcher",
      "code": "reset()",
      "desc": "Resets this matcher."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Matcher",
      "code": "reset(input: CharSequence)",
      "desc": "Resets this matcher with a new input sequence."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "start()",
      "desc": "Returns the start index of the previous match."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "start(group: Int)",
      "desc": "Returns the start index of the subsequence captured by the given group during the previous match operation."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "start(name: String)",
      "desc": "Returns the start index of the subsequence captured by the given named-capturing group during the previous match operation."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MatchResult",
      "code": "toMatchResult()",
      "desc": "Returns the match state of this matcher as a MatchResult."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns the string representation of this matcher."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Matcher",
      "code": "useAnchoringBounds(b: Boolean)",
      "desc": "Sets the anchoring of region bounds for this matcher."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Matcher",
      "code": "usePattern(newPattern: Pattern)",
      "desc": "Changes the Pattern that this Matcher uses to find matches with."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Matcher",
      "code": "useTransparentBounds(b: Boolean)",
      "desc": "Sets the transparency of region bounds for this matcher."
    }
  ]
}