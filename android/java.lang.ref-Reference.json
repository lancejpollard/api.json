{
  "path": "java.lang.ref",
  "name": "Reference",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "clear()",
      "desc": "Clears this reference object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "enqueue()",
      "desc": "Adds this reference object to the queue with which it is registered, if any."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "T",
      "code": "get()",
      "desc": "Returns this reference object's referent.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isEnqueued()",
      "desc": "Tells whether or not this reference object has been enqueued, either by the program or by the garbage collector."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "reachabilityFence(ref:Â Any!)",
      "desc": "Ensures that the object referenced by the given reference remains strongly reachable, regardless of any prior actions of the program that might otherwise cause the object to become unreachable; thus, the referenced object is not reclaimable by garbage collection at least until after the invocation of this method."
    }
  ]
}