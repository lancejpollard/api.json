{
  "path": "android.icu.util",
  "name": "TimeZone",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "GENERIC_LOCATION",
      "desc": "[icu] A style specifier for getDisplayName() indicating a long name derived from the timezone's fallback name, such as \"United States (Los Angeles)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "LONG",
      "desc": "A style specifier for getDisplayName() indicating a long name, such as \"Pacific Standard Time."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "LONG_GENERIC",
      "desc": "[icu] A style specifier for getDisplayName() indicating a long generic name, such as \"Pacific Time."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "LONG_GMT",
      "desc": "[icu] A style specifier for getDisplayName() indicating a long name derived from the timezone's offset, such as \"GMT-08:00."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SHORT",
      "desc": "A style specifier for getDisplayName() indicating a short name, such as \"PST."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SHORT_COMMONLY_USED",
      "desc": "[icu] A style specifier for getDisplayName() indicating a short name derived from the timezone's short standard or daylight timezone name ignoring commonlyUsed, such as \"PDT."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SHORT_GENERIC",
      "desc": "[icu] A style specifier for getDisplayName() indicating a short generic name, such as \"PT."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SHORT_GMT",
      "desc": "[icu] A style specifier for getDisplayName() indicating a short name derived from the timezone's offset, such as \"-0800."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TIMEZONE_ICU",
      "desc": "[icu] A time zone implementation type indicating ICU's own TimeZone used by getTimeZone."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TIMEZONE_JDK",
      "desc": "[icu] A time zone implementation type indicating the java.util.TimeZone used by getTimeZone."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "UNKNOWN_ZONE_ID",
      "desc": "[icu] The time zone ID reserved for unknown time zone."
    },
    {
      "type": "ctor",
      "ctor": "<init>()\n            Default constructor."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "clone()",
      "desc": "Overrides clone."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TimeZone",
      "code": "cloneAsThawed()",
      "desc": "Provides for the clone operation.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "countEquivalentIDs(id: String!)",
      "desc": "[icu] Returns the number of IDs in the equivalency group that includes the given ID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Overrides equals."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TimeZone",
      "code": "freeze()",
      "desc": "Freezes the object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableSet",
      "code": "getAvailableIDs(zoneType: TimeZone.SystemTimeZoneType!, region: String!, rawOffset: Int!)",
      "desc": "[icu] Returns a set of time zone ID strings with the given filter conditions.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getAvailableIDs(rawOffset: Int)",
      "desc": "Return a new String array containing all system TimeZone IDs with the given raw offset from GMT.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getAvailableIDs(country: String!)",
      "desc": "Return a new String array containing all system TimeZone IDs associated with the given country.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getAvailableIDs()",
      "desc": "Return a new String array containing all system TimeZone IDs.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getCanonicalID(id: String!)",
      "desc": "[icu] Returns the canonical system time zone ID or the normalized custom time zone ID for the given time zone ID.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getCanonicalID(id: String!, isSystemID: BooleanArray!)",
      "desc": "[icu] Returns the canonical system time zone ID or the normalized custom time zone ID for the given time zone ID.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getDSTSavings()",
      "desc": "Returns the amount of time to be added to local standard time to get local wall clock time."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TimeZone",
      "code": "getDefault()",
      "desc": "Gets the default TimeZone for this host.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getDisplayName()",
      "desc": "Returns a name of this time zone suitable for presentation to the user in the default DISPLAY locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getDisplayName(locale: Locale!)",
      "desc": "Returns a name of this time zone suitable for presentation to the user in the specified locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getDisplayName(locale: ULocale!)",
      "desc": "Returns a name of this time zone suitable for presentation to the user in the specified locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getDisplayName(daylight: Boolean, style: Int)",
      "desc": "Returns a name of this time zone suitable for presentation to the user in the default DISPLAY locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getDisplayName(daylight: Boolean, style: Int, locale: Locale!)",
      "desc": "Returns a name of this time zone suitable for presentation to the user in the specified locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getDisplayName(daylight: Boolean, style: Int, locale: ULocale!)",
      "desc": "Returns a name of this time zone suitable for presentation to the user in the specified locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getEquivalentID(id: String!, index: Int)",
      "desc": "Returns an ID in the equivalency group that includes the given ID.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TimeZone",
      "code": "getFrozenTimeZone(ID: String!)",
      "desc": "Gets the TimeZone for the given ID.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getID()",
      "desc": "Gets the ID of this time zone.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getIDForWindowsID(winid: String!, region: String!)",
      "desc": "[icu] Converts a Windows time zone ID to an equivalent system time zone ID for a region.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Int",
      "code": "getOffset(era: Int, year: Int, month: Int, day: Int, dayOfWeek: Int, milliseconds: Int)",
      "desc": "Gets the time zone offset, for current date, modified in case of daylight savings."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getOffset(date: Long)",
      "desc": "Returns the offset of this time zone from UTC at the specified date."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "getOffset(date: Long, local: Boolean, offsets: IntArray!)",
      "desc": "Returns the time zone raw and GMT offset for the given moment in time."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Int",
      "code": "getRawOffset()",
      "desc": "Gets unmodified offset, NOT modified in case of daylight savings."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getRegion(id: String!)",
      "desc": "[icu] Returns the region code associated with the given system time zone ID.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getTZDataVersion()",
      "desc": "[icu] Returns the time zone data version currently used by ICU.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TimeZone",
      "code": "getTimeZone(ID: String!)",
      "desc": "Gets the TimeZone for the given ID.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TimeZone",
      "code": "getTimeZone(ID: String!, type: Int)",
      "desc": "Gets the TimeZone for the given ID and the timezone type.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getWindowsID(id: String!)",
      "desc": "[icu] Converts a system time zone ID to an equivalent Windows time zone ID.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "hasSameRules(other: TimeZone!)",
      "desc": "Returns true if this zone has the same rule and offset as another zone."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Overrides hashCode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "inDaylightTime(date: Date!)",
      "desc": "Queries if the given date is in daylight savings time in this time zone."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isFrozen()",
      "desc": "Determines whether the object has been frozen or not."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "observesDaylightTime()",
      "desc": "Queries if this time zone is in daylight saving time or will observe daylight saving time at any future time."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setID(ID: String!)",
      "desc": "Sets the time zone ID."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setRawOffset(offsetMillis: Int)",
      "desc": "Sets the base time zone offset to GMT."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "useDaylightTime()",
      "desc": "Queries if this time zone uses daylight savings time."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "code": "SystemTimeZoneType",
      "desc": "[icu] System time zone type constants used by filtering zones in TimeZone#getAvailableIDs(SystemTimeZoneType, String, Integer)"
    }
  ]
}