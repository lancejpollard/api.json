{
  "path": "android.icu.text",
  "name": "DateIntervalFormat",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "clone()",
      "desc": "Clone this Format object polymorphically."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "StringBuffer",
      "code": "format(obj: Any!, appendTo: StringBuffer!, fieldPosition: FieldPosition!)",
      "desc": "Format an object to produce a string.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "StringBuffer",
      "code": "format(dtInterval: DateInterval!, appendTo: StringBuffer!, fieldPosition: FieldPosition!)",
      "desc": "Format a DateInterval to produce a string.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "StringBuffer",
      "code": "format(fromCalendar: Calendar!, toCalendar: Calendar!, appendTo: StringBuffer!, pos: FieldPosition!)",
      "desc": "Format 2 Calendars to produce a string.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "DateFormat",
      "code": "getDateFormat()",
      "desc": "Gets the date formatter",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "DateIntervalInfo",
      "code": "getDateIntervalInfo()",
      "desc": "Gets the date time interval patterns.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "DateIntervalFormat",
      "code": "getInstance(skeleton: String!)",
      "desc": "Construct a DateIntervalFormat from skeleton and the default FORMAT locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "DateIntervalFormat",
      "code": "getInstance(skeleton: String!, locale: Locale!)",
      "desc": "Construct a DateIntervalFormat from skeleton and a given locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "DateIntervalFormat",
      "code": "getInstance(skeleton: String!, locale: ULocale!)",
      "desc": "Construct a DateIntervalFormat from skeleton and a given locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "DateIntervalFormat",
      "code": "getInstance(skeleton: String!, dtitvinf: DateIntervalInfo!)",
      "desc": "Construct a DateIntervalFormat from skeleton DateIntervalInfo, and the default FORMAT locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "DateIntervalFormat",
      "code": "getInstance(skeleton: String!, locale: Locale!, dtitvinf: DateIntervalInfo!)",
      "desc": "Construct a DateIntervalFormat from skeleton a DateIntervalInfo, and the given locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "DateIntervalFormat",
      "code": "getInstance(skeleton: String!, locale: ULocale!, dtitvinf: DateIntervalInfo!)",
      "desc": "Construct a DateIntervalFormat from skeleton a DateIntervalInfo, and the given locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TimeZone",
      "code": "getTimeZone()",
      "desc": "Get the TimeZone",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setDateIntervalInfo(newItvPattern: DateIntervalInfo!)",
      "desc": "Set the date time interval patterns."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTimeZone(zone: TimeZone!)",
      "desc": "Set the TimeZone for the calendar used by this DateIntervalFormat object."
    }
  ]
}