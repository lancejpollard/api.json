{
  "path": "android.view",
  "name": "ViewTreeObserver",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "addOnDrawListener(listener: ViewTreeObserver.OnDrawListener!)",
      "desc": "Register a callback to be invoked when the view tree is about to be drawn."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "addOnGlobalFocusChangeListener(listener: ViewTreeObserver.OnGlobalFocusChangeListener!)",
      "desc": "Register a callback to be invoked when the focus state within the view tree changes."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "addOnGlobalLayoutListener(listener: ViewTreeObserver.OnGlobalLayoutListener!)",
      "desc": "Register a callback to be invoked when the global layout state or the visibility of views within the view tree changes"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "addOnPreDrawListener(listener: ViewTreeObserver.OnPreDrawListener!)",
      "desc": "Register a callback to be invoked when the view tree is about to be drawn"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "addOnScrollChangedListener(listener: ViewTreeObserver.OnScrollChangedListener!)",
      "desc": "Register a callback to be invoked when a view has been scrolled."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "addOnSystemGestureExclusionRectsChangedListener(listener: Consumer<MutableList<Rect!>!>)",
      "desc": "Add a listener to be notified when the tree's transformed gesture exclusion rects change."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "addOnTouchModeChangeListener(listener: ViewTreeObserver.OnTouchModeChangeListener!)",
      "desc": "Register a callback to be invoked when the invoked when the touch mode changes."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "addOnWindowAttachListener(listener: ViewTreeObserver.OnWindowAttachListener!)",
      "desc": "Register a callback to be invoked when the view hierarchy is attached to a window."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "addOnWindowFocusChangeListener(listener: ViewTreeObserver.OnWindowFocusChangeListener!)",
      "desc": "Register a callback to be invoked when the window focus state within the view tree changes."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "dispatchOnDraw()",
      "desc": "Notifies registered listeners that the drawing pass is about to start."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "dispatchOnGlobalLayout()",
      "desc": "Notifies registered listeners that a global layout happened."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "dispatchOnPreDraw()",
      "desc": "Notifies registered listeners that the drawing pass is about to start."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isAlive()",
      "desc": "Indicates whether this ViewTreeObserver is alive."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "registerFrameCommitCallback(callback: Runnable)",
      "desc": "Adds a frame commit callback."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "removeGlobalOnLayoutListener(victim: ViewTreeObserver.OnGlobalLayoutListener!)",
      "desc": "Remove a previously installed global layout callback"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "removeOnDrawListener(victim: ViewTreeObserver.OnDrawListener!)",
      "desc": "Remove a previously installed pre-draw callback."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "removeOnGlobalFocusChangeListener(victim: ViewTreeObserver.OnGlobalFocusChangeListener!)",
      "desc": "Remove a previously installed focus change callback."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "removeOnGlobalLayoutListener(victim: ViewTreeObserver.OnGlobalLayoutListener!)",
      "desc": "Remove a previously installed global layout callback"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "removeOnPreDrawListener(victim: ViewTreeObserver.OnPreDrawListener!)",
      "desc": "Remove a previously installed pre-draw callback"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "removeOnScrollChangedListener(victim: ViewTreeObserver.OnScrollChangedListener!)",
      "desc": "Remove a previously installed scroll-changed callback"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "removeOnSystemGestureExclusionRectsChangedListener(listener: Consumer<MutableList<Rect!>!>)",
      "desc": "Unsubscribe the given listener from gesture exclusion rect changes."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "removeOnTouchModeChangeListener(victim: ViewTreeObserver.OnTouchModeChangeListener!)",
      "desc": "Remove a previously installed touch mode change callback"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "removeOnWindowAttachListener(victim: ViewTreeObserver.OnWindowAttachListener!)",
      "desc": "Remove a previously installed window attach callback."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "removeOnWindowFocusChangeListener(victim: ViewTreeObserver.OnWindowFocusChangeListener!)",
      "desc": "Remove a previously installed window focus change callback."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "unregisterFrameCommitCallback(callback: Runnable)",
      "desc": "Attempts to remove the given callback from the list of pending frame complete callbacks."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnDrawListener",
      "desc": "Interface definition for a callback to be invoked when the view tree is about to be drawn."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnGlobalFocusChangeListener",
      "desc": "Interface definition for a callback to be invoked when the focus state within the view tree changes."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnGlobalLayoutListener",
      "desc": "Interface definition for a callback to be invoked when the global layout state or the visibility of views within the view tree changes."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnPreDrawListener",
      "desc": "Interface definition for a callback to be invoked when the view tree is about to be drawn."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnScrollChangedListener",
      "desc": "Interface definition for a callback to be invoked when something in the view tree has been scrolled."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnTouchModeChangeListener",
      "desc": "Interface definition for a callback to be invoked when the touch mode changes."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnWindowAttachListener",
      "desc": "Interface definition for a callback to be invoked when the view hierarchy is attached to and detached from its window."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnWindowFocusChangeListener",
      "desc": "Interface definition for a callback to be invoked when the view hierarchy's window focus state changes."
    }
  ]
}