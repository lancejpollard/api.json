{
  "path": "android.util",
  "name": "EventLog",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getTagCode(name: String!)",
      "desc": "Get the event type tag code associated with an event name."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getTagName(tag: Int)",
      "desc": "Get the name associated with an event type tag code.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "readEvents(tags: IntArray!, output: MutableCollection<EventLog.Event!>!)",
      "desc": "Read events from the log, filtered by type."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "writeEvent(tag: Int, value: Int)",
      "desc": "Record an event log message."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "writeEvent(tag: Int, value: Long)",
      "desc": "Record an event log message."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "writeEvent(tag: Int, value: Float)",
      "desc": "Record an event log message."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "writeEvent(tag: Int, str: String!)",
      "desc": "Record an event log message."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "writeEvent(tag: Int, vararg list: Any!)",
      "desc": "Record an event log message."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "code": "Event",
      "desc": "A previously logged event read from the logs."
    }
  ]
}