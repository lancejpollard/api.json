{
  "path": "android.net",
  "name": "ConnectivityManager",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_BACKGROUND_DATA_SETTING_CHANGED",
      "desc": "Broadcast Action: The setting for background data usage has changed values."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_CAPTIVE_PORTAL_SIGN_IN",
      "desc": "The device has connected to a network that has presented a captive portal, which is blocking Internet connectivity."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_RESTRICT_BACKGROUND_CHANGED",
      "desc": "A change in the background metered network activity restriction has occurred."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "CONNECTIVITY_ACTION",
      "desc": "A change in network connectivity has occurred."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DEFAULT_NETWORK_PREFERENCE",
      "desc": "If you want to set the default network preference,you can directly change the networkAttributes array in framework's config."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_CAPTIVE_PORTAL",
      "desc": "The lookup key for a CaptivePortal object included with the ACTION_CAPTIVE_PORTAL_SIGN_IN intent."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_CAPTIVE_PORTAL_URL",
      "desc": "Key for passing a URL to the captive portal login activity."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_EXTRA_INFO",
      "desc": "The lookup key for a string that provides optionally supplied extra information about the network state."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_IS_FAILOVER",
      "desc": "The lookup key for a boolean that indicates whether a connect event is for a network to which the connectivity manager was failing over following a disconnect on another network."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_NETWORK",
      "desc": "The lookup key for a Network object included with the intent after successfully finding a network for the applications request."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_NETWORK_INFO",
      "desc": "The lookup key for a NetworkInfo object."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_NETWORK_REQUEST",
      "desc": "The lookup key for a NetworkRequest object included with the intent after successfully finding a network for the applications request."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_NETWORK_TYPE",
      "desc": "Network type which triggered a CONNECTIVITY_ACTION broadcast."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_NO_CONNECTIVITY",
      "desc": "The lookup key for a boolean that indicates whether there is a complete lack of connectivity, i."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_OTHER_NETWORK_INFO",
      "desc": "The lookup key for a NetworkInfo object."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_REASON",
      "desc": "The lookup key for a string that indicates why an attempt to connect to a network failed."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MULTIPATH_PREFERENCE_HANDOVER",
      "desc": "It is acceptable to briefly use multipath data to provide seamless connectivity for time-sensitive user-facing operations when the system default network is temporarily unresponsive."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MULTIPATH_PREFERENCE_PERFORMANCE",
      "desc": "It is acceptable to use metered data to improve network latency and performance."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MULTIPATH_PREFERENCE_RELIABILITY",
      "desc": "It is acceptable to use small amounts of multipath data on an ongoing basis to provide a backup channel for traffic that is primarily going over another network."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "RESTRICT_BACKGROUND_STATUS_DISABLED",
      "desc": "Device is not restricting metered network activity while application is running on background."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "RESTRICT_BACKGROUND_STATUS_ENABLED",
      "desc": "Device is restricting metered network activity while application is running on background."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "RESTRICT_BACKGROUND_STATUS_WHITELISTED",
      "desc": "Device is restricting metered network activity while application is running on background, but application is allowed to bypass it."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_BLUETOOTH",
      "desc": "A Bluetooth data connection."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_DUMMY",
      "desc": "Dummy data connection."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_ETHERNET",
      "desc": "An Ethernet data connection."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_MOBILE",
      "desc": "A Mobile data connection."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_MOBILE_DUN",
      "desc": "A DUN-specific Mobile data connection."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_MOBILE_HIPRI",
      "desc": "A High Priority Mobile data connection."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_MOBILE_MMS",
      "desc": "An MMS-specific Mobile data connection."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_MOBILE_SUPL",
      "desc": "A SUPL-specific Mobile data connection."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_VPN",
      "desc": "A virtual network using one or more native bearers."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_WIFI",
      "desc": "A WIFI data connection."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_WIMAX",
      "desc": "A WiMAX data connection."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "addDefaultNetworkActiveListener(l: ConnectivityManager.OnNetworkActiveListener!)",
      "desc": "Start listening to reports when the system's default data network is active, meaning it is a good time to perform network traffic."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "bindProcessToNetwork(network: Network?)",
      "desc": "Binds the current process to network."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "SocketKeepalive",
      "code": "createSocketKeepalive(network: Network, socket: IpSecManager.UdpEncapsulationSocket, source: InetAddress, destination: InetAddress, executor: Executor, callback: SocketKeepalive.Callback)",
      "desc": "Request that keepalives be started on a IPsec NAT-T socket."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Network",
      "code": "getActiveNetwork()",
      "desc": "Returns a Network object corresponding to the currently active default data network.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "NetworkInfo",
      "code": "getActiveNetworkInfo()",
      "desc": "Returns details about the currently active default data network.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getAllNetworkInfo()",
      "desc": "Returns connection status information about all network types supported by the device.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getAllNetworks()",
      "desc": "Returns an array of all Network currently tracked by the framework.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getBackgroundDataSetting()",
      "desc": "Returns the value of the setting for background data usage."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Network",
      "code": "getBoundNetworkForProcess()",
      "desc": "Returns the Network currently bound to this process via bindProcessToNetwork, or null if no Network is explicitly bound.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getConnectionOwnerUid(protocol: Int, local: InetSocketAddress, remote: InetSocketAddress)",
      "desc": "Returns the uid of the owner of a network connection."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ProxyInfo",
      "code": "getDefaultProxy()",
      "desc": "Get the current default HTTP proxy settings.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "LinkProperties",
      "code": "getLinkProperties(network: Network?)",
      "desc": "Get the LinkProperties for the given Network.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getMultipathPreference(network: Network?)",
      "desc": "Provides a hint to the calling application on whether it is desirable to use the multinetwork APIs (e.g.,"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "NetworkCapabilities",
      "code": "getNetworkCapabilities(network: Network?)",
      "desc": "Get the android.net.NetworkCapabilities for the given Network.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "NetworkInfo",
      "code": "getNetworkInfo(networkType: Int)",
      "desc": "Returns connection status information about a particular network type.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "NetworkInfo",
      "code": "getNetworkInfo(network: Network?)",
      "desc": "Returns connection status information about a particular Network.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getNetworkPreference()",
      "desc": "Retrieves the current preferred network type."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ByteArray",
      "code": "getNetworkWatchlistConfigHash()",
      "desc": "The network watchlist is a list of domains and IP addresses that are associated with potentially harmful apps.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Network",
      "code": "getProcessDefaultNetwork()",
      "desc": "Returns the Network currently bound to this process via bindProcessToNetwork, or null if no Network is explicitly bound.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getRestrictBackgroundStatus()",
      "desc": "Determines if the calling application is subject to metered network restrictions while running on background."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isActiveNetworkMetered()",
      "desc": "Returns if the currently active data network is metered."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isDefaultNetworkActive()",
      "desc": "Return whether the data network is currently active."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isNetworkTypeValid(networkType: Int)",
      "desc": "Tests if a given integer represents a valid network type."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "registerDefaultNetworkCallback(networkCallback: ConnectivityManager.NetworkCallback)",
      "desc": "Registers to receive notifications about changes in the system default network."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "registerDefaultNetworkCallback(networkCallback: ConnectivityManager.NetworkCallback, handler: Handler)",
      "desc": "Registers to receive notifications about changes in the system default network."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "registerNetworkCallback(request: NetworkRequest, networkCallback: ConnectivityManager.NetworkCallback)",
      "desc": "Registers to receive notifications about all networks which satisfy the given NetworkRequest."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "registerNetworkCallback(request: NetworkRequest, networkCallback: ConnectivityManager.NetworkCallback, handler: Handler)",
      "desc": "Registers to receive notifications about all networks which satisfy the given NetworkRequest."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "registerNetworkCallback(request: NetworkRequest, operation: PendingIntent)",
      "desc": "Registers a PendingIntent to be sent when a network is available which satisfies the given NetworkRequest."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "releaseNetworkRequest(operation: PendingIntent)",
      "desc": "Removes a request made via requestNetwork(android.net.NetworkRequest,android.app.PendingIntent)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "removeDefaultNetworkActiveListener(l: ConnectivityManager.OnNetworkActiveListener)",
      "desc": "Remove network active listener previously registered with addDefaultNetworkActiveListener."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "reportBadNetwork(network: Network?)",
      "desc": "Report a problem network to the framework."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "reportNetworkConnectivity(network: Network?, hasConnectivity: Boolean)",
      "desc": "Report to the framework whether a network has working connectivity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "requestBandwidthUpdate(network: Network)",
      "desc": "Requests bandwidth update for a given Network and returns whether the update request is accepted by ConnectivityService."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "requestNetwork(request: NetworkRequest, networkCallback: ConnectivityManager.NetworkCallback)",
      "desc": "Request a network to satisfy a set of android.net.NetworkCapabilities."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "requestNetwork(request: NetworkRequest, networkCallback: ConnectivityManager.NetworkCallback, handler: Handler)",
      "desc": "Request a network to satisfy a set of android.net.NetworkCapabilities."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "requestNetwork(request: NetworkRequest, networkCallback: ConnectivityManager.NetworkCallback, timeoutMs: Int)",
      "desc": "Request a network to satisfy a set of android.net.NetworkCapabilities, limited by a timeout."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "requestNetwork(request: NetworkRequest, networkCallback: ConnectivityManager.NetworkCallback, handler: Handler, timeoutMs: Int)",
      "desc": "Request a network to satisfy a set of android.net.NetworkCapabilities, limited by a timeout."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "requestNetwork(request: NetworkRequest, operation: PendingIntent)",
      "desc": "Request a network to satisfy a set of android.net.NetworkCapabilities."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setNetworkPreference(preference: Int)",
      "desc": "Specifies the preferred network type."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "setProcessDefaultNetwork(network: Network?)",
      "desc": "Binds the current process to network."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "unregisterNetworkCallback(networkCallback: ConnectivityManager.NetworkCallback)",
      "desc": "Unregisters a NetworkCallback and possibly releases networks originating from requestNetwork(android.net.NetworkRequest,android.net.ConnectivityManager.NetworkCallback) and registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager.NetworkCallback) calls."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "unregisterNetworkCallback(operation: PendingIntent)",
      "desc": "Unregisters a callback previously registered via registerNetworkCallback(android.net.NetworkRequest,android.app.PendingIntent)."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "open",
      "code": "NetworkCallback",
      "desc": "Base class for NetworkRequest callbacks."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnNetworkActiveListener",
      "desc": "Callback for use with ConnectivityManager#addDefaultNetworkActiveListener to find out when the system default network has gone in to a high power state."
    }
  ]
}