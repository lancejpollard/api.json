{
  "path": "javax.crypto",
  "name": "KeyGenerator",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "SecretKey",
      "code": "generateKey()",
      "desc": "Generates a secret key.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getAlgorithm()",
      "desc": "Returns the algorithm name of this KeyGenerator object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "KeyGenerator",
      "code": "getInstance(algorithm: String!)",
      "desc": "Returns a KeyGenerator object that generates secret keys for the specified algorithm.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "KeyGenerator",
      "code": "getInstance(algorithm: String!, provider: String!)",
      "desc": "Returns a KeyGenerator object that generates secret keys for the specified algorithm.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "KeyGenerator",
      "code": "getInstance(algorithm: String!, provider: Provider!)",
      "desc": "Returns a KeyGenerator object that generates secret keys for the specified algorithm.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Provider",
      "code": "getProvider()",
      "desc": "Returns the provider of this KeyGenerator object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "init(random: SecureRandom!)",
      "desc": "Initializes this key generator."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "init(params: AlgorithmParameterSpec!)",
      "desc": "Initializes this key generator with the specified parameter set."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "init(params: AlgorithmParameterSpec!, random: SecureRandom!)",
      "desc": "Initializes this key generator with the specified parameter set and a user-provided source of randomness."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "init(keysize: Int)",
      "desc": "Initializes this key generator for a certain keysize."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "init(keysize: Int, random: SecureRandom!)",
      "desc": "Initializes this key generator for a certain keysize, using a user-provided source of randomness."
    }
  ]
}