{
  "path": "java.util",
  "name": "TreeMap",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()\n            Constructs a new, empty tree map, using the natural ordering of its keys."
    },
    {
      "type": "ctor",
      "ctor": "<init>(comparator: Comparator<in K>?)\n            Constructs a new, empty tree map, ordered according to the given comparator."
    },
    {
      "type": "ctor",
      "ctor": "<init>(m: MutableMap<out K, out V>)\n            Constructs a new tree map containing the same mappings as the given map, ordered according to the natural ordering of its keys."
    },
    {
      "type": "ctor",
      "ctor": "<init>(m: SortedMap<K, out V>)\n            Constructs a new tree map containing the same mappings and using the same ordering as the specified sorted map."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableEntry",
      "code": "ceilingEntry(key: K)",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "K",
      "code": "ceilingKey(key: K)",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "clear()",
      "desc": "Removes all of the mappings from this map."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "clone()",
      "desc": "Returns a shallow copy of this TreeMap instance."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Comparator",
      "code": "comparator()",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "containsKey(key: K)",
      "desc": "Returns true if this map contains a mapping for the specified key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "containsKey(key: K)",
      "desc": "Returns true if this map contains a mapping for the specified key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "containsValue(value: V)",
      "desc": "Returns true if this map maps one or more keys to the specified value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "containsValue(value: V)",
      "desc": "Returns true if this map maps one or more keys to the specified value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "NavigableSet",
      "code": "descendingKeySet()",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "NavigableMap",
      "code": "descendingMap()",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableEntry",
      "code": "firstEntry()",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "K",
      "code": "firstKey()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableEntry",
      "code": "floorEntry(key: K)",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "K",
      "code": "floorKey(key: K)",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEach(action: BiConsumer<in K, in V>)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "V",
      "code": "get(key: K)",
      "desc": "Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "V",
      "code": "get(key: K)",
      "desc": "Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "NavigableMap",
      "code": "headMap(toKey: K, inclusive: Boolean)",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "SortedMap",
      "code": "headMap(toKey: K)",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableEntry",
      "code": "higherEntry(key: K)",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "K",
      "code": "higherKey(key: K)",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableEntry",
      "code": "lastEntry()",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "K",
      "code": "lastKey()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableEntry",
      "code": "lowerEntry(key: K)",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "K",
      "code": "lowerKey(key: K)",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "NavigableSet",
      "code": "navigableKeySet()",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableEntry",
      "code": "pollFirstEntry()",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableEntry",
      "code": "pollLastEntry()",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "V",
      "code": "put(key: K, value: V)",
      "desc": "Associates the specified value with the specified key in this map.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "putAll(from: Map<out K, V>)",
      "desc": "Copies all of the mappings from the specified map to this map."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "V",
      "code": "remove(key: K)",
      "desc": "Removes the mapping for this key from this TreeMap if present.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "V",
      "code": "remove(key: K)",
      "desc": "Removes the mapping for this key from this TreeMap if present.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "replace(key: K, oldValue: V, newValue: V)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "V",
      "code": "replace(key: K, value: V)",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "replaceAll(function: BiFunction<in K, in V, out V>)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "NavigableMap",
      "code": "subMap(fromKey: K, fromInclusive: Boolean, toKey: K, toInclusive: Boolean)",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "SortedMap",
      "code": "subMap(fromKey: K, toKey: K)",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "NavigableMap",
      "code": "tailMap(fromKey: K, inclusive: Boolean)",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "SortedMap",
      "code": "tailMap(fromKey: K)",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "inherited-methods",
      "from": "AbstractMap"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "equals(other: Any?)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "hashCode()"
    },
    {
      "type": "inherited-methods",
      "from": "Object#hashCode"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isEmpty()"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "String"
    },
    {
      "type": "inherited-methods",
      "from": "toString()"
    },
    {
      "type": "inherited-methods",
      "from": "String#valueOf(Object)"
    }
  ]
}