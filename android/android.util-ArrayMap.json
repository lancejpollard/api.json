{
  "path": "android.util",
  "name": "ArrayMap",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()\n            Create a new empty ArrayMap."
    },
    {
      "type": "ctor",
      "ctor": "<init>(capacity: Int)\n            Create a new ArrayMap with a given initial capacity."
    },
    {
      "type": "ctor",
      "ctor": "<init>(map: ArrayMap<K, V>!)\n            Create a new ArrayMap with the mappings from the given ArrayMap."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "clear()",
      "desc": "Make the array map empty."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "containsAll(collection: MutableCollection<*>!)",
      "desc": "Determine if the array map contains all of the keys in the given collection."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "containsKey(key: K)",
      "desc": "Check whether a key exists in the array."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "containsValue(value: V)",
      "desc": "Check whether a value exists in the array."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "ensureCapacity(minimumCapacity: Int)",
      "desc": "Ensure the array map can hold at least minimumCapacity items."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Indicates whether some other object is \"equal to\" this one."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "V",
      "code": "get(key: K)",
      "desc": "Retrieve a value from the array.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Returns a hash code value for the object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "indexOfKey(key: Any!)",
      "desc": "Returns the index of a key in the set."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "indexOfValue(value: Any!)",
      "desc": "Returns an index for which valueAt would return the specified value, or a negative number if no keys map to the specified value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isEmpty()",
      "desc": "Return true if the array map contains no items."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "K",
      "code": "keyAt(index: Int)",
      "desc": "Return the key at the given index in the array."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "V",
      "code": "put(key: K, value: V)",
      "desc": "Add a new value to the array map.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "putAll(array: ArrayMap<out K, out V>!)",
      "desc": "Perform a put(java.lang.Object,java.lang.Object) of all key/value pairs in array"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "putAll(from: Map<out K, V>)",
      "desc": "Perform a put(java.lang.Object,java.lang.Object) of all key/value pairs in map"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "V",
      "code": "remove(key: K)",
      "desc": "Remove an existing key from the array map.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "removeAll(collection: MutableCollection<*>!)",
      "desc": "Remove all keys in the array map that exist in the given collection."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "V",
      "code": "removeAt(index: Int)",
      "desc": "Remove the key/value mapping at the given index."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "retainAll(collection: MutableCollection<*>!)",
      "desc": "Remove all keys in the array map that do not exist in the given collection."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "V",
      "code": "setValueAt(index: Int, value: V)",
      "desc": "Set the value at a given index in the array."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns a string representation of the object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "V",
      "code": "valueAt(index: Int)",
      "desc": "Return the value at the given index in the array."
    }
  ]
}