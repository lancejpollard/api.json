{
  "path": "java.time",
  "name": "YearMonth",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Temporal",
      "code": "adjustInto(temporal: Temporal!)",
      "desc": "Adjusts the specified temporal object to have this year-month.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "LocalDate",
      "code": "atDay(dayOfMonth: Int)",
      "desc": "Combines this year-month with a day-of-month to create a LocalDate.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "LocalDate",
      "code": "atEndOfMonth()",
      "desc": "Returns a LocalDate at the end of the month.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "compareTo(other: YearMonth!)",
      "desc": "Compares this year-month to another year-month."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Checks if this year-month is equal to another year-month."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "format(formatter: DateTimeFormatter!)",
      "desc": "Formats this year-month using the specified formatter.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "YearMonth",
      "code": "from(temporal: TemporalAccessor!)",
      "desc": "Obtains an instance of YearMonth from a temporal object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "get(field: TemporalField!)",
      "desc": "Gets the value of the specified field from this year-month as an int."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "getLong(field: TemporalField!)",
      "desc": "Gets the value of the specified field from this year-month as a long."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Month",
      "code": "getMonth()",
      "desc": "Gets the month-of-year field using the Month enum.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getMonthValue()",
      "desc": "Gets the month-of-year field from 1 to 12."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getYear()",
      "desc": "Gets the year field."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "A hash code for this year-month."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isAfter(other: YearMonth!)",
      "desc": "Checks if this year-month is after the specified year-month."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isBefore(other: YearMonth!)",
      "desc": "Checks if this year-month is before the specified year-month."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isLeapYear()",
      "desc": "Checks if the year is a leap year, according to the ISO proleptic calendar system rules."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isSupported(field: TemporalField!)",
      "desc": "Checks if the specified field is supported."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isSupported(unit: TemporalUnit!)",
      "desc": "Checks if the specified unit is supported."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isValidDay(dayOfMonth: Int)",
      "desc": "Checks if the day-of-month is valid for this year-month."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "lengthOfMonth()",
      "desc": "Returns the length of the month, taking account of the year."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "lengthOfYear()",
      "desc": "Returns the length of the year."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "YearMonth",
      "code": "minus(amountToSubtract: TemporalAmount!)",
      "desc": "Returns a copy of this year-month with the specified amount subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "YearMonth",
      "code": "minus(amountToSubtract: Long, unit: TemporalUnit!)",
      "desc": "Returns a copy of this year-month with the specified amount subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "YearMonth",
      "code": "minusMonths(monthsToSubtract: Long)",
      "desc": "Returns a copy of this YearMonth with the specified number of months subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "YearMonth",
      "code": "minusYears(yearsToSubtract: Long)",
      "desc": "Returns a copy of this YearMonth with the specified number of years subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "YearMonth",
      "code": "now()",
      "desc": "Obtains the current year-month from the system clock in the default time-zone.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "YearMonth",
      "code": "now(zone: ZoneId!)",
      "desc": "Obtains the current year-month from the system clock in the specified time-zone.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "YearMonth",
      "code": "now(clock: Clock!)",
      "desc": "Obtains the current year-month from the specified clock.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "YearMonth",
      "code": "of(year: Int, month: Month!)",
      "desc": "Obtains an instance of YearMonth from a year and month.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "YearMonth",
      "code": "of(year: Int, month: Int)",
      "desc": "Obtains an instance of YearMonth from a year and month.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "YearMonth",
      "code": "parse(text: CharSequence!)",
      "desc": "Obtains an instance of YearMonth from a text string such as 2007-12.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "YearMonth",
      "code": "parse(text: CharSequence!, formatter: DateTimeFormatter!)",
      "desc": "Obtains an instance of YearMonth from a text string using a specific formatter.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "YearMonth",
      "code": "plus(amountToAdd: TemporalAmount!)",
      "desc": "Returns a copy of this year-month with the specified amount added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "YearMonth",
      "code": "plus(amountToAdd: Long, unit: TemporalUnit!)",
      "desc": "Returns a copy of this year-month with the specified amount added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "YearMonth",
      "code": "plusMonths(monthsToAdd: Long)",
      "desc": "Returns a copy of this YearMonth with the specified number of months added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "YearMonth",
      "code": "plusYears(yearsToAdd: Long)",
      "desc": "Returns a copy of this YearMonth with the specified number of years added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "R",
      "code": "query(query: TemporalQuery<R>!)",
      "desc": "Queries this year-month using the specified query."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ValueRange",
      "code": "range(field: TemporalField!)",
      "desc": "Gets the range of valid values for the specified field.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": "Outputs this year-month as a String, such as 2007-12."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "until(endExclusive: Temporal!, unit: TemporalUnit!)",
      "desc": "Calculates the amount of time until another year-month in terms of the specified unit."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "YearMonth",
      "code": "with(adjuster: TemporalAdjuster!)",
      "desc": "Returns an adjusted copy of this year-month.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "YearMonth",
      "code": "with(field: TemporalField!, newValue: Long)",
      "desc": "Returns a copy of this year-month with the specified field set to a new value.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "YearMonth",
      "code": "withMonth(month: Int)",
      "desc": "Returns a copy of this YearMonth with the month-of-year altered.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "YearMonth",
      "code": "withYear(year: Int)",
      "desc": "Returns a copy of this YearMonth with the year altered.",
      "symbol": "!"
    }
  ]
}