{
  "path": "java.util.concurrent",
  "name": "Executors",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Callable",
      "code": "callable(task: Runnable!, result: T)",
      "desc": "Returns a Callable object that, when called, runs the given task and returns the given result.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Callable",
      "code": "callable(task: Runnable!)",
      "desc": "Returns a Callable object that, when called, runs the given task and returns null.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Callable",
      "code": "callable(action: PrivilegedAction<*>!)",
      "desc": "Returns a Callable object that, when called, runs the given privileged action and returns its result.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Callable",
      "code": "callable(action: PrivilegedExceptionAction<*>!)",
      "desc": "Returns a Callable object that, when called, runs the given privileged exception action and returns its result.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ThreadFactory",
      "code": "defaultThreadFactory()",
      "desc": "Returns a default thread factory used to create new threads.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ExecutorService",
      "code": "newCachedThreadPool()",
      "desc": "Creates a thread pool that creates new threads as needed, but will reuse previously constructed threads when they are available.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ExecutorService",
      "code": "newCachedThreadPool(threadFactory: ThreadFactory!)",
      "desc": "Creates a thread pool that creates new threads as needed, but will reuse previously constructed threads when they are available, and uses the provided ThreadFactory to create new threads when needed.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ExecutorService",
      "code": "newFixedThreadPool(nThreads: Int)",
      "desc": "Creates a thread pool that reuses a fixed number of threads operating off a shared unbounded queue.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ExecutorService",
      "code": "newFixedThreadPool(nThreads: Int, threadFactory: ThreadFactory!)",
      "desc": "Creates a thread pool that reuses a fixed number of threads operating off a shared unbounded queue, using the provided ThreadFactory to create new threads when needed.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ScheduledExecutorService",
      "code": "newScheduledThreadPool(corePoolSize: Int)",
      "desc": "Creates a thread pool that can schedule commands to run after a given delay, or to execute periodically.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ScheduledExecutorService",
      "code": "newScheduledThreadPool(corePoolSize: Int, threadFactory: ThreadFactory!)",
      "desc": "Creates a thread pool that can schedule commands to run after a given delay, or to execute periodically.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ExecutorService",
      "code": "newSingleThreadExecutor()",
      "desc": "Creates an Executor that uses a single worker thread operating off an unbounded queue.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ExecutorService",
      "code": "newSingleThreadExecutor(threadFactory: ThreadFactory!)",
      "desc": "Creates an Executor that uses a single worker thread operating off an unbounded queue, and uses the provided ThreadFactory to create a new thread when needed.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ScheduledExecutorService",
      "code": "newSingleThreadScheduledExecutor()",
      "desc": "Creates a single-threaded executor that can schedule commands to run after a given delay, or to execute periodically.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ScheduledExecutorService",
      "code": "newSingleThreadScheduledExecutor(threadFactory: ThreadFactory!)",
      "desc": "Creates a single-threaded executor that can schedule commands to run after a given delay, or to execute periodically.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ExecutorService",
      "code": "newWorkStealingPool(parallelism: Int)",
      "desc": "Creates a thread pool that maintains enough threads to support the given parallelism level, and may use multiple queues to reduce contention.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ExecutorService",
      "code": "newWorkStealingPool()",
      "desc": "Creates a work-stealing thread pool using the number of Runtime#availableProcessors as its target parallelism level.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Callable",
      "code": "privilegedCallable(callable: Callable<T>!)",
      "desc": "Legacy security code; do not use.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Callable",
      "code": "privilegedCallableUsingCurrentClassLoader(callable: Callable<T>!)",
      "desc": "Legacy security code; do not use.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ThreadFactory",
      "code": "privilegedThreadFactory()",
      "desc": "Legacy security code; do not use.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ExecutorService",
      "code": "unconfigurableExecutorService(executor: ExecutorService!)",
      "desc": "Returns an object that delegates all defined ExecutorService methods to the given executor, but not any other methods that might otherwise be accessible using casts.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ScheduledExecutorService",
      "code": "unconfigurableScheduledExecutorService(executor: ScheduledExecutorService!)",
      "desc": "Returns an object that delegates all defined ScheduledExecutorService methods to the given executor, but not any other methods that might otherwise be accessible using casts.",
      "symbol": "!"
    }
  ]
}