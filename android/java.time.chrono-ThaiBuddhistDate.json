{
  "path": "java.time.chrono",
  "name": "ThaiBuddhistDate",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ChronoLocalDateTime",
      "code": "atTime(localTime: LocalTime!)",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Compares this date to another date, including the chronology."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "ThaiBuddhistDate",
      "code": "from(temporal: TemporalAccessor!)",
      "desc": "Obtains a ThaiBuddhistDate from a temporal object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ThaiBuddhistChronology",
      "code": "getChronology()",
      "desc": "Gets the chronology of this date, which is the Thai Buddhist calendar system.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ThaiBuddhistEra",
      "code": "getEra()",
      "desc": "Gets the era applicable at this date.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "getLong(field: TemporalField!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "A hash code for this date."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "lengthOfMonth()",
      "desc": "Returns the length of the month represented by this date."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ThaiBuddhistDate",
      "code": "minus(amount: TemporalAmount!)",
      "desc": "Returns an object of the same type as this object with an amount subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ThaiBuddhistDate",
      "code": "minus(amountToAdd: Long, unit: TemporalUnit!)",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "ThaiBuddhistDate",
      "code": "now()",
      "desc": "Obtains the current ThaiBuddhistDate from the system clock in the default time-zone.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "ThaiBuddhistDate",
      "code": "now(zone: ZoneId!)",
      "desc": "Obtains the current ThaiBuddhistDate from the system clock in the specified time-zone.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "ThaiBuddhistDate",
      "code": "now(clock: Clock!)",
      "desc": "Obtains the current ThaiBuddhistDate from the specified clock.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "ThaiBuddhistDate",
      "code": "of(prolepticYear: Int, month: Int, dayOfMonth: Int)",
      "desc": "Obtains a ThaiBuddhistDate representing a date in the Thai Buddhist calendar system from the proleptic-year, month-of-year and day-of-month fields.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ThaiBuddhistDate",
      "code": "plus(amount: TemporalAmount!)",
      "desc": "Returns an object of the same type as this object with an amount added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ThaiBuddhistDate",
      "code": "plus(amountToAdd: Long, unit: TemporalUnit!)",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ValueRange",
      "code": "range(field: TemporalField!)",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "toEpochDay()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ChronoPeriod",
      "code": "until(endDate: ChronoLocalDate!)",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "until(endExclusive: Temporal!, unit: TemporalUnit!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ThaiBuddhistDate",
      "code": "with(field: TemporalField!, newValue: Long)",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ThaiBuddhistDate",
      "code": "with(adjuster: TemporalAdjuster!)",
      "desc": "Returns an adjusted object of the same type as this object with the adjustment made.",
      "symbol": "!"
    },
    {
      "type": "inherited-methods",
      "from": "ChronoLocalDate"
    },
    {
      "type": "inherited-methods",
      "from": "Temporal!"
    },
    {
      "type": "inherited-methods",
      "from": "adjustInto(temporal: Temporal!)"
    },
    {
      "type": "inherited-methods",
      "from": "Temporal#with(TemporalField, long)"
    },
    {
      "type": "inherited-methods",
      "from": "ChronoField#EPOCH_DAY"
    },
    {
      "type": "inherited-methods",
      "from": "Temporal#with(TemporalAdjuster)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "compareTo(other: ChronoLocalDate!)"
    },
    {
      "type": "inherited-methods",
      "from": "Comparable"
    },
    {
      "type": "inherited-methods",
      "from": "2012-12-03 (ISO)"
    },
    {
      "type": "inherited-methods",
      "from": "2012-12-04 (ISO)"
    },
    {
      "type": "inherited-methods",
      "from": "2555-12-04 (ThaiBuddhist)"
    },
    {
      "type": "inherited-methods",
      "from": "2012-12-05 (ISO)"
    },
    {
      "type": "inherited-methods",
      "from": "TemporalAccessor"
    },
    {
      "type": "inherited-methods",
      "from": "ChronoField#EPOCH_DAY"
    },
    {
      "type": "inherited-methods",
      "from": "String!"
    },
    {
      "type": "inherited-methods",
      "from": "format(formatter: DateTimeFormatter!)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isAfter(other: ChronoLocalDate!)"
    },
    {
      "type": "inherited-methods",
      "from": "compareTo"
    },
    {
      "type": "inherited-methods",
      "from": "date1.toEpochDay() > date2.toEpochDay()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isBefore(other: ChronoLocalDate!)"
    },
    {
      "type": "inherited-methods",
      "from": "compareTo"
    },
    {
      "type": "inherited-methods",
      "from": "date1.toEpochDay() < date2.toEpochDay()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isEqual(other: ChronoLocalDate!)"
    },
    {
      "type": "inherited-methods",
      "from": "compareTo"
    },
    {
      "type": "inherited-methods",
      "from": "date1.toEpochDay() == date2.toEpochDay()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isLeapYear()"
    },
    {
      "type": "inherited-methods",
      "from": "Chronology#isLeapYear(long)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isSupported(field: TemporalField!)"
    },
    {
      "type": "inherited-methods",
      "from": "range"
    },
    {
      "type": "inherited-methods",
      "from": "get"
    },
    {
      "type": "inherited-methods",
      "from": "with(java.time.temporal.TemporalField,long)"
    },
    {
      "type": "inherited-methods",
      "from": "ChronoField"
    },
    {
      "type": "inherited-methods",
      "from": "ChronoField"
    },
    {
      "type": "inherited-methods",
      "from": "TemporalField.isSupportedBy(TemporalAccessor)"
    },
    {
      "type": "inherited-methods",
      "from": "this"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isSupported(unit: TemporalUnit!)"
    },
    {
      "type": "inherited-methods",
      "from": "plus(long,java.time.temporal.TemporalUnit)"
    },
    {
      "type": "inherited-methods",
      "from": "minus"
    },
    {
      "type": "inherited-methods",
      "from": "ChronoUnit"
    },
    {
      "type": "inherited-methods",
      "from": "FOREVER"
    },
    {
      "type": "inherited-methods",
      "from": "ChronoUnit"
    },
    {
      "type": "inherited-methods",
      "from": "TemporalUnit.isSupportedBy(Temporal)"
    },
    {
      "type": "inherited-methods",
      "from": "this"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "lengthOfYear()"
    },
    {
      "type": "inherited-methods",
      "from": "isLeapYear()"
    },
    {
      "type": "inherited-methods",
      "from": "R"
    },
    {
      "type": "inherited-methods",
      "from": "query(query: TemporalQuery<R>!)"
    },
    {
      "type": "inherited-methods",
      "from": "TemporalQuery"
    },
    {
      "type": "inherited-methods",
      "from": "TemporalQuery#queryFrom(TemporalAccessor)"
    },
    {
      "type": "inherited-methods",
      "from": "this"
    }
  ]
}