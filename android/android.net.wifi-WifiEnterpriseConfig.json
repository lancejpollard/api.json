{
  "path": "android.net.wifi",
  "name": "WifiEnterpriseConfig",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_WAPI_AS_CERTIFICATE_DATA",
      "desc": "Intent extra: data for WAPI AS certificates"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_WAPI_AS_CERTIFICATE_NAME",
      "desc": "Intent extra: name for WAPI AS certificates"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_WAPI_USER_CERTIFICATE_DATA",
      "desc": "Intent extra: data for WAPI USER certificates"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_WAPI_USER_CERTIFICATE_NAME",
      "desc": "Intent extra: name for WAPI USER certificates"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "WAPI_AS_CERTIFICATE",
      "desc": "Key prefix for WAPI AS certificates."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "WAPI_USER_CERTIFICATE",
      "desc": "Key prefix for WAPI user certificates."
    },
    {
      "type": "ctor",
      "ctor": "<init>()"
    },
    {
      "type": "ctor",
      "ctor": "<init>(source: WifiEnterpriseConfig!)\n            Copy constructor."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "describeContents()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getAltSubjectMatch()",
      "desc": "Get alternate subject match",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getAnonymousIdentity()",
      "desc": "Get the anonymous identity",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "X509Certificate",
      "code": "getCaCertificate()",
      "desc": "Get CA certificate.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getCaCertificates()",
      "desc": "Get CA certificates.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "X509Certificate",
      "code": "getClientCertificate()",
      "desc": "Get client certificate",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getClientCertificateChain()",
      "desc": "Get the complete client certificate chain in the same order as it was last supplied.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PrivateKey",
      "code": "getClientPrivateKey()",
      "desc": "Get the client private key as supplied in setClientKeyEntryWithCertificateChain, or null if unset.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getDomainSuffixMatch()",
      "desc": "Get the domain_suffix_match value.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getEapMethod()",
      "desc": "Get the eap method."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getIdentity()",
      "desc": "Get the identity",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getPassword()",
      "desc": "Get the password.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getPhase2Method()",
      "desc": "Get the phase 2 authentication method."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getPlmn()",
      "desc": "Get plmn (Public Land Mobile Network) for Passpoint credential; see  (java.lang.String) for more information",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getRealm()",
      "desc": "Get realm for Passpoint credential; see setRealm(java.lang.String) for more information",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getSubjectMatch()",
      "desc": "Get subject match (deprecated)",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isAuthenticationSimBased()",
      "desc": "Utility method to determine whether the configuration's authentication method is SIM-based."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAltSubjectMatch(altSubjectMatch: String!)",
      "desc": "Set alternate subject match."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAnonymousIdentity(anonymousIdentity: String!)",
      "desc": "Set anonymous identity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCaCertificate(cert: X509Certificate?)",
      "desc": "Specify a X."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCaCertificates(certs: Array<X509Certificate!>?)",
      "desc": "Specify a list of X."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setClientKeyEntry(privateKey: PrivateKey!, clientCertificate: X509Certificate!)",
      "desc": "Specify a private key and client certificate for client authorization."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setClientKeyEntryWithCertificateChain(privateKey: PrivateKey!, clientCertificateChain: Array<X509Certificate!>!)",
      "desc": "Specify a private key and client certificate chain for client authorization."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setDomainSuffixMatch(domain: String!)",
      "desc": "Set the domain_suffix_match directive on wpa_supplicant."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setEapMethod(eapMethod: Int)",
      "desc": "Set the EAP authentication method."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setIdentity(identity: String!)",
      "desc": "Set the identity"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPassword(password: String!)",
      "desc": "Set the password."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPhase2Method(phase2Method: Int)",
      "desc": "Set Phase 2 authentication method."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPlmn(plmn: String!)",
      "desc": "Set plmn (Public Land Mobile Network) of the provider of Passpoint credential"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setRealm(realm: String!)",
      "desc": "Set realm for Passpoint credential; realm identifies a set of networks where your Passpoint credential can be used"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSubjectMatch(subjectMatch: String!)",
      "desc": "Set subject match (deprecated)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "writeToParcel(dest: Parcel!, flags: Int)",
      "desc": ""
    },
    {
      "type": "inherited-constants",
      "from": "Parcelable"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "CONTENTS_FILE_DESCRIPTOR"
    },
    {
      "type": "inherited-constants",
      "from": "describeContents()"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "PARCELABLE_WRITE_RETURN_VALUE"
    },
    {
      "type": "inherited-constants",
      "from": "writeToParcel"
    },
    {
      "type": "inherited-constants",
      "from": "Parcelable someFunction()"
    },
    {
      "type": "inherited-constants",
      "from": "void someFunction(out Parcelable)"
    },
    {
      "type": "inherited-constants",
      "from": "void someFunction(inout Parcelable)"
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "code": "Eap",
      "desc": "The Extensible Authentication Protocol method used"
    },
    {
      "type": "nested-classes",
      "code": "Phase2",
      "desc": "The inner authentication method used"
    }
  ]
}