{
  "path": "android.text.style",
  "name": "TextAppearanceSpan",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(context: Context!, appearance: Int)\n            Uses the specified TextAppearance resource to determine the text appearance."
    },
    {
      "type": "ctor",
      "ctor": "<init>(context: Context!, appearance: Int, colorList: Int)\n            Uses the specified TextAppearance resource to determine the text appearance, and the specified text color resource to determine the color."
    },
    {
      "type": "ctor",
      "ctor": "<init>(family: String!, style: Int, size: Int, color: ColorStateList!, linkColor: ColorStateList!)\n            Makes text be drawn with the specified typeface, size, style, and colors."
    },
    {
      "type": "ctor",
      "ctor": "<init>(src: Parcel!)"
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "describeContents()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getFamily()",
      "desc": "Returns the typeface family specified by this span, or null if it does not specify one.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getFontFeatureSettings()",
      "desc": "Returns the font feature settings specified by this span, or null if it does not specify one.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getFontVariationSettings()",
      "desc": "Returns the font variation settings specified by this span, or null if it does not specify one.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ColorStateList",
      "code": "getLinkTextColor()",
      "desc": "Returns the link color specified by this span, or null if it does not specify one.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getShadowColor()",
      "desc": "Returns the color of the text shadow specified by this span, or 0 if it does not specify one."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Float",
      "code": "getShadowDx()",
      "desc": "Returns the horizontal offset of the text shadow specified by this span, or 0.0f if it does not specify one."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Float",
      "code": "getShadowDy()",
      "desc": "Returns the vertical offset of the text shadow specified by this span, or 0.0f if it does not specify one."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Float",
      "code": "getShadowRadius()",
      "desc": "Returns the blur radius of the text shadow specified by this span, or 0.0f if it does not specify one."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getSpanTypeId()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ColorStateList",
      "code": "getTextColor()",
      "desc": "Returns the text color specified by this span, or null if it does not specify one.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getTextFontWeight()",
      "desc": "Returns the text font weight specified by this span, or -1 if it does not specify one."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "LocaleList",
      "code": "getTextLocales()",
      "desc": "Returns the android.os.LocaleList specified by this span, or null if it does not specify one.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getTextSize()",
      "desc": "Returns the text size specified by this span, or -1 if it does not specify one."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getTextStyle()",
      "desc": "Returns the text style specified by this span, or 0 if it does not specify one."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Typeface",
      "code": "getTypeface()",
      "desc": "Returns the typeface specified by this span, or null if it does not specify one.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isElegantTextHeight()",
      "desc": "Returns the value of elegant height metrics flag specified by this span, or false if it does not specify one."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "updateDrawState(ds: TextPaint!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "updateMeasureState(ds: TextPaint)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "writeToParcel(dest: Parcel!, flags: Int)",
      "desc": ""
    },
    {
      "type": "inherited-methods",
      "from": "MetricAffectingSpan"
    },
    {
      "type": "inherited-methods",
      "from": "MetricAffectingSpan!"
    },
    {
      "type": "inherited-methods",
      "from": "getUnderlying()"
    },
    {
      "type": "inherited-methods",
      "from": "wrap"
    },
    {
      "type": "inherited-methods",
      "from": "CharacterStyle"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "updateDrawState(tp: TextPaint!)"
    },
    {
      "type": "inherited-methods",
      "from": "CharacterStyle!"
    },
    {
      "type": "inherited-methods",
      "from": "wrap(cs: CharacterStyle!)"
    }
  ]
}