{
  "path": "android.icu.math",
  "name": "MathContext",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ENGINEERING",
      "desc": "Standard floating point notation (with engineering exponential format, where the power of ten is a multiple of 3)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PLAIN",
      "desc": "Plain (fixed point) notation, without any exponent."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ROUND_CEILING",
      "desc": "Rounding mode to round to a more positive number."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ROUND_DOWN",
      "desc": "Rounding mode to round towards zero."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ROUND_FLOOR",
      "desc": "Rounding mode to round to a more negative number."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ROUND_HALF_DOWN",
      "desc": "Rounding mode to round to nearest neighbor, where an equidistant value is rounded down."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ROUND_HALF_EVEN",
      "desc": "Rounding mode to round to nearest neighbor, where an equidistant value is rounded to the nearest even neighbor."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ROUND_HALF_UP",
      "desc": "Rounding mode to round to nearest neighbor, where an equidistant value is rounded up."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ROUND_UNNECESSARY",
      "desc": "Rounding mode to assert that no rounding is necessary."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ROUND_UP",
      "desc": "Rounding mode to round away from zero."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SCIENTIFIC",
      "desc": "Standard floating point notation (with scientific exponential format, where there is one digit before any decimal point)."
    },
    {
      "type": "ctor",
      "ctor": "<init>(setdigits: Int)\n            Constructs a new MathContext with a specified precision."
    },
    {
      "type": "ctor",
      "ctor": "<init>(setdigits: Int, setform: Int)\n            Constructs a new MathContext with a specified precision and form."
    },
    {
      "type": "ctor",
      "ctor": "<init>(setdigits: Int, setform: Int, setlostdigits: Boolean)\n            Constructs a new MathContext with a specified precision, form, and lostDigits setting."
    },
    {
      "type": "ctor",
      "ctor": "<init>(setdigits: Int, setform: Int, setlostdigits: Boolean, setroundingmode: Int)\n            Constructs a new MathContext with a specified precision, form, lostDigits, and roundingMode setting."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getDigits()",
      "desc": "Returns the digits setting."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getForm()",
      "desc": "Returns the form setting."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "getLostDigits()",
      "desc": "Returns the lostDigits setting."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getRoundingMode()",
      "desc": "Returns the roundingMode setting."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns the MathContext as a readable string."
    }
  ]
}