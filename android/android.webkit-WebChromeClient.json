{
  "path": "android.webkit",
  "name": "WebChromeClient",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()"
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Bitmap",
      "code": "getDefaultVideoPoster()",
      "desc": "When not playing, video elements are represented by a 'poster' image.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View",
      "code": "getVideoLoadingProgressView()",
      "desc": "Obtains a View to be displayed while buffering of full screen video is taking place.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "getVisitedHistory(callback: ValueCallback<Array<String!>!>!)",
      "desc": "Obtains a list of all visited history items, used for link coloring"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onCloseWindow(window: WebView!)",
      "desc": "Notify the host application to close the given WebView and remove it from the view system if necessary."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onConsoleMessage(message: String!, lineNumber: Int, sourceID: String!)",
      "desc": "Report a JavaScript error message to the host application."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onConsoleMessage(consoleMessage: ConsoleMessage!)",
      "desc": "Report a JavaScript console message to the host application."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onCreateWindow(view: WebView!, isDialog: Boolean, isUserGesture: Boolean, resultMsg: Message!)",
      "desc": "Request the host application to create a new window."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onExceededDatabaseQuota(url: String!, databaseIdentifier: String!, quota: Long, estimatedDatabaseSize: Long, totalQuota: Long, quotaUpdater: WebStorage.QuotaUpdater!)",
      "desc": "Tell the client that the quota has been exceeded for the Web SQL Database API for a particular origin and request a new quota."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onGeolocationPermissionsHidePrompt()",
      "desc": "Notify the host application that a request for Geolocation permissions, made with a previous call to onGeolocationPermissionsShowPrompt() has been canceled."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onGeolocationPermissionsShowPrompt(origin: String!, callback: GeolocationPermissions.Callback!)",
      "desc": "Notify the host application that web content from the specified origin is attempting to use the Geolocation API, but no permission state is currently set for that origin."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onHideCustomView()",
      "desc": "Notify the host application that the current page has exited full screen mode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onJsAlert(view: WebView!, url: String!, message: String!, result: JsResult!)",
      "desc": "Notify the host application that the web page wants to display a JavaScript alert() dialog."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onJsBeforeUnload(view: WebView!, url: String!, message: String!, result: JsResult!)",
      "desc": "Notify the host application that the web page wants to confirm navigation from JavaScript onbeforeunload."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onJsConfirm(view: WebView!, url: String!, message: String!, result: JsResult!)",
      "desc": "Notify the host application that the web page wants to display a JavaScript confirm() dialog."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onJsPrompt(view: WebView!, url: String!, message: String!, defaultValue: String!, result: JsPromptResult!)",
      "desc": "Notify the host application that the web page wants to display a JavaScript prompt() dialog."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onJsTimeout()",
      "desc": "Tell the client that a JavaScript execution timeout has occured."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onPermissionRequest(request: PermissionRequest!)",
      "desc": "Notify the host application that web content is requesting permission to access the specified resources and the permission currently isn't granted or denied."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onPermissionRequestCanceled(request: PermissionRequest!)",
      "desc": "Notify the host application that the given permission request has been canceled."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onProgressChanged(view: WebView!, newProgress: Int)",
      "desc": "Tell the host application the current progress of loading a page."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onReachedMaxAppCacheSize(requiredStorage: Long, quota: Long, quotaUpdater: WebStorage.QuotaUpdater!)",
      "desc": "Notify the host application that the Application Cache has reached the maximum size."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onReceivedIcon(view: WebView!, icon: Bitmap!)",
      "desc": "Notify the host application of a new favicon for the current page."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onReceivedTitle(view: WebView!, title: String!)",
      "desc": "Notify the host application of a change in the document title."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onReceivedTouchIconUrl(view: WebView!, url: String!, precomposed: Boolean)",
      "desc": "Notify the host application of the url for an apple-touch-icon."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onRequestFocus(view: WebView!)",
      "desc": "Request display and focus for this WebView."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onShowCustomView(view: View!, callback: WebChromeClient.CustomViewCallback!)",
      "desc": "Notify the host application that the current page has entered full screen mode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onShowCustomView(view: View!, requestedOrientation: Int, callback: WebChromeClient.CustomViewCallback!)",
      "desc": "Notify the host application that the current page would like to show a custom View in a particular orientation."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onShowFileChooser(webView: WebView!, filePathCallback: ValueCallback<Array<Uri!>!>!, fileChooserParams: WebChromeClient.FileChooserParams!)",
      "desc": "Tell the client to show a file chooser."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "CustomViewCallback",
      "desc": "A callback interface used by the host application to notify the current page that its custom view has been dismissed."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "FileChooserParams",
      "desc": "Parameters used in the onShowFileChooser method."
    }
  ]
}