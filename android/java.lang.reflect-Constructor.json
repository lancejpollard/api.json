{
  "path": "java.lang.reflect",
  "name": "Constructor",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Compares this Constructor against the specified object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "T",
      "code": "getAnnotation(annotationClass: Class<T>)",
      "desc": "Returns this element's annotation for the specified type if such an annotation is present, else null.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getDeclaredAnnotations()",
      "desc": "Returns annotations that are directly present on this element.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Class",
      "code": "getDeclaringClass()",
      "desc": "Returns the Class object representing the class or interface that declares the executable represented by this object.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getExceptionTypes()",
      "desc": "Returns an array of Class objects that represent the types of exceptions declared to be thrown by the underlying executable represented by this object.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getGenericExceptionTypes()",
      "desc": "Returns an array of Type objects that represent the exceptions declared to be thrown by this executable object.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getGenericParameterTypes()",
      "desc": "Returns an array of Type objects that represent the formal parameter types, in declaration order, of the executable represented by this object.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getModifiers()",
      "desc": "Returns the Java language Modifier for the executable represented by this object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getName()",
      "desc": "Returns the name of this constructor, as a string."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getParameterAnnotations()",
      "desc": "Returns an array of arrays of Annotations that represent the annotations on the formal parameters, in declaration order, of the Executable represented by this object.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getParameterCount()",
      "desc": "Returns the number of formal parameters (whether explicitly declared or implicitly declared or neither) for the executable represented by this object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getParameterTypes()",
      "desc": "Returns an array of Class objects that represent the formal parameter types, in declaration order, of the executable represented by this object.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getTypeParameters()",
      "desc": "Returns an array of TypeVariable objects that represent the type variables declared by the generic declaration represented by this GenericDeclaration object, in declaration order.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Returns a hashcode for this Constructor."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isSynthetic()",
      "desc": "Returns true if this executable is a synthetic construct; returns false otherwise."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isVarArgs()",
      "desc": "Returns true if this executable was declared to take a variable number of arguments; returns false otherwise."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "T",
      "code": "newInstance(vararg initargs: Any!)",
      "desc": "Uses the constructor represented by this Constructor object to create and initialize a new instance of the constructor's declaring class, with the specified initialization parameters."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toGenericString()",
      "desc": "Returns a string describing this Constructor, including type parameters."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns a string describing this Constructor."
    },
    {
      "type": "inherited-constants",
      "from": "Member"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "DECLARED"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "PUBLIC"
    },
    {
      "type": "inherited-methods",
      "from": "AccessibleObject"
    },
    {
      "type": "inherited-methods",
      "from": "Array<Annotation!>"
    },
    {
      "type": "inherited-methods",
      "from": "getAnnotations()"
    },
    {
      "type": "inherited-methods",
      "from": "T?"
    },
    {
      "type": "inherited-methods",
      "from": "getDeclaredAnnotation(annotationClass: Class<T>)"
    },
    {
      "type": "inherited-methods",
      "from": "Array<T>!"
    },
    {
      "type": "inherited-methods",
      "from": "getDeclaredAnnotationsByType(annotationClass: Class<T>)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isAccessible()"
    },
    {
      "type": "inherited-methods",
      "from": "accessible"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setAccessible(flag: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "accessible"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "false"
    },
    {
      "type": "inherited-methods",
      "from": "checkPermission"
    },
    {
      "type": "inherited-methods",
      "from": "ReflectPermission(\"suppressAccessChecks\")"
    },
    {
      "type": "inherited-methods",
      "from": "SecurityException"
    },
    {
      "type": "inherited-methods",
      "from": "flag"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "Constructor"
    },
    {
      "type": "inherited-methods",
      "from": "java.lang.Class"
    },
    {
      "type": "inherited-methods",
      "from": "SecurityException"
    },
    {
      "type": "inherited-methods",
      "from": "java.lang.Class"
    },
    {
      "type": "inherited-methods",
      "from": "flag"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setAccessible(array: Array<AccessibleObject!>!, flag: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "accessible"
    },
    {
      "type": "inherited-methods",
      "from": "checkPermission"
    },
    {
      "type": "inherited-methods",
      "from": "ReflectPermission(\"suppressAccessChecks\")"
    },
    {
      "type": "inherited-methods",
      "from": "SecurityException"
    },
    {
      "type": "inherited-methods",
      "from": "flag"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "array"
    },
    {
      "type": "inherited-methods",
      "from": "Constructor"
    },
    {
      "type": "inherited-methods",
      "from": "flag"
    },
    {
      "type": "inherited-methods",
      "from": "Executable"
    },
    {
      "type": "inherited-methods",
      "from": "Array<T>!"
    },
    {
      "type": "inherited-methods",
      "from": "getAnnotationsByType(annotationClass: Class<T>)"
    },
    {
      "type": "inherited-methods",
      "from": "getAnnotation(java.lang.Class)"
    },
    {
      "type": "inherited-methods",
      "from": "Array<Parameter!>"
    },
    {
      "type": "inherited-methods",
      "from": "getParameters()"
    },
    {
      "type": "inherited-methods",
      "from": "Parameter"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isAnnotationPresent(annotationType: Class<out Annotation!>)"
    }
  ]
}