{
  "path": "android.icu.text",
  "name": "TimeZoneFormat",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TimeZoneFormat",
      "code": "cloneAsThawed()",
      "desc": "Provides for the clone operation.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "format(style: TimeZoneFormat.Style!, tz: TimeZone!, date: Long)",
      "desc": "Returns the display name of the time zone at the given date for the style.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "format(style: TimeZoneFormat.Style!, tz: TimeZone!, date: Long, timeType: Output<TimeZoneFormat.TimeType!>!)",
      "desc": "Returns the display name of the time zone at the given date for the style.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "StringBuffer",
      "code": "format(obj: Any!, toAppendTo: StringBuffer!, pos: FieldPosition!)",
      "desc": "Formats an object and appends the resulting text to a given string buffer.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "formatOffsetISO8601Basic(offset: Int, useUtcIndicator: Boolean, isShort: Boolean, ignoreSeconds: Boolean)",
      "desc": "Returns the ISO 8601 basic time zone string for the given offset.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "formatOffsetISO8601Extended(offset: Int, useUtcIndicator: Boolean, isShort: Boolean, ignoreSeconds: Boolean)",
      "desc": "Returns the ISO 8601 extended time zone string for the given offset.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "formatOffsetLocalizedGMT(offset: Int)",
      "desc": "Returns the localized GMT(UTC) offset format for the given offset.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "formatOffsetShortLocalizedGMT(offset: Int)",
      "desc": "Returns the short localized GMT(UTC) offset format for the given offset.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "AttributedCharacterIterator",
      "code": "formatToCharacterIterator(obj: Any!)",
      "desc": "Formats an Object producing an AttributedCharacterIterator.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TimeZoneFormat",
      "code": "freeze()",
      "desc": "Freezes the object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "EnumSet",
      "code": "getDefaultParseOptions()",
      "desc": "Returns the default parse options used by this TimeZoneFormat instance.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getGMTOffsetDigits()",
      "desc": "Returns the decimal digit characters used for localized GMT format in a single string containing from 0 to 9 in the ascending order.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getGMTOffsetPattern(type: TimeZoneFormat.GMTOffsetPatternType!)",
      "desc": "Returns the offset pattern used for localized GMT format.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getGMTPattern()",
      "desc": "Returns the localized GMT format pattern.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getGMTZeroFormat()",
      "desc": "Returns the localized GMT format string for GMT(UTC) itself (GMT offset is 0).",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TimeZoneFormat",
      "code": "getInstance(locale: ULocale!)",
      "desc": "Returns a frozen instance of TimeZoneFormat for the given locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TimeZoneFormat",
      "code": "getInstance(locale: Locale!)",
      "desc": "Returns a frozen instance of TimeZoneFormat for the given java.util.Locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TimeZoneNames",
      "code": "getTimeZoneNames()",
      "desc": "Returns the time zone display name data used by this instance.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isFrozen()",
      "desc": "Determines whether the object has been frozen or not."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TimeZone",
      "code": "parse(style: TimeZoneFormat.Style!, text: String!, pos: ParsePosition!, options: EnumSet<TimeZoneFormat.ParseOption!>!, timeType: Output<TimeZoneFormat.TimeType!>!)",
      "desc": "Returns a TimeZone by parsing the time zone string according to the parse position, the style and the parse options.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TimeZone",
      "code": "parse(style: TimeZoneFormat.Style!, text: String!, pos: ParsePosition!, timeType: Output<TimeZoneFormat.TimeType!>!)",
      "desc": "Returns a TimeZone by parsing the time zone string according to the parse position, the style and the default parse options.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "TimeZone",
      "code": "parse(text: String!, pos: ParsePosition!)",
      "desc": "Returns a TimeZone by parsing the time zone string according to the given parse position.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "TimeZone",
      "code": "parse(text: String!)",
      "desc": "Returns a TimeZone for the given text.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "parseObject(source: String!, pos: ParsePosition!)",
      "desc": "Parses text from a string to produce an object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "parseOffsetISO8601(text: String!, pos: ParsePosition!)",
      "desc": "Returns offset from GMT(UTC) in milliseconds for the given ISO 8601 basic or extended time zone string."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "parseOffsetLocalizedGMT(text: String!, pos: ParsePosition!)",
      "desc": "Returns offset from GMT(UTC) in milliseconds for the given localized GMT offset format string."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "parseOffsetShortLocalizedGMT(text: String!, pos: ParsePosition!)",
      "desc": "Returns offset from GMT(UTC) in milliseconds for the given short localized GMT offset format string."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TimeZoneFormat",
      "code": "setDefaultParseOptions(options: EnumSet<TimeZoneFormat.ParseOption!>!)",
      "desc": "Sets the default parse options.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TimeZoneFormat",
      "code": "setGMTOffsetDigits(digits: String!)",
      "desc": "Sets the decimal digit characters used for localized GMT format.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TimeZoneFormat",
      "code": "setGMTOffsetPattern(type: TimeZoneFormat.GMTOffsetPatternType!, pattern: String!)",
      "desc": "Sets the offset pattern for the given offset type.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TimeZoneFormat",
      "code": "setGMTPattern(pattern: String!)",
      "desc": "Sets the localized GMT format pattern.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TimeZoneFormat",
      "code": "setGMTZeroFormat(gmtZeroFormat: String!)",
      "desc": "Sets the localized GMT format string for GMT(UTC) itself (GMT offset is 0).",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TimeZoneFormat",
      "code": "setTimeZoneNames(tznames: TimeZoneNames!)",
      "desc": "Sets the time zone display name data to this instance.",
      "symbol": "!"
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "code": "GMTOffsetPatternType",
      "desc": "Offset pattern type enum."
    },
    {
      "type": "nested-classes",
      "code": "ParseOption",
      "desc": "Parse option enum, used for specifying optional parse behavior."
    },
    {
      "type": "nested-classes",
      "code": "Style",
      "desc": "Time zone display format style enum used by format/parse APIs in TimeZoneFormat."
    },
    {
      "type": "nested-classes",
      "code": "TimeType",
      "desc": "Time type enum used for receiving time type (standard time, daylight time or unknown) in TimeZoneFormat APIs."
    }
  ]
}