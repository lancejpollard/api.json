{
  "path": "java.io",
  "name": "PipedInputStream",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PIPE_SIZE",
      "desc": "The default size of the pipe's circular input buffer."
    },
    {
      "type": "ctor",
      "ctor": "<init>(src: PipedOutputStream!)\n            Creates a PipedInputStream so that it is connected to the piped output stream src."
    },
    {
      "type": "ctor",
      "ctor": "<init>(src: PipedOutputStream!, pipeSize: Int)\n            Creates a PipedInputStream so that it is connected to the piped output stream src and uses the specified pipe size for the pipe's buffer."
    },
    {
      "type": "ctor",
      "ctor": "<init>()\n            Creates a PipedInputStream so that it is not yet  connected."
    },
    {
      "type": "ctor",
      "ctor": "<init>(pipeSize: Int)\n            Creates a PipedInputStream so that it is not yet connected and uses the specified pipe size for the pipe's buffer."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "available()",
      "desc": "Returns the number of bytes that can be read from this input stream without blocking."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "close()",
      "desc": "Closes this piped input stream and releases any system resources associated with the stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "connect(src: PipedOutputStream!)",
      "desc": "Causes this piped input stream to be connected to the piped output stream src."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "read()",
      "desc": "Reads the next byte of data from this piped input stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "read(b: ByteArray!, off: Int, len: Int)",
      "desc": "Reads up to len bytes of data from this piped input stream into an array of bytes."
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "receive(b: Int)",
      "desc": "Receives a byte of data."
    },
    {
      "type": "inherited-methods",
      "from": "InputStream"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "mark(readlimit: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "reset"
    },
    {
      "type": "inherited-methods",
      "from": "readlimit"
    },
    {
      "type": "inherited-methods",
      "from": "mark"
    },
    {
      "type": "inherited-methods",
      "from": "markSupported"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "mark"
    },
    {
      "type": "inherited-methods",
      "from": "reset"
    },
    {
      "type": "inherited-methods",
      "from": "readlimit"
    },
    {
      "type": "inherited-methods",
      "from": "reset"
    },
    {
      "type": "inherited-methods",
      "from": "mark"
    },
    {
      "type": "inherited-methods",
      "from": "InputStream"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "markSupported()"
    },
    {
      "type": "inherited-methods",
      "from": "mark"
    },
    {
      "type": "inherited-methods",
      "from": "reset"
    },
    {
      "type": "inherited-methods",
      "from": "mark"
    },
    {
      "type": "inherited-methods",
      "from": "reset"
    },
    {
      "type": "inherited-methods",
      "from": "markSupported"
    },
    {
      "type": "inherited-methods",
      "from": "InputStream"
    },
    {
      "type": "inherited-methods",
      "from": "false"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "read(b: ByteArray!)"
    },
    {
      "type": "inherited-methods",
      "from": "b"
    },
    {
      "type": "inherited-methods",
      "from": "b"
    },
    {
      "type": "inherited-methods",
      "from": "0"
    },
    {
      "type": "inherited-methods",
      "from": "-1"
    },
    {
      "type": "inherited-methods",
      "from": "b"
    },
    {
      "type": "inherited-methods",
      "from": "b[0]"
    },
    {
      "type": "inherited-methods",
      "from": "b[1]"
    },
    {
      "type": "inherited-methods",
      "from": "b"
    },
    {
      "type": "inherited-methods",
      "from": "b[0]"
    },
    {
      "type": "inherited-methods",
      "from": "b["
    },
    {
      "type": "inherited-methods",
      "from": "-1]"
    },
    {
      "type": "inherited-methods",
      "from": "b["
    },
    {
      "type": "inherited-methods",
      "from": "]"
    },
    {
      "type": "inherited-methods",
      "from": "b[b.length-1]"
    },
    {
      "type": "inherited-methods",
      "from": "read(b)"
    },
    {
      "type": "inherited-methods",
      "from": "InputStream"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "reset()"
    },
    {
      "type": "inherited-methods",
      "from": "mark"
    },
    {
      "type": "inherited-methods",
      "from": "reset"
    },
    {
      "type": "inherited-methods",
      "from": "markSupported"
    },
    {
      "type": "inherited-methods",
      "from": "true"
    },
    {
      "type": "inherited-methods",
      "from": "mark"
    },
    {
      "type": "inherited-methods",
      "from": "mark"
    },
    {
      "type": "inherited-methods",
      "from": "mark"
    },
    {
      "type": "inherited-methods",
      "from": "IOException"
    },
    {
      "type": "inherited-methods",
      "from": "IOException"
    },
    {
      "type": "inherited-methods",
      "from": "mark"
    },
    {
      "type": "inherited-methods",
      "from": "mark"
    },
    {
      "type": "inherited-methods",
      "from": "read"
    },
    {
      "type": "inherited-methods",
      "from": "reset"
    },
    {
      "type": "inherited-methods",
      "from": "markSupported"
    },
    {
      "type": "inherited-methods",
      "from": "false"
    },
    {
      "type": "inherited-methods",
      "from": "reset"
    },
    {
      "type": "inherited-methods",
      "from": "IOException"
    },
    {
      "type": "inherited-methods",
      "from": "IOException"
    },
    {
      "type": "inherited-methods",
      "from": "read"
    },
    {
      "type": "inherited-methods",
      "from": "reset"
    },
    {
      "type": "inherited-methods",
      "from": "InputStream"
    },
    {
      "type": "inherited-methods",
      "from": "IOException"
    },
    {
      "type": "inherited-methods",
      "from": "Long"
    },
    {
      "type": "inherited-methods",
      "from": "skip(n: Long)"
    },
    {
      "type": "inherited-methods",
      "from": "n"
    },
    {
      "type": "inherited-methods",
      "from": "skip"
    },
    {
      "type": "inherited-methods",
      "from": "0"
    },
    {
      "type": "inherited-methods",
      "from": "n"
    },
    {
      "type": "inherited-methods",
      "from": "n"
    },
    {
      "type": "inherited-methods",
      "from": "skip"
    },
    {
      "type": "inherited-methods",
      "from": "InputStream"
    },
    {
      "type": "inherited-methods",
      "from": "skip"
    },
    {
      "type": "inherited-methods",
      "from": "n"
    }
  ]
}