{
  "path": "android.media",
  "name": "MicrophoneInfo",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "CHANNEL_MAPPING_DIRECT",
      "desc": "The channel contains raw audio from this microphone."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "CHANNEL_MAPPING_PROCESSED",
      "desc": "The channel contains processed audio from this microphone and possibly another microphone."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DIRECTIONALITY_BI_DIRECTIONAL",
      "desc": "Microphone directionality type: bi-directional."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DIRECTIONALITY_CARDIOID",
      "desc": "Microphone directionality type: cardioid."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DIRECTIONALITY_HYPER_CARDIOID",
      "desc": "Microphone directionality type: hyper cardioid."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DIRECTIONALITY_OMNI",
      "desc": "Microphone directionality type: omni."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DIRECTIONALITY_SUPER_CARDIOID",
      "desc": "Microphone directionality type: super cardioid."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DIRECTIONALITY_UNKNOWN",
      "desc": "Unknown microphone directionality."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "GROUP_UNKNOWN",
      "desc": "Value used for when the group of the microphone is unknown."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "INDEX_IN_THE_GROUP_UNKNOWN",
      "desc": "Value used for when the index in the group of the microphone is unknown."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "LOCATION_MAINBODY",
      "desc": "A microphone that locate on main body of the device."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "LOCATION_MAINBODY_MOVABLE",
      "desc": "A microphone that locate on a movable main body of the device."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "LOCATION_PERIPHERAL",
      "desc": "A microphone that locate on a peripheral."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "LOCATION_UNKNOWN",
      "desc": "A microphone that the location is unknown."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Float",
      "code": "SENSITIVITY_UNKNOWN",
      "desc": "Value used for when the sensitivity of the microphone is unknown."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Float",
      "code": "SPL_UNKNOWN",
      "desc": "Value used for when the SPL of the microphone is unknown."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getAddress()",
      "desc": "Returns The \"address\" string of the microphone that corresponds to the address returned by AudioDeviceInfo#getAddress()"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MutableList",
      "code": "getChannelMapping()",
      "desc": "Returns a android.util.Pair list for channel mapping, which indicating how this microphone is used by each channels or a capture stream.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getDescription()",
      "desc": "Returns alphanumeric code that uniquely identifies the device.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getDirectionality()",
      "desc": "Returns the directionality of microphone."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MutableList",
      "code": "getFrequencyResponse()",
      "desc": "Returns a android.util.Pair list of frequency responses.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getGroup()",
      "desc": "Returns A device group id that can be used to group together microphones on the same peripheral, attachments or logical groups."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getId()",
      "desc": "Returns The system unique device ID that corresponds to the id returned by AudioDeviceInfo#getId()."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getIndexInTheGroup()",
      "desc": "Returns unique index for device within its group."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getLocation()",
      "desc": "Returns the location of the microphone."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getMaxSpl()",
      "desc": "Returns the level in dB of the maximum SPL supported by the device at 1000Hz."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getMinSpl()",
      "desc": "Returns the level in dB of the minimum SPL that can be registered by the device at 1000Hz."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MicrophoneInfo.Coordinate3F",
      "code": "getOrientation()",
      "desc": "Returns A Coordinate3F object that represents the orientation of microphone.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MicrophoneInfo.Coordinate3F",
      "code": "getPosition()",
      "desc": "Returns A Coordinate3F object that represents the geometric location of microphone in meters, from bottom-left-back corner of appliance.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getSensitivity()",
      "desc": "Returns the level in dBFS produced by a 1000Hz tone at 94 dB SPL."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getType()",
      "desc": "Returns the device type identifier of the microphone (e.g AudioDeviceInfo.TYPE_BUILTIN_MIC)."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "code": "Coordinate3F",
      "desc": ""
    }
  ]
}