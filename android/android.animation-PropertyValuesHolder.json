{
  "path": "android.animation",
  "name": "PropertyValuesHolder",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PropertyValuesHolder",
      "code": "clone()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getPropertyName()",
      "desc": "Gets the name of the property that will be animated.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PropertyValuesHolder",
      "code": "ofFloat(propertyName: String!, vararg values: Float)",
      "desc": "Constructs and returns a PropertyValuesHolder with a given property name and set of float values.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PropertyValuesHolder",
      "code": "ofFloat(property: Property<*, Float!>!, vararg values: Float)",
      "desc": "Constructs and returns a PropertyValuesHolder with a given property and set of float values.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PropertyValuesHolder",
      "code": "ofInt(propertyName: String!, vararg values: Int)",
      "desc": "Constructs and returns a PropertyValuesHolder with a given property name and set of int values.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PropertyValuesHolder",
      "code": "ofInt(property: Property<*, Int!>!, vararg values: Int)",
      "desc": "Constructs and returns a PropertyValuesHolder with a given property and set of int values.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PropertyValuesHolder",
      "code": "ofKeyframe(propertyName: String!, vararg values: Keyframe!)",
      "desc": "Constructs and returns a PropertyValuesHolder object with the specified property name and set of values.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PropertyValuesHolder",
      "code": "ofKeyframe(property: Property<Any!, Any!>!, vararg values: Keyframe!)",
      "desc": "Constructs and returns a PropertyValuesHolder object with the specified property and set of values.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PropertyValuesHolder",
      "code": "ofMultiFloat(propertyName: String!, values: Array<FloatArray!>!)",
      "desc": "Constructs and returns a PropertyValuesHolder with a given property name and set of float[] values.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PropertyValuesHolder",
      "code": "ofMultiFloat(propertyName: String!, path: Path!)",
      "desc": "Constructs and returns a PropertyValuesHolder with a given property name to use as a multi-float setter.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PropertyValuesHolder",
      "code": "ofMultiFloat(propertyName: String!, converter: TypeConverter<V, FloatArray!>!, evaluator: TypeEvaluator<V>!, vararg values: V)",
      "desc": "Constructs and returns a PropertyValuesHolder with a given property and set of Object values for use with ObjectAnimator multi-value setters.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PropertyValuesHolder",
      "code": "ofMultiFloat(propertyName: String!, converter: TypeConverter<T, FloatArray!>!, evaluator: TypeEvaluator<T>!, vararg values: Keyframe!)",
      "desc": "Constructs and returns a PropertyValuesHolder object with the specified property name or setter name for use in a multi-float setter function using ObjectAnimator.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PropertyValuesHolder",
      "code": "ofMultiInt(propertyName: String!, values: Array<IntArray!>!)",
      "desc": "Constructs and returns a PropertyValuesHolder with a given property name and set of int[] values.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PropertyValuesHolder",
      "code": "ofMultiInt(propertyName: String!, path: Path!)",
      "desc": "Constructs and returns a PropertyValuesHolder with a given property name to use as a multi-int setter.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PropertyValuesHolder",
      "code": "ofMultiInt(propertyName: String!, converter: TypeConverter<V, IntArray!>!, evaluator: TypeEvaluator<V>!, vararg values: V)",
      "desc": "Constructs and returns a PropertyValuesHolder with a given property and set of Object values for use with ObjectAnimator multi-value setters.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PropertyValuesHolder",
      "code": "ofMultiInt(propertyName: String!, converter: TypeConverter<T, IntArray!>!, evaluator: TypeEvaluator<T>!, vararg values: Keyframe!)",
      "desc": "Constructs and returns a PropertyValuesHolder object with the specified property name or setter name for use in a multi-int setter function using ObjectAnimator.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PropertyValuesHolder",
      "code": "ofObject(propertyName: String!, evaluator: TypeEvaluator<Any!>!, vararg values: Any!)",
      "desc": "Constructs and returns a PropertyValuesHolder with a given property name and set of Object values.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PropertyValuesHolder",
      "code": "ofObject(propertyName: String!, converter: TypeConverter<PointF!, *>!, path: Path!)",
      "desc": "Constructs and returns a PropertyValuesHolder with a given property name and a Path along which the values should be animated.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PropertyValuesHolder",
      "code": "ofObject(property: Property<Any!, Any!>!, evaluator: TypeEvaluator<V>!, vararg values: V)",
      "desc": "Constructs and returns a PropertyValuesHolder with a given property and set of Object values.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PropertyValuesHolder",
      "code": "ofObject(property: Property<*, V>!, converter: TypeConverter<T, V>!, evaluator: TypeEvaluator<T>!, vararg values: T)",
      "desc": "Constructs and returns a PropertyValuesHolder with a given property and set of Object values.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PropertyValuesHolder",
      "code": "ofObject(property: Property<*, V>!, converter: TypeConverter<PointF!, V>!, path: Path!)",
      "desc": "Constructs and returns a PropertyValuesHolder with a given property and a Path along which the values should be animated.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setConverter(converter: TypeConverter<Any!, Any!>!)",
      "desc": "Sets the converter to convert from the values type to the setter's parameter type."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setEvaluator(evaluator: TypeEvaluator<Any!>!)",
      "desc": "The TypeEvaluator will be automatically determined based on the type of values supplied to PropertyValuesHolder."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFloatValues(vararg values: Float)",
      "desc": "Set the animated values for this object to this set of floats."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setIntValues(vararg values: Int)",
      "desc": "Set the animated values for this object to this set of ints."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setKeyframes(vararg values: Keyframe!)",
      "desc": "Set the animated values for this object to this set of Keyframes."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setObjectValues(vararg values: Any!)",
      "desc": "Set the animated values for this object to this set of Objects."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setProperty(property: Property<Any!, Any!>!)",
      "desc": "Sets the property that will be animated."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPropertyName(propertyName: String!)",
      "desc": "Sets the name of the property that will be animated."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": ""
    }
  ]
}