{
  "path": "java.util",
  "name": "BitSet",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()\n            Creates a new bit set."
    },
    {
      "type": "ctor",
      "ctor": "<init>(nbits: Int)\n            Creates a bit set whose initial size is large enough to explicitly represent bits with indices in the range 0 through nbits-1."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "and(set: BitSet!)",
      "desc": "Performs a logical AND of this target bit set with the argument bit set."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "andNot(set: BitSet!)",
      "desc": "Clears all of the bits in this BitSet whose corresponding bit is set in the specified BitSet."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "cardinality()",
      "desc": "Returns the number of bits set to true in this BitSet."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "clear(bitIndex: Int)",
      "desc": "Sets the bit specified by the index to false."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "clear(fromIndex: Int, toIndex: Int)",
      "desc": "Sets the bits from the specified fromIndex (inclusive) to the specified toIndex (exclusive) to false."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "clear()",
      "desc": "Sets all of the bits in this BitSet to false."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "clone()",
      "desc": "Cloning this BitSet produces a new BitSet that is equal to it."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Compares this object against the specified object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "flip(bitIndex: Int)",
      "desc": "Sets the bit at the specified index to the complement of its current value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "flip(fromIndex: Int, toIndex: Int)",
      "desc": "Sets each bit from the specified fromIndex (inclusive) to the specified toIndex (exclusive) to the complement of its current value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "get(bitIndex: Int)",
      "desc": "Returns the value of the bit with the specified index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "BitSet",
      "code": "get(fromIndex: Int, toIndex: Int)",
      "desc": "Returns a new BitSet composed of bits from this BitSet from fromIndex (inclusive) to toIndex (exclusive).",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Returns the hash code value for this bit set."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "intersects(set: BitSet!)",
      "desc": "Returns true if the specified BitSet has any bits set to true that are also set to true in this BitSet."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isEmpty()",
      "desc": "Returns true if this BitSet contains no bits that are set to true."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "length()",
      "desc": "Returns the \"logical size\" of this BitSet: the index of the highest set bit in the BitSet plus one."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "nextClearBit(fromIndex: Int)",
      "desc": "Returns the index of the first bit that is set to false that occurs on or after the specified starting index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "nextSetBit(fromIndex: Int)",
      "desc": "Returns the index of the first bit that is set to true that occurs on or after the specified starting index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "or(set: BitSet!)",
      "desc": "Performs a logical OR of this bit set with the bit set argument."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "previousClearBit(fromIndex: Int)",
      "desc": "Returns the index of the nearest bit that is set to false that occurs on or before the specified starting index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "previousSetBit(fromIndex: Int)",
      "desc": "Returns the index of the nearest bit that is set to true that occurs on or before the specified starting index."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "set(bitIndex: Int)",
      "desc": "Sets the bit at the specified index to true."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "set(bitIndex: Int, value: Boolean)",
      "desc": "Sets the bit at the specified index to the specified value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "set(fromIndex: Int, toIndex: Int)",
      "desc": "Sets the bits from the specified fromIndex (inclusive) to the specified toIndex (exclusive) to true."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "set(fromIndex: Int, toIndex: Int, value: Boolean)",
      "desc": "Sets the bits from the specified fromIndex (inclusive) to the specified toIndex (exclusive) to the specified value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "size()",
      "desc": "Returns the number of bits of space actually in use by this BitSet to represent bit values."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "IntStream",
      "code": "stream()",
      "desc": "Returns a stream of indices for which this BitSet contains a bit in the set state.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ByteArray",
      "code": "toByteArray()",
      "desc": "Returns a new byte array containing all the bits in this bit set.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "LongArray",
      "code": "toLongArray()",
      "desc": "Returns a new long array containing all the bits in this bit set.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns a string representation of this bit set."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "BitSet",
      "code": "valueOf(longs: LongArray!)",
      "desc": "Returns a new bit set containing all the bits in the given long array.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "BitSet",
      "code": "valueOf(lb: LongBuffer!)",
      "desc": "Returns a new bit set containing all the bits in the given long buffer between its position and limit.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "BitSet",
      "code": "valueOf(bytes: ByteArray!)",
      "desc": "Returns a new bit set containing all the bits in the given byte array.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "BitSet",
      "code": "valueOf(bb: ByteBuffer!)",
      "desc": "Returns a new bit set containing all the bits in the given byte buffer between its position and limit.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "xor(set: BitSet!)",
      "desc": "Performs a logical XOR of this bit set with the bit set argument."
    }
  ]
}