{
  "path": "java.io",
  "name": "ByteArrayInputStream",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(buf: ByteArray!)\n            Creates a ByteArrayInputStream so that it uses buf as its buffer array."
    },
    {
      "type": "ctor",
      "ctor": "<init>(buf: ByteArray!, offset: Int, length: Int)\n            Creates ByteArrayInputStream that uses buf as its buffer array."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "available()",
      "desc": "Returns the number of remaining bytes that can be read (or skipped over) from this input stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "close()",
      "desc": "Closing a ByteArrayInputStream has no effect."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "mark(readAheadLimit: Int)",
      "desc": "Set the current marked position in the stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "markSupported()",
      "desc": "Tests if this InputStream supports mark/reset."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "read()",
      "desc": "Reads the next byte of data from this input stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "read(b: ByteArray!, off: Int, len: Int)",
      "desc": "Reads up to len bytes of data into an array of bytes from this input stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "reset()",
      "desc": "Resets the buffer to the marked position."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "skip(n: Long)",
      "desc": "Skips n bytes of input from this input stream."
    },
    {
      "type": "inherited-methods",
      "from": "InputStream"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "read(b: ByteArray!)"
    },
    {
      "type": "inherited-methods",
      "from": "b"
    },
    {
      "type": "inherited-methods",
      "from": "b"
    },
    {
      "type": "inherited-methods",
      "from": "0"
    },
    {
      "type": "inherited-methods",
      "from": "-1"
    },
    {
      "type": "inherited-methods",
      "from": "b"
    },
    {
      "type": "inherited-methods",
      "from": "b[0]"
    },
    {
      "type": "inherited-methods",
      "from": "b[1]"
    },
    {
      "type": "inherited-methods",
      "from": "b"
    },
    {
      "type": "inherited-methods",
      "from": "b[0]"
    },
    {
      "type": "inherited-methods",
      "from": "b["
    },
    {
      "type": "inherited-methods",
      "from": "-1]"
    },
    {
      "type": "inherited-methods",
      "from": "b["
    },
    {
      "type": "inherited-methods",
      "from": "]"
    },
    {
      "type": "inherited-methods",
      "from": "b[b.length-1]"
    },
    {
      "type": "inherited-methods",
      "from": "read(b)"
    },
    {
      "type": "inherited-methods",
      "from": "InputStream"
    }
  ]
}