{
  "path": "java.nio.channels",
  "name": "Channels",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "ReadableByteChannel",
      "code": "newChannel(in: InputStream!)",
      "desc": "Constructs a channel that reads bytes from the given stream.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "WritableByteChannel",
      "code": "newChannel(out: OutputStream!)",
      "desc": "Constructs a channel that writes bytes to the given stream.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "InputStream",
      "code": "newInputStream(ch: ReadableByteChannel!)",
      "desc": "Constructs a stream that reads bytes from the given channel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "InputStream",
      "code": "newInputStream(ch: AsynchronousByteChannel!)",
      "desc": "Constructs a stream that reads bytes from the given channel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "OutputStream",
      "code": "newOutputStream(ch: WritableByteChannel!)",
      "desc": "Constructs a stream that writes bytes to the given channel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "OutputStream",
      "code": "newOutputStream(ch: AsynchronousByteChannel!)",
      "desc": "Constructs a stream that writes bytes to the given channel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Reader",
      "code": "newReader(ch: ReadableByteChannel!, dec: CharsetDecoder!, minBufferCap: Int)",
      "desc": "Constructs a reader that decodes bytes from the given channel using the given decoder.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Reader",
      "code": "newReader(ch: ReadableByteChannel!, csName: String!)",
      "desc": "Constructs a reader that decodes bytes from the given channel according to the named charset.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Writer",
      "code": "newWriter(ch: WritableByteChannel!, enc: CharsetEncoder!, minBufferCap: Int)",
      "desc": "Constructs a writer that encodes characters using the given encoder and writes the resulting bytes to the given channel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Writer",
      "code": "newWriter(ch: WritableByteChannel!, csName: String!)",
      "desc": "Constructs a writer that encodes characters according to the named charset and writes the resulting bytes to the given channel.",
      "symbol": "!"
    }
  ]
}