{
  "path": "java.util",
  "name": "HashSet",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()\n            Constructs a new, empty set; the backing HashMap instance has default initial capacity (16) and load factor (0.75)."
    },
    {
      "type": "ctor",
      "ctor": "<init>(c: MutableCollection<out E>)\n            Constructs a new set containing the elements in the specified collection."
    },
    {
      "type": "ctor",
      "ctor": "<init>(initialCapacity: Int, loadFactor: Float)\n            Constructs a new, empty set; the backing HashMap instance has the specified initial capacity and the specified load factor."
    },
    {
      "type": "ctor",
      "ctor": "<init>(initialCapacity: Int)\n            Constructs a new, empty set; the backing HashMap instance has the specified initial capacity and default load factor (0.75)."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "add(element: E)",
      "desc": "Adds the specified element to this set if it is not already present."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "clear()",
      "desc": "Removes all of the elements from this set."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "clone()",
      "desc": "Returns a shallow copy of this HashSet instance: the elements themselves are not cloned."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "contains(element: E)",
      "desc": "Returns true if this set contains the specified element."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "contains(element: E)",
      "desc": "Returns true if this set contains the specified element."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isEmpty()",
      "desc": "Returns true if this set contains no elements."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableIterator",
      "code": "iterator()",
      "desc": "Returns an iterator over the elements in this set.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "remove(element: E)",
      "desc": "Removes the specified element from this set if it is present."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "remove(element: E)",
      "desc": "Removes the specified element from this set if it is present."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Spliterator",
      "code": "spliterator()",
      "desc": "Creates a late-binding and fail-fast Spliterator over the elements in this set.",
      "symbol": "<"
    },
    {
      "type": "inherited-methods",
      "from": "AbstractCollection"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "add(element: E)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "addAll(elements: Collection<E>)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "clear()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "contains(element: E?)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "containsAll(elements: Collection<E>)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isEmpty()"
    },
    {
      "type": "inherited-methods",
      "from": "MutableIterator<E>"
    },
    {
      "type": "inherited-methods",
      "from": "iterator()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "remove(element: E?)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "retainAll(elements: Collection<E>)"
    },
    {
      "type": "inherited-methods",
      "from": "Array<Any!>"
    },
    {
      "type": "inherited-methods",
      "from": "toArray()"
    },
    {
      "type": "inherited-methods",
      "from": "0"
    },
    {
      "type": "inherited-methods",
      "from": "size"
    },
    {
      "type": "inherited-methods",
      "from": "Array<T>"
    },
    {
      "type": "inherited-methods",
      "from": "toArray(a: Array<T>)"
    },
    {
      "type": "inherited-methods",
      "from": "toArray()"
    },
    {
      "type": "inherited-methods",
      "from": "0"
    },
    {
      "type": "inherited-methods",
      "from": "size"
    },
    {
      "type": "inherited-methods",
      "from": "String"
    },
    {
      "type": "inherited-methods",
      "from": "toString()"
    },
    {
      "type": "inherited-methods",
      "from": "String#valueOf(Object)"
    },
    {
      "type": "inherited-methods",
      "from": "AbstractSet"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "equals(other: Any?)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "hashCode()"
    },
    {
      "type": "inherited-methods",
      "from": "Object#hashCode"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "removeAll(elements: Collection<E>)"
    }
  ]
}