{
  "path": "java.util.logging",
  "name": "LogRecord",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(level: Level!, msg: String!)\n            Construct a LogRecord with the given level and message values."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Level",
      "code": "getLevel()",
      "desc": "Get the logging message level, for example Level.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getLoggerName()",
      "desc": "Get the source Logger's name.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getMessage()",
      "desc": "Get the \"raw\" log message, before localization or formatting.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "getMillis()",
      "desc": "Get event time in milliseconds since 1970."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getParameters()",
      "desc": "Get the parameters to the log message.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ResourceBundle",
      "code": "getResourceBundle()",
      "desc": "Get the localization resource bundle",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getResourceBundleName()",
      "desc": "Get the localization resource bundle name",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "getSequenceNumber()",
      "desc": "Get the sequence number."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getSourceClassName()",
      "desc": "Get the name of the class that (allegedly) issued the logging request.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getSourceMethodName()",
      "desc": "Get the name of the method that (allegedly) issued the logging request.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getThreadID()",
      "desc": "Get an identifier for the thread where the message originated."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Throwable",
      "code": "getThrown()",
      "desc": "Get any throwable associated with the log record.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLevel(level: Level!)",
      "desc": "Set the logging message level, for example Level."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLoggerName(name: String!)",
      "desc": "Set the source Logger's name."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMessage(message: String!)",
      "desc": "Set the \"raw\" log message, before localization or formatting."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMillis(millis: Long)",
      "desc": "Set event time."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setParameters(parameters: Array<Any!>!)",
      "desc": "Set the parameters to the log message."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setResourceBundle(bundle: ResourceBundle!)",
      "desc": "Set the localization resource bundle."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setResourceBundleName(name: String!)",
      "desc": "Set the localization resource bundle name."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSequenceNumber(seq: Long)",
      "desc": "Set the sequence number."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSourceClassName(sourceClassName: String!)",
      "desc": "Set the name of the class that (allegedly) issued the logging request."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSourceMethodName(sourceMethodName: String!)",
      "desc": "Set the name of the method that (allegedly) issued the logging request."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setThreadID(threadID: Int)",
      "desc": "Set an identifier for the thread where the message originated."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setThrown(thrown: Throwable!)",
      "desc": "Set a throwable associated with the log event."
    }
  ]
}