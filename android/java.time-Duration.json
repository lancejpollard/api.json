{
  "path": "java.time",
  "name": "Duration",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Duration",
      "code": "abs()",
      "desc": "Returns a copy of this duration with a positive length.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Temporal",
      "code": "addTo(temporal: Temporal!)",
      "desc": "Adds this duration to the specified temporal object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Duration",
      "code": "between(startInclusive: Temporal!, endExclusive: Temporal!)",
      "desc": "Obtains a Duration representing the duration between two temporal objects.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "compareTo(other: Duration!)",
      "desc": "Compares this duration to the specified Duration."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Duration",
      "code": "dividedBy(divisor: Long)",
      "desc": "Returns a copy of this duration divided by the specified value.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Checks if this duration is equal to the specified Duration."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Duration",
      "code": "from(amount: TemporalAmount!)",
      "desc": "Obtains an instance of Duration from a temporal amount.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "get(unit: TemporalUnit!)",
      "desc": "Gets the value of the requested unit."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getNano()",
      "desc": "Gets the number of nanoseconds within the second in this duration."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "getSeconds()",
      "desc": "Gets the number of seconds in this duration."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "MutableList",
      "code": "getUnits()",
      "desc": "Gets the set of units supported by this duration.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "A hash code for this duration."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isNegative()",
      "desc": "Checks if this duration is negative, excluding zero."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isZero()",
      "desc": "Checks if this duration is zero length."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Duration",
      "code": "minus(duration: Duration!)",
      "desc": "Returns a copy of this duration with the specified duration subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Duration",
      "code": "minus(amountToSubtract: Long, unit: TemporalUnit!)",
      "desc": "Returns a copy of this duration with the specified duration subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Duration",
      "code": "minusDays(daysToSubtract: Long)",
      "desc": "Returns a copy of this duration with the specified duration in standard 24 hour days subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Duration",
      "code": "minusHours(hoursToSubtract: Long)",
      "desc": "Returns a copy of this duration with the specified duration in hours subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Duration",
      "code": "minusMillis(millisToSubtract: Long)",
      "desc": "Returns a copy of this duration with the specified duration in milliseconds subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Duration",
      "code": "minusMinutes(minutesToSubtract: Long)",
      "desc": "Returns a copy of this duration with the specified duration in minutes subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Duration",
      "code": "minusNanos(nanosToSubtract: Long)",
      "desc": "Returns a copy of this duration with the specified duration in nanoseconds subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Duration",
      "code": "minusSeconds(secondsToSubtract: Long)",
      "desc": "Returns a copy of this duration with the specified duration in seconds subtracted.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Duration",
      "code": "multipliedBy(multiplicand: Long)",
      "desc": "Returns a copy of this duration multiplied by the scalar.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Duration",
      "code": "negated()",
      "desc": "Returns a copy of this duration with the length negated.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Duration",
      "code": "of(amount: Long, unit: TemporalUnit!)",
      "desc": "Obtains a Duration representing an amount in the specified unit.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Duration",
      "code": "ofDays(days: Long)",
      "desc": "Obtains a Duration representing a number of standard 24 hour days.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Duration",
      "code": "ofHours(hours: Long)",
      "desc": "Obtains a Duration representing a number of standard hours.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Duration",
      "code": "ofMillis(millis: Long)",
      "desc": "Obtains a Duration representing a number of milliseconds.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Duration",
      "code": "ofMinutes(minutes: Long)",
      "desc": "Obtains a Duration representing a number of standard minutes.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Duration",
      "code": "ofNanos(nanos: Long)",
      "desc": "Obtains a Duration representing a number of nanoseconds.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Duration",
      "code": "ofSeconds(seconds: Long)",
      "desc": "Obtains a Duration representing a number of seconds.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Duration",
      "code": "ofSeconds(seconds: Long, nanoAdjustment: Long)",
      "desc": "Obtains a Duration representing a number of seconds and an adjustment in nanoseconds.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Duration",
      "code": "parse(text: CharSequence!)",
      "desc": "Obtains a Duration from a text string such as PnDTnHnMn.nS.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Duration",
      "code": "plus(duration: Duration!)",
      "desc": "Returns a copy of this duration with the specified duration added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Duration",
      "code": "plus(amountToAdd: Long, unit: TemporalUnit!)",
      "desc": "Returns a copy of this duration with the specified duration added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Duration",
      "code": "plusDays(daysToAdd: Long)",
      "desc": "Returns a copy of this duration with the specified duration in standard 24 hour days added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Duration",
      "code": "plusHours(hoursToAdd: Long)",
      "desc": "Returns a copy of this duration with the specified duration in hours added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Duration",
      "code": "plusMillis(millisToAdd: Long)",
      "desc": "Returns a copy of this duration with the specified duration in milliseconds added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Duration",
      "code": "plusMinutes(minutesToAdd: Long)",
      "desc": "Returns a copy of this duration with the specified duration in minutes added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Duration",
      "code": "plusNanos(nanosToAdd: Long)",
      "desc": "Returns a copy of this duration with the specified duration in nanoseconds added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Duration",
      "code": "plusSeconds(secondsToAdd: Long)",
      "desc": "Returns a copy of this duration with the specified duration in seconds added.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Temporal",
      "code": "subtractFrom(temporal: Temporal!)",
      "desc": "Subtracts this duration from the specified temporal object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "toDays()",
      "desc": "Gets the number of days in this duration."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "toHours()",
      "desc": "Gets the number of hours in this duration."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "toMillis()",
      "desc": "Converts this duration to the total length in milliseconds."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "toMinutes()",
      "desc": "Gets the number of minutes in this duration."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "toNanos()",
      "desc": "Converts this duration to the total length in nanoseconds expressed as a long."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": "A string representation of this duration using ISO-8601 seconds based representation, such as PT8H6M12.345S."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Duration",
      "code": "withNanos(nanoOfSecond: Int)",
      "desc": "Returns a copy of this duration with the specified nano-of-second.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Duration",
      "code": "withSeconds(seconds: Long)",
      "desc": "Returns a copy of this duration with the specified amount of seconds.",
      "symbol": "!"
    }
  ]
}