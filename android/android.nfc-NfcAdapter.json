{
  "path": "android.nfc",
  "name": "NfcAdapter",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_ADAPTER_STATE_CHANGED",
      "desc": "Broadcast Action: The state of the local NFC adapter has been changed."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_NDEF_DISCOVERED",
      "desc": "Intent to start an activity when a tag with NDEF payload is discovered."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_PREFERRED_PAYMENT_CHANGED",
      "desc": "Broadcast Action: Intent to notify if the preferred payment service changed."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_TAG_DISCOVERED",
      "desc": "Intent to start an activity when a tag is discovered."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_TECH_DISCOVERED",
      "desc": "Intent to start an activity when a tag is discovered and activities are registered for the specific technologies on the tag."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_TRANSACTION_DETECTED",
      "desc": "Broadcast Action: Intent to notify an application that a transaction event has occurred on the Secure Element."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_ADAPTER_STATE",
      "desc": "Used as an int extra field in ACTION_ADAPTER_STATE_CHANGED intents to request the current power state."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_AID",
      "desc": "Mandatory byte[] extra field in ACTION_TRANSACTION_DETECTED"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_DATA",
      "desc": "Optional byte[] extra field in ACTION_TRANSACTION_DETECTED"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_ID",
      "desc": "Optional extra containing a byte array containing the ID of the discovered tag for the ACTION_NDEF_DISCOVERED, ACTION_TECH_DISCOVERED, and ACTION_TAG_DISCOVERED intents."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_NDEF_MESSAGES",
      "desc": "Extra containing an array of NdefMessage present on the discovered tag."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_PREFERRED_PAYMENT_CHANGED_REASON",
      "desc": "Mandatory String extra field in ACTION_PREFERRED_PAYMENT_CHANGED Indicates the condition when trigger this event."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_READER_PRESENCE_CHECK_DELAY",
      "desc": "Int Extra for use with enableReaderMode(android.app.Activity,android.nfc.NfcAdapter.ReaderCallback,int,android.os.Bundle)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_SECURE_ELEMENT_NAME",
      "desc": "Mandatory String extra field in ACTION_TRANSACTION_DETECTED Indicates the Secure Element on which the transaction occurred."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_TAG",
      "desc": "Mandatory extra containing the Tag that was discovered for the ACTION_NDEF_DISCOVERED, ACTION_TECH_DISCOVERED, and ACTION_TAG_DISCOVERED intents."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_READER_NFC_A",
      "desc": "Flag for use with enableReaderMode(android.app.Activity,android.nfc.NfcAdapter.ReaderCallback,int,android.os.Bundle)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_READER_NFC_B",
      "desc": "Flag for use with enableReaderMode(android.app.Activity,android.nfc.NfcAdapter.ReaderCallback,int,android.os.Bundle)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_READER_NFC_BARCODE",
      "desc": "Flag for use with enableReaderMode(android.app.Activity,android.nfc.NfcAdapter.ReaderCallback,int,android.os.Bundle)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_READER_NFC_F",
      "desc": "Flag for use with enableReaderMode(android.app.Activity,android.nfc.NfcAdapter.ReaderCallback,int,android.os.Bundle)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_READER_NFC_V",
      "desc": "Flag for use with enableReaderMode(android.app.Activity,android.nfc.NfcAdapter.ReaderCallback,int,android.os.Bundle)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_READER_NO_PLATFORM_SOUNDS",
      "desc": "Flag for use with enableReaderMode(android.app.Activity,android.nfc.NfcAdapter.ReaderCallback,int,android.os.Bundle)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FLAG_READER_SKIP_NDEF_CHECK",
      "desc": "Flag for use with enableReaderMode(android.app.Activity,android.nfc.NfcAdapter.ReaderCallback,int,android.os.Bundle)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PREFERRED_PAYMENT_CHANGED",
      "desc": "User selected another payment application as the preferred payment."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PREFERRED_PAYMENT_LOADED",
      "desc": "Nfc is enabled and the preferred payment aids are registered."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PREFERRED_PAYMENT_UPDATED",
      "desc": "Current preferred payment has issued an update (registered/unregistered new aids or has been updated itself)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "STATE_OFF",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "STATE_ON",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "STATE_TURNING_OFF",
      "desc": ""
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "STATE_TURNING_ON",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "disableForegroundDispatch(activity: Activity!)",
      "desc": "Disable foreground dispatch to the given activity."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "disableForegroundNdefPush(activity: Activity!)",
      "desc": "Disable NDEF message push over P2P."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "disableReaderMode(activity: Activity!)",
      "desc": "Restore the NFC adapter to normal mode of operation: supporting peer-to-peer (Android Beam), card emulation, and polling for all supported tag technologies."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "enableForegroundDispatch(activity: Activity!, intent: PendingIntent!, filters: Array<IntentFilter!>!, techLists: Array<Array<String!>!>!)",
      "desc": "Enable foreground dispatch to the given Activity."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "enableForegroundNdefPush(activity: Activity!, message: NdefMessage!)",
      "desc": "Enable NDEF message push over NFC while this Activity is in the foreground."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "enableReaderMode(activity: Activity!, callback: NfcAdapter.ReaderCallback!, flags: Int, extras: Bundle!)",
      "desc": "Limit the NFC controller to reader mode while this Activity is in the foreground."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "NfcAdapter",
      "code": "getDefaultAdapter(context: Context!)",
      "desc": "Helper to get the default NFC Adapter.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "ignore(tag: Tag!, debounceMs: Int, tagRemovedListener: NfcAdapter.OnTagRemovedListener!, handler: Handler!)",
      "desc": "Signals that you are no longer interested in communicating with an NFC tag for as long as it remains in range."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "invokeBeam(activity: Activity!)",
      "desc": "Manually invoke Android Beam to share data."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isEnabled()",
      "desc": "Return true if this NFC Adapter has any features enabled."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isNdefPushEnabled()",
      "desc": "Return true if the NDEF Push (Android Beam) feature is enabled."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isSecureNfcEnabled()",
      "desc": "Checks Secure NFC feature is enabled."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isSecureNfcSupported()",
      "desc": "Checks if the device supports Secure NFC functionality."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setBeamPushUris(uris: Array<Uri!>!, activity: Activity!)",
      "desc": "Set one or more Uris to send using Android Beam (TM)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setBeamPushUrisCallback(callback: NfcAdapter.CreateBeamUrisCallback!, activity: Activity!)",
      "desc": "Set a callback that will dynamically generate one or more Uris to send using Android Beam (TM)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setNdefPushMessage(message: NdefMessage!, activity: Activity!, vararg activities: Activity!)",
      "desc": "Set a static NdefMessage to send using Android Beam (TM)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setNdefPushMessageCallback(callback: NfcAdapter.CreateNdefMessageCallback!, activity: Activity!, vararg activities: Activity!)",
      "desc": "Set a callback that dynamically generates NDEF messages to send using Android Beam (TM)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setOnNdefPushCompleteCallback(callback: NfcAdapter.OnNdefPushCompleteCallback!, activity: Activity!, vararg activities: Activity!)",
      "desc": "Set a callback on successful Android Beam (TM)."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "CreateBeamUrisCallback",
      "desc": ""
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "CreateNdefMessageCallback",
      "desc": "A callback to be invoked when another NFC device capable of NDEF push (Android Beam) is within range."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnNdefPushCompleteCallback",
      "desc": "A callback to be invoked when the system successfully delivers your NdefMessage to another device."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnTagRemovedListener",
      "desc": "A callback that is invoked when a tag is removed from the field."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "ReaderCallback",
      "desc": "A callback to be invoked when the system finds a tag while the foreground activity is operating in reader mode."
    }
  ]
}