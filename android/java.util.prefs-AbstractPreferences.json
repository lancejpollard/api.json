{
  "path": "java.util.prefs",
  "name": "AbstractPreferences",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "absolutePath()",
      "desc": "Implements the absolutePath method as per the specification in Preferences#absolutePath().",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "addNodeChangeListener(ncl: NodeChangeListener!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "addPreferenceChangeListener(pcl: PreferenceChangeListener!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "childrenNames()",
      "desc": "Implements the children method as per the specification in Preferences#childrenNames().",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "clear()",
      "desc": "Implements the clear method as per the specification in Preferences#clear()."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "exportNode(os: OutputStream!)",
      "desc": "Implements the exportNode method as per the specification in Preferences#exportNode(OutputStream)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "exportSubtree(os: OutputStream!)",
      "desc": "Implements the exportSubtree method as per the specification in Preferences#exportSubtree(OutputStream)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "flush()",
      "desc": "Implements the flush method as per the specification in Preferences#flush()."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "get(key: String!, def: String!)",
      "desc": "Implements the get method as per the specification in Preferences#get(String,String).",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getBoolean(key: String!, def: Boolean)",
      "desc": "Implements the getBoolean method as per the specification in Preferences#getBoolean(String,boolean)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ByteArray",
      "code": "getByteArray(key: String!, def: ByteArray!)",
      "desc": "Implements the getByteArray method as per the specification in Preferences#getByteArray(String,byte[]).",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Double",
      "code": "getDouble(key: String!, def: Double)",
      "desc": "Implements the getDouble method as per the specification in Preferences#getDouble(String,double)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Float",
      "code": "getFloat(key: String!, def: Float)",
      "desc": "Implements the getFloat method as per the specification in Preferences#getFloat(String,float)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getInt(key: String!, def: Int)",
      "desc": "Implements the getInt method as per the specification in Preferences#getInt(String,int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "getLong(key: String!, def: Long)",
      "desc": "Implements the getLong method as per the specification in Preferences#getLong(String,long)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isUserNode()",
      "desc": "Implements the isUserNode method as per the specification in Preferences#isUserNode()."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "keys()",
      "desc": "Implements the keys method as per the specification in Preferences#keys().",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "name()",
      "desc": "Implements the name method as per the specification in Preferences#name().",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Preferences",
      "code": "node(path: String!)",
      "desc": "Implements the node method as per the specification in Preferences#node(String).",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "nodeExists(path: String!)",
      "desc": "Implements the nodeExists method as per the specification in Preferences#nodeExists(String)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Preferences",
      "code": "parent()",
      "desc": "Implements the parent method as per the specification in Preferences#parent().",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "put(key: String!, value: String!)",
      "desc": "Implements the put method as per the specification in Preferences#put(String,String)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "putBoolean(key: String!, value: Boolean)",
      "desc": "Implements the putBoolean method as per the specification in Preferences#putBoolean(String,boolean)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "putByteArray(key: String!, value: ByteArray!)",
      "desc": "Implements the putByteArray method as per the specification in Preferences#putByteArray(String,byte[])."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "putDouble(key: String!, value: Double)",
      "desc": "Implements the putDouble method as per the specification in Preferences#putDouble(String,double)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "putFloat(key: String!, value: Float)",
      "desc": "Implements the putFloat method as per the specification in Preferences#putFloat(String,float)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "putInt(key: String!, value: Int)",
      "desc": "Implements the putInt method as per the specification in Preferences#putInt(String,int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "putLong(key: String!, value: Long)",
      "desc": "Implements the putLong method as per the specification in Preferences#putLong(String,long)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "remove(key: String!)",
      "desc": "Implements the remove(String) method as per the specification in Preferences#remove(String)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "removeNode()",
      "desc": "Implements the removeNode() method as per the specification in Preferences#removeNode()."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "removeNodeChangeListener(ncl: NodeChangeListener!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "removePreferenceChangeListener(pcl: PreferenceChangeListener!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "sync()",
      "desc": "Implements the sync method as per the specification in Preferences#sync()."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns the absolute path name of this preferences node."
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "identifier": "Array",
      "code": "cachedChildren()",
      "desc": "Returns all known unremoved children of this node.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "AbstractPreferences",
      "code": "childSpi(name: String!)",
      "desc": "Returns the named child of this preference node, creating it if it does not already exist.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Array",
      "code": "childrenNamesSpi()",
      "desc": "Returns the names of the children of this preference node.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "flushSpi()",
      "desc": "This method is invoked with this node locked."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "AbstractPreferences",
      "code": "getChild(nodeName: String!)",
      "desc": "Returns the named child if it exists, or null if it does not.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "String",
      "code": "getSpi(key: String!)",
      "desc": "Return the value associated with the specified key at this preference node, or null if there is no association for this key, or the association cannot be determined at this time.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isRemoved()",
      "desc": "Returns true iff this node (or an ancestor) has been removed with the removeNode() method."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Array",
      "code": "keysSpi()",
      "desc": "Returns all of the keys that have an associated value in this preference node.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "putSpi(key: String!, value: String!)",
      "desc": "Put the given key-value association into this preference node."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "removeNodeSpi()",
      "desc": "Removes this preference node, invalidating it and any preferences that it contains."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "removeSpi(key: String!)",
      "desc": "Remove the association (if any) for the specified key at this preference node."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "syncSpi()",
      "desc": "This method is invoked with this node locked."
    },
    {
      "type": "inherited-constants",
      "from": "Preferences"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "MAX_KEY_LENGTH"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "MAX_NAME_LENGTH"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "MAX_VALUE_LENGTH"
    },
    {
      "type": "inherited-methods",
      "from": "Preferences"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "importPreferences(is: InputStream!)"
    },
    {
      "type": "inherited-methods",
      "from": "exportNode(java.io.OutputStream)"
    },
    {
      "type": "inherited-methods",
      "from": "exportSubtree(java.io.OutputStream)"
    },
    {
      "type": "inherited-methods",
      "from": "node(java.lang.String)"
    },
    {
      "type": "inherited-methods",
      "from": "put(java.lang.String,java.lang.String)"
    },
    {
      "type": "inherited-methods",
      "from": "Preferences!"
    },
    {
      "type": "inherited-methods",
      "from": "systemNodeForPackage(c: Class<*>!)"
    },
    {
      "type": "inherited-methods",
      "from": "Preferences!"
    },
    {
      "type": "inherited-methods",
      "from": "systemRoot()"
    },
    {
      "type": "inherited-methods",
      "from": "Preferences!"
    },
    {
      "type": "inherited-methods",
      "from": "userNodeForPackage(c: Class<*>!)"
    },
    {
      "type": "inherited-methods",
      "from": "Preferences!"
    },
    {
      "type": "inherited-methods",
      "from": "userRoot()"
    }
  ]
}