{
  "path": "java.lang.invoke",
  "name": "MethodHandle",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MethodHandle",
      "code": "asCollector(arrayType: Class<*>!, arrayLength: Int)",
      "desc": "Makes an array-collecting method handle, which accepts a given number of trailing positional arguments and collects them into an array argument.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MethodHandle",
      "code": "asFixedArity()",
      "desc": "Makes a fixed arity method handle which is otherwise equivalent to the current method handle.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MethodHandle",
      "code": "asSpreader(arrayType: Class<*>!, arrayLength: Int)",
      "desc": "Makes an array-spreading method handle, which accepts a trailing array argument and spreads its elements as positional arguments.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MethodHandle",
      "code": "asType(newType: MethodType!)",
      "desc": "Produces an adapter method handle which adapts the type of the current method handle to a new type.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MethodHandle",
      "code": "asVarargsCollector(arrayType: Class<*>!)",
      "desc": "Makes a variable arity adapter which is able to accept any number of trailing positional arguments and collect them into an array argument.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MethodHandle",
      "code": "bindTo(x: Any!)",
      "desc": "Binds a value x to the first argument of a method handle, without invoking it.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Any",
      "code": "invoke(vararg args: Any!)",
      "desc": "Invokes the method handle, allowing any caller type descriptor, and optionally performing conversions on arguments and return values.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Any",
      "code": "invokeExact(vararg args: Any!)",
      "desc": "Invokes the method handle, allowing any caller type descriptor, but requiring an exact type match.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "invokeWithArguments(vararg arguments: Any!)",
      "desc": "Performs a variable arity invocation, passing the arguments in the given list to the method handle, as if via an inexact invoke from a call site which mentions only the type Object, and whose arity is the length of the argument list.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "invokeWithArguments(arguments: MutableList<*>!)",
      "desc": "Performs a variable arity invocation, passing the arguments in the given array to the method handle, as if via an inexact invoke from a call site which mentions only the type Object, and whose arity is the length of the argument array.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isVarargsCollector()",
      "desc": "Determines if this method handle supports variable arity calls."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns a string representation of the method handle, starting with the string \"MethodHandle\" and ending with the string representation of the method handle's type."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MethodType",
      "code": "type()",
      "desc": "Reports the type of this method handle.",
      "symbol": "!"
    }
  ]
}