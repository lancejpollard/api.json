{
  "path": "java.sql",
  "name": "SQLIntegrityConstraintViolationException",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()\n            Constructs a SQLIntegrityConstraintViolationException object."
    },
    {
      "type": "ctor",
      "ctor": "<init>(reason: String!)\n            Constructs a SQLIntegrityConstraintViolationException with a given reason."
    },
    {
      "type": "ctor",
      "ctor": "<init>(reason: String!, SQLState: String!)\n            Constructs a SQLIntegrityConstraintViolationException object with a given reason and SQLState."
    },
    {
      "type": "ctor",
      "ctor": "<init>(reason: String!, SQLState: String!, vendorCode: Int)\n            Constructs a SQLIntegrityConstraintViolationException object with a given reason, SQLState and vendorCode."
    },
    {
      "type": "ctor",
      "ctor": "<init>(cause: Throwable!)\n            Constructs an SQLIntegrityConstraintViolationException object with a given cause."
    },
    {
      "type": "ctor",
      "ctor": "<init>(reason: String!, cause: Throwable!)\n            Constructs a SQLIntegrityConstraintViolationException object with a given reason and cause."
    },
    {
      "type": "ctor",
      "ctor": "<init>(reason: String!, SQLState: String!, cause: Throwable!)\n            Constructs a SQLIntegrityConstraintViolationException object with a given reason, SQLState and cause."
    },
    {
      "type": "ctor",
      "ctor": "<init>(reason: String!, SQLState: String!, vendorCode: Int, cause: Throwable!)\n            Constructs a SQLIntegrityConstraintViolationException object with a given reason, SQLState, vendorCode and cause."
    }
  ]
}