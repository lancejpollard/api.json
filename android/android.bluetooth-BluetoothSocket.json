{
  "path": "android.bluetooth",
  "name": "BluetoothSocket",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_L2CAP",
      "desc": "L2CAP socket"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_RFCOMM",
      "desc": "RFCOMM socket"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TYPE_SCO",
      "desc": "SCO socket"
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "close()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "connect()",
      "desc": "Attempt to connect to a remote device."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getConnectionType()",
      "desc": "Get the type of the underlying connection."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "InputStream",
      "code": "getInputStream()",
      "desc": "Get the input stream associated with this socket.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getMaxReceivePacketSize()",
      "desc": "Get the maximum supported Receive packet size for the underlying transport."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getMaxTransmitPacketSize()",
      "desc": "Get the maximum supported Transmit packet size for the underlying transport."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "OutputStream",
      "code": "getOutputStream()",
      "desc": "Get the output stream associated with this socket.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "BluetoothDevice",
      "code": "getRemoteDevice()",
      "desc": "Get the remote device this socket is connecting, or connected, to.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isConnected()",
      "desc": "Get the connection status of this socket, ie, whether there is an active connection with remote device."
    }
  ]
}