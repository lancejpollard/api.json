{
  "path": "android.widget",
  "name": "RemoteViews",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_SHARED_ELEMENT_BOUNDS",
      "desc": "The intent extra that contains the bounds for all shared elements."
    },
    {
      "type": "ctor",
      "ctor": "<init>(packageName: String!, layoutId: Int)\n            Create a new RemoteViews object that will display the views contained in the specified layout file."
    },
    {
      "type": "ctor",
      "ctor": "<init>(landscape: RemoteViews!, portrait: RemoteViews!)\n            Create a new RemoteViews object that will inflate as the specified landspace or portrait RemoteViews, depending on the current configuration."
    },
    {
      "type": "ctor",
      "ctor": "<init>(src: RemoteViews!)\n            Creates a copy of another RemoteViews."
    },
    {
      "type": "ctor",
      "ctor": "<init>(parcel: Parcel!)\n            Reads a RemoteViews object from a parcel."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "addView(viewId: Int, nestedView: RemoteViews!)",
      "desc": "Equivalent to calling ViewGroup#addView(View) after inflating the given RemoteViews."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View",
      "code": "apply(context: Context!, parent: ViewGroup!)",
      "desc": "Inflates the view hierarchy represented by this object and applies all of the actions.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "RemoteViews",
      "code": "clone()",
      "desc": "Returns a deep copy of the RemoteViews object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "describeContents()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getLayoutId()",
      "desc": "Returns the layout id of the root layout associated with this RemoteViews."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getPackage()",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onLoadClass(clazz: Class<Any!>!)",
      "desc": "Used to restrict the views which can be inflated"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "reapply(context: Context!, v: View!)",
      "desc": "Applies all of the actions to the provided view."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "removeAllViews(viewId: Int)",
      "desc": "Equivalent to calling ViewGroup#removeAllViews()."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAccessibilityTraversalAfter(viewId: Int, nextId: Int)",
      "desc": "Equivalent to calling android.view.View#setAccessibilityTraversalAfter(int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAccessibilityTraversalBefore(viewId: Int, nextId: Int)",
      "desc": "Equivalent to calling android.view.View#setAccessibilityTraversalBefore(int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setBitmap(viewId: Int, methodName: String!, value: Bitmap!)",
      "desc": "Call a method taking one Bitmap on a view in the layout for this RemoteViews."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setBoolean(viewId: Int, methodName: String!, value: Boolean)",
      "desc": "Call a method taking one boolean on a view in the layout for this RemoteViews."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setBundle(viewId: Int, methodName: String!, value: Bundle!)",
      "desc": "Call a method taking one Bundle on a view in the layout for this RemoteViews."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setByte(viewId: Int, methodName: String!, value: Byte)",
      "desc": "Call a method taking one byte on a view in the layout for this RemoteViews."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setChar(viewId: Int, methodName: String!, value: Char)",
      "desc": "Call a method taking one char on a view in the layout for this RemoteViews."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCharSequence(viewId: Int, methodName: String!, value: CharSequence!)",
      "desc": "Call a method taking one CharSequence on a view in the layout for this RemoteViews."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setChronometer(viewId: Int, base: Long, format: String!, started: Boolean)",
      "desc": "Equivalent to calling Chronometer#setBase, Chronometer#setFormat, and Chronometer#start or Chronometer#stop."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setChronometerCountDown(viewId: Int, isCountDown: Boolean)",
      "desc": "Equivalent to calling Chronometer#setCountDown(boolean) on the chronometer with the given viewId."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setContentDescription(viewId: Int, contentDescription: CharSequence!)",
      "desc": "Equivalent to calling View."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setDisplayedChild(viewId: Int, childIndex: Int)",
      "desc": "Equivalent to calling AdapterViewAnimator#setDisplayedChild(int)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setDouble(viewId: Int, methodName: String!, value: Double)",
      "desc": "Call a method taking one double on a view in the layout for this RemoteViews."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setEmptyView(viewId: Int, emptyViewId: Int)",
      "desc": "Equivalent to calling AdapterView#setEmptyView(View)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFloat(viewId: Int, methodName: String!, value: Float)",
      "desc": "Call a method taking one float on a view in the layout for this RemoteViews."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setIcon(viewId: Int, methodName: String!, value: Icon!)",
      "desc": "Call a method taking one Icon on a view in the layout for this RemoteViews."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setImageViewBitmap(viewId: Int, bitmap: Bitmap!)",
      "desc": "Equivalent to calling ImageView#setImageBitmap(Bitmap)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setImageViewIcon(viewId: Int, icon: Icon!)",
      "desc": "Equivalent to calling ImageView#setImageIcon(Icon)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setImageViewResource(viewId: Int, srcId: Int)",
      "desc": "Equivalent to calling ImageView#setImageResource(int)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setImageViewUri(viewId: Int, uri: Uri!)",
      "desc": "Equivalent to calling ImageView#setImageURI(Uri)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setInt(viewId: Int, methodName: String!, value: Int)",
      "desc": "Call a method taking one int on a view in the layout for this RemoteViews."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setIntent(viewId: Int, methodName: String!, value: Intent!)",
      "desc": "Call a method taking one Intent on a view in the layout for this RemoteViews."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLabelFor(viewId: Int, labeledId: Int)",
      "desc": "Equivalent to calling View#setLabelFor(int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLightBackgroundLayoutId(layoutId: Int)",
      "desc": "Provides an alternate layout ID, which can be used to inflate this view."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLong(viewId: Int, methodName: String!, value: Long)",
      "desc": "Call a method taking one long on a view in the layout for this RemoteViews."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOnClickFillInIntent(viewId: Int, fillInIntent: Intent!)",
      "desc": "When using collections (eg."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOnClickPendingIntent(viewId: Int, pendingIntent: PendingIntent!)",
      "desc": "Equivalent to calling android.view.View#setOnClickListener(android.view.View.OnClickListener) to launch the provided PendingIntent."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOnClickResponse(viewId: Int, response: RemoteViews.RemoteResponse)",
      "desc": "Equivalent of calling android.view.View#setOnClickListener(android.view.View.OnClickListener) to launch the provided RemoteResponse."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPendingIntentTemplate(viewId: Int, pendingIntentTemplate: PendingIntent!)",
      "desc": "When using collections (eg."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setProgressBar(viewId: Int, max: Int, progress: Int, indeterminate: Boolean)",
      "desc": "Equivalent to calling ProgressBar#setMax, ProgressBar#setProgress, and ProgressBar#setIndeterminate If indeterminate is true, then the values for max and progress are ignored."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setRelativeScrollPosition(viewId: Int, offset: Int)",
      "desc": "Equivalent to calling ListView#smoothScrollByOffset(int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setRemoteAdapter(appWidgetId: Int, viewId: Int, intent: Intent!)",
      "desc": "Equivalent to calling android.widget.AbsListView#setRemoteViewsAdapter(Intent)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setRemoteAdapter(viewId: Int, intent: Intent!)",
      "desc": "Equivalent to calling android.widget.AbsListView#setRemoteViewsAdapter(Intent)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setScrollPosition(viewId: Int, position: Int)",
      "desc": "Equivalent to calling ListView#smoothScrollToPosition(int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setShort(viewId: Int, methodName: String!, value: Short)",
      "desc": "Call a method taking one short on a view in the layout for this RemoteViews."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setString(viewId: Int, methodName: String!, value: String!)",
      "desc": "Call a method taking one String on a view in the layout for this RemoteViews."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextColor(viewId: Int, color: Int)",
      "desc": "Equivalent to calling android.widget.TextView#setTextColor(int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextViewCompoundDrawables(viewId: Int, left: Int, top: Int, right: Int, bottom: Int)",
      "desc": "Equivalent to calling TextView#setCompoundDrawablesWithIntrinsicBounds(int, int, int, int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextViewCompoundDrawablesRelative(viewId: Int, start: Int, top: Int, end: Int, bottom: Int)",
      "desc": "Equivalent to calling TextView#setCompoundDrawablesRelativeWithIntrinsicBounds(int, int, int, int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextViewText(viewId: Int, text: CharSequence!)",
      "desc": "Equivalent to calling TextView#setText(CharSequence)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTextViewTextSize(viewId: Int, units: Int, size: Float)",
      "desc": "Equivalent to calling TextView#setTextSize(int, float)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setUri(viewId: Int, methodName: String!, value: Uri!)",
      "desc": "Call a method taking one Uri on a view in the layout for this RemoteViews."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setViewPadding(viewId: Int, left: Int, top: Int, right: Int, bottom: Int)",
      "desc": "Equivalent to calling android.view.View#setPadding(int, int, int, int)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setViewVisibility(viewId: Int, visibility: Int)",
      "desc": "Equivalent to calling View#setVisibility(int)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "showNext(viewId: Int)",
      "desc": "Equivalent to calling AdapterViewAnimator#showNext()"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "showPrevious(viewId: Int)",
      "desc": "Equivalent to calling AdapterViewAnimator#showPrevious()"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "writeToParcel(dest: Parcel!, flags: Int)",
      "desc": ""
    },
    {
      "type": "inherited-constants",
      "from": "Parcelable"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "CONTENTS_FILE_DESCRIPTOR"
    },
    {
      "type": "inherited-constants",
      "from": "describeContents()"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "PARCELABLE_WRITE_RETURN_VALUE"
    },
    {
      "type": "inherited-constants",
      "from": "writeToParcel"
    },
    {
      "type": "inherited-constants",
      "from": "Parcelable someFunction()"
    },
    {
      "type": "inherited-constants",
      "from": "void someFunction(out Parcelable)"
    },
    {
      "type": "inherited-constants",
      "from": "void someFunction(inout Parcelable)"
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "open",
      "code": "ActionException",
      "desc": "Exception to send when something goes wrong executing an action"
    },
    {
      "type": "nested-classes",
      "keyword": "open",
      "code": "RemoteResponse",
      "desc": "Class representing a response to an action performed on any element of a RemoteViews."
    },
    {
      "type": "nested-classes",
      "code": "RemoteView",
      "desc": "This annotation indicates that a subclass of View is allowed to be used with the RemoteViews mechanism."
    }
  ]
}