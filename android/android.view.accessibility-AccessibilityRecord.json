{
  "path": "android.view.accessibility",
  "name": "AccessibilityRecord",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()\n            Creates a new AccessibilityRecord."
    },
    {
      "type": "ctor",
      "ctor": "<init>(record: AccessibilityRecord)\n            Copy constructor."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getAddedCount()",
      "desc": "Gets the number of added characters."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CharSequence",
      "code": "getBeforeText()",
      "desc": "Gets the text before a change.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CharSequence",
      "code": "getClassName()",
      "desc": "Gets the class name of the source.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CharSequence",
      "code": "getContentDescription()",
      "desc": "Gets the description of the source.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getCurrentItemIndex()",
      "desc": "Gets the index of the source in the list of items the can be visited."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getFromIndex()",
      "desc": "Gets the index of the first character of the changed sequence, or the beginning of a text selection or the index of the first visible item when scrolling."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getItemCount()",
      "desc": "Gets the number of items that can be visited."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getMaxScrollX()",
      "desc": "Gets the max scroll offset of the source left edge in pixels."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getMaxScrollY()",
      "desc": "Gets the max scroll offset of the source top edge in pixels."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Parcelable",
      "code": "getParcelableData()",
      "desc": "Gets the Parcelable data.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getRemovedCount()",
      "desc": "Gets the number of removed characters."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getScrollDeltaX()",
      "desc": "Gets the difference in pixels between the horizontal position before the scroll and the current horizontal position"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getScrollDeltaY()",
      "desc": "Gets the difference in pixels between the vertical position before the scroll and the current vertical position"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getScrollX()",
      "desc": "Gets the scroll offset of the source left edge in pixels."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getScrollY()",
      "desc": "Gets the scroll offset of the source top edge in pixels."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "AccessibilityNodeInfo",
      "code": "getSource()",
      "desc": "Gets the AccessibilityNodeInfo of the event source.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableList",
      "code": "getText()",
      "desc": "Gets the text of the event.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getToIndex()",
      "desc": "Gets the index of text selection end or the index of the last visible item when scrolling."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getWindowId()",
      "desc": "Gets the id of the window from which the event comes from."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isChecked()",
      "desc": "Gets if the source is checked."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isEnabled()",
      "desc": "Gets if the source is enabled."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isFullScreen()",
      "desc": "Gets if the source is taking the entire screen."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isPassword()",
      "desc": "Gets if the source is a password field."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isScrollable()",
      "desc": "Gets if the source is scrollable."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "AccessibilityRecord",
      "code": "obtain(record: AccessibilityRecord!)",
      "desc": "Returns a cached instance if such is available or a new one is instantiated.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "AccessibilityRecord",
      "code": "obtain()",
      "desc": "Returns a cached instance if such is available or a new one is instantiated.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "recycle()",
      "desc": "Return an instance back to be reused."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAddedCount(addedCount: Int)",
      "desc": "Sets the number of added characters."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setBeforeText(beforeText: CharSequence!)",
      "desc": "Sets the text before a change."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setChecked(isChecked: Boolean)",
      "desc": "Sets if the source is checked."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setClassName(className: CharSequence!)",
      "desc": "Sets the class name of the source."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setContentDescription(contentDescription: CharSequence!)",
      "desc": "Sets the description of the source."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCurrentItemIndex(currentItemIndex: Int)",
      "desc": "Sets the index of the source in the list of items that can be visited."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setEnabled(isEnabled: Boolean)",
      "desc": "Sets if the source is enabled."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFromIndex(fromIndex: Int)",
      "desc": "Sets the index of the first character of the changed sequence or the beginning of a text selection or the index of the first visible item when scrolling."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFullScreen(isFullScreen: Boolean)",
      "desc": "Sets if the source is taking the entire screen."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setItemCount(itemCount: Int)",
      "desc": "Sets the number of items that can be visited."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMaxScrollX(maxScrollX: Int)",
      "desc": "Sets the max scroll offset of the source left edge in pixels."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMaxScrollY(maxScrollY: Int)",
      "desc": "Sets the max scroll offset of the source top edge in pixels."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setParcelableData(parcelableData: Parcelable!)",
      "desc": "Sets the Parcelable data of the event."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPassword(isPassword: Boolean)",
      "desc": "Sets if the source is a password field."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setRemovedCount(removedCount: Int)",
      "desc": "Sets the number of removed characters."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setScrollDeltaX(scrollDeltaX: Int)",
      "desc": "Sets the difference in pixels between the horizontal position before the scroll and the current horizontal position"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setScrollDeltaY(scrollDeltaY: Int)",
      "desc": "Sets the difference in pixels between the vertical position before the scroll and the current vertical position"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setScrollX(scrollX: Int)",
      "desc": "Sets the scroll offset of the source left edge in pixels."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setScrollY(scrollY: Int)",
      "desc": "Sets the scroll offset of the source top edge in pixels."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setScrollable(scrollable: Boolean)",
      "desc": "Sets if the source is scrollable."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSource(source: View!)",
      "desc": "Sets the event source."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSource(root: View?, virtualDescendantId: Int)",
      "desc": "Sets the source to be a virtual descendant of the given root."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setToIndex(toIndex: Int)",
      "desc": "Sets the index of text selection end or the index of the last visible item when scrolling."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": ""
    }
  ]
}