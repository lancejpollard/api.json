{
  "path": "android.appwidget",
  "name": "AppWidgetManager",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_APPWIDGET_BIND",
      "desc": "Activity action to launch from your AppWidgetHost activity when you want to bind an AppWidget to display and bindAppWidgetIdIfAllowed returns false."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_APPWIDGET_CONFIGURE",
      "desc": "Sent when it is time to configure your AppWidget while it is being added to a host."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_APPWIDGET_DELETED",
      "desc": "Sent when an instance of an AppWidget is deleted from its host."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_APPWIDGET_DISABLED",
      "desc": "Sent when the last AppWidget of this provider is removed from the last host."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_APPWIDGET_ENABLED",
      "desc": "Sent when an instance of an AppWidget is added to a host for the first time."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_APPWIDGET_HOST_RESTORED",
      "desc": "Sent to widget hosts after AppWidget state related to the host has been restored from backup."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_APPWIDGET_OPTIONS_CHANGED",
      "desc": "Sent when the custom extras for an AppWidget change."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_APPWIDGET_PICK",
      "desc": "Activity action to launch from your AppWidgetHost activity when you want to pick an AppWidget to display."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_APPWIDGET_RESTORED",
      "desc": "Sent to an AppWidgetProvider after AppWidget state related to that provider has been restored from backup."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "ACTION_APPWIDGET_UPDATE",
      "desc": "Sent when it is time to update your AppWidget."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_APPWIDGET_ID",
      "desc": "An intent extra (int) that contains one appWidgetId."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_APPWIDGET_IDS",
      "desc": "An intent extra that contains multiple appWidgetIds."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_APPWIDGET_OLD_IDS",
      "desc": "An intent extra that contains multiple appWidgetIds."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_APPWIDGET_OPTIONS",
      "desc": "An intent extra which points to a bundle of extra information for a particular widget id."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_APPWIDGET_PREVIEW",
      "desc": "An extra that can be passed to requestPinAppWidget(android.content.ComponentName,android.os.Bundle,android.app.PendingIntent)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_APPWIDGET_PROVIDER",
      "desc": "An intent extra that contains the component name of a AppWidget provider."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_APPWIDGET_PROVIDER_PROFILE",
      "desc": "An intent extra that contains the user handle of the profile under which an AppWidget provider is registered."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_CUSTOM_EXTRAS",
      "desc": "An intent extra to pass to the AppWidget picker containing a java.util.List of android.os.Bundle objects to mix in to the list of AppWidgets that are installed."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_CUSTOM_INFO",
      "desc": "An intent extra to pass to the AppWidget picker containing a java.util.List of AppWidgetProviderInfo objects to mix in to the list of AppWidgets that are installed."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "EXTRA_HOST_ID",
      "desc": "An intent extra attached to the ACTION_APPWIDGET_HOST_RESTORED broadcast, indicating the integer ID of the host whose widgets have just been restored."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "INVALID_APPWIDGET_ID",
      "desc": "A sentinel value that the AppWidget manager will never return as a appWidgetId."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "META_DATA_APPWIDGET_PROVIDER",
      "desc": "Field for the manifest meta-data tag."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "OPTION_APPWIDGET_HOST_CATEGORY",
      "desc": "A bundle extra that hints to the AppWidgetProvider the category of host that owns this this widget."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "OPTION_APPWIDGET_MAX_HEIGHT",
      "desc": "A bundle extra (int) that contains the upper bound on the current width, in dips, of a widget instance."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "OPTION_APPWIDGET_MAX_WIDTH",
      "desc": "A bundle extra (int) that contains the upper bound on the current width, in dips, of a widget instance."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "OPTION_APPWIDGET_MIN_HEIGHT",
      "desc": "A bundle extra (int) that contains the lower bound on the current height, in dips, of a widget instance."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "OPTION_APPWIDGET_MIN_WIDTH",
      "desc": "A bundle extra (int) that contains the lower bound on the current width, in dips, of a widget instance."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "String",
      "code": "OPTION_APPWIDGET_RESTORE_COMPLETED",
      "desc": "A bundle extra (boolean) that contains whether or not an app has finished restoring a widget."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "bindAppWidgetIdIfAllowed(appWidgetId: Int, provider: ComponentName!)",
      "desc": "Set the component for a given appWidgetId."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "bindAppWidgetIdIfAllowed(appWidgetId: Int, provider: ComponentName!, options: Bundle!)",
      "desc": "Set the component for a given appWidgetId."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "bindAppWidgetIdIfAllowed(appWidgetId: Int, user: UserHandle!, provider: ComponentName!, options: Bundle!)",
      "desc": "Set the provider for a given appWidgetId if the caller has a permission."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "IntArray",
      "code": "getAppWidgetIds(provider: ComponentName!)",
      "desc": "Get the list of appWidgetIds that have been bound to the given AppWidget provider.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "AppWidgetProviderInfo",
      "code": "getAppWidgetInfo(appWidgetId: Int)",
      "desc": "Get the available info about the AppWidget.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Bundle",
      "code": "getAppWidgetOptions(appWidgetId: Int)",
      "desc": "Get the extras associated with a given widget instance.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableList",
      "code": "getInstalledProviders()",
      "desc": "Return a list of the AppWidget providers that are currently installed.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableList",
      "code": "getInstalledProvidersForPackage(packageName: String, profile: UserHandle?)",
      "desc": "Gets the AppWidget providers for the given package and user profile.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableList",
      "code": "getInstalledProvidersForProfile(profile: UserHandle?)",
      "desc": "Gets the AppWidget providers for the given user profile.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "AppWidgetManager",
      "code": "getInstance(context: Context!)",
      "desc": "Get the AppWidgetManager instance to use for the supplied  Context object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isRequestPinAppWidgetSupported()",
      "desc": "Return TRUE if the default launcher supports requestPinAppWidget(android.content.ComponentName,android.os.Bundle,android.app.PendingIntent)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "notifyAppWidgetViewDataChanged(appWidgetIds: IntArray!, viewId: Int)",
      "desc": "Notifies the specified collection view in all the specified AppWidget instances to invalidate their data."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "notifyAppWidgetViewDataChanged(appWidgetId: Int, viewId: Int)",
      "desc": "Notifies the specified collection view in the specified AppWidget instance to invalidate its data."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "partiallyUpdateAppWidget(appWidgetIds: IntArray!, views: RemoteViews!)",
      "desc": "Perform an incremental update or command on the widget(s) specified by appWidgetIds."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "partiallyUpdateAppWidget(appWidgetId: Int, views: RemoteViews!)",
      "desc": "Perform an incremental update or command on the widget specified by appWidgetId."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "requestPinAppWidget(provider: ComponentName, extras: Bundle?, successCallback: PendingIntent?)",
      "desc": "Request to pin an app widget on the current launcher."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "updateAppWidget(appWidgetIds: IntArray!, views: RemoteViews!)",
      "desc": "Set the RemoteViews to use for the specified appWidgetIds."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "updateAppWidget(appWidgetId: Int, views: RemoteViews!)",
      "desc": "Set the RemoteViews to use for the specified appWidgetId."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "updateAppWidget(provider: ComponentName!, views: RemoteViews!)",
      "desc": "Set the RemoteViews to use for all AppWidget instances for the supplied AppWidget provider."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "updateAppWidgetOptions(appWidgetId: Int, options: Bundle!)",
      "desc": "Update the extras for a given widget instance."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "updateAppWidgetProviderInfo(provider: ComponentName!, metaDataKey: String?)",
      "desc": "Updates the info for the supplied AppWidget provider."
    }
  ]
}