{
  "path": "android.hardware.camera2.params",
  "name": "LensShadingMap",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Float",
      "code": "MINIMUM_GAIN_FACTOR",
      "desc": "The smallest gain factor in this map."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "copyGainFactors(destination: FloatArray!, offset: Int)",
      "desc": "Copy all gain factors in row-major order from this lens shading map into the destination."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Check if this LensShadingMap is equal to another LensShadingMap."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getColumnCount()",
      "desc": "Get the number of columns in this map."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getGainFactor(colorChannel: Int, column: Int, row: Int)",
      "desc": "Get a single color channel gain factor from this lens shading map by its row and column."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getGainFactorCount()",
      "desc": "Get the total number of gain factors in this map."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "RggbChannelVector",
      "code": "getGainFactorVector(column: Int, row: Int)",
      "desc": "Get a gain factor vector from this lens shading map by its row and column.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getRowCount()",
      "desc": "Get the number of rows in this map."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Returns a hash code value for the object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": "Return the LensShadingMap as a string representation."
    }
  ]
}