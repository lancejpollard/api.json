{
  "path": "android.text.util",
  "name": "Rfc822Token",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(name: String?, address: String?, comment: String?)\n            Creates a new Rfc822Token with the specified name, address, and comment."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getAddress()",
      "desc": "Returns the address part.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getComment()",
      "desc": "Returns the comment part.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getName()",
      "desc": "Returns the name part.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "quoteComment(comment: String!)",
      "desc": "Returns the comment, with internal backslashes and parentheses preceded by backslashes.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "quoteName(name: String!)",
      "desc": "Returns the name, with internal backslashes and quotation marks preceded by backslashes.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "quoteNameIfNecessary(name: String!)",
      "desc": "Returns the name, conservatively quoting it if there are any characters that are likely to cause trouble outside of a quoted string, or returning it literally if it seems safe.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setAddress(address: String?)",
      "desc": "Changes the address to the specified address."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setComment(comment: String?)",
      "desc": "Changes the comment to the specified comment."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setName(name: String?)",
      "desc": "Changes the name to the specified name."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns the name (with quoting added if necessary), the comment (in parentheses), and the address (in angle brackets)."
    }
  ]
}