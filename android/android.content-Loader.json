{
  "path": "android.content",
  "name": "Loader",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(context: Context!)\n            Stores away the application context associated with context."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "abandon()",
      "desc": "This function will normally be called for you automatically by android.app.LoaderManager when restarting a Loader."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "cancelLoad()",
      "desc": "Attempt to cancel the current load task."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "commitContentChanged()",
      "desc": "Commit that you have actually fully processed a content change that was returned by takeContentChanged."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "dataToString(data: D)",
      "desc": "For debugging, converts an instance of the Loader's data class to a string that can be printed.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "deliverCancellation()",
      "desc": "Informs the registered OnLoadCanceledListener that the load has been canceled."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "deliverResult(data: D)",
      "desc": "Sends the result of the load to the registered listener."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "dump(prefix: String!, fd: FileDescriptor!, writer: PrintWriter!, args: Array<String!>!)",
      "desc": "Print the Loader's state into the given stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forceLoad()",
      "desc": "Force an asynchronous load."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Context",
      "code": "getContext()",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getId()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isAbandoned()",
      "desc": "Return whether this loader has been abandoned."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isReset()",
      "desc": "Return whether this load has been reset."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isStarted()",
      "desc": "Return whether this load has been started."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onContentChanged()",
      "desc": "Called when ForceLoadContentObserver detects a change."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "registerListener(id: Int, listener: Loader.OnLoadCompleteListener<D>!)",
      "desc": "Registers a class that will receive callbacks when a load is complete."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "registerOnLoadCanceledListener(listener: Loader.OnLoadCanceledListener<D>!)",
      "desc": "Registers a listener that will receive callbacks when a load is canceled."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "reset()",
      "desc": "This function will normally be called for you automatically by android.app.LoaderManager when destroying a Loader."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "rollbackContentChanged()",
      "desc": "Report that you have abandoned the processing of a content change that was returned by takeContentChanged() and would like to rollback to the state where there is again a pending content change."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "startLoading()",
      "desc": "This function will normally be called for you automatically by android.app.LoaderManager when the associated fragment/activity is being started."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "stopLoading()",
      "desc": "This function will normally be called for you automatically by android.app.LoaderManager when the associated fragment/activity is being stopped."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "takeContentChanged()",
      "desc": "Take the current flag indicating whether the loader's content had changed while it was stopped."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "unregisterListener(listener: Loader.OnLoadCompleteListener<D>!)",
      "desc": "Remove a listener that was previously added with registerListener."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "unregisterOnLoadCanceledListener(listener: Loader.OnLoadCanceledListener<D>!)",
      "desc": "Unregisters a listener that was previously added with registerOnLoadCanceledListener."
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onAbandon()",
      "desc": "Subclasses implement this to take care of being abandoned."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onCancelLoad()",
      "desc": "Subclasses must implement this to take care of requests to cancelLoad()."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onForceLoad()",
      "desc": "Subclasses must implement this to take care of requests to forceLoad()."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onReset()",
      "desc": "Subclasses must implement this to take care of resetting their loader, as per reset()."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onStartLoading()",
      "desc": "Subclasses must implement this to take care of loading their data, as per startLoading()."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onStopLoading()",
      "desc": "Subclasses must implement this to take care of stopping their loader, as per stopLoading()."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "code": "ForceLoadContentObserver",
      "desc": "An implementation of a ContentObserver that takes care of connecting it to the Loader to have the loader re-load its data when the observer is told it has changed."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnLoadCanceledListener",
      "desc": "Interface that is implemented to discover when a Loader has been canceled before it finished loading its data."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "OnLoadCompleteListener",
      "desc": "Interface that is implemented to discover when a Loader has finished loading its data."
    }
  ]
}