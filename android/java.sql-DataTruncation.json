{
  "path": "java.sql",
  "name": "DataTruncation",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(index: Int, parameter: Boolean, read: Boolean, dataSize: Int, transferSize: Int)\n            Creates a DataTruncation object with the SQLState initialized to 01004 when read is set to true and 22001 when read is set to false, the reason set to \"Data truncation\", the vendor code set to 0, and the other fields set to the given values."
    },
    {
      "type": "ctor",
      "ctor": "<init>(index: Int, parameter: Boolean, read: Boolean, dataSize: Int, transferSize: Int, cause: Throwable!)\n            Creates a DataTruncation object with the SQLState initialized to 01004 when read is set to true and 22001 when read is set to false, the reason set to \"Data truncation\", the vendor code set to 0, and the other fields set to the given values."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getDataSize()",
      "desc": "Gets the number of bytes of data that should have been transferred."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getIndex()",
      "desc": "Retrieves the index of the column or parameter that was truncated."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getParameter()",
      "desc": "Indicates whether the value truncated was a parameter value or a column value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getRead()",
      "desc": "Indicates whether or not the value was truncated on a read."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getTransferSize()",
      "desc": "Gets the number of bytes of data actually transferred."
    },
    {
      "type": "inherited-methods",
      "from": "SQLException"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getErrorCode()"
    },
    {
      "type": "inherited-methods",
      "from": "SQLException"
    },
    {
      "type": "inherited-methods",
      "from": "SQLException!"
    },
    {
      "type": "inherited-methods",
      "from": "getNextException()"
    },
    {
      "type": "inherited-methods",
      "from": "SQLException"
    },
    {
      "type": "inherited-methods",
      "from": "String!"
    },
    {
      "type": "inherited-methods",
      "from": "getSQLState()"
    },
    {
      "type": "inherited-methods",
      "from": "SQLException"
    },
    {
      "type": "inherited-methods",
      "from": "MutableIterator<Throwable!>"
    },
    {
      "type": "inherited-methods",
      "from": "iterator()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setNextException(ex: SQLException!)"
    },
    {
      "type": "inherited-methods",
      "from": "SQLException"
    },
    {
      "type": "inherited-methods",
      "from": "SQLWarning"
    },
    {
      "type": "inherited-methods",
      "from": "SQLWarning!"
    },
    {
      "type": "inherited-methods",
      "from": "getNextWarning()"
    },
    {
      "type": "inherited-methods",
      "from": "SQLWarning"
    },
    {
      "type": "inherited-methods",
      "from": "setNextWarning"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setNextWarning(w: SQLWarning!)"
    },
    {
      "type": "inherited-methods",
      "from": "SQLWarning"
    }
  ]
}