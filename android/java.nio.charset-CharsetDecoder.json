{
  "path": "java.nio.charset",
  "name": "CharsetDecoder",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "averageCharsPerByte()",
      "desc": "Returns the average number of characters that will be produced for each byte of input."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Charset",
      "code": "charset()",
      "desc": "Returns the charset that created this decoder.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "CoderResult",
      "code": "decode(in: ByteBuffer!, out: CharBuffer!, endOfInput: Boolean)",
      "desc": "Decodes as many bytes as possible from the given input buffer, writing the results to the given output buffer.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "CharBuffer",
      "code": "decode(in: ByteBuffer!)",
      "desc": "Convenience method that decodes the remaining content of a single input byte buffer into a newly-allocated character buffer.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Charset",
      "code": "detectedCharset()",
      "desc": "Retrieves the charset that was detected by this decoder  (optional operation).",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "CoderResult",
      "code": "flush(out: CharBuffer!)",
      "desc": "Flushes this decoder.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isAutoDetecting()",
      "desc": "Tells whether or not this decoder implements an auto-detecting charset."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isCharsetDetected()",
      "desc": "Tells whether or not this decoder has yet detected a charset  (optional operation)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CodingErrorAction",
      "code": "malformedInputAction()",
      "desc": "Returns this decoder's current action for malformed-input errors.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "maxCharsPerByte()",
      "desc": "Returns the maximum number of characters that will be produced for each byte of input."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "CharsetDecoder",
      "code": "onMalformedInput(newAction: CodingErrorAction!)",
      "desc": "Changes this decoder's action for malformed-input errors.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "CharsetDecoder",
      "code": "onUnmappableCharacter(newAction: CodingErrorAction!)",
      "desc": "Changes this decoder's action for unmappable-character errors.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "CharsetDecoder",
      "code": "replaceWith(newReplacement: String!)",
      "desc": "Changes this decoder's replacement value.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "replacement()",
      "desc": "Returns this decoder's replacement value.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "CharsetDecoder",
      "code": "reset()",
      "desc": "Resets this decoder, clearing any internal state.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "CodingErrorAction",
      "code": "unmappableCharacterAction()",
      "desc": "Returns this decoder's current action for unmappable-character errors.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "CoderResult",
      "code": "decodeLoop(in: ByteBuffer!, out: CharBuffer!)",
      "desc": "Decodes one or more bytes into one or more characters.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "CoderResult",
      "code": "implFlush(out: CharBuffer!)",
      "desc": "Flushes this decoder.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "implOnMalformedInput(newAction: CodingErrorAction!)",
      "desc": "Reports a change to this decoder's malformed-input action."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "implOnUnmappableCharacter(newAction: CodingErrorAction!)",
      "desc": "Reports a change to this decoder's unmappable-character action."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "implReplaceWith(newReplacement: String!)",
      "desc": "Reports a change to this decoder's replacement value."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "implReset()",
      "desc": "Resets this decoder, clearing any charset-specific internal state."
    }
  ]
}