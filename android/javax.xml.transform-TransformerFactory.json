{
  "path": "javax.xml.transform",
  "name": "TransformerFactory",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Source",
      "code": "getAssociatedStylesheet(source: Source!, media: String!, title: String!, charset: String!)",
      "desc": "Get the stylesheet specification(s) associated with the XML Source document via the  xml-stylesheet processing instruction that match the given criteria.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Any",
      "code": "getAttribute(name: String!)",
      "desc": "Allows the user to retrieve specific attributes on the underlying implementation.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "ErrorListener",
      "code": "getErrorListener()",
      "desc": "Get the error event handler for the TransformerFactory.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "getFeature(name: String!)",
      "desc": "Look up the value of a feature."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "URIResolver",
      "code": "getURIResolver()",
      "desc": "Get the object that is used by default during the transformation to resolve URIs used in document(), xsl:import, or xsl:include.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TransformerFactory",
      "code": "newInstance()",
      "desc": "Returns Android's implementation of TransformerFactory.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TransformerFactory",
      "code": "newInstance(factoryClassName: String!, classLoader: ClassLoader!)",
      "desc": "Returns an instance of the named implementation of TransformerFactory.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Templates",
      "code": "newTemplates(source: Source!)",
      "desc": "Process the Source into a Templates object, which is a a compiled representation of the source.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Transformer",
      "code": "newTransformer(source: Source!)",
      "desc": "Process the Source into a Transformer Object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Transformer",
      "code": "newTransformer()",
      "desc": "Create a new Transformer that performs a copy of the Source to the Result.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setAttribute(name: String!, value: Any!)",
      "desc": "Allows the user to set specific attributes on the underlying implementation."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setErrorListener(listener: ErrorListener!)",
      "desc": "Set the error event listener for the TransformerFactory, which is used for the processing of transformation instructions, and not for the transformation itself."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setFeature(name: String!, value: Boolean)",
      "desc": "Set a feature for this TransformerFactory and Transformers or Templates created by this factory."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setURIResolver(resolver: URIResolver!)",
      "desc": "Set an object that is used by default during the transformation to resolve URIs used in document(), xsl:import, or xsl:include."
    }
  ]
}