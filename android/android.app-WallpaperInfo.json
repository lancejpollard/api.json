{
  "path": "android.app",
  "name": "WallpaperInfo",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(context: Context!, service: ResolveInfo!)\n            Constructor."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "describeContents()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "dump(pw: Printer!, prefix: String!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ComponentName",
      "code": "getComponent()",
      "desc": "Return the component of the service that implements this wallpaper.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getPackageName()",
      "desc": "Return the .",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ServiceInfo",
      "code": "getServiceInfo()",
      "desc": "Return the raw information about the Service implementing this wallpaper.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getServiceName()",
      "desc": "Return the class name of the service component that implements this wallpaper.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getSettingsActivity()",
      "desc": "Return the class name of an activity that provides a settings UI for the wallpaper.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Uri",
      "code": "getSettingsSliceUri()",
      "desc": "Returns an URI that provides a settings Slice for this wallpaper.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "getShowMetadataInPreview()",
      "desc": "Queries whether any metadata should be shown when previewing the wallpaper."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "CharSequence",
      "code": "loadAuthor(pm: PackageManager!)",
      "desc": "Return a string indicating the author(s) of this wallpaper.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "CharSequence",
      "code": "loadContextDescription(pm: PackageManager!)",
      "desc": "Retrieves a title of the URI that specifies a link for further context about this wallpaper.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Uri",
      "code": "loadContextUri(pm: PackageManager!)",
      "desc": "Returns an URI that specifies a link for further context about this wallpaper.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "CharSequence",
      "code": "loadDescription(pm: PackageManager!)",
      "desc": "Return a brief summary of this wallpaper's behavior.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Drawable",
      "code": "loadIcon(pm: PackageManager!)",
      "desc": "Load the user-displayed icon for this wallpaper.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "CharSequence",
      "code": "loadLabel(pm: PackageManager!)",
      "desc": "Load the user-displayed label for this wallpaper.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Drawable",
      "code": "loadThumbnail(pm: PackageManager!)",
      "desc": "Load the thumbnail image for this wallpaper.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "supportsMultipleDisplays()",
      "desc": "Returns whether this wallpaper service can support multiple engines to render on each surface independently."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "writeToParcel(dest: Parcel!, flags: Int)",
      "desc": "Used to package this object into a Parcel."
    },
    {
      "type": "inherited-constants",
      "from": "Parcelable"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "CONTENTS_FILE_DESCRIPTOR"
    },
    {
      "type": "inherited-constants",
      "from": "describeContents()"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "PARCELABLE_WRITE_RETURN_VALUE"
    },
    {
      "type": "inherited-constants",
      "from": "writeToParcel"
    },
    {
      "type": "inherited-constants",
      "from": "Parcelable someFunction()"
    },
    {
      "type": "inherited-constants",
      "from": "void someFunction(out Parcelable)"
    },
    {
      "type": "inherited-constants",
      "from": "void someFunction(inout Parcelable)"
    }
  ]
}