{
  "path": "android.location",
  "name": "GnssStatus",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "CONSTELLATION_BEIDOU",
      "desc": "Constellation type constant for Beidou."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "CONSTELLATION_GALILEO",
      "desc": "Constellation type constant for Galileo."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "CONSTELLATION_GLONASS",
      "desc": "Constellation type constant for Glonass."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "CONSTELLATION_GPS",
      "desc": "Constellation type constant for GPS."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "CONSTELLATION_IRNSS",
      "desc": "Constellation type constant for IRNSS."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "CONSTELLATION_QZSS",
      "desc": "Constellation type constant for QZSS."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "CONSTELLATION_SBAS",
      "desc": "Constellation type constant for SBAS."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "CONSTELLATION_UNKNOWN",
      "desc": "Unknown constellation type."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getAzimuthDegrees(satelliteIndex: Int)",
      "desc": "Retrieves the azimuth the satellite at the specified index."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getBasebandCn0DbHz(satelliteIndex: Int)",
      "desc": "Retrieves the baseband carrier-to-noise density of the satellite at the specified index in dB-Hz."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getCarrierFrequencyHz(satelliteIndex: Int)",
      "desc": "Gets the carrier frequency of the signal tracked."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getCn0DbHz(satelliteIndex: Int)",
      "desc": "Retrieves the carrier-to-noise density at the antenna of the satellite at the specified index in dB-Hz."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getConstellationType(satelliteIndex: Int)",
      "desc": "Retrieves the constellation type of the satellite at the specified index."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "getElevationDegrees(satelliteIndex: Int)",
      "desc": "Retrieves the elevation of the satellite at the specified index."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getSatelliteCount()",
      "desc": "Gets the total number of satellites in satellite list."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getSvid(satelliteIndex: Int)",
      "desc": "Gets the identification number for the satellite at the specific index."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hasAlmanacData(satelliteIndex: Int)",
      "desc": "Reports whether the satellite at the specified index has almanac data."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hasBasebandCn0DbHz(satelliteIndex: Int)",
      "desc": "Reports whether a valid getBasebandCn0DbHz(int satelliteIndex) is available."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hasCarrierFrequencyHz(satelliteIndex: Int)",
      "desc": "Reports whether a valid getCarrierFrequencyHz(int satelliteIndex) is available."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hasEphemerisData(satelliteIndex: Int)",
      "desc": "Reports whether the satellite at the specified index has ephemeris data."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "usedInFix(satelliteIndex: Int)",
      "desc": "Reports whether the satellite at the specified index was used in the calculation of the most recent position fix."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "code": "Builder",
      "desc": "Builder class to help create new GnssStatus instances."
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "Callback",
      "desc": "Used for receiving notifications when GNSS events happen."
    }
  ]
}