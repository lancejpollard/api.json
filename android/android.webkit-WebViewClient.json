{
  "path": "android.webkit",
  "name": "WebViewClient",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ERROR_AUTHENTICATION",
      "desc": "User authentication failed on server"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ERROR_BAD_URL",
      "desc": "Malformed URL"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ERROR_CONNECT",
      "desc": "Failed to connect to the server"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ERROR_FAILED_SSL_HANDSHAKE",
      "desc": "Failed to perform SSL handshake"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ERROR_FILE",
      "desc": "Generic file error"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ERROR_FILE_NOT_FOUND",
      "desc": "File not found"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ERROR_HOST_LOOKUP",
      "desc": "Server or proxy hostname lookup failed"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ERROR_IO",
      "desc": "Failed to read or write to the server"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ERROR_PROXY_AUTHENTICATION",
      "desc": "User authentication failed on proxy"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ERROR_REDIRECT_LOOP",
      "desc": "Too many redirects"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ERROR_TIMEOUT",
      "desc": "Connection timed out"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ERROR_TOO_MANY_REQUESTS",
      "desc": "Too many requests during this load"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ERROR_UNKNOWN",
      "desc": "Generic error"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ERROR_UNSAFE_RESOURCE",
      "desc": "Resource load was canceled by Safe Browsing"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ERROR_UNSUPPORTED_AUTH_SCHEME",
      "desc": "Unsupported authentication scheme (not basic or digest)"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ERROR_UNSUPPORTED_SCHEME",
      "desc": "Unsupported URI scheme"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SAFE_BROWSING_THREAT_BILLING",
      "desc": "The resource was blocked because it may trick the user into a billing agreement."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SAFE_BROWSING_THREAT_MALWARE",
      "desc": "The resource was blocked because it contains malware."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SAFE_BROWSING_THREAT_PHISHING",
      "desc": "The resource was blocked because it contains deceptive content."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SAFE_BROWSING_THREAT_UNKNOWN",
      "desc": "The resource was blocked for an unknown reason."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SAFE_BROWSING_THREAT_UNWANTED_SOFTWARE",
      "desc": "The resource was blocked because it contains unwanted software."
    },
    {
      "type": "ctor",
      "ctor": "<init>()"
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "doUpdateVisitedHistory(view: WebView!, url: String!, isReload: Boolean)",
      "desc": "Notify the host application to update its visited links database."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onFormResubmission(view: WebView!, dontResend: Message!, resend: Message!)",
      "desc": "As the host application if the browser should resend data as the requested page was a result of a POST."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onLoadResource(view: WebView!, url: String!)",
      "desc": "Notify the host application that the WebView will load the resource specified by the given url."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onPageCommitVisible(view: WebView!, url: String!)",
      "desc": "Notify the host application that android.webkit.WebView content left over from previous page navigations will no longer be drawn."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onPageFinished(view: WebView!, url: String!)",
      "desc": "Notify the host application that a page has finished loading."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onPageStarted(view: WebView!, url: String!, favicon: Bitmap!)",
      "desc": "Notify the host application that a page has started loading."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onReceivedClientCertRequest(view: WebView!, request: ClientCertRequest!)",
      "desc": "Notify the host application to handle a SSL client certificate request."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onReceivedError(view: WebView!, errorCode: Int, description: String!, failingUrl: String!)",
      "desc": "Report an error to the host application."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onReceivedError(view: WebView!, request: WebResourceRequest!, error: WebResourceError!)",
      "desc": "Report web resource loading error to the host application."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onReceivedHttpAuthRequest(view: WebView!, handler: HttpAuthHandler!, host: String!, realm: String!)",
      "desc": "Notifies the host application that the WebView received an HTTP authentication request."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onReceivedHttpError(view: WebView!, request: WebResourceRequest!, errorResponse: WebResourceResponse!)",
      "desc": "Notify the host application that an HTTP error has been received from the server while loading a resource."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onReceivedLoginRequest(view: WebView!, realm: String!, account: String?, args: String!)",
      "desc": "Notify the host application that a request to automatically log in the user has been processed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onReceivedSslError(view: WebView!, handler: SslErrorHandler!, error: SslError!)",
      "desc": "Notify the host application that an SSL error occurred while loading a resource."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onRenderProcessGone(view: WebView!, detail: RenderProcessGoneDetail!)",
      "desc": "Notify host application that the given WebView's render process has exited."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onSafeBrowsingHit(view: WebView!, request: WebResourceRequest!, threatType: Int, callback: SafeBrowsingResponse!)",
      "desc": "Notify the host application that a loading URL has been flagged by Safe Browsing."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onScaleChanged(view: WebView!, oldScale: Float, newScale: Float)",
      "desc": "Notify the host application that the scale applied to the WebView has changed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onTooManyRedirects(view: WebView!, cancelMsg: Message!, continueMsg: Message!)",
      "desc": "Notify the host application that there have been an excessive number of HTTP redirects."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onUnhandledKeyEvent(view: WebView!, event: KeyEvent!)",
      "desc": "Notify the host application that a key was not handled by the WebView."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "WebResourceResponse",
      "code": "shouldInterceptRequest(view: WebView!, url: String!)",
      "desc": "Notify the host application of a resource request and allow the application to return the data.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "WebResourceResponse",
      "code": "shouldInterceptRequest(view: WebView!, request: WebResourceRequest!)",
      "desc": "Notify the host application of a resource request and allow the application to return the data.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "shouldOverrideKeyEvent(view: WebView!, event: KeyEvent!)",
      "desc": "Give the host application a chance to handle the key event synchronously."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "shouldOverrideUrlLoading(view: WebView!, url: String!)",
      "desc": "Give the host application a chance to take control when a URL is about to be loaded in the current WebView."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "shouldOverrideUrlLoading(view: WebView!, request: WebResourceRequest!)",
      "desc": "Give the host application a chance to take control when a URL is about to be loaded in the current WebView."
    }
  ]
}