{
  "path": "java.io",
  "name": "LineNumberReader",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(in: Reader!)\n            Create a new line-numbering reader, using the default input-buffer size."
    },
    {
      "type": "ctor",
      "ctor": "<init>(in: Reader!, sz: Int)\n            Create a new line-numbering reader, reading characters into a buffer of the given size."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getLineNumber()",
      "desc": "Get the current line number."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "mark(readAheadLimit: Int)",
      "desc": "Mark the present position in the stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "read()",
      "desc": "Read a single character."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "read(cbuf: CharArray!, off: Int, len: Int)",
      "desc": "Read characters into a portion of an array."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "readLine()",
      "desc": "Read a line of text.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "reset()",
      "desc": "Reset the stream to the most recent mark."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLineNumber(lineNumber: Int)",
      "desc": "Set the current line number."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "skip(n: Long)",
      "desc": "Skip characters."
    },
    {
      "type": "inherited-methods",
      "from": "BufferedReader"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "close()"
    },
    {
      "type": "inherited-methods",
      "from": "Stream<String!>!"
    },
    {
      "type": "inherited-methods",
      "from": "lines()"
    },
    {
      "type": "inherited-methods",
      "from": "Stream"
    },
    {
      "type": "inherited-methods",
      "from": "BufferedReader"
    },
    {
      "type": "inherited-methods",
      "from": "Stream"
    },
    {
      "type": "inherited-methods",
      "from": "IOException"
    },
    {
      "type": "inherited-methods",
      "from": "BufferedReader"
    },
    {
      "type": "inherited-methods",
      "from": "UncheckedIOException"
    },
    {
      "type": "inherited-methods",
      "from": "Stream"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "markSupported()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "ready()"
    },
    {
      "type": "inherited-methods",
      "from": "Reader"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "read(target: CharBuffer!)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "read(cbuf: CharArray!)"
    }
  ]
}