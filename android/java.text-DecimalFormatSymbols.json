{
  "path": "java.text",
  "name": "DecimalFormatSymbols",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()\n            Create a DecimalFormatSymbols object for the default FORMAT locale."
    },
    {
      "type": "ctor",
      "ctor": "<init>(locale: Locale!)\n            Create a DecimalFormatSymbols object for the given locale."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "clone()",
      "desc": "Standard override."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Override equals."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getAvailableLocales()",
      "desc": "Returns an array of all locales for which the getInstance methods of this class can return localized instances.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Currency",
      "code": "getCurrency()",
      "desc": "Gets the currency of these DecimalFormatSymbols.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getCurrencySymbol()",
      "desc": "Returns the currency symbol for the currency of these DecimalFormatSymbols in their locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Char",
      "code": "getDecimalSeparator()",
      "desc": "Gets the character used for decimal sign."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Char",
      "code": "getDigit()",
      "desc": "Gets the character used for a digit in a pattern."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getExponentSeparator()",
      "desc": "Returns the string used to separate the mantissa from the exponent.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Char",
      "code": "getGroupingSeparator()",
      "desc": "Gets the character used for thousands separator."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getInfinity()",
      "desc": "Gets the string used to represent infinity.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "DecimalFormatSymbols",
      "code": "getInstance()",
      "desc": "Gets the DecimalFormatSymbols instance for the default locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "DecimalFormatSymbols",
      "code": "getInstance(locale: Locale!)",
      "desc": "Gets the DecimalFormatSymbols instance for the specified locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getInternationalCurrencySymbol()",
      "desc": "Returns the ISO 4217 currency code of the currency of these DecimalFormatSymbols.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Char",
      "code": "getMinusSign()",
      "desc": "Gets the character used to represent minus sign."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Char",
      "code": "getMonetaryDecimalSeparator()",
      "desc": "Returns the monetary decimal separator."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getNaN()",
      "desc": "Gets the string used to represent \"not a number\".",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Char",
      "code": "getPatternSeparator()",
      "desc": "Gets the character used to separate positive and negative subpatterns in a pattern."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Char",
      "code": "getPerMill()",
      "desc": "Gets the character used for per mille sign."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Char",
      "code": "getPercent()",
      "desc": "Gets the character used for percent sign."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Char",
      "code": "getZeroDigit()",
      "desc": "Gets the character used for zero."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Override hashCode."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCurrency(currency: Currency!)",
      "desc": "Sets the currency of these DecimalFormatSymbols."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCurrencySymbol(currency: String!)",
      "desc": "Sets the currency symbol for the currency of these DecimalFormatSymbols in their locale."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setDecimalSeparator(decimalSeparator: Char)",
      "desc": "Sets the character used for decimal sign."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setDigit(digit: Char)",
      "desc": "Sets the character used for a digit in a pattern."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setExponentSeparator(exp: String!)",
      "desc": "Sets the string used to separate the mantissa from the exponent."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setGroupingSeparator(groupingSeparator: Char)",
      "desc": "Sets the character used for thousands separator."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setInfinity(infinity: String!)",
      "desc": "Sets the string used to represent infinity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setInternationalCurrencySymbol(currencyCode: String!)",
      "desc": "Sets the ISO 4217 currency code of the currency of these DecimalFormatSymbols."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMinusSign(minusSign: Char)",
      "desc": "Sets the character used to represent minus sign."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMonetaryDecimalSeparator(sep: Char)",
      "desc": "Sets the monetary decimal separator."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setNaN(NaN: String!)",
      "desc": "Sets the string used to represent \"not a number\"."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPatternSeparator(patternSeparator: Char)",
      "desc": "Sets the character used to separate positive and negative subpatterns in a pattern."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPerMill(perMill: Char)",
      "desc": "Sets the character used for per mille sign."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setPercent(percent: Char)",
      "desc": "Sets the character used for percent sign."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setZeroDigit(zeroDigit: Char)",
      "desc": "Sets the character used for zero."
    }
  ]
}