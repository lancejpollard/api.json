{
  "path": "java.io",
  "name": "RandomAccessFile",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(name: String!, mode: String!)\n            Creates a random access file stream to read from, and optionally to write to, a file with the specified name."
    },
    {
      "type": "ctor",
      "ctor": "<init>(file: File!, mode: String!)\n            Creates a random access file stream to read from, and optionally to write to, the file specified by the File argument."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "close()",
      "desc": "Closes this random access file stream and releases any system resources associated with the stream."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "FileChannel",
      "code": "getChannel()",
      "desc": "Returns the unique FileChannel object associated with this file.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "FileDescriptor",
      "code": "getFD()",
      "desc": "Returns the opaque file descriptor object associated with this stream.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "getFilePointer()",
      "desc": "Returns the current offset in this file."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "length()",
      "desc": "Returns the length of this file."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "read()",
      "desc": "Reads a byte of data from this file."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "read(b: ByteArray!, off: Int, len: Int)",
      "desc": "Reads up to len bytes of data from this file into an array of bytes."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "read(b: ByteArray!)",
      "desc": "Reads up to b.length bytes of data from this file into an array of bytes."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "readBoolean()",
      "desc": "Reads a boolean from this file."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Byte",
      "code": "readByte()",
      "desc": "Reads a signed eight-bit value from this file."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Char",
      "code": "readChar()",
      "desc": "Reads a character from this file."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Double",
      "code": "readDouble()",
      "desc": "Reads a double from this file."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Float",
      "code": "readFloat()",
      "desc": "Reads a float from this file."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "readFully(b: ByteArray!)",
      "desc": "Reads b.length bytes from this file into the byte array, starting at the current file pointer."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "readFully(b: ByteArray!, off: Int, len: Int)",
      "desc": "Reads exactly len bytes from this file into the byte array, starting at the current file pointer."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "readInt()",
      "desc": "Reads a signed 32-bit integer from this file."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "readLine()",
      "desc": "Reads the next line of text from this file.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "readLong()",
      "desc": "Reads a signed 64-bit integer from this file."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Short",
      "code": "readShort()",
      "desc": "Reads a signed 16-bit number from this file."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "readUTF()",
      "desc": "Reads in a string from this file.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "readUnsignedByte()",
      "desc": "Reads an unsigned eight-bit number from this file."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "readUnsignedShort()",
      "desc": "Reads an unsigned 16-bit number from this file."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "seek(pos: Long)",
      "desc": "Sets the file-pointer offset, measured from the beginning of this file, at which the next read or write occurs."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLength(newLength: Long)",
      "desc": "Sets the length of this file."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "skipBytes(n: Int)",
      "desc": "Attempts to skip over n bytes of input discarding the skipped bytes."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "write(b: Int)",
      "desc": "Writes the specified byte to this file."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "write(b: ByteArray!)",
      "desc": "Writes b.length bytes from the specified byte array to this file, starting at the current file pointer."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "write(b: ByteArray!, off: Int, len: Int)",
      "desc": "Writes len bytes from the specified byte array starting at offset off to this file."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "writeBoolean(v: Boolean)",
      "desc": "Writes a boolean to the file as a one-byte value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "writeByte(v: Int)",
      "desc": "Writes a byte to the file as a one-byte value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "writeBytes(s: String!)",
      "desc": "Writes the string to the file as a sequence of bytes."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "writeChar(v: Int)",
      "desc": "Writes a char to the file as a two-byte value, high byte first."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "writeChars(s: String!)",
      "desc": "Writes a string to the file as a sequence of characters."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "writeDouble(v: Double)",
      "desc": "Converts the double argument to a long using the doubleToLongBits method in class Double, and then writes that long value to the file as an eight-byte quantity, high byte first."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "writeFloat(v: Float)",
      "desc": "Converts the float argument to an int using the floatToIntBits method in class Float, and then writes that int value to the file as a four-byte quantity, high byte first."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "writeInt(v: Int)",
      "desc": "Writes an int to the file as four bytes, high byte first."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "writeLong(v: Long)",
      "desc": "Writes a long to the file as eight bytes, high byte first."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "writeShort(v: Int)",
      "desc": "Writes a short to the file as two bytes, high byte first."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "writeUTF(str: String!)",
      "desc": "Writes a string to the file using modified UTF-8 encoding in a machine-independent manner."
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "finalize()",
      "desc": ""
    }
  ]
}