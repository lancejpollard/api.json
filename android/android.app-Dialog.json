{
  "path": "android.app",
  "name": "Dialog",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(context: Context)\n            Creates a dialog window that uses the default dialog theme."
    },
    {
      "type": "ctor",
      "ctor": "<init>(context: Context, themeResId: Int)\n            Creates a dialog window that uses a custom dialog style."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "addContentView(view: View, params: ViewGroup.LayoutParams?)",
      "desc": "Add an additional content view to the screen."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "cancel()",
      "desc": "Cancel the dialog."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "closeOptionsMenu()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "create()",
      "desc": "Forces immediate creation of the dialog."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "dismiss()",
      "desc": "Dismiss this dialog, removing it from the screen."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "dispatchGenericMotionEvent(ev: MotionEvent)",
      "desc": "Called to process generic motion events."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "dispatchKeyEvent(event: KeyEvent)",
      "desc": "Called to process key events."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "dispatchKeyShortcutEvent(event: KeyEvent)",
      "desc": "Called to process a key shortcut event."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "dispatchPopulateAccessibilityEvent(event: AccessibilityEvent)",
      "desc": "Called to process population of AccessibilityEvents."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "dispatchTouchEvent(ev: MotionEvent)",
      "desc": "Called to process touch screen events."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "dispatchTrackballEvent(ev: MotionEvent)",
      "desc": "Called to process trackball events."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "T",
      "code": "findViewById(id: Int)",
      "desc": "Finds the first descendant view with the given ID or null if the ID is invalid (< 0), there is no matching view in the hierarchy, or the dialog has not yet been fully created (for example, via show() or create())."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ActionBar",
      "code": "getActionBar()",
      "desc": "Retrieve the ActionBar attached to this dialog, if present.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Context",
      "code": "getContext()",
      "desc": "Retrieve the Context this Dialog is running in."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View",
      "code": "getCurrentFocus()",
      "desc": "Call android.view.Window#getCurrentFocus on the Window if this Activity to return the currently focused view.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "LayoutInflater",
      "code": "getLayoutInflater()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Activity",
      "code": "getOwnerActivity()",
      "desc": "Returns the Activity that owns this Dialog.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "SearchEvent",
      "code": "getSearchEvent()",
      "desc": "During the onSearchRequested() callbacks, this function will return the SearchEvent that triggered the callback, if it exists.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getVolumeControlStream()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Window",
      "code": "getWindow()",
      "desc": "Retrieve the current Window for the activity.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "hide()",
      "desc": "Hide the dialog, but do not dismiss it."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "invalidateOptionsMenu()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isShowing()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onActionModeFinished(mode: ActionMode!)",
      "desc": "Called when an action mode has been finished."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onActionModeStarted(mode: ActionMode!)",
      "desc": "Called when an action mode has been started."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onAttachedToWindow()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onBackPressed()",
      "desc": "Called when the dialog has detected the user's press of the back key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onContentChanged()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onContextItemSelected(item: MenuItem)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onContextMenuClosed(menu: Menu)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onCreateContextMenu(menu: ContextMenu!, v: View!, menuInfo: ContextMenu.ContextMenuInfo!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onCreateOptionsMenu(menu: Menu)",
      "desc": "It is usually safe to proxy this call to the owner activity's Activity#onCreateOptionsMenu(Menu) if the client desires the same menu for this Dialog."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onCreatePanelMenu(featureId: Int, menu: Menu)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View",
      "code": "onCreatePanelView(featureId: Int)",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onDetachedFromWindow()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onGenericMotionEvent(event: MotionEvent)",
      "desc": "Called when a generic motion event was not handled by any of the views inside of the dialog."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onKeyDown(keyCode: Int, event: KeyEvent)",
      "desc": "A key was pressed down."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onKeyLongPress(keyCode: Int, event: KeyEvent)",
      "desc": "Default implementation of KeyEvent.Callback#onKeyLongPress(int, KeyEvent): always returns false (doesn't handle the event)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onKeyMultiple(keyCode: Int, repeatCount: Int, event: KeyEvent)",
      "desc": "Default implementation of KeyEvent.Callback#onKeyMultiple(int, int, KeyEvent): always returns false (doesn't handle the event)."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onKeyShortcut(keyCode: Int, event: KeyEvent)",
      "desc": "Called when a key shortcut event is not handled by any of the views in the Dialog."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onKeyUp(keyCode: Int, event: KeyEvent)",
      "desc": "A key was released."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onMenuItemSelected(featureId: Int, item: MenuItem)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onMenuOpened(featureId: Int, menu: Menu)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onOptionsItemSelected(item: MenuItem)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onOptionsMenuClosed(menu: Menu)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onPanelClosed(featureId: Int, menu: Menu)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onPrepareOptionsMenu(menu: Menu)",
      "desc": "It is usually safe to proxy this call to the owner activity's Activity#onPrepareOptionsMenu(Menu) if the client desires the same menu for this Dialog."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onPreparePanel(featureId: Int, view: View?, menu: Menu)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onRestoreInstanceState(savedInstanceState: Bundle)",
      "desc": "Restore the state of the dialog from a previously saved bundle."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Bundle",
      "code": "onSaveInstanceState()",
      "desc": "Saves the state of the dialog into a bundle."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onSearchRequested(searchEvent: SearchEvent)",
      "desc": "This hook is called when the user signals the desire to start a search."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onSearchRequested()",
      "desc": "This hook is called when the user signals the desire to start a search."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onTouchEvent(event: MotionEvent)",
      "desc": "Called when a touch screen event was not handled by any of the views under it."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "onTrackballEvent(event: MotionEvent)",
      "desc": "Called when the trackball was moved and not handled by any of the views inside of the activity."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onWindowAttributesChanged(params: WindowManager.LayoutParams!)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onWindowFocusChanged(hasFocus: Boolean)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ActionMode",
      "code": "onWindowStartingActionMode(callback: ActionMode.Callback!)",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ActionMode",
      "code": "onWindowStartingActionMode(callback: ActionMode.Callback!, type: Int)",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "openContextMenu(view: View)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "openOptionsMenu()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "registerForContextMenu(view: View)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "requestWindowFeature(featureId: Int)",
      "desc": "Enable extended window features."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "T",
      "code": "requireViewById(id: Int)",
      "desc": "Finds the first descendant view with the given ID or throws an IllegalArgumentException if the ID is invalid (< 0), there is no matching view in the hierarchy, or the dialog has not yet been fully created (for example, via show() or create())."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCancelMessage(msg: Message?)",
      "desc": "Set a message to be sent when the dialog is canceled."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCancelable(flag: Boolean)",
      "desc": "Sets whether this dialog is cancelable with the KeyEvent#KEYCODE_BACK key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setCanceledOnTouchOutside(cancel: Boolean)",
      "desc": "Sets whether this dialog is canceled when touched outside the window's bounds."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setContentView(layoutResID: Int)",
      "desc": "Set the screen content from a layout resource."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setContentView(view: View)",
      "desc": "Set the screen content to an explicit view."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setContentView(view: View, params: ViewGroup.LayoutParams?)",
      "desc": "Set the screen content to an explicit view."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setDismissMessage(msg: Message?)",
      "desc": "Set a message to be sent when the dialog is dismissed."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setFeatureDrawable(featureId: Int, drawable: Drawable?)",
      "desc": "Convenience for calling android.view.Window#setFeatureDrawable(int, Drawable)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setFeatureDrawableAlpha(featureId: Int, alpha: Int)",
      "desc": "Convenience for calling android.view.Window#setFeatureDrawableAlpha."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setFeatureDrawableResource(featureId: Int, resId: Int)",
      "desc": "Convenience for calling android.view.Window#setFeatureDrawableResource."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setFeatureDrawableUri(featureId: Int, uri: Uri?)",
      "desc": "Convenience for calling android.view.Window#setFeatureDrawableUri."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOnCancelListener(listener: DialogInterface.OnCancelListener?)",
      "desc": "Set a listener to be invoked when the dialog is canceled."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOnDismissListener(listener: DialogInterface.OnDismissListener?)",
      "desc": "Set a listener to be invoked when the dialog is dismissed."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOnKeyListener(onKeyListener: DialogInterface.OnKeyListener?)",
      "desc": "Sets the callback that will be called if a key is dispatched to the dialog."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setOnShowListener(listener: DialogInterface.OnShowListener?)",
      "desc": "Sets a listener to be invoked when the dialog is shown."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setOwnerActivity(activity: Activity)",
      "desc": "Sets the Activity that owns this dialog."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTitle(title: CharSequence?)",
      "desc": "Set the title text for this dialog's window."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTitle(titleId: Int)",
      "desc": "Set the title text for this dialog's window."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setVolumeControlStream(streamType: Int)",
      "desc": "By default, this will use the owner Activity's suggested stream type."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "show()",
      "desc": "Start the dialog and display it on screen."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "takeKeyEvents(get: Boolean)",
      "desc": "Request that key events come to this dialog."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "unregisterForContextMenu(view: View)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onCreate(savedInstanceState: Bundle!)",
      "desc": "Similar to Activity#onCreate, you should initialize your dialog in this method, including calling setContentView."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onStart()",
      "desc": "Called when the dialog is starting."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "onStop()",
      "desc": "Called to tell you that you're stopping."
    },
    {
      "type": "inherited-constants",
      "from": "DialogInterface"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "BUTTON1"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "BUTTON2"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "BUTTON3"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "BUTTON_NEGATIVE"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "BUTTON_NEUTRAL"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "BUTTON_POSITIVE"
    },
    {
      "type": "inherited-methods",
      "from": "Callback"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onPointerCaptureChanged(hasCapture: Boolean)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onProvideKeyboardShortcuts(data: MutableList<KeyboardShortcutGroup!>!, menu: Menu?, deviceId: Int)"
    }
  ]
}