{
  "path": "java.nio.channels",
  "name": "MembershipKey",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "MembershipKey",
      "code": "block(source: InetAddress!)",
      "desc": "Block multicast datagrams from the given source address.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "MulticastChannel",
      "code": "channel()",
      "desc": "Returns the channel for which this membership key was created.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "drop()",
      "desc": "Drop membership."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "InetAddress",
      "code": "group()",
      "desc": "Returns the multicast group for which this membership key was created.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "isValid()",
      "desc": "Tells whether or not this membership is valid."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "NetworkInterface",
      "code": "networkInterface()",
      "desc": "Returns the network interface for which this membership key was created.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "InetAddress",
      "code": "sourceAddress()",
      "desc": "Returns the source address if this membership key is source-specific, or null if this membership is not source-specific.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "MembershipKey",
      "code": "unblock(source: InetAddress!)",
      "desc": "Unblock multicast datagrams from the given source address that was previously blocked using the block method.",
      "symbol": "!"
    }
  ]
}