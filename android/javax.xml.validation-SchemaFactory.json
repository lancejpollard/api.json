{
  "path": "javax.xml.validation",
  "name": "SchemaFactory",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "ErrorHandler",
      "code": "getErrorHandler()",
      "desc": "Gets the current ErrorHandler set to this SchemaFactory.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getFeature(name: String!)",
      "desc": "Look up the value of a feature flag."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "getProperty(name: String!)",
      "desc": "Look up the value of a property.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "LSResourceResolver",
      "code": "getResourceResolver()",
      "desc": "Gets the current LSResourceResolver set to this SchemaFactory.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Boolean",
      "code": "isSchemaLanguageSupported(schemaLanguage: String!)",
      "desc": "Is specified schema supported by this SchemaFactory?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "SchemaFactory",
      "code": "newInstance(schemaLanguage: String!)",
      "desc": "Lookup an implementation of the SchemaFactory that supports the specified schema language and return it.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "SchemaFactory",
      "code": "newInstance(schemaLanguage: String!, factoryClassName: String!, classLoader: ClassLoader!)",
      "desc": "Returns an instance of the named implementation of SchemaFactory.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Schema",
      "code": "newSchema(schema: Source!)",
      "desc": "Parses the specified source as a schema and returns it as a schema.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Schema",
      "code": "newSchema(schema: File!)",
      "desc": "Parses the specified File as a schema and returns it as a Schema.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Schema",
      "code": "newSchema(schema: URL!)",
      "desc": "Parses the specified URL as a schema and returns it as a Schema.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Schema",
      "code": "newSchema(schemas: Array<Source!>!)",
      "desc": "Parses the specified source(s) as a schema and returns it as a schema.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Schema",
      "code": "newSchema()",
      "desc": "Creates a special Schema object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setErrorHandler(errorHandler: ErrorHandler!)",
      "desc": "Sets the ErrorHandler to receive errors encountered during the newSchema method invocation."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFeature(name: String!, value: Boolean)",
      "desc": "Set the value of a feature flag."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setProperty(name: String!, object: Any!)",
      "desc": "Set the value of a property."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "setResourceResolver(resourceResolver: LSResourceResolver!)",
      "desc": "Sets the LSResourceResolver to customize resource resolution when parsing schemas."
    }
  ]
}