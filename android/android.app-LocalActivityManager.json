{
  "path": "android.app",
  "name": "LocalActivityManager",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(parent: Activity!, singleMode: Boolean)\n            Create a new LocalActivityManager for holding activities running within the given parent."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Window",
      "code": "destroyActivity(id: String!, finish: Boolean)",
      "desc": "Destroy the activity associated with a particular id.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "dispatchCreate(state: Bundle!)",
      "desc": "Restore a state that was previously returned by saveInstanceState."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "dispatchDestroy(finishing: Boolean)",
      "desc": "Called by the container activity in its Activity#onDestroy so that LocalActivityManager can perform the corresponding action on the activities it holds."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "dispatchPause(finishing: Boolean)",
      "desc": "Called by the container activity in its Activity#onPause so that LocalActivityManager can perform the corresponding action on the activities it holds."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "dispatchResume()",
      "desc": "Called by the container activity in its Activity#onResume so that LocalActivityManager can perform the corresponding action on the activities it holds."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "dispatchStop()",
      "desc": "Called by the container activity in its Activity#onStop so that LocalActivityManager can perform the corresponding action on the activities it holds."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Activity",
      "code": "getActivity(id: String!)",
      "desc": "Return the Activity object associated with a string ID.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Activity",
      "code": "getCurrentActivity()",
      "desc": "Retrieve the Activity that is currently running.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getCurrentId()",
      "desc": "Retrieve the ID of the activity that is currently running.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "removeAllActivities()",
      "desc": "Remove all activities from this LocalActivityManager, performing an Activity#onDestroy on any that are currently instantiated."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Bundle",
      "code": "saveInstanceState()",
      "desc": "Retrieve the state of all activities known by the group.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Window",
      "code": "startActivity(id: String!, intent: Intent!)",
      "desc": "Start a new activity running in the group.",
      "symbol": "!"
    }
  ]
}