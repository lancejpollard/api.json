{
  "path": "java.util.concurrent",
  "name": "CopyOnWriteArrayList",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()\n            Creates an empty list."
    },
    {
      "type": "ctor",
      "ctor": "<init>(c: MutableCollection<out E>)\n            Creates a list containing the elements of the specified collection, in the order they are returned by the collection's iterator."
    },
    {
      "type": "ctor",
      "ctor": "<init>(toCopyIn: Array<E>)\n            Creates a list holding a copy of the given array."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "add(element: E)",
      "desc": "Appends the specified element to the end of this list."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "add(index: Int, element: E)",
      "desc": "Inserts the specified element at the specified position in this list."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "addAll(elements: Collection<E>)",
      "desc": "Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "addAll(index: Int, elements: Collection<E>)",
      "desc": "Inserts all of the elements in the specified collection into this list, starting at the specified position."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "addAllAbsent(c: MutableCollection<out E>)",
      "desc": "Appends all of the elements in the specified collection that are not already contained in this list, to the end of this list, in the order that they are returned by the specified collection's iterator."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "addIfAbsent(e: E)",
      "desc": "Appends the element, if not present."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "clear()",
      "desc": "Removes all of the elements from this list."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "clone()",
      "desc": "Returns a shallow copy of this list."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "contains(element: E?)",
      "desc": "Returns true if this list contains the specified element."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "containsAll(elements: Collection<E>)",
      "desc": "Returns true if this list contains all of the elements of the specified collection."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Compares the specified object with this list for equality."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEach(action: Consumer<in E>)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "E",
      "code": "get(index: Int)",
      "desc": "Returns the element at the specified position in this list."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Returns the hash code value for this list."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "indexOf(e: E?, index: Int)",
      "desc": "Returns the index of the first occurrence of the specified element in this list, searching forwards from index, or returns -1 if the element is not found."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "indexOf(element: E?)",
      "desc": "Returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isEmpty()",
      "desc": "Returns true if this list contains no elements."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableIterator",
      "code": "iterator()",
      "desc": "Returns an iterator over the elements in this list in proper sequence.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "lastIndexOf(e: E?, index: Int)",
      "desc": "Returns the index of the last occurrence of the specified element in this list, searching backwards from index, or returns -1 if the element is not found."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "lastIndexOf(element: E?)",
      "desc": "Returns the index of the last occurrence of the specified element in this list, or -1 if this list does not contain the element."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableListIterator",
      "code": "listIterator()",
      "desc": "Returns a list iterator over the elements in this list (in proper sequence).",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableListIterator",
      "code": "listIterator(index: Int)",
      "desc": "Returns a list iterator over the elements in this list (in proper sequence), starting at the specified position in the list.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "remove(element: E?)",
      "desc": "Removes the first occurrence of the specified element from this list, if it is present."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "removeAll(elements: Collection<E>)",
      "desc": "Removes from this list all of its elements that are contained in the specified collection."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "E",
      "code": "removeAt(index: Int)",
      "desc": "Removes the element at the specified position in this list."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "removeIf(filter: Predicate<in E>)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "replaceAll(operator: UnaryOperator<E>)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "retainAll(elements: Collection<E>)",
      "desc": "Retains only the elements in this list that are contained in the specified collection."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "E",
      "code": "set(index: Int, element: E)",
      "desc": "Replaces the element at the specified position in this list with the specified element."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "sort(c: Comparator<in E>?)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Spliterator",
      "code": "spliterator()",
      "desc": "Returns a Spliterator over the elements in this list.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "MutableList",
      "code": "subList(fromIndex: Int, toIndex: Int)",
      "desc": "Returns a view of the portion of this list between fromIndex, inclusive, and toIndex, exclusive.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "toArray()",
      "desc": "Returns an array containing all of the elements in this list in proper sequence (from first to last element).",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "toArray(a: Array<T>)",
      "desc": "Returns an array containing all of the elements in this list in proper sequence (from first to last element); the runtime type of the returned array is that of the specified array.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns a string representation of this list."
    }
  ]
}