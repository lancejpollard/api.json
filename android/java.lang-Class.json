{
  "path": "java.lang",
  "name": "Class",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "out",
      "identifier": "Class",
      "code": "asSubclass(clazz: Class<U>)",
      "desc": "Casts this Class object to represent a subclass of the class represented by the specified class object.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "T",
      "code": "cast(obj: Any?)",
      "desc": "Casts an object to the class or interface represented by this Class object.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "desiredAssertionStatus()",
      "desc": "Returns the assertion status that would be assigned to this class if it were to be initialized at the time this method is invoked."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Class",
      "code": "forName(className: String)",
      "desc": "Returns the Class object associated with the class or interface with the given string name.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Class",
      "code": "forName(name: String, initialize: Boolean, loader: ClassLoader?)",
      "desc": "Returns the Class object associated with the class or interface with the given string name, using the given class loader.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "A",
      "code": "getAnnotation(annotationClass: Class<A>)",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getAnnotations()",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getAnnotationsByType(annotationClass: Class<A>)",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getCanonicalName()",
      "desc": "Returns the canonical name of the underlying class as defined by the Java Language Specification.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ClassLoader",
      "code": "getClassLoader()",
      "desc": "Returns the class loader for the class.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getClasses()",
      "desc": "Returns an array containing Class objects representing all the public classes and interfaces that are members of the class represented by this Class object.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Class",
      "code": "getComponentType()",
      "desc": "Returns the Class representing the component type of an array.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Constructor",
      "code": "getConstructor(vararg parameterTypes: Class<*>!)",
      "desc": "Returns a Constructor object that reflects the specified public constructor of the class represented by this Class object.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getConstructors()",
      "desc": "Returns an array containing Constructor objects reflecting all the public constructors of the class represented by this Class object.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "A",
      "code": "getDeclaredAnnotation(annotationClass: Class<A>)",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getDeclaredAnnotations()",
      "desc": "",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getDeclaredClasses()",
      "desc": "Returns an array of Class objects reflecting all the classes and interfaces declared as members of the class represented by this Class object.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Constructor",
      "code": "getDeclaredConstructor(vararg parameterTypes: Class<*>!)",
      "desc": "Returns a Constructor object that reflects the specified constructor of the class or interface represented by this Class object.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getDeclaredConstructors()",
      "desc": "Returns an array of Constructor objects reflecting all the constructors declared by the class represented by this Class object.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Field",
      "code": "getDeclaredField(name: String)",
      "desc": "Returns a Field object that reflects the specified declared field of the class or interface represented by this Class object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getDeclaredFields()",
      "desc": "Returns an array of Field objects reflecting all the fields declared by the class or interface represented by this Class object.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Method",
      "code": "getDeclaredMethod(name: String, vararg parameterTypes: Class<*>!)",
      "desc": "Returns a Method object that reflects the specified declared method of the class or interface represented by this Class object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getDeclaredMethods()",
      "desc": "Returns an array containing Method objects reflecting all the declared methods of the class or interface represented by this Class object, including public, protected, default (package) access, and private methods, but excluding inherited methods.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Class",
      "code": "getDeclaringClass()",
      "desc": "If the class or interface represented by this Class object is a member of another class, returns the Class object representing the class in which it was declared.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Class",
      "code": "getEnclosingClass()",
      "desc": "Returns the immediately enclosing class of the underlying class.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Constructor",
      "code": "getEnclosingConstructor()",
      "desc": "If this Class object represents a local or anonymous class within a constructor, returns a object representing the immediately enclosing constructor of the underlying class.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Method",
      "code": "getEnclosingMethod()",
      "desc": "If this Class object represents a local or anonymous class within a method, returns a object representing the immediately enclosing method of the underlying class.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getEnumConstants()",
      "desc": "Returns the elements of this enum class or null if this Class object does not represent an enum type.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Field",
      "code": "getField(name: String)",
      "desc": "Returns a Field object that reflects the specified public member field of the class or interface represented by this Class object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getFields()",
      "desc": "Returns an array containing Field objects reflecting all the accessible public fields of the class or interface represented by this Class object.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getGenericInterfaces()",
      "desc": "Returns the Types representing the interfaces directly implemented by the class or interface represented by this object.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Type",
      "code": "getGenericSuperclass()",
      "desc": "Returns the Type representing the direct superclass of the entity (class, interface, primitive type or void) represented by this Class.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getInterfaces()",
      "desc": "Determines the interfaces implemented by the class or interface represented by this object.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Method",
      "code": "getMethod(name: String, vararg parameterTypes: Class<*>!)",
      "desc": "Returns a Method object that reflects the specified public member method of the class or interface represented by this Class object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getMethods()",
      "desc": "Returns an array containing Method objects reflecting all the public methods of the class or interface represented by this Class object, including those declared by the class or interface and those inherited from superclasses and superinterfaces.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getModifiers()",
      "desc": "Returns the Java language modifiers for this class or interface, encoded in an integer."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getName()",
      "desc": "Returns the name of the entity (class, interface, array class, primitive type, or void) represented by this Class object, as a String."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Package",
      "code": "getPackage()",
      "desc": "Gets the package for this class.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ProtectionDomain",
      "code": "getProtectionDomain()",
      "desc": "Returns the ProtectionDomain of this class.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "URL",
      "code": "getResource(name: String)",
      "desc": "Finds a resource with a given name.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "InputStream",
      "code": "getResourceAsStream(name: String)",
      "desc": "Finds a resource with a given name.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getSigners()",
      "desc": "Gets the signers of this class.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getSimpleName()",
      "desc": "Returns the simple name of the underlying class as given in the source code."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "in",
      "identifier": "Class",
      "code": "getSuperclass()",
      "desc": "Returns the Class representing the superclass of the entity (class, interface, primitive type or void) represented by this Class.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getTypeName()",
      "desc": "Return an informative string for the name of this type."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Array",
      "code": "getTypeParameters()",
      "desc": "Returns an array of TypeVariable objects that represent the type variables declared by the generic declaration represented by this GenericDeclaration object, in declaration order.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isAnnotation()",
      "desc": "Returns true if this Class object represents an annotation type."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isAnnotationPresent(annotationClass: Class<out Annotation!>)",
      "desc": "Returns true if an annotation for the specified type is present on this element, else false."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isAnonymousClass()",
      "desc": "Returns true if and only if the underlying class is an anonymous class."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isArray()",
      "desc": "Determines if this Class object represents an array class."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isAssignableFrom(cls: Class<*>)",
      "desc": "Determines if the class or interface represented by this Class object is either the same as, or is a superclass or superinterface of, the class or interface represented by the specified Class parameter."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isEnum()",
      "desc": "Returns true if and only if this class was declared as an enum in the source code."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isInstance(obj: Any?)",
      "desc": "Determines if the specified Object is assignment-compatible with the object represented by this Class."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isInterface()",
      "desc": "Determines if the specified Class object represents an interface type."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isLocalClass()",
      "desc": "Returns true if and only if the underlying class is a local class."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isMemberClass()",
      "desc": "Returns true if and only if the underlying class is a member class."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isPrimitive()",
      "desc": "Determines if the specified Class object represents a primitive type."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isSynthetic()",
      "desc": "Returns true if this class is a synthetic class; returns false otherwise."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "T",
      "code": "newInstance()",
      "desc": "Creates a new instance of the class represented by this Class object."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toGenericString()",
      "desc": "Returns a string describing this Class, including information about modifiers and type parameters."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": "Converts the object to a string."
    }
  ]
}