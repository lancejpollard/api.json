{
  "path": "android.icu.text",
  "name": "DateIntervalInfo",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(locale: ULocale!)\n            Construct DateIntervalInfo for the given locale,"
    },
    {
      "type": "ctor",
      "ctor": "<init>(locale: Locale!)\n            Construct DateIntervalInfo for the given java.util.Locale."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "clone()",
      "desc": "Clone this object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "DateIntervalInfo",
      "code": "cloneAsThawed()",
      "desc": "Provides for the clone operation.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Override equals"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "DateIntervalInfo",
      "code": "freeze()",
      "desc": "Freezes the object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "getDefaultOrder()",
      "desc": "Get default order -- whether the first date in pattern is later date or not."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getFallbackIntervalPattern()",
      "desc": "Get the fallback interval pattern.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "DateIntervalInfo.PatternInfo",
      "code": "getIntervalPattern(skeleton: String!, field: Int)",
      "desc": "Get the interval pattern given the largest different calendar field.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Override hashcode"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isFrozen()",
      "desc": "Determines whether the object has been frozen or not."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFallbackIntervalPattern(fallbackPattern: String!)",
      "desc": "Re-set the fallback interval pattern."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setIntervalPattern(skeleton: String!, lrgDiffCalUnit: Int, intervalPattern: String!)",
      "desc": "Provides a way for client to build interval patterns."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "code": "PatternInfo",
      "desc": "PatternInfo class saves the first and second part of interval pattern, and whether the interval pattern is earlier date first."
    }
  ]
}