{
  "path": "java.util",
  "name": "HashMap",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(initialCapacity: Int, loadFactor: Float)\n            Constructs an empty HashMap with the specified initial capacity and load factor."
    },
    {
      "type": "ctor",
      "ctor": "<init>(initialCapacity: Int)\n            Constructs an empty HashMap with the specified initial capacity and the default load factor (0.75)."
    },
    {
      "type": "ctor",
      "ctor": "<init>()\n            Constructs an empty HashMap with the default initial capacity (16) and the default load factor (0.75)."
    },
    {
      "type": "ctor",
      "ctor": "<init>(m: MutableMap<out K, out V>)\n            Constructs a new HashMap with the same mappings as the specified Map."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "clear()",
      "desc": "Removes all of the mappings from this map."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "clone()",
      "desc": "Returns a shallow copy of this HashMap instance: the keys and values themselves are not cloned."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "V",
      "code": "compute(key: K, remappingFunction: BiFunction<in K, in V?, out V?>)",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "V",
      "code": "computeIfAbsent(key: K, mappingFunction: Function<in K, out V>)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "V",
      "code": "computeIfPresent(key: K, remappingFunction: BiFunction<in K, in V, out V?>)",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "containsKey(key: K)",
      "desc": "Returns true if this map contains a mapping for the specified key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "containsKey(key: K)",
      "desc": "Returns true if this map contains a mapping for the specified key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "containsValue(value: V)",
      "desc": "Returns true if this map maps one or more keys to the specified value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "containsValue(value: V)",
      "desc": "Returns true if this map maps one or more keys to the specified value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEach(action: BiConsumer<in K, in V>)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "V",
      "code": "get(key: K)",
      "desc": "Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "V",
      "code": "get(key: K)",
      "desc": "Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "V",
      "code": "getOrDefault(key: K, defaultValue: V)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isEmpty()",
      "desc": "Returns true if this map contains no key-value mappings."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "V",
      "code": "merge(key: K, value: V, remappingFunction: BiFunction<in V, in V, out V?>)",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "V",
      "code": "put(key: K, value: V)",
      "desc": "Associates the specified value with the specified key in this map.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "putAll(from: Map<out K, V>)",
      "desc": "Copies all of the mappings from the specified map to this map."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "V",
      "code": "putIfAbsent(key: K, value: V)",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "V",
      "code": "remove(key: K)",
      "desc": "Removes the mapping for the specified key from this map if present.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "remove(key: K, value: V)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "V",
      "code": "remove(key: K)",
      "desc": "Removes the mapping for the specified key from this map if present.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "replace(key: K, oldValue: V, newValue: V)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "V",
      "code": "replace(key: K, value: V)",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "replaceAll(function: BiFunction<in K, in V, out V>)",
      "desc": ""
    },
    {
      "type": "inherited-methods",
      "from": "AbstractMap"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "equals(other: Any?)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "hashCode()"
    },
    {
      "type": "inherited-methods",
      "from": "Object#hashCode"
    },
    {
      "type": "inherited-methods",
      "from": "String"
    },
    {
      "type": "inherited-methods",
      "from": "toString()"
    },
    {
      "type": "inherited-methods",
      "from": "String#valueOf(Object)"
    }
  ]
}