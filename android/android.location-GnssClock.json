{
  "path": "android.location",
  "name": "GnssClock",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "describeContents()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Double",
      "code": "getBiasNanos()",
      "desc": "Gets the clock's sub-nanosecond bias."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Double",
      "code": "getBiasUncertaintyNanos()",
      "desc": "Gets the clock's Bias Uncertainty (1-Sigma) in nanoseconds."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Double",
      "code": "getDriftNanosPerSecond()",
      "desc": "Gets the clock's Drift in nanoseconds per second."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Double",
      "code": "getDriftUncertaintyNanosPerSecond()",
      "desc": "Gets the clock's Drift Uncertainty (1-Sigma) in nanoseconds per second."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "getElapsedRealtimeNanos()",
      "desc": "Returns the elapsed real-time of this clock since system boot, in nanoseconds."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Double",
      "code": "getElapsedRealtimeUncertaintyNanos()",
      "desc": "Gets the estimate of the relative precision of the alignment of the getElapsedRealtimeNanos() timestamp, with the reported measurements in nanoseconds (68% confidence)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "getFullBiasNanos()",
      "desc": "Gets the difference between hardware clock (getTimeNanos()) inside GPS receiver and the true GPS time since 0000Z, January 6, 1980, in nanoseconds."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getHardwareClockDiscontinuityCount()",
      "desc": "Gets count of hardware clock discontinuities."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getLeapSecond()",
      "desc": "Gets the leap second associated with the clock's time."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Double",
      "code": "getReferenceCarrierFrequencyHzForIsb()",
      "desc": "Returns the reference carrier frequency in Hz for inter-signal bias."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getReferenceCodeTypeForIsb()",
      "desc": "Returns the reference code type for inter-signal bias."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getReferenceConstellationTypeForIsb()",
      "desc": "Returns the reference constellation type for inter-signal bias."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "getTimeNanos()",
      "desc": "Gets the GNSS receiver internal hardware clock value in nanoseconds."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Double",
      "code": "getTimeUncertaintyNanos()",
      "desc": "Gets the clock's time Uncertainty (1-Sigma) in nanoseconds."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hasBiasNanos()",
      "desc": "Returns true if getBiasNanos() is available, false otherwise."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hasBiasUncertaintyNanos()",
      "desc": "Returns true if getBiasUncertaintyNanos() is available, false otherwise."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hasDriftNanosPerSecond()",
      "desc": "Returns true if getDriftNanosPerSecond() is available, false otherwise."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hasDriftUncertaintyNanosPerSecond()",
      "desc": "Returns true if getDriftUncertaintyNanosPerSecond() is available, false otherwise."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hasElapsedRealtimeNanos()",
      "desc": "Returns true if getElapsedRealtimeNanos() is available, false otherwise."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hasElapsedRealtimeUncertaintyNanos()",
      "desc": "Returns true if getElapsedRealtimeUncertaintyNanos() is available, false otherwise."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hasFullBiasNanos()",
      "desc": "Returns true if getFullBiasNanos() is available, false otherwise."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hasLeapSecond()",
      "desc": "Returns true if getLeapSecond() is available, false otherwise."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hasReferenceCarrierFrequencyHzForIsb()",
      "desc": "Returns true if getReferenceCarrierFrequencyHzForIsb() is available, false otherwise."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hasReferenceCodeTypeForIsb()",
      "desc": "Returns true if getReferenceCodeTypeForIsb() is available, false otherwise."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hasReferenceConstellationTypeForIsb()",
      "desc": "Returns true if getReferenceConstellationTypeForIsb() is available, false otherwise."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hasTimeUncertaintyNanos()",
      "desc": "Returns true if getTimeUncertaintyNanos() is available, false otherwise."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "toString()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "writeToParcel(parcel: Parcel!, flags: Int)",
      "desc": ""
    },
    {
      "type": "inherited-constants",
      "from": "Parcelable"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "CONTENTS_FILE_DESCRIPTOR"
    },
    {
      "type": "inherited-constants",
      "from": "describeContents()"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "PARCELABLE_WRITE_RETURN_VALUE"
    },
    {
      "type": "inherited-constants",
      "from": "writeToParcel"
    },
    {
      "type": "inherited-constants",
      "from": "Parcelable someFunction()"
    },
    {
      "type": "inherited-constants",
      "from": "void someFunction(out Parcelable)"
    },
    {
      "type": "inherited-constants",
      "from": "void someFunction(inout Parcelable)"
    }
  ]
}