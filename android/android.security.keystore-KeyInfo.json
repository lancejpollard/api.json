{
  "path": "android.security.keystore",
  "name": "KeyInfo",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getBlockModes()",
      "desc": "Gets the set of block modes (e.g.,",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getDigests()",
      "desc": "Gets the set of digest algorithms (e.g.,",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getEncryptionPaddings()",
      "desc": "Gets the set of padding schemes (e.g.,",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getKeySize()",
      "desc": "Gets the size of the key in bits."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Date",
      "code": "getKeyValidityForConsumptionEnd()",
      "desc": "Gets the time instant after which the key is no long valid for decryption and verification.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Date",
      "code": "getKeyValidityForOriginationEnd()",
      "desc": "Gets the time instant after which the key is no long valid for encryption and signing.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Date",
      "code": "getKeyValidityStart()",
      "desc": "Gets the time instant before which the key is not yet valid.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getKeystoreAlias()",
      "desc": "Gets the entry alias under which the key is stored in the AndroidKeyStore.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getOrigin()",
      "desc": "Gets the origin of the key."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getPurposes()",
      "desc": "Gets the set of purposes (e.g., encrypt, decrypt, sign) for which the key can be used."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getSignaturePaddings()",
      "desc": "Gets the set of padding schemes (e.g.,",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getUserAuthenticationType()",
      "desc": "Gets the acceptable user authentication types for which this key can be authorized to be used."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getUserAuthenticationValidityDurationSeconds()",
      "desc": "Gets the duration of time (seconds) for which this key is authorized to be used after the user is successfully authenticated."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isInsideSecureHardware()",
      "desc": "Returns true if the key resides inside secure hardware (e.g., Trusted Execution Environment (TEE) or Secure Element (SE))."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isInvalidatedByBiometricEnrollment()",
      "desc": "Returns true if the key will be invalidated by enrollment of a new fingerprint or removal of all fingerprints."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isTrustedUserPresenceRequired()",
      "desc": "Returns true if the key can only be only be used if a test for user presence has succeeded since Signature."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isUserAuthenticationRequired()",
      "desc": "Returns true if the key is authorized to be used only if the user has been authenticated."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isUserAuthenticationRequirementEnforcedBySecureHardware()",
      "desc": "Returns true if the requirement that this key can only be used if the user has been authenticated is enforced by secure hardware (e.g., Trusted Execution Environment (TEE) or Secure Element (SE))."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isUserAuthenticationValidWhileOnBody()",
      "desc": "Returns true if this key will become unusable when the device is removed from the user's body."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isUserConfirmationRequired()",
      "desc": "Returns true if the key is authorized to be used only for messages confirmed by the user."
    }
  ]
}