{
  "path": "android.widget",
  "name": "SimpleAdapter",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(context: Context!, data: MutableList<out MutableMap<String!, *>!>!, resource: Int, from: Array<String!>!, to: IntArray!)\n            Constructor"
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getCount()",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View",
      "code": "getDropDownView(position: Int, convertView: View!, parent: ViewGroup!)",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Resources.Theme",
      "code": "getDropDownViewTheme()",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Filter",
      "code": "getFilter()",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "getItem(position: Int)",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "getItemId(position: Int)",
      "desc": ""
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "View",
      "code": "getView(position: Int, convertView: View!, parent: ViewGroup!)",
      "desc": "",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "SimpleAdapter.ViewBinder",
      "code": "getViewBinder()",
      "desc": "Returns the ViewBinder used to bind data to views.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setDropDownViewResource(resource: Int)",
      "desc": "Sets the layout resource to create the drop down views."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setDropDownViewTheme(theme: Resources.Theme?)",
      "desc": "Sets the android.content.res.Resources.Theme against which drop-down views are inflated."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setViewBinder(viewBinder: SimpleAdapter.ViewBinder!)",
      "desc": "Sets the binder used to bind data to views."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setViewImage(v: ImageView!, value: Int)",
      "desc": "Called by bindView() to set the image for an ImageView but only if there is no existing ViewBinder or if the existing ViewBinder cannot handle binding to an ImageView."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setViewImage(v: ImageView!, value: String!)",
      "desc": "Called by bindView() to set the image for an ImageView but only if there is no existing ViewBinder or if the existing ViewBinder cannot handle binding to an ImageView."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setViewText(v: TextView!, text: String!)",
      "desc": "Called by bindView() to set the text for a TextView but only if there is no existing ViewBinder or if the existing ViewBinder cannot handle binding to a TextView."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "keyword": "abstract",
      "code": "ViewBinder",
      "desc": "This class can be used by external clients of SimpleAdapter to bind values to views."
    },
    {
      "type": "inherited-methods",
      "from": "BaseAdapter"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "areAllItemsEnabled()"
    },
    {
      "type": "inherited-methods",
      "from": "Array<CharSequence!>?"
    },
    {
      "type": "inherited-methods",
      "from": "getAutofillOptions()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getItemViewType(position: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "getViewTypeCount()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "hasStableIds()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isEmpty()"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isEnabled(position: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "notifyDataSetChanged()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "notifyDataSetInvalidated()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "registerDataSetObserver(observer: DataSetObserver!)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setAutofillOptions(vararg options: CharSequence!)"
    },
    {
      "type": "inherited-methods",
      "from": "getAutofillOptions()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "unregisterDataSetObserver(observer: DataSetObserver!)"
    }
  ]
}