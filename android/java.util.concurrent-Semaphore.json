{
  "path": "java.util.concurrent",
  "name": "Semaphore",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(permits: Int)\n            Creates a Semaphore with the given number of permits and nonfair fairness setting."
    },
    {
      "type": "ctor",
      "ctor": "<init>(permits: Int, fair: Boolean)\n            Creates a Semaphore with the given number of permits and the given fairness setting."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "acquire()",
      "desc": "Acquires a permit from this semaphore, blocking until one is available, or the thread is Thread#interrupt."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "acquire(permits: Int)",
      "desc": "Acquires the given number of permits from this semaphore, blocking until all are available, or the thread is Thread#interrupt."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "acquireUninterruptibly()",
      "desc": "Acquires a permit from this semaphore, blocking until one is available."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "acquireUninterruptibly(permits: Int)",
      "desc": "Acquires the given number of permits from this semaphore, blocking until all are available."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "availablePermits()",
      "desc": "Returns the current number of permits available in this semaphore."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "drainPermits()",
      "desc": "Acquires and returns all permits that are immediately available."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getQueueLength()",
      "desc": "Returns an estimate of the number of threads waiting to acquire."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "hasQueuedThreads()",
      "desc": "Queries whether any threads are waiting to acquire."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isFair()",
      "desc": "Returns true if this semaphore has fairness set true."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "release()",
      "desc": "Releases a permit, returning it to the semaphore."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "release(permits: Int)",
      "desc": "Releases the given number of permits, returning them to the semaphore."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns a string identifying this semaphore, as well as its state."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "tryAcquire()",
      "desc": "Acquires a permit from this semaphore, only if one is available at the time of invocation."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "tryAcquire(timeout: Long, unit: TimeUnit!)",
      "desc": "Acquires a permit from this semaphore, if one becomes available within the given waiting time and the current thread has not been Thread#interrupt."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "tryAcquire(permits: Int)",
      "desc": "Acquires the given number of permits from this semaphore, only if all are available at the time of invocation."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "tryAcquire(permits: Int, timeout: Long, unit: TimeUnit!)",
      "desc": "Acquires the given number of permits from this semaphore, if all become available within the given waiting time and the current thread has not been Thread#interrupt"
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "MutableCollection",
      "code": "getQueuedThreads()",
      "desc": "Returns a collection containing threads that may be waiting to acquire.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "reducePermits(reduction: Int)",
      "desc": "Shrinks the number of available permits by the indicated reduction."
    }
  ]
}