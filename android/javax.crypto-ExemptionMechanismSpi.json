{
  "path": "javax.crypto",
  "name": "ExemptionMechanismSpi",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()"
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "ByteArray",
      "code": "engineGenExemptionBlob()",
      "desc": "Generates the exemption mechanism key blob.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Int",
      "code": "engineGenExemptionBlob(output: ByteArray!, outputOffset: Int)",
      "desc": "Generates the exemption mechanism key blob, and stores the result in the output buffer, starting at outputOffset inclusive."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Int",
      "code": "engineGetOutputSize(inputLen: Int)",
      "desc": "Returns the length in bytes that an output buffer would need to be in order to hold the result of the next engineGenExemptionBlob operation, given the input length inputLen (in bytes)."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "engineInit(key: Key!)",
      "desc": "Initializes this exemption mechanism with a key."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "engineInit(key: Key!, params: AlgorithmParameterSpec!)",
      "desc": "Initializes this exemption mechanism with a key and a set of algorithm parameters."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Unit",
      "code": "engineInit(key: Key!, params: AlgorithmParameters!)",
      "desc": "Initializes this exemption mechanism with a key and a set of algorithm parameters."
    }
  ]
}