{
  "path": "android.icu.util",
  "name": "Calendar",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AM",
      "desc": "Value of the AM_PM field indicating the period of the day from midnight to just before noon."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AM_PM",
      "desc": "Field number for get and set indicating whether the HOUR is before or after noon."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "APRIL",
      "desc": "Value of the MONTH field indicating the fourth month of the year."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "AUGUST",
      "desc": "Value of the MONTH field indicating the eighth month of the year."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "BASE_FIELD_COUNT",
      "desc": "The number of fields defined by this class."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DATE",
      "desc": "Field number for get and set indicating the day of the month."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DAY_OF_MONTH",
      "desc": "Field number for get and set indicating the day of the month."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DAY_OF_WEEK",
      "desc": "Field number for get and set indicating the day of the week."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DAY_OF_WEEK_IN_MONTH",
      "desc": "Field number for get and set indicating the ordinal number of the day of the week within the current month."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DAY_OF_YEAR",
      "desc": "Field number for get and set indicating the day number within the current year."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DECEMBER",
      "desc": "Value of the MONTH field indicating the twelfth month of the year."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DOW_LOCAL",
      "desc": "[icu] Field number for get() and set() indicating the localized day of week."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "DST_OFFSET",
      "desc": "Field number for get and set indicating the daylight savings offset in milliseconds."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "EPOCH_JULIAN_DAY",
      "desc": "The Julian day of the epoch, that is, January 1, 1970 on the Gregorian calendar."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ERA",
      "desc": "Field number for get and set indicating the era, e."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "EXTENDED_YEAR",
      "desc": "[icu] Field number for get() and set() indicating the extended year."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FEBRUARY",
      "desc": "Value of the MONTH field indicating the second month of the year."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FRIDAY",
      "desc": "Value of the DAY_OF_WEEK field indicating Friday."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "GREATEST_MINIMUM",
      "desc": "Limit type for getLimit() and handleGetLimit() indicating the greatest minimum value that a field can take."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "HOUR",
      "desc": "Field number for get and set indicating the hour of the morning or afternoon."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "HOUR_OF_DAY",
      "desc": "Field number for get and set indicating the hour of the day."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "INTERNALLY_SET",
      "desc": "Value of the time stamp stamp[] indicating that a field has been set via computations from the time or from other fields."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "IS_LEAP_MONTH",
      "desc": "[icu] Field indicating whether or not the current month is a leap month."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "JANUARY",
      "desc": "Value of the MONTH field indicating the first month of the year."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "JAN_1_1_JULIAN_DAY",
      "desc": "The Julian day of the Gregorian epoch, that is, January 1, 1 on the Gregorian calendar."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "JULIAN_DAY",
      "desc": "[icu] Field number for get() and set() indicating the modified Julian day number."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "JULY",
      "desc": "Value of the MONTH field indicating the seventh month of the year."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "JUNE",
      "desc": "Value of the MONTH field indicating the sixth month of the year."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "LEAST_MAXIMUM",
      "desc": "Limit type for getLimit() and handleGetLimit() indicating the least maximum value that a field can take."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MARCH",
      "desc": "Value of the MONTH field indicating the third month of the year."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MAXIMUM",
      "desc": "Limit type for getLimit() and handleGetLimit() indicating the maximum value that a field can take (greatest maximum)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MAX_FIELD_COUNT",
      "desc": "The maximum number of fields possible."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MAX_JULIAN",
      "desc": "The maximum supported Julian day."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "MAX_MILLIS",
      "desc": "The maximum supported epoch milliseconds."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MAY",
      "desc": "Value of the MONTH field indicating the fifth month of the year."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MILLISECOND",
      "desc": "Field number for get and set indicating the millisecond within the second."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MILLISECONDS_IN_DAY",
      "desc": "[icu] Field number for get() and set() indicating the milliseconds in the day."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MINIMUM",
      "desc": "Limit type for getLimit() and handleGetLimit() indicating the minimum value that a field can take (least minimum)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MINIMUM_USER_STAMP",
      "desc": "If the time stamp stamp[] has a value greater than or equal to MINIMUM_USER_SET then it has been set by the user via a call to set()."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MINUTE",
      "desc": "Field number for get and set indicating the minute within the hour."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MIN_JULIAN",
      "desc": "The minimum supported Julian day."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "MIN_MILLIS",
      "desc": "The minimum supported epoch milliseconds."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MONDAY",
      "desc": "Value of the DAY_OF_WEEK field indicating Monday."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "MONTH",
      "desc": "Field number for get and set indicating the month."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "NOVEMBER",
      "desc": "Value of the MONTH field indicating the eleventh month of the year."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "OCTOBER",
      "desc": "Value of the MONTH field indicating the tenth month of the year."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "ONE_DAY",
      "desc": "The number of milliseconds in one day."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ONE_HOUR",
      "desc": "The number of milliseconds in one hour."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ONE_MINUTE",
      "desc": "The number of milliseconds in one minute."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ONE_SECOND",
      "desc": "The number of milliseconds in one second."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "ONE_WEEK",
      "desc": "The number of milliseconds in one week."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "PM",
      "desc": "Value of the AM_PM field indicating the period of the day from noon to just before midnight."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "RESOLVE_REMAP",
      "desc": "Value to OR against resolve table field values for remapping."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SATURDAY",
      "desc": "Value of the DAY_OF_WEEK field indicating Saturday."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SECOND",
      "desc": "Field number for get and set indicating the second within the minute."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SEPTEMBER",
      "desc": "Value of the MONTH field indicating the ninth month of the year."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "SUNDAY",
      "desc": "Value of the DAY_OF_WEEK field indicating Sunday."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "THURSDAY",
      "desc": "Value of the DAY_OF_WEEK field indicating Thursday."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "TUESDAY",
      "desc": "Value of the DAY_OF_WEEK field indicating Tuesday."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "UNDECIMBER",
      "desc": "Value of the MONTH field indicating the thirteenth month of the year."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "UNSET",
      "desc": "Value of the time stamp stamp[] indicating that a field has not been set since the last call to clear()."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "WALLTIME_FIRST",
      "desc": "[icu]Option used by setRepeatedWallTimeOption(int) and setSkippedWallTimeOption(int) specifying an ambiguous wall time to be interpreted as the earliest."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "WALLTIME_LAST",
      "desc": "[icu]Option used by setRepeatedWallTimeOption(int) and setSkippedWallTimeOption(int) specifying an ambiguous wall time to be interpreted as the latest."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "WALLTIME_NEXT_VALID",
      "desc": "[icu]Option used by setSkippedWallTimeOption(int) specifying an ambiguous wall time to be interpreted as the next valid wall time."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "WEDNESDAY",
      "desc": "Value of the DAY_OF_WEEK field indicating Wednesday."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "WEEK_OF_MONTH",
      "desc": "Field number for get and set indicating the week number within the current month."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "WEEK_OF_YEAR",
      "desc": "Field number for get and set indicating the week number within the current year."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "YEAR",
      "desc": "Field number for get and set indicating the year."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "YEAR_WOY",
      "desc": "[icu] Field number for get() and set() indicating the extended year corresponding to the WEEK_OF_YEAR field."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "ZONE_OFFSET",
      "desc": "Field number for get and set indicating the raw offset from GMT in milliseconds."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "add(field: Int, amount: Int)",
      "desc": "Add a signed amount to a specified field, using this calendar's rules."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "after(when: Any!)",
      "desc": "Compares the time field records."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "before(when: Any!)",
      "desc": "Compares the time field records."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "clear()",
      "desc": "Clears the values of all the time fields."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "clear(field: Int)",
      "desc": "Clears the value in the given time field."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Any",
      "code": "clone()",
      "desc": "Overrides Cloneable"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "compareTo(other: Calendar!)",
      "desc": "Compares the times (in millis) represented by two Calendar objects."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "equals(other: Any?)",
      "desc": "Compares this calendar to the specified object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "fieldDifference(when: Date!, field: Int)",
      "desc": "[icu] Returns the difference between the given time and the time this calendar object is set to."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "get(field: Int)",
      "desc": "Returns the value for a given time field."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getActualMaximum(field: Int)",
      "desc": "Returns the maximum value that this field could have, given the current date."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getActualMinimum(field: Int)",
      "desc": "Returns the minimum value that this field could have, given the current date."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getAvailableLocales()",
      "desc": "Returns the list of locales for which Calendars are installed.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "DateFormat",
      "code": "getDateTimeFormat(dateStyle: Int, timeStyle: Int, loc: Locale!)",
      "desc": "[icu] Returns a DateFormat appropriate to this calendar.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "DateFormat",
      "code": "getDateTimeFormat(dateStyle: Int, timeStyle: Int, loc: ULocale!)",
      "desc": "[icu] Returns a DateFormat appropriate to this calendar.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getDisplayName(loc: Locale!)",
      "desc": "Returns the name of this calendar in the language of the given locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getDisplayName(loc: ULocale!)",
      "desc": "Returns the name of this calendar in the language of the given locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getFieldCount()",
      "desc": "[icu] Returns the number of fields defined by this calendar."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getFirstDayOfWeek()",
      "desc": "Returns what the first day of the week is, where 1 = SUNDAY and 7 = SATURDAY."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getGreatestMinimum(field: Int)",
      "desc": "Returns the highest minimum value for the given field if varies."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Calendar",
      "code": "getInstance()",
      "desc": "Returns a calendar using the default time zone and locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Calendar",
      "code": "getInstance(zone: TimeZone!)",
      "desc": "Returns a calendar using the specified time zone and default locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Calendar",
      "code": "getInstance(aLocale: Locale!)",
      "desc": "Returns a calendar using the default time zone and specified locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Calendar",
      "code": "getInstance(locale: ULocale!)",
      "desc": "Returns a calendar using the default time zone and specified locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Calendar",
      "code": "getInstance(zone: TimeZone!, aLocale: Locale!)",
      "desc": "Returns a calendar with the specified time zone and locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Calendar",
      "code": "getInstance(zone: TimeZone!, locale: ULocale!)",
      "desc": "Returns a calendar with the specified time zone and locale.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Array",
      "code": "getKeywordValuesForLocale(key: String!, locale: ULocale!, commonlyUsed: Boolean)",
      "desc": "[icu] Given a key and a locale, returns an array of string values in a preferred order that would make a difference.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getLeastMaximum(field: Int)",
      "desc": "Returns the lowest maximum value for the given field if varies."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getMaximum(field: Int)",
      "desc": "Returns the maximum value for the given time field."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getMinimalDaysInFirstWeek()",
      "desc": "Returns what the minimal days required in the first week of the year are."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getMinimum(field: Int)",
      "desc": "Returns the minimum value for the given time field."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getRepeatedWallTimeOption()",
      "desc": "[icu]Gets the behavior for handling wall time repeating multiple times at negative time zone offset transitions."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "getSkippedWallTimeOption()",
      "desc": "[icu]Gets the behavior for handling skipped wall time at positive time zone offset transitions."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Date",
      "code": "getTime()",
      "desc": "Returns this Calendar's current time.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Long",
      "code": "getTimeInMillis()",
      "desc": "Returns this Calendar's current time as a long."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "TimeZone",
      "code": "getTimeZone()",
      "desc": "Returns the time zone.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getType()",
      "desc": "[icu] Returns the calendar type name string for this Calendar object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Calendar.WeekData",
      "code": "getWeekData()",
      "desc": "[icu] Return simple, immutable struct-like class for access to the weekend data in this calendar.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Calendar.WeekData",
      "code": "getWeekDataForRegion(region: String!)",
      "desc": "[icu] Return simple, immutable struct-like class for access to the CLDR weekend data.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Int",
      "code": "hashCode()",
      "desc": "Returns a hash code for this calendar."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isEquivalentTo(other: Calendar!)",
      "desc": "[icu] Returns true if the given Calendar object is equivalent to this one."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isLenient()",
      "desc": "Tell whether date/time interpretation is to be lenient."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isSet(field: Int)",
      "desc": "Determines if the given time field has a value set."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isWeekend(date: Date!)",
      "desc": "[icu] Returns true if the given date and time is in the weekend in this calendar system."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isWeekend()",
      "desc": "[icu] Returns true if this Calendar's current date and time is in the weekend in this calendar system."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "roll(field: Int, up: Boolean)",
      "desc": "Rolls (up/down) a single unit of time on the given field."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "roll(field: Int, amount: Int)",
      "desc": "Rolls (up/down) a specified amount time on the given field."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "set(field: Int, value: Int)",
      "desc": "Sets the time field with the given value."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "set(year: Int, month: Int, date: Int)",
      "desc": "Sets the values for the fields year, month, and date."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "set(year: Int, month: Int, date: Int, hour: Int, minute: Int)",
      "desc": "Sets the values for the fields year, month, date, hour, and minute."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "set(year: Int, month: Int, date: Int, hour: Int, minute: Int, second: Int)",
      "desc": "Sets the values for the fields year, month, date, hour, minute, and second."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setFirstDayOfWeek(value: Int)",
      "desc": "Sets what the first day of the week is, where 1 = SUNDAY and 7 = SATURDAY."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setLenient(lenient: Boolean)",
      "desc": "Specify whether or not date/time interpretation is to be lenient."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setMinimalDaysInFirstWeek(value: Int)",
      "desc": "Sets what the minimal days required in the first week of the year are."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setRepeatedWallTimeOption(option: Int)",
      "desc": "[icu]Sets the behavior for handling wall time repeating multiple times at negative time zone offset transitions."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setSkippedWallTimeOption(option: Int)",
      "desc": "[icu]Sets the behavior for handling skipped wall time at positive time zone offset transitions."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "setTime(date: Date!)",
      "desc": "Sets this Calendar's current time with the given Date."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTimeInMillis(millis: Long)",
      "desc": "Sets this Calendar's current time from the given long value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setTimeZone(value: TimeZone!)",
      "desc": "Sets the time zone with the given time zone value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Calendar",
      "code": "setWeekData(wdata: Calendar.WeekData!)",
      "desc": "[icu] Set data in this calendar based on the WeekData input.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "toString()",
      "desc": "Returns a string representation of this calendar."
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "complete()",
      "desc": "Fills in any unset fields in the time field list."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "computeFields()",
      "desc": "Converts the current millisecond time value time to field values in fields[]."
    },
    {
      "type": "method",
      "status": "protected",
      "identifier": "Unit",
      "code": "computeGregorianFields(julianDay: Int)",
      "desc": "Compute the Gregorian calendar year, month, and day of month from the Julian day."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "computeGregorianMonthStart(year: Int, month: Int)",
      "desc": "Compute the Julian day of a month of the Gregorian calendar."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "computeJulianDay()",
      "desc": "Compute the Julian day number as specified by this calendar's fields."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "computeMillisInDay()",
      "desc": "Compute the milliseconds in the day from the fields."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "computeTime()",
      "desc": "Converts the current field values in fields[] to the millisecond time value time."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "computeZoneOffset(millis: Long, millisInDay: Int)",
      "desc": "This method can assume EXTENDED_YEAR has been set."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "String",
      "code": "fieldName(field: Int)",
      "desc": "Returns a string name for a field, for debugging and exceptions.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "static",
      "identifier": "Long",
      "code": "floorDivide(numerator: Long, denominator: Long)",
      "desc": "Divide two long integers, returning the floor of the quotient."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "static",
      "identifier": "Int",
      "code": "floorDivide(numerator: Int, denominator: Int)",
      "desc": "Divide two integers, returning the floor of the quotient."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "static",
      "identifier": "Int",
      "code": "floorDivide(numerator: Int, denominator: Int, remainder: IntArray!)",
      "desc": "Divide two integers, returning the floor of the quotient, and the modulus remainder."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "static",
      "identifier": "Int",
      "code": "floorDivide(numerator: Long, denominator: Int, remainder: IntArray!)",
      "desc": "Divide two integers, returning the floor of the quotient, and the modulus remainder."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Array",
      "code": "getFieldResolutionTable()",
      "desc": "Returns the field resolution array for this calendar.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "protected",
      "identifier": "Int",
      "code": "getGregorianDayOfMonth()",
      "desc": "Returns the day of month (1-based) on the Gregorian calendar as computed by computeGregorianFields()."
    },
    {
      "type": "method",
      "status": "protected",
      "identifier": "Int",
      "code": "getGregorianDayOfYear()",
      "desc": "Returns the day of year (1-based) on the Gregorian calendar as computed by computeGregorianFields()."
    },
    {
      "type": "method",
      "status": "protected",
      "identifier": "Int",
      "code": "getGregorianMonth()",
      "desc": "Returns the month (0-based) on the Gregorian calendar as computed by computeGregorianFields()."
    },
    {
      "type": "method",
      "status": "protected",
      "identifier": "Int",
      "code": "getGregorianYear()",
      "desc": "Returns the extended year on the Gregorian calendar as computed by computeGregorianFields()."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "getLimit(field: Int, limitType: Int)",
      "desc": "Returns a limit for a field."
    },
    {
      "type": "method",
      "status": "protected",
      "identifier": "Int",
      "code": "getStamp(field: Int)",
      "desc": "Returns the timestamp of a field."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "static",
      "identifier": "Int",
      "code": "gregorianMonthLength(y: Int, m: Int)",
      "desc": "Returns the length of a month of the Gregorian calendar."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "static",
      "identifier": "Int",
      "code": "gregorianPreviousMonthLength(y: Int, m: Int)",
      "desc": "Returns the length of a previous month of the Gregorian calendar."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "handleComputeFields(julianDay: Int)",
      "desc": "Subclasses may override this method to compute several fields specific to each calendar system."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "handleComputeJulianDay(bestField: Int)",
      "desc": "Subclasses may override this."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Int",
      "code": "handleComputeMonthStart(eyear: Int, month: Int, useMonth: Boolean)",
      "desc": "Returns the Julian day number of day before the first day of the given month in the given extended year."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "IntArray",
      "code": "handleCreateFields()",
      "desc": "Subclasses that use additional fields beyond those defined in Calendar should override this method to return an int[] array of the appropriate length.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "DateFormat",
      "code": "handleGetDateFormat(pattern: String!, locale: Locale!)",
      "desc": "Creates a DateFormat appropriate to this calendar.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "DateFormat",
      "code": "handleGetDateFormat(pattern: String!, override: String!, locale: Locale!)",
      "desc": "Creates a DateFormat appropriate to this calendar.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "DateFormat",
      "code": "handleGetDateFormat(pattern: String!, locale: ULocale!)",
      "desc": "Creates a DateFormat appropriate to this calendar.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Int",
      "code": "handleGetExtendedYear()",
      "desc": "Returns the extended year defined by the current fields."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "abstract",
      "identifier": "Int",
      "code": "handleGetLimit(field: Int, limitType: Int)",
      "desc": "Subclass API for defining limits of different types."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "handleGetMonthLength(extendedYear: Int, month: Int)",
      "desc": "Returns the number of days in the given month of the given extended year of this calendar system."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "handleGetYearLength(eyear: Int)",
      "desc": "Returns the number of days in the given extended year of this calendar system."
    },
    {
      "type": "method",
      "status": "protected",
      "identifier": "Int",
      "code": "internalGet(field: Int)",
      "desc": "Returns the value for a given time field."
    },
    {
      "type": "method",
      "status": "protected",
      "identifier": "Int",
      "code": "internalGet(field: Int, defaultValue: Int)",
      "desc": "Returns the value for a given time field, or return the given default value if the field is not set."
    },
    {
      "type": "method",
      "status": "protected",
      "identifier": "Long",
      "code": "internalGetTimeInMillis()",
      "desc": "Returns the current milliseconds without recomputing."
    },
    {
      "type": "method",
      "status": "protected",
      "identifier": "Unit",
      "code": "internalSet(field: Int, value: Int)",
      "desc": "Set a field to a value."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "static",
      "identifier": "Boolean",
      "code": "isGregorianLeapYear(year: Int)",
      "desc": "Determines if the given year is a leap year."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "static",
      "identifier": "Int",
      "code": "julianDayToDayOfWeek(julian: Int)",
      "desc": "Returns the day of week, from SUNDAY to SATURDAY, given a Julian day."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "static",
      "identifier": "Long",
      "code": "julianDayToMillis(julian: Int)",
      "desc": "Converts Julian day to time as milliseconds."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "static",
      "identifier": "Int",
      "code": "millisToJulianDay(millis: Long)",
      "desc": "Converts time as milliseconds to Julian day."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "newerField(defaultField: Int, alternateField: Int)",
      "desc": "Returns the field that is newer, either defaultField, or alternateField."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "newestStamp(first: Int, last: Int, bestStampSoFar: Int)",
      "desc": "Returns the newest stamp of a given range of fields."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "pinField(field: Int)",
      "desc": "Adjust the specified field so that it is within the allowable range for the date to which this calendar is set."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "prepareGetActual(field: Int, isMinimum: Boolean)",
      "desc": "Prepare this calendar for computing the actual minimum or maximum."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "resolveFields(precedenceTable: Array<Array<IntArray!>!>!)",
      "desc": "Given a precedence table, return the newest field combination in the table, or -1 if none is found."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "validateField(field: Int)",
      "desc": "Validate a single field of this calendar."
    },
    {
      "type": "method",
      "status": "protected",
      "identifier": "Unit",
      "code": "validateField(field: Int, min: Int, max: Int)",
      "desc": "Validate a single field of this calendar given its minimum and maximum allowed value."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "validateFields()",
      "desc": "Ensure that each field is within its valid range by calling   on each field that has been set."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Int",
      "code": "weekNumber(desiredDay: Int, dayOfPeriod: Int, dayOfWeek: Int)",
      "desc": "Returns the week number of a day, within a period."
    },
    {
      "type": "method",
      "status": "protected",
      "identifier": "Int",
      "code": "weekNumber(dayOfPeriod: Int, dayOfWeek: Int)",
      "desc": "Returns the week number of a day, within a period."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "code": "WeekData",
      "desc": "Simple, immutable struct-like class for access to the CLDR weekend data."
    }
  ]
}