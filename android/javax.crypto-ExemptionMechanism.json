{
  "path": "javax.crypto",
  "name": "ExemptionMechanism",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ByteArray",
      "code": "genExemptionBlob()",
      "desc": "Generates the exemption mechanism key blob.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "genExemptionBlob(output: ByteArray!)",
      "desc": "Generates the exemption mechanism key blob, and stores the result in the output buffer."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "genExemptionBlob(output: ByteArray!, outputOffset: Int)",
      "desc": "Generates the exemption mechanism key blob, and stores the result in the output buffer, starting at outputOffset inclusive."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "ExemptionMechanism",
      "code": "getInstance(algorithm: String!)",
      "desc": "Returns an ExemptionMechanism object that implements the specified exemption mechanism algorithm.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "ExemptionMechanism",
      "code": "getInstance(algorithm: String!, provider: String!)",
      "desc": "Returns an ExemptionMechanism object that implements the specified exemption mechanism algorithm.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "ExemptionMechanism",
      "code": "getInstance(algorithm: String!, provider: Provider!)",
      "desc": "Returns an ExemptionMechanism object that implements the specified exemption mechanism algorithm.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getName()",
      "desc": "Returns the exemption mechanism name of this ExemptionMechanism object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getOutputSize(inputLen: Int)",
      "desc": "Returns the length in bytes that an output buffer would need to be in order to hold the result of the next genExemptionBlob operation, given the input length inputLen (in bytes)."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Provider",
      "code": "getProvider()",
      "desc": "Returns the provider of this ExemptionMechanism object.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "init(key: Key!)",
      "desc": "Initializes this exemption mechanism with a key."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "init(key: Key!, params: AlgorithmParameterSpec!)",
      "desc": "Initializes this exemption mechanism with a key and a set of algorithm parameters."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "init(key: Key!, params: AlgorithmParameters!)",
      "desc": "Initializes this exemption mechanism with a key and a set of algorithm parameters."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Boolean",
      "code": "isCryptoAllowed(key: Key!)",
      "desc": "Returns whether the result blob has been generated successfully by this exemption mechanism."
    }
  ]
}