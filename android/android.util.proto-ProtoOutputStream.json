{
  "path": "android.util.proto",
  "name": "ProtoOutputStream",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "FIELD_COUNT_MASK",
      "desc": "Bit mask for selecting the field count when reading a field id that is used with a ProtoOutputStream.write(...) method."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "FIELD_COUNT_PACKED",
      "desc": "Repeated packed field count, encoded into a field id used with a ProtoOutputStream.write(...) method."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "FIELD_COUNT_REPEATED",
      "desc": "Repeated field count, encoded into a field id used with a ProtoOutputStream.write(...) method."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FIELD_COUNT_SHIFT",
      "desc": "Bit offset for building a field id to be used with a ProtoOutputStream.write(...)."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "FIELD_COUNT_SINGLE",
      "desc": "Single field count, encoded into a field id used with a ProtoOutputStream.write(...) method."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "FIELD_COUNT_UNKNOWN",
      "desc": "Unknown field count, encoded into a field id used with a ProtoOutputStream.write(...) method."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FIELD_ID_SHIFT",
      "desc": "Number of bits to shift the field number to form a tag."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "FIELD_TYPE_BOOL",
      "desc": "Field type code for bool fields."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "FIELD_TYPE_BYTES",
      "desc": "Field type code for bytes fields."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "FIELD_TYPE_DOUBLE",
      "desc": "Field type code for double fields."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "FIELD_TYPE_ENUM",
      "desc": "Field type code for enum fields."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "FIELD_TYPE_FIXED32",
      "desc": "Field type code for fixed32 fields."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "FIELD_TYPE_FIXED64",
      "desc": "Field type code for fixed64 fields."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "FIELD_TYPE_FLOAT",
      "desc": "Field type code for float fields."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "FIELD_TYPE_INT32",
      "desc": "Field type code for int32 fields."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "FIELD_TYPE_INT64",
      "desc": "Field type code for int64 fields."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "FIELD_TYPE_MASK",
      "desc": "Mask for the field types stored in a fieldId."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "FIELD_TYPE_MESSAGE",
      "desc": "Field type code for message fields."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "FIELD_TYPE_SFIXED32",
      "desc": "Field type code for sfixed32 fields."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "FIELD_TYPE_SFIXED64",
      "desc": "Field type code for sfixed64 fields."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "FIELD_TYPE_SHIFT",
      "desc": "Position of the field type in a (long) fieldId."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "FIELD_TYPE_SINT32",
      "desc": "Field type code for sint32 fields."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "FIELD_TYPE_SINT64",
      "desc": "Field type code for sint64 fields."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "FIELD_TYPE_STRING",
      "desc": "Field type code for string fields."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "FIELD_TYPE_UINT32",
      "desc": "Field type code for uint32 fields."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Long",
      "code": "FIELD_TYPE_UINT64",
      "desc": "Field type code for uint64 fields."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "WIRE_TYPE_END_GROUP",
      "desc": "End group wire type code."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "WIRE_TYPE_FIXED32",
      "desc": "Fixed32 wire type code."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "WIRE_TYPE_FIXED64",
      "desc": "Fixed64 wire type code."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "WIRE_TYPE_LENGTH_DELIMITED",
      "desc": "Length delimited wire type code."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "WIRE_TYPE_MASK",
      "desc": "Mask to select the wire type from a tag."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "WIRE_TYPE_START_GROUP",
      "desc": "Start group wire type code."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "WIRE_TYPE_VARINT",
      "desc": "Varint wire type code."
    },
    {
      "type": "ctor",
      "ctor": "<init>()\n            Construct a ProtoOutputStream with the default chunk size."
    },
    {
      "type": "ctor",
      "ctor": "<init>(chunkSize: Int)\n            Construct a with the given chunk size."
    },
    {
      "type": "ctor",
      "ctor": "<init>(stream: OutputStream)\n            Construct a ProtoOutputStream that sits on top of an OutputStream."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Int",
      "code": "checkFieldId(fieldId: Long, expectedFlags: Long)",
      "desc": "Validates that the fieldId provided is of the type and count from expectedType."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "dump(tag: String)",
      "desc": "Dump debugging data about the buffers with the given log tag."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "end(token: Long)",
      "desc": "End the object started by start() that returned token."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "flush()",
      "desc": "Write remaining data to the output stream."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ByteArray",
      "code": "getBytes()",
      "desc": "Finish the encoding of the data, and return a byte[] with the protobuf formatted data."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "String",
      "code": "getFieldCountString(fieldCount: Long)",
      "desc": "Get the developer-usable name of a field count.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "String",
      "code": "getFieldIdString(fieldId: Long)",
      "desc": "Get a debug string for a fieldId."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "String",
      "code": "getFieldTypeString(fieldType: Long)",
      "desc": "Get the developer-usable name of a field type.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "getRawSize()",
      "desc": "Returns the total size of the data that has been written, after full protobuf encoding has occurred."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "String",
      "code": "getWireTypeString(wireType: Int)",
      "desc": "Get the developer-usable name of a wire type.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Long",
      "code": "makeFieldId(id: Int, fieldFlags: Long)",
      "desc": "Combine a fieldId (the field keys in the proto file) and the field flags."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "Long",
      "code": "makeToken(tagSize: Int, repeated: Boolean, depth: Int, objectId: Int, offset: Int)",
      "desc": "Make a token."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Long",
      "code": "start(fieldId: Long)",
      "desc": "Start a sub object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "static",
      "identifier": "String",
      "code": "token2String(token: Long)",
      "desc": "Return a debugging string of a token."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "write(fieldId: Long, val: Double)",
      "desc": "Write a value for the given fieldId."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "write(fieldId: Long, val: Float)",
      "desc": "Write a value for the given fieldId."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "write(fieldId: Long, val: Int)",
      "desc": "Write a value for the given fieldId."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "write(fieldId: Long, val: Long)",
      "desc": "Write a value for the given fieldId."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "write(fieldId: Long, val: Boolean)",
      "desc": "Write a boolean value for the given fieldId."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "write(fieldId: Long, val: String?)",
      "desc": "Write a string value for the given fieldId."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "write(fieldId: Long, val: ByteArray?)",
      "desc": "Write a byte[] value for the given fieldId."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "writeTag(id: Int, wireType: Int)",
      "desc": "Write an individual field tag by hand."
    }
  ]
}