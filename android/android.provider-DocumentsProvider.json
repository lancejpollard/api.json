{
  "path": "android.provider",
  "name": "DocumentsProvider",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>()"
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "attachInfo(context: Context!, info: ProviderInfo!)",
      "desc": "Implementation is provided by the parent class."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Bundle",
      "code": "call(method: String, arg: String?, extras: Bundle?)",
      "desc": "Implementation is provided by the parent class.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Uri",
      "code": "canonicalize(uri: Uri)",
      "desc": "Implementation is provided by the parent class.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "copyDocument(sourceDocumentId: String!, targetParentDocumentId: String!)",
      "desc": "Copy the requested document or a document tree.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "createDocument(parentDocumentId: String!, mimeType: String!, displayName: String!)",
      "desc": "Create a new document and return its newly generated Document#COLUMN_DOCUMENT_ID.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "IntentSender",
      "code": "createWebLinkIntent(documentId: String!, options: Bundle?)",
      "desc": "Creates an intent sender for a web link, if the document is web linkable.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "delete(uri: Uri, selection: String?, selectionArgs: Array<String!>?)",
      "desc": "Implementation is provided by the parent class."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "deleteDocument(documentId: String!)",
      "desc": "Delete the requested document."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "ejectRoot(rootId: String!)",
      "desc": "Ejects the root."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "DocumentsContract.Path",
      "code": "findDocumentPath(parentDocumentId: String?, childDocumentId: String!)",
      "desc": "Finds the canonical path for the requested document.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Bundle",
      "code": "getDocumentMetadata(documentId: String)",
      "desc": "Returns metadata associated with the document.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getDocumentStreamTypes(documentId: String!, mimeTypeFilter: String!)",
      "desc": "Return a list of streamable MIME types matching the filter, which can be passed to openTypedDocument(java.lang.String,java.lang.String,android.os.Bundle,android.os.CancellationSignal).",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "getDocumentType(documentId: String!)",
      "desc": "Return concrete MIME type of the requested document.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Array",
      "code": "getStreamTypes(uri: Uri, mimeTypeFilter: String)",
      "desc": "Called by a client to determine the types of data streams that this content provider support for the given URI.",
      "symbol": "<"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "String",
      "code": "getType(uri: Uri)",
      "desc": "Implementation is provided by the parent class.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Uri",
      "code": "insert(uri: Uri, values: ContentValues?)",
      "desc": "Implementation is provided by the parent class.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "isChildDocument(parentDocumentId: String!, documentId: String!)",
      "desc": "Test if a document is descendant (child, grandchild, etc) from the given parent."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "moveDocument(sourceDocumentId: String!, sourceParentDocumentId: String!, targetParentDocumentId: String!)",
      "desc": "Move the requested document or a document tree.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "AssetFileDescriptor",
      "code": "openAssetFile(uri: Uri, mode: String)",
      "desc": "Implementation is provided by the parent class.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "AssetFileDescriptor",
      "code": "openAssetFile(uri: Uri, mode: String, signal: CancellationSignal?)",
      "desc": "Implementation is provided by the parent class.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "ParcelFileDescriptor",
      "code": "openDocument(documentId: String!, mode: String!, signal: CancellationSignal?)",
      "desc": "Open and return the requested document.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "AssetFileDescriptor",
      "code": "openDocumentThumbnail(documentId: String!, sizeHint: Point!, signal: CancellationSignal!)",
      "desc": "Open and return a thumbnail of the requested document.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ParcelFileDescriptor",
      "code": "openFile(uri: Uri, mode: String)",
      "desc": "Implementation is provided by the parent class.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "ParcelFileDescriptor",
      "code": "openFile(uri: Uri, mode: String, signal: CancellationSignal?)",
      "desc": "Implementation is provided by the parent class.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "AssetFileDescriptor",
      "code": "openTypedAssetFile(uri: Uri, mimeTypeFilter: String, opts: Bundle?)",
      "desc": "Implementation is provided by the parent class.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "AssetFileDescriptor",
      "code": "openTypedAssetFile(uri: Uri, mimeTypeFilter: String, opts: Bundle?, signal: CancellationSignal?)",
      "desc": "Implementation is provided by the parent class.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "AssetFileDescriptor",
      "code": "openTypedDocument(documentId: String!, mimeTypeFilter: String!, opts: Bundle!, signal: CancellationSignal!)",
      "desc": "Open and return the document in a format matching the specified MIME type filter.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Cursor",
      "code": "query(uri: Uri, projection: Array<String!>?, selection: String?, selectionArgs: Array<String!>?, sortOrder: String?)",
      "desc": "",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Cursor",
      "code": "query(uri: Uri, projection: Array<String!>?, selection: String?, selectionArgs: Array<String!>?, sortOrder: String?, cancellationSignal: CancellationSignal?)",
      "desc": "WARNING: Sub-classes should not override this method.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Cursor",
      "code": "query(uri: Uri, projection: Array<String!>?, queryArgs: Bundle?, cancellationSignal: CancellationSignal?)",
      "desc": "Implementation is provided by the parent class.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Cursor",
      "code": "queryChildDocuments(parentDocumentId: String!, projection: Array<String!>!, sortOrder: String!)",
      "desc": "Return the children documents contained in the requested directory.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Cursor",
      "code": "queryChildDocuments(parentDocumentId: String!, projection: Array<String!>?, queryArgs: Bundle?)",
      "desc": "Override this method to return the children documents contained in the requested directory.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Cursor",
      "code": "queryDocument(documentId: String!, projection: Array<String!>!)",
      "desc": "Return metadata for the single requested document.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Cursor",
      "code": "queryRecentDocuments(rootId: String!, projection: Array<String!>!)",
      "desc": "Return recently modified documents under the requested root.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Cursor",
      "code": "queryRecentDocuments(rootId: String, projection: Array<String!>?, queryArgs: Bundle?, signal: CancellationSignal?)",
      "desc": "Return recently modified documents under the requested root.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "abstract",
      "identifier": "Cursor",
      "code": "queryRoots(projection: Array<String!>!)",
      "desc": "Return all roots currently provided.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Cursor",
      "code": "querySearchDocuments(rootId: String!, query: String!, projection: Array<String!>!)",
      "desc": "Return documents that match the given query under the requested root.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Cursor",
      "code": "querySearchDocuments(rootId: String, projection: Array<String!>?, queryArgs: Bundle)",
      "desc": "Return documents that match the given query under the requested root.",
      "symbol": "?"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "removeDocument(documentId: String!, parentDocumentId: String!)",
      "desc": "Removes the requested document or a document tree."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "String",
      "code": "renameDocument(documentId: String!, displayName: String!)",
      "desc": "Rename an existing document.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Unit",
      "code": "revokeDocumentPermission(documentId: String!)",
      "desc": "Revoke any active permission grants for the given Document#COLUMN_DOCUMENT_ID, usually called when a document becomes invalid."
    },
    {
      "type": "method",
      "status": "public",
      "identifier": "Int",
      "code": "update(uri: Uri, values: ContentValues?, selection: String?, selectionArgs: Array<String!>?)",
      "desc": "Implementation is provided by the parent class."
    },
    {
      "type": "inherited-constants",
      "from": "ComponentCallbacks2"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TRIM_MEMORY_BACKGROUND"
    },
    {
      "type": "inherited-constants",
      "from": "onTrimMemory(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TRIM_MEMORY_COMPLETE"
    },
    {
      "type": "inherited-constants",
      "from": "onTrimMemory(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TRIM_MEMORY_MODERATE"
    },
    {
      "type": "inherited-constants",
      "from": "onTrimMemory(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TRIM_MEMORY_RUNNING_CRITICAL"
    },
    {
      "type": "inherited-constants",
      "from": "onTrimMemory(int)"
    },
    {
      "type": "inherited-constants",
      "from": "onLowMemory()"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TRIM_MEMORY_RUNNING_LOW"
    },
    {
      "type": "inherited-constants",
      "from": "onTrimMemory(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TRIM_MEMORY_RUNNING_MODERATE"
    },
    {
      "type": "inherited-constants",
      "from": "onTrimMemory(int)"
    },
    {
      "type": "inherited-constants",
      "from": "Int"
    },
    {
      "type": "inherited-constants",
      "from": "TRIM_MEMORY_UI_HIDDEN"
    },
    {
      "type": "inherited-constants",
      "from": "onTrimMemory(int)"
    },
    {
      "type": "inherited-methods",
      "from": "ContentProvider"
    },
    {
      "type": "inherited-methods",
      "from": "Array<ContentProviderResult!>"
    },
    {
      "type": "inherited-methods",
      "from": "applyBatch(authority: String, operations: ArrayList<ContentProviderOperation!>)"
    },
    {
      "type": "inherited-methods",
      "from": "ContentProviderOperation#apply"
    },
    {
      "type": "inherited-methods",
      "from": "ContentProviderOperation#apply"
    },
    {
      "type": "inherited-methods",
      "from": "ContentProviderResult"
    },
    {
      "type": "inherited-methods",
      "from": "Array<ContentProviderResult!>"
    },
    {
      "type": "inherited-methods",
      "from": "applyBatch(operations: ArrayList<ContentProviderOperation!>)"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "bulkInsert(uri: Uri, values: Array<ContentValues!>)"
    },
    {
      "type": "inherited-methods",
      "from": "insert"
    },
    {
      "type": "inherited-methods",
      "from": "ContentResolver#notifyChange(android.net.Uri ,android.database.ContentObserver)"
    },
    {
      "type": "inherited-methods",
      "from": "Bundle?"
    },
    {
      "type": "inherited-methods",
      "from": "call(authority: String, method: String, arg: String?, extras: Bundle?)"
    },
    {
      "type": "inherited-methods",
      "from": "ContentProvider.CallingIdentity"
    },
    {
      "type": "inherited-methods",
      "from": "clearCallingIdentity()"
    },
    {
      "type": "inherited-methods",
      "from": "Binder#clearCallingIdentity()"
    },
    {
      "type": "inherited-methods",
      "from": "getCallingPackage()"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "delete(uri: Uri, extras: Bundle?)"
    },
    {
      "type": "inherited-methods",
      "from": "ContentResolver#notifyChange(android.net.Uri ,android.database.ContentObserver)"
    },
    {
      "type": "inherited-methods",
      "from": "content://contacts/people/22"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "dump(fd: FileDescriptor!, writer: PrintWriter!, args: Array<String!>!)"
    },
    {
      "type": "inherited-methods",
      "from": "String?"
    },
    {
      "type": "inherited-methods",
      "from": "getCallingAttributionTag()"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "getType(android.net.Uri)"
    },
    {
      "type": "inherited-methods",
      "from": "getStreamTypes(android.net.Uri,java.lang.String)"
    },
    {
      "type": "inherited-methods",
      "from": "String?"
    },
    {
      "type": "inherited-methods",
      "from": "getCallingPackage()"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "getType(android.net.Uri)"
    },
    {
      "type": "inherited-methods",
      "from": "getStreamTypes(android.net.Uri,java.lang.String)"
    },
    {
      "type": "inherited-methods",
      "from": "String?"
    },
    {
      "type": "inherited-methods",
      "from": "getCallingPackageUnchecked()"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "getType(android.net.Uri)"
    },
    {
      "type": "inherited-methods",
      "from": "getStreamTypes(android.net.Uri,java.lang.String)"
    },
    {
      "type": "inherited-methods",
      "from": "Context?"
    },
    {
      "type": "inherited-methods",
      "from": "getContext()"
    },
    {
      "type": "inherited-methods",
      "from": "onCreate"
    },
    {
      "type": "inherited-methods",
      "from": "null"
    },
    {
      "type": "inherited-methods",
      "from": "Array<PathPermission!>?"
    },
    {
      "type": "inherited-methods",
      "from": "getPathPermissions()"
    },
    {
      "type": "inherited-methods",
      "from": "String?"
    },
    {
      "type": "inherited-methods",
      "from": "getReadPermission()"
    },
    {
      "type": "inherited-methods",
      "from": "String?"
    },
    {
      "type": "inherited-methods",
      "from": "getWritePermission()"
    },
    {
      "type": "inherited-methods",
      "from": "Uri?"
    },
    {
      "type": "inherited-methods",
      "from": "insert(uri: Uri, values: ContentValues?, extras: Bundle?)"
    },
    {
      "type": "inherited-methods",
      "from": "ContentResolver#notifyChange(android.net.Uri ,android.database.ContentObserver)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "isTemporary()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onCallingPackageChanged()"
    },
    {
      "type": "inherited-methods",
      "from": "getCallingPackage()"
    },
    {
      "type": "inherited-methods",
      "from": "ContentProvider"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onConfigurationChanged(newConfig: Configuration)"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "onCreate()"
    },
    {
      "type": "inherited-methods",
      "from": "query"
    },
    {
      "type": "inherited-methods",
      "from": "insert"
    },
    {
      "type": "inherited-methods",
      "from": "android.database.sqlite.SQLiteOpenHelper"
    },
    {
      "type": "inherited-methods",
      "from": "android.database.sqlite.SQLiteOpenHelper#getReadableDatabase"
    },
    {
      "type": "inherited-methods",
      "from": "android.database.sqlite.SQLiteOpenHelper#getWritableDatabase"
    },
    {
      "type": "inherited-methods",
      "from": "android.database.sqlite.SQLiteOpenHelper#onOpen"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onLowMemory()"
    },
    {
      "type": "inherited-methods",
      "from": "ComponentCallbacks2#onTrimMemory"
    },
    {
      "type": "inherited-methods",
      "from": "ComponentCallbacks2"
    },
    {
      "type": "inherited-methods",
      "from": "onLowMemory"
    },
    {
      "type": "inherited-methods",
      "from": "ComponentCallbacks2#onTrimMemory"
    },
    {
      "type": "inherited-methods",
      "from": "ComponentCallbacks2#TRIM_MEMORY_COMPLETE"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onTrimMemory(level: Int)"
    },
    {
      "type": "inherited-methods",
      "from": "ParcelFileDescriptor"
    },
    {
      "type": "inherited-methods",
      "from": "openFileHelper(uri: Uri, mode: String)"
    },
    {
      "type": "inherited-methods",
      "from": "openFile"
    },
    {
      "type": "inherited-methods",
      "from": "ParcelFileDescriptor"
    },
    {
      "type": "inherited-methods",
      "from": "openPipeHelper(uri: Uri, mimeType: String, opts: Bundle?, args: T?, func: ContentProvider.PipeDataWriter<T>)"
    },
    {
      "type": "inherited-methods",
      "from": "openTypedAssetFile"
    },
    {
      "type": "inherited-methods",
      "from": "Boolean"
    },
    {
      "type": "inherited-methods",
      "from": "refresh(uri: Uri!, extras: Bundle?, cancellationSignal: CancellationSignal?)"
    },
    {
      "type": "inherited-methods",
      "from": "uri"
    },
    {
      "type": "inherited-methods",
      "from": "uri"
    },
    {
      "type": "inherited-methods",
      "from": "ContentResolver#notifyChange(Uri, android.database.ContentObserver)"
    },
    {
      "type": "inherited-methods",
      "from": "Context"
    },
    {
      "type": "inherited-methods",
      "from": "requireContext()"
    },
    {
      "type": "inherited-methods",
      "from": "onCreate"
    },
    {
      "type": "inherited-methods",
      "from": "onCreate"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "restoreCallingIdentity(identity: ContentProvider.CallingIdentity)"
    },
    {
      "type": "inherited-methods",
      "from": "clearCallingIdentity"
    },
    {
      "type": "inherited-methods",
      "from": "Binder#restoreCallingIdentity(long)"
    },
    {
      "type": "inherited-methods",
      "from": "getCallingPackage()"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setPathPermissions(permissions: Array<PathPermission!>?)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setReadPermission(permission: String?)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "setWritePermission(permission: String?)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "shutdown()"
    },
    {
      "type": "inherited-methods",
      "from": "Uri?"
    },
    {
      "type": "inherited-methods",
      "from": "uncanonicalize(url: Uri)"
    },
    {
      "type": "inherited-methods",
      "from": "canonicalize"
    },
    {
      "type": "inherited-methods",
      "from": "Int"
    },
    {
      "type": "inherited-methods",
      "from": "update(uri: Uri, values: ContentValues?, extras: Bundle?)"
    },
    {
      "type": "inherited-methods",
      "from": "ContentResolver#notifyChange(android.net.Uri ,android.database.ContentObserver)"
    },
    {
      "type": "inherited-methods",
      "from": "ComponentCallbacks"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onConfigurationChanged(newConfig: Configuration)"
    },
    {
      "type": "inherited-methods",
      "from": "Unit"
    },
    {
      "type": "inherited-methods",
      "from": "onLowMemory()"
    },
    {
      "type": "inherited-methods",
      "from": "ComponentCallbacks2#onTrimMemory"
    },
    {
      "type": "inherited-methods",
      "from": "ComponentCallbacks2"
    },
    {
      "type": "inherited-methods",
      "from": "onLowMemory"
    },
    {
      "type": "inherited-methods",
      "from": "ComponentCallbacks2#onTrimMemory"
    },
    {
      "type": "inherited-methods",
      "from": "ComponentCallbacks2#TRIM_MEMORY_COMPLETE"
    }
  ]
}