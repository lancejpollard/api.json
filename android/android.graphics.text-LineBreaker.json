{
  "path": "android.graphics.text",
  "name": "LineBreaker",
  "values": [
    {
      "type": "constant"
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "BREAK_STRATEGY_BALANCED",
      "desc": "Value for break strategy indicating balanced line breaking."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "BREAK_STRATEGY_HIGH_QUALITY",
      "desc": "Value for break strategy indicating high quality line breaking."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "BREAK_STRATEGY_SIMPLE",
      "desc": "Value for break strategy indicating simple line breaking."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "HYPHENATION_FREQUENCY_FULL",
      "desc": "Value for hyphenation frequency indicating the full amount of automatic hyphenation."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "HYPHENATION_FREQUENCY_NONE",
      "desc": "Value for hyphenation frequency indicating no automatic hyphenation."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "HYPHENATION_FREQUENCY_NORMAL",
      "desc": "Value for hyphenation frequency indicating a light amount of automatic hyphenation."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "JUSTIFICATION_MODE_INTER_WORD",
      "desc": "Value for justification mode indicating the text is justified by stretching word spacing."
    },
    {
      "type": "constant",
      "keyword": "static",
      "identifier": "Int",
      "code": "JUSTIFICATION_MODE_NONE",
      "desc": "Value for justification mode indicating no justification."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "LineBreaker.Result",
      "code": "computeLineBreaks(measuredPara: MeasuredText, constraints: LineBreaker.ParagraphConstraints, lineNumber: Int)",
      "desc": "Break paragraph into lines."
    },
    {
      "type": "nested-classes"
    },
    {
      "type": "nested-classes",
      "code": "Builder",
      "desc": "Helper class for creating a LineBreaker."
    },
    {
      "type": "nested-classes",
      "keyword": "open",
      "code": "ParagraphConstraints",
      "desc": "Line breaking constraints for single paragraph."
    },
    {
      "type": "nested-classes",
      "keyword": "open",
      "code": "Result",
      "desc": "Holds the result of the LineBreaker#computeLineBreaks."
    }
  ]
}