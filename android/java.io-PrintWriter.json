{
  "path": "java.io",
  "name": "PrintWriter",
  "values": [
    {
      "type": "ctor",
      "ctor": "<init>(out: Writer)\n            Creates a new PrintWriter, without automatic line flushing."
    },
    {
      "type": "ctor",
      "ctor": "<init>(out: Writer, autoFlush: Boolean)\n            Creates a new PrintWriter."
    },
    {
      "type": "ctor",
      "ctor": "<init>(out: OutputStream)\n            Creates a new PrintWriter, without automatic line flushing, from an existing OutputStream."
    },
    {
      "type": "ctor",
      "ctor": "<init>(out: OutputStream, autoFlush: Boolean)\n            Creates a new PrintWriter from an existing OutputStream."
    },
    {
      "type": "ctor",
      "ctor": "<init>(fileName: String)\n            Creates a new PrintWriter, without automatic line flushing, with the specified file name."
    },
    {
      "type": "ctor",
      "ctor": "<init>(fileName: String, csn: String)\n            Creates a new PrintWriter, without automatic line flushing, with the specified file name and charset."
    },
    {
      "type": "ctor",
      "ctor": "<init>(file: File)\n            Creates a new PrintWriter, without automatic line flushing, with the specified file."
    },
    {
      "type": "ctor",
      "ctor": "<init>(file: File, csn: String)\n            Creates a new PrintWriter, without automatic line flushing, with the specified file and charset."
    },
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PrintWriter",
      "code": "append(csq: CharSequence?)",
      "desc": "Appends the specified character sequence to this writer."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PrintWriter",
      "code": "append(csq: CharSequence?, start: Int, end: Int)",
      "desc": "Appends a subsequence of the specified character sequence to this writer."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PrintWriter",
      "code": "append(c: Char)",
      "desc": "Appends the specified character to this writer."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Boolean",
      "code": "checkError()",
      "desc": "Flushes the stream if it's not closed and checks its error state."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "close()",
      "desc": "Closes the stream and releases any system resources associated with it."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "flush()",
      "desc": "Flushes the stream."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PrintWriter",
      "code": "format(format: String, vararg args: Any!)",
      "desc": "Writes a formatted string to this writer using the specified format string and arguments."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PrintWriter",
      "code": "format(l: Locale?, format: String, vararg args: Any!)",
      "desc": "Writes a formatted string to this writer using the specified format string and arguments."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "print(b: Boolean)",
      "desc": "Prints a boolean value."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "print(c: Char)",
      "desc": "Prints a character."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "print(i: Int)",
      "desc": "Prints an integer."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "print(l: Long)",
      "desc": "Prints a long integer."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "print(f: Float)",
      "desc": "Prints a floating-point number."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "print(d: Double)",
      "desc": "Prints a double-precision floating-point number."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "print(s: CharArray!)",
      "desc": "Prints an array of characters."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "print(s: String?)",
      "desc": "Prints a string."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "print(obj: Any?)",
      "desc": "Prints an object."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PrintWriter",
      "code": "printf(format: String, vararg args: Any!)",
      "desc": "A convenience method to write a formatted string to this writer using the specified format string and arguments."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "PrintWriter",
      "code": "printf(l: Locale?, format: String, vararg args: Any!)",
      "desc": "A convenience method to write a formatted string to this writer using the specified format string and arguments."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "println()",
      "desc": "Terminates the current line by writing the line separator string."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "println(x: Boolean)",
      "desc": "Prints a boolean value and then terminates the line."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "println(x: Char)",
      "desc": "Prints a character and then terminates the line."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "println(x: Int)",
      "desc": "Prints an integer and then terminates the line."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "println(x: Long)",
      "desc": "Prints a long integer and then terminates the line."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "println(x: Float)",
      "desc": "Prints a floating-point number and then terminates the line."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "println(x: Double)",
      "desc": "Prints a double-precision floating-point number and then terminates the line."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "println(x: CharArray!)",
      "desc": "Prints an array of characters and then terminates the line."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "println(x: String?)",
      "desc": "Prints a String and then terminates the line."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "println(x: Any?)",
      "desc": "Prints an Object and then terminates the line."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "write(c: Int)",
      "desc": "Writes a single character."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "write(buf: CharArray!, off: Int, len: Int)",
      "desc": "Writes A Portion of an array of characters."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "write(buf: CharArray!)",
      "desc": "Writes an array of characters."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "write(s: String, off: Int, len: Int)",
      "desc": "Writes a portion of a string."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "write(s: String)",
      "desc": "Writes a string."
    },
    {
      "type": "method",
      "status": "protected"
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "clearError()",
      "desc": "Clears the error state of this stream."
    },
    {
      "type": "method",
      "status": "protected",
      "keyword": "open",
      "identifier": "Unit",
      "code": "setError()",
      "desc": "Indicates that an error has occurred."
    }
  ]
}