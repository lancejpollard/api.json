{
  "path": "android.renderscript",
  "name": "ScriptIntrinsicBlend",
  "values": [
    {
      "type": "method",
      "status": "public"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "ScriptIntrinsicBlend",
      "code": "create(rs: RenderScript!, e: Element!)",
      "desc": "Supported elements types are Element#U8_4",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachAdd(ain: Allocation!, aout: Allocation!)",
      "desc": "Sets dst = min(src + dst, 1.0)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachAdd(ain: Allocation!, aout: Allocation!, opt: Script.LaunchOptions!)",
      "desc": "Sets dst = min(src + dst, 1.0)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachClear(ain: Allocation!, aout: Allocation!)",
      "desc": "Sets dst = {0, 0, 0, 0}"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachClear(ain: Allocation!, aout: Allocation!, opt: Script.LaunchOptions!)",
      "desc": "Sets dst = {0, 0, 0, 0}"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachDst(ain: Allocation!, aout: Allocation!)",
      "desc": "Sets dst = dst This is a NOP."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachDst(ain: Allocation!, aout: Allocation!, opt: Script.LaunchOptions!)",
      "desc": "Sets dst = dst This is a NOP."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachDstAtop(ain: Allocation!, aout: Allocation!)",
      "desc": "dst = dst."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachDstAtop(ain: Allocation!, aout: Allocation!, opt: Script.LaunchOptions!)",
      "desc": "dst = dst."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachDstIn(ain: Allocation!, aout: Allocation!)",
      "desc": "Sets dst = dst * src."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachDstIn(ain: Allocation!, aout: Allocation!, opt: Script.LaunchOptions!)",
      "desc": "Sets dst = dst * src."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachDstOut(ain: Allocation!, aout: Allocation!)",
      "desc": "Sets dst = dst * (1.0 - src.a)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachDstOut(ain: Allocation!, aout: Allocation!, opt: Script.LaunchOptions!)",
      "desc": "Sets dst = dst * (1.0 - src.a)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachDstOver(ain: Allocation!, aout: Allocation!)",
      "desc": "Sets dst = dst + src * (1.0 - dst.a)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachDstOver(ain: Allocation!, aout: Allocation!, opt: Script.LaunchOptions!)",
      "desc": "Sets dst = dst + src * (1.0 - dst.a)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachMultiply(ain: Allocation!, aout: Allocation!)",
      "desc": "Sets dst = src * dst"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachMultiply(ain: Allocation!, aout: Allocation!, opt: Script.LaunchOptions!)",
      "desc": "Sets dst = src * dst"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachSrc(ain: Allocation!, aout: Allocation!)",
      "desc": "Sets dst = src"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachSrc(ain: Allocation!, aout: Allocation!, opt: Script.LaunchOptions!)",
      "desc": "Sets dst = src"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachSrcAtop(ain: Allocation!, aout: Allocation!)",
      "desc": "dst."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachSrcAtop(ain: Allocation!, aout: Allocation!, opt: Script.LaunchOptions!)",
      "desc": "dst."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachSrcIn(ain: Allocation!, aout: Allocation!)",
      "desc": "Sets dst = src * dst."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachSrcIn(ain: Allocation!, aout: Allocation!, opt: Script.LaunchOptions!)",
      "desc": "Sets dst = src * dst."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachSrcOut(ain: Allocation!, aout: Allocation!)",
      "desc": "Sets dst = src * (1.0 - dst.a)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachSrcOut(ain: Allocation!, aout: Allocation!, opt: Script.LaunchOptions!)",
      "desc": "Sets dst = src * (1.0 - dst.a)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachSrcOver(ain: Allocation!, aout: Allocation!)",
      "desc": "Sets dst = src + dst * (1.0 - src.a)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachSrcOver(ain: Allocation!, aout: Allocation!, opt: Script.LaunchOptions!)",
      "desc": "Sets dst = src + dst * (1.0 - src.a)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachSubtract(ain: Allocation!, aout: Allocation!)",
      "desc": "Sets dst = max(dst - src, 0.0)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachSubtract(ain: Allocation!, aout: Allocation!, opt: Script.LaunchOptions!)",
      "desc": "Sets dst = max(dst - src, 0.0)"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachXor(ain: Allocation!, aout: Allocation!)",
      "desc": "Sets dst = {src."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Unit",
      "code": "forEachXor(ain: Allocation!, aout: Allocation!, opt: Script.LaunchOptions!)",
      "desc": "Sets dst = {src."
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Script.KernelID",
      "code": "getKernelIDAdd()",
      "desc": "Get a KernelID for the Add kernel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Script.KernelID",
      "code": "getKernelIDClear()",
      "desc": "Get a KernelID for the Clear kernel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Script.KernelID",
      "code": "getKernelIDDst()",
      "desc": "Get a KernelID for the Dst kernel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Script.KernelID",
      "code": "getKernelIDDstAtop()",
      "desc": "Get a KernelID for the DstAtop kernel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Script.KernelID",
      "code": "getKernelIDDstIn()",
      "desc": "Get a KernelID for the DstIn kernel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Script.KernelID",
      "code": "getKernelIDDstOut()",
      "desc": "Get a KernelID for the DstOut kernel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Script.KernelID",
      "code": "getKernelIDDstOver()",
      "desc": "Get a KernelID for the DstOver kernel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Script.KernelID",
      "code": "getKernelIDMultiply()",
      "desc": "Get a KernelID for the Multiply kernel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Script.KernelID",
      "code": "getKernelIDSrc()",
      "desc": "Get a KernelID for the Src kernel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Script.KernelID",
      "code": "getKernelIDSrcAtop()",
      "desc": "Get a KernelID for the SrcAtop kernel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Script.KernelID",
      "code": "getKernelIDSrcIn()",
      "desc": "Get a KernelID for the SrcIn kernel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Script.KernelID",
      "code": "getKernelIDSrcOut()",
      "desc": "Get a KernelID for the SrcOut kernel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Script.KernelID",
      "code": "getKernelIDSrcOver()",
      "desc": "Get a KernelID for the SrcOver kernel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Script.KernelID",
      "code": "getKernelIDSubtract()",
      "desc": "Get a KernelID for the Subtract kernel.",
      "symbol": "!"
    },
    {
      "type": "method",
      "status": "public",
      "keyword": "open",
      "identifier": "Script.KernelID",
      "code": "getKernelIDXor()",
      "desc": "Get a KernelID for the Xor kernel.",
      "symbol": "!"
    }
  ]
}